[33mcommit f03e06b7d24aef97fff56a1b998d663fb75fb1b8[m[33m ([m[1;36mHEAD -> [m[1;32mgoogle_sync[m[33m, [m[1;31morigin/google_sync[m[33m)[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 10 17:20:07 2023 -0800

    Disable test in 3.9-.

[33mcommit 0c506613ae7436c744ae98db39705b52ea260383[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 10 17:04:45 2023 -0800

    Address (arguments-renamed) finding.

[33mcommit 9f8c9eba2dd2b1b33f037f501905ce4159fa201c[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 10 15:11:31 2023 -0800

    Support abc.abstractclassmethod and abc.abstractstaticmethod
    
    PiperOrigin-RevId: 515749965

[33mcommit 52542077278b2e64b4f33ecde37ddef6d0010192[m
Author: mdemello <mdemello@google.com>
Date:   Fri Mar 10 11:50:40 2023 -0800

    Fix a pytype crash when encountering a pyi import corner case.
    
    PiperOrigin-RevId: 515698492

[33mcommit 9f0c7316ffb4896c898ab30d87aed8537453de1c[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 9 16:53:55 2023 -0800

    Copy typeshed changes to builtins.pyi.
    
    See https://github.com/python/typeshed/pull/9771 for context.
    
    PiperOrigin-RevId: 515480379

[33mcommit 33110caced4ea61ef50e4e494bb0468da635396c[m
Author: tsudol <tsudol@google.com>
Date:   Thu Mar 9 16:49:39 2023 -0800

    Make it obvious which query in the table is currently active.
    
    PiperOrigin-RevId: 515479028

[33mcommit d7b2fe26b3a2c00406ae8b9063852f3a8a3bc9ca[m
Author: tsudol <tsudol@google.com>
Date:   Thu Mar 9 14:42:39 2023 -0800

    Better layout via CSS.
    
    PiperOrigin-RevId: 515446277

[33mcommit a716743aed4272ad03a7fac17003cdc294d3f5ae[m
Author: mdemello <mdemello@google.com>
Date:   Wed Mar 8 18:43:55 2023 -0800

    Look up aliased imports when resolving imported modules.
    
    No test because I was unable to reproduce this issue in a self-contained case,
    but it happens when trying to import the numpy type stubs.
    
    PiperOrigin-RevId: 515201093

[33mcommit bbb302aff4a0a974ee87fce3e831f34de4a8f30b[m[33m ([m[1;33mtag: 2023.03.08[m[33m, [m[1;31morigin/main[m[33m, [m[1;31morigin/HEAD[m[33m, [m[1;32mmain[m[33m)[m
Merge: 878835f8 b5aa28ce
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 8 15:06:14 2023 -0800

    Merge pull request #1393 from google/google_sync
    
    Google sync

[33mcommit b5aa28ce11f703dddb9a9b59e99ab4e087ee0368[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 8 13:12:15 2023 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 515121616

[33mcommit 1e1b985b1fdbd4c523f7c571f6620ae64361f65b[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 7 22:03:16 2023 -0800

    Fix opensource tests.
    
    * Make the minimal necessary changes to cfg.py for it to continue running. (It
      won't collect metrics properly.)
    * Don't run functools.cached_property tests in 3.7.
    
    PiperOrigin-RevId: 514931662

[33mcommit 878835f898a00ab5d1878b2c6fb8460ae0382de1[m
Merge: b19383fe e333827b
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 7 20:00:05 2023 -0800

    Merge pull request #1392 from google/google_sync
    
    Google sync

[33mcommit e333827bf95808ac2271750e3b130225c089acff[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 7 18:00:36 2023 -0800

    Add a dummy implementation of Program.calculate_metrics to cfg.py.

[33mcommit 4e830e61e5acc1355c3a362d46c17bd925360bbe[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 7 17:10:18 2023 -0800

    Skip functools.cached_property tests in 3.7.

[33mcommit eb6b5a56bd0af2fa662f6a2d08e2515c3743731a[m
Author: tsudol <tsudol@google.com>
Date:   Tue Mar 7 13:42:58 2023 -0800

    Add basic query visualization to the CFG visualizer.
    
    - adds a table of queries that were executed.
    - clicking on a query in the table starts the visualization for that query.
    - clicking on "next step" advances the query.
    - adds scrolling to the variable and query tables so they don't overflow the screen.
    
    Next steps:
    - better query controls.
    - explanation of what's going on during each query step.
    - better CSS layout. (Learn how to do CSS layout properly.)
    - filtering of displayed nodes.
    
    PiperOrigin-RevId: 514827723

[33mcommit 29bcd1b403a8ed9d567d8115b53f4222647758d1[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 7 11:33:39 2023 -0800

    Fix weird gen_cmake output for a glob with an exclude list.
    
    There's also a bit of churn due to the output being newly sorted.
    
    PiperOrigin-RevId: 514792865

[33mcommit aab737524c37de081b6a1b82f323f98dc45ff41f[m
Author: mdemello <mdemello@google.com>
Date:   Mon Mar 6 15:50:32 2023 -0800

    Support `__self__` on methods.
    
    PiperOrigin-RevId: 514550446

[33mcommit 2bcb1cceab16cdd7711b2af3428db0a1b9bf4e77[m
Author: phawkins <phawkins@google.com>
Date:   Mon Mar 6 05:05:34 2023 -0800

    [NumPy] Move pytype stubs for NumPy out of pytype and into a pytype_stub_library().
    
    Pytype overrides NumPy's type stubs with its own type stubs; NumPy's own type stubs are completely ignored. We should migrate to using the upstream type stubs. As a first step, move the existing pytype stub override for numpy/__init__.pyi out of pytype and into third_party/py/numpy/google as a pytype_stub_library().
    
    This CL is intended to have no functional changes: it simply moves the existing type stub out of pytype and into a regular Blaze BUILD rule. After the next pytype release, pytype will use the stubs from //third_party/py/numpy/google. Future changes can work towards harmonizing the NumPy type stub with the upstream type stub, independently of pytype releases.
    
    PiperOrigin-RevId: 514376002

[33mcommit 9b51ca0bd34be1b98452bbe14d835860f4b5dfae[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 3 17:31:06 2023 -0800

    Don't crash on `from functools import cached_property`.
    
    PiperOrigin-RevId: 513961404

[33mcommit b19383fe93b65df67727606792f6054ddbe5a7ac[m
Merge: 7f32daf5 240d8617
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 2 20:31:14 2023 -0800

    Merge pull request #1391 from google/google_sync
    
    Google sync

[33mcommit 240d8617620f44a4301465314baf9a43833d669a[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 2 19:43:39 2023 -0800

    Handle multiple options for a class's base classes better.
    
    * When a base class variable with multiple options is encountered, pick an
      option rather than falling back to Any.
    * Convert a union of base classes in a pyi file to a variable with multiple
      bindings rather than an abstract.Union object.
    
    PiperOrigin-RevId: 513706362

[33mcommit b6c6c36961b6f0d94bfad185ed8bc841db47c07b[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 2 17:37:43 2023 -0800

    Allow TypeVar amd ParamSpec to be passed None for bounds and constraints.
    
    Fixes https://github.com/google/pytype/issues/1389.
    
    PiperOrigin-RevId: 513685517

[33mcommit f8d87faa6a970c313d52ce3ea02569c31f02239f[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 2 16:49:00 2023 -0800

    Slight fix to wording of non-iterable strings error message.
    
    Fixes https://github.com/google/pytype/issues/1375.
    
    PiperOrigin-RevId: 513675785

[33mcommit 7f32daf5683277a69687abb22ffb7e51625ba951[m[33m ([m[1;33mtag: 2023.03.02[m[33m)[m
Merge: b9809b81 ac12d8f7
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 2 15:41:40 2023 -0800

    Merge pull request #1390 from google/google_sync
    
    Google sync

[33mcommit ac12d8f76645e1583beed595efeaf5e19b6b24e7[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 2 15:36:29 2023 -0800

    Use open-source reference in functions_dict.py so it is safe to export.
    
    PiperOrigin-RevId: 513658145

[33mcommit 1da8ba949d0408c6f72146fdd06a054997a88e2e[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 2 15:23:55 2023 -0800

    Add a pathological example to third_party/py/pytype/test_data/perf/.
    
    I can't actually make a benchmark out of this, because pytype doesn't seem to
    ever finish analyzing the file ^^;
    
    PiperOrigin-RevId: 513654827

[33mcommit 8c7344179119dafc29029585f40c0d1fea56875b[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 2 13:36:25 2023 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 513626570

[33mcommit b9809b817710dd6aa911ea6f771458999ca3821a[m
Merge: 4fc6d74b 5cfc4cfc
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 1 21:39:44 2023 -0800

    Merge pull request #1388 from google/google_sync
    
    Google sync

[33mcommit 5cfc4cfc2038d785ac31595b35692b60cb7124e6[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 17 17:03:20 2023 -0800

    Make some pytype fixes and add tests for the typeshed update.
    
    Makes some changes that will be needed for the upcoming typeshed update. These
    changes can be submitted separately because they have no user-facing impact
    until the update lands.
    
    * Changes BaseValue.compute_mro() and default_mro() to return tuples like the
      other MRO-computing methods.
    * Adds a `store` attribute to load_lazy_attribute to control whether the loaded
      attribute is stored. This is needed so that convert.py can attempt to load an
      attribute and potentially discard the result.
    * Gets rid of convert.skip_cache(). The new convert.py logic to load from the
      typing overlay recurses infinitely if the cache is skipped.
    * Fixes a TypeVar name lookup bug in abstract_utils.
    * Changes constant_to_value to load typing overlay members. We'll need the
      overlay to forward typing.Match and typing.Pattern to their re equivalents.
    * Sets is_attribute_of_class to True on a property's fget, fset, fdel methods.
    * Adds a test to verify the re and typing modules play nicely with each other.
    * Tests that pytype_extensions.Dataclass can be passed to dataclasses.fields.
    
    PiperOrigin-RevId: 510555038

[33mcommit 64167e8e9b9a2cfc46e4ac8621775e0bdf88a4c9[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 1 20:50:42 2023 -0800

    Fix opensource test failures involving dataclasses.InitVar in Python 3.8-.
    
    PiperOrigin-RevId: 513423888

[33mcommit 28707444b9123174d458cd3571d444d379297112[m
Author: Manuel Jacob <me@manueljacob.de>
Date:   Wed Mar 1 14:24:39 2023 -0800

    Import of GitHub PR #1386: Make it possible to run pytype on PyPy.
    https://github.com/google/pytype/pull/1386
    Merge cc5645963b4a9c78520ac944cc778aad9a31acb1 into 8956d97200432301732c75512438a8767f24f1df
    
    PiperOrigin-RevId: 513341416

[33mcommit 42e805f3af4e599654c1113b82d4a4ea6a65eeab[m
Author: Manuel Jacob <me@manueljacob.de>
Date:   Wed Mar 1 14:21:40 2023 -0800

    Import of GitHub PR #1385: Correct docstring about return value.
    https://github.com/google/pytype/pull/1385
    Merge 57ace0e8d2bcf8fe330703667722551e3131c53c into 8956d97200432301732c75512438a8767f24f1df
    
    PiperOrigin-RevId: 513340513

[33mcommit b88009ac1c755675fcb7564618eed9e8068a17b5[m
Author: mdemello <mdemello@google.com>
Date:   Wed Mar 1 14:00:30 2023 -0800

    Move blocks code to its own directory.
    
    The block graph is constructed when setting up the director, but it's more
    generally useful for control flow analysis.
    
    PiperOrigin-RevId: 513334156

[33mcommit 4fc6d74bc7b8b9302bd9a0ee9c1e62cd97bc1b4c[m
Merge: 8956d972 0e001195
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 1 20:34:29 2023 -0800

    Merge pull request #1387 from google/google_sync
    
    Google sync

[33mcommit 0e0011952037ecd9e91271b7304e5b4040f94584[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 1 19:41:35 2023 -0800

    Fix InitVar test failures in 3.8-.

[33mcommit 362587610a89831cc77832892ace6716407dd1d0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 1 00:03:30 2023 -0800

    Update typeshed to 37a180ef7b54a666832f56dfb20ff68b188d2b9c.

[33mcommit aad09d34b09b8d055f2a606dce7cee7eb3499ed0[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 28 23:55:19 2023 -0800

    Fix opensource tests by catching more errors in overlay member loading.
    
    PiperOrigin-RevId: 513151007

[33mcommit e162b38c805fb479824d0cfb421f6b8570e6dc0f[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 28 23:49:45 2023 -0800

    Update typeshed to 37a180ef7b54a666832f56dfb20ff68b188d2b9c.
    
    * Updates typeshed to a commit from February 3.
    * Changes pytype to treat `typing.Pattern` and `typing.Match` as aliases of
      the same-named classes in the `re` module.
    * Fixes a pytype bug in protocol matching that is triggered by the update.
    
    PiperOrigin-RevId: 513150252

[33mcommit 8956d97200432301732c75512438a8767f24f1df[m
Merge: e6984f1b 26424a6f
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 28 23:54:37 2023 -0800

    Merge pull request #1379 from google/google_sync
    
    Google sync

[33mcommit 26424a6f9357d131ff1688080bfe89294215a99f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 28 22:39:00 2023 -0800

    Fix opensource tests by catching more errors in overlay member loading.

[33mcommit 9c623fc3113bc7797f08fe22f26821ff330b3044[m
Author: ngam <67342040+ngam@users.noreply.github.com>
Date:   Wed Feb 22 13:33:13 2023 -0800

    use ninja importability to determine python-ninja usability (#1378)
    
    Fixes https://github.com/google/pytype/issues/1376
    
    Resolves #1378
    
    PiperOrigin-RevId: 511583189

[33mcommit 14073b3cdc822383ae4534cff7bacf8faedfbf64[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 17 17:03:20 2023 -0800

    Make some pytype fixes and add tests for the typeshed update.
    
    Makes some changes that will be needed for the upcoming typeshed update. These
    changes can be submitted separately because they have no user-facing impact
    until the update lands.
    
    * Changes BaseValue.compute_mro() and default_mro() to return tuples like the
      other MRO-computing methods.
    * Adds a `store` attribute to load_lazy_attribute to control whether the loaded
      attribute is stored. This is needed so that convert.py can attempt to load an
      attribute and potentially discard the result.
    * Gets rid of convert.skip_cache(). The new convert.py logic to load from the
      typing overlay recurses infinitely if the cache is skipped.
    * Fixes a TypeVar name lookup bug in abstract_utils.
    * Changes constant_to_value to load typing overlay members. We'll need the
      overlay to forward typing.Match and typing.Pattern to their re equivalents.
    * Sets is_attribute_of_class to True on a property's fget, fset, fdel methods.
    * Adds a test to verify the re and typing modules play nicely with each other.
    * Tests that pytype_extensions.Dataclass can be passed to dataclasses.fields.
    
    PiperOrigin-RevId: 510555038

[33mcommit e6984f1bf09fc5d61efc45db68f84f37620e7c02[m[33m ([m[1;33mtag: 2023.02.17[m[33m)[m
Merge: 0d7bfe11 53de34db
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 17 14:33:02 2023 -0800

    Merge pull request #1374 from google/google_sync
    
    Google sync

[33mcommit 53de34db5efc316f6de632d6988cad60b4984996[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 17 11:42:21 2023 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 510483842

[33mcommit 6327543b4a3c4e82ed5ffd621476af9233afebeb[m
Author: mdemello <mdemello@google.com>
Date:   Wed Feb 15 22:28:59 2023 -0800

    Do not reexport `__future__` imports.
    
    PiperOrigin-RevId: 510044900

[33mcommit 0d7bfe119a59251dd7844ba38f9957931078789b[m
Merge: ae5808ba 8cf6a1c3
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 15 19:27:13 2023 -0800

    Merge pull request #1373 from google/google_sync
    
    Google sync

[33mcommit 8cf6a1c3f1dcb8ba5e1d0ea61a5fb5616563c3fe[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 15 17:43:44 2023 -0800

    Add missing __required_keys__ and __optional_keys__ attributes to TypedDict.
    
    Also merges the _TypedDict and TypedDict classes.
    
    Fixes https://github.com/google/pytype/issues/1372.
    
    PiperOrigin-RevId: 509978875

[33mcommit 5ffacb86643cdbf91361034751fc32e75c14cbbe[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 15 15:22:12 2023 -0800

    Performance optimization: combine two expensive loops in _UniqueMatches.insert.
    
    PiperOrigin-RevId: 509947222

[33mcommit 6a48ae53037162628ea55fbe025c0c1d6523dd19[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 14 16:49:37 2023 -0800

    Don't connect a CFG node to itself.
    
    PiperOrigin-RevId: 509674584

[33mcommit ae5808ba10765d60bc61978dd92ac812ced65929[m
Merge: eab68e58 a7cd226e
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 14 16:20:54 2023 -0800

    Merge pull request #1371 from google/google_sync
    
    Google sync

[33mcommit a7cd226ec76fe9f64487054e1d2e9cdb32fc9f3f[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 14 15:42:23 2023 -0800

    Don't parse literal string constants as type annotations.
    
    Fixes https://github.com/google/pytype/issues/1369.
    
    PiperOrigin-RevId: 509658680

[33mcommit b9669ffc14be2f8f3c547c7132c1475dc1e5b3c3[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Tue Feb 14 15:03:15 2023 -0800

    Internal change
    
    PiperOrigin-RevId: 509648783

[33mcommit eab68e5807a1686d6d4ec6a443220347fd30dc74[m[33m ([m[1;33mtag: 2023.02.14[m[33m)[m
Merge: 8b243516 1abe7a42
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 14 12:34:08 2023 -0800

    Merge pull request #1370 from google/google_sync
    
    Google sync

[33mcommit 1abe7a424218f09acde1e1d4c73b65a1a286df55[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 14 11:33:00 2023 -0800

    Add an assert to assure pytype that call_ref is not None.

[33mcommit c14c1c8929dcf848a8e92fd7ba29ff2caa8d0b6c[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 14 10:48:02 2023 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 509577015

[33mcommit 5232837cd9ec66880f1c6c1f56908eb6f08cc41f[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 13 16:24:35 2023 -0800

    Fix: don't remove items from TypedDict in get().
    
    pop() removes the item, but we just want to read it.
    
    PiperOrigin-RevId: 509363464

[33mcommit 236758ad1124eb9317ca965ed35f0ff9b445642d[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 13 16:00:24 2023 -0800

    Remove some unnecessary CFG nodes.
    
    * Don't add an "init" node immediately after "root".
    * Stop creating "method" nodes for class attributes like `__qualname__`.
    * Create nodes only before bytecode operations, not both before and after.
    
    PiperOrigin-RevId: 509357394

[33mcommit c82537c56e91f634f7be2dffe51f25f29af10221[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 13 11:07:06 2023 -0800

    Fix a crash that occurs when vm.frame is None.
    
    The vm.current_opcode property does a None check.
    
    PiperOrigin-RevId: 509279188

[33mcommit 5370dc54395a1fb237d7540849cc6d15ce0898e5[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 10 11:45:09 2023 -0800

    Give CFG nodes more descriptive names.
    
    Makes the output of --output-cfg much easier to understand.
    
    PiperOrigin-RevId: 508715557

[33mcommit 8b2435164d0361faa3ad0542b6abf625c03f7dff[m
Merge: 398a1930 cd07791c
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 9 21:02:55 2023 -0800

    Merge pull request #1368 from google/google_sync
    
    Google sync

[33mcommit cd07791c8d1e42f2bbecf48906a7fc56acf59cc8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 9 17:41:39 2023 -0800

    Import TypedDict from typing_extensions.

[33mcommit c902c2876dab5fe6840b3f4938395e6e7fe92c9a[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 9 17:02:06 2023 -0800

    Add a native TypedDict.get() implementation.
    
    For convenience, I changed all the _check_* methods on TypedDict to return
    the key and/or value checked.
    
    Fixes https://github.com/google/pytype/issues/1366.
    
    PiperOrigin-RevId: 508514084

[33mcommit 895cef3560aca3112e7439ff7c5e1100fe139b5b[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 9 16:01:55 2023 -0800

    Check for ignored abstract methods on nested classes.
    
    Fixes https://github.com/google/pytype/issues/1364.
    
    PiperOrigin-RevId: 508500184

[33mcommit 4b4ff474cb70a34f97fd6a1d4491a7034edada28[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 9 15:06:50 2023 -0800

    Add fget, fset, fdel attributes to property.
    
    Fixes https://github.com/google/pytype/issues/1363.
    
    PiperOrigin-RevId: 508486777

[33mcommit 398a1930ed65b8e7c3b4eaf98052ee8dfd606460[m[33m ([m[1;33mtag: 2023.02.09[m[33m)[m
Merge: a4d40ac8 484484b7
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 9 15:29:09 2023 -0800

    Merge pull request #1367 from google/google_sync
    
    Google sync

[33mcommit 484484b7b4e1581f7596fe0edc6a728d6302ed08[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 9 14:44:39 2023 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 508480841

[33mcommit d195d6623aeba28282223fff6ecc866dc9c39308[m
Author: mdemello <mdemello@google.com>
Date:   Thu Feb 9 14:06:36 2023 -0800

    Add support for the 3.10+ kw_only dataclass field parameter.
    
    PiperOrigin-RevId: 508470830

[33mcommit 4482b1f972a1e00285ceef602f2f499782630562[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 7 16:00:17 2023 -0800

    Mark a LateAnnotation as resolved once resolve() finishes running.
    
    I think the fact that this wasn't previously done was a simple oversight?
    
    PiperOrigin-RevId: 507910113

[33mcommit d8b8f0d48af7d37ad21ac7c2c1f1f1c10a3b02f4[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 6 08:01:50 2023 -0800

    Update pytype docs to use new `|` syntax for unions.
    
    Startblock:
      after 2023-02-06 08:00 in US/Pacific
    PiperOrigin-RevId: 507480988

[33mcommit a4d40ac87c93c7d75982b4fb5b2bc0a8f89e98a4[m
Merge: 06e3d791 3e73b67c
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 3 18:41:42 2023 -0800

    Merge pull request #1362 from google/google_sync
    
    Google sync

[33mcommit 3e73b67c34537d5834edd059bfce8db64dae9e79[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 3 16:38:33 2023 -0800

    Import final from typing_extensions.

[33mcommit 513cb17b62aa453739a24bca6cc23b2b1fcea99f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 3 16:30:28 2023 -0800

    Ignore new pylint findings.

[33mcommit 18b5eb89c1215a5237bfbf35c94f59e8f062aa98[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 3 16:20:30 2023 -0800

    analyze_project: take external dependencies of typeshed stubs into account.
    
    Fixes https://github.com/google/pytype/issues/1347.
    
    PiperOrigin-RevId: 507019827

[33mcommit 70eda12e3c0def0cb17806be2d08bedc33fccd6b[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 1 12:24:08 2023 -0800

    Always apply TypeVar substitutions to function return types.
    
    Previously, when we returned early due to hitting maximum call depth, we did
    not compute `subst`, leading to type narrowing failures.
    
    PiperOrigin-RevId: 506390654

[33mcommit bc97ff2a33333da8051ee9e652006270c5018632[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 31 17:42:11 2023 -0800

    Support isinstance(..., Union[...]).
    
    PiperOrigin-RevId: 506164704

[33mcommit c7255e0620b7b9bf822150fcc15c1f98df1d8729[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 31 17:29:30 2023 -0800

    Detect mixin override of @final-decorated attribute.
    
    PiperOrigin-RevId: 506162520

[33mcommit c04474a393dd29dd521f641ec5f680e47185e9b8[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 31 15:46:27 2023 -0800

    Fix a misfiring of the [incomplete-match] error.
    
    When code is sufficiently complicated that function calls inside match
    statements are re-analyzed instead of cached, we can get spurious
    [incomplete-match] errors.
    
    I added a test case that skips caching entirely in order to reliably trigger
    this bug.
    
    PiperOrigin-RevId: 506139110

[33mcommit 06e3d79110e39ca1c61500719fc8efaabfa4ecfb[m[33m ([m[1;33mtag: 2023.01.31[m[33m)[m
Merge: 2fdaaf90 b18bd1a8
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 31 12:24:40 2023 -0800

    Merge pull request #1361 from google/google_sync
    
    Prepare a PyPI release.

[33mcommit b18bd1a820edfb5debf435fbe736873dc0a3795e[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 31 10:52:20 2023 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 506050495

[33mcommit 2fdaaf9046054509fd10191d71861a0163c92706[m
Merge: acd7a727 8c987ba4
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jan 30 18:53:26 2023 -0800

    Merge pull request #1360 from google/google_sync
    
    Google sync

[33mcommit 8c987ba4c5da18d5f53d682f1a99ddeeed8a67d3[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jan 30 16:16:31 2023 -0800

    Basic support for Paramspec args and kwargs.
    
    Inner functions passing through `P.args` and `P.kwargs` will have their return
    annotations applied correctly, but they will not be fully type checked.
    
    PiperOrigin-RevId: 505827198

[33mcommit ef26418e2aba27db78b70bd5481f654fbf5d6e22[m
Author: rechen <rechen@google.com>
Date:   Mon Jan 30 11:32:02 2023 -0800

    Refresh support.md.
    
    We have partial support for ParamSpec. PEP 698 was accepted.
    
    PiperOrigin-RevId: 505751982

[33mcommit c0a7d50f16e1dbeb63335f2101df0cf79792d452[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jan 25 14:23:12 2023 -0800

    Refactor ParamSpec substitution for pytd and interpreter functions.
    
    First pass at exposing the common structure in the two cases, and sharing some
    of the code.
    
    PiperOrigin-RevId: 504660977

[33mcommit c0b93dcb38f8d7d6e3874315bb998c47e200df29[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 25 13:18:41 2023 -0800

    Deduplicate substitution dicts in matcher._merge_matches.
    
    While we already de-duplicate in compute_one_match, I discovered while working
    on the linked bug that the number of matches can still blow up when
    compute_matches merges together results from multiple compute_one_match calls.
    
    PiperOrigin-RevId: 504643944

[33mcommit f4364e3caf4e6522f5785b76913d015120b07ac5[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 24 21:31:08 2023 -0800

    Add support for ParamSpecs in source files.
    
    PiperOrigin-RevId: 504458237

[33mcommit 4d7b8f7bcfd6f25689f58dd9be0030f863e2425a[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 24 13:07:22 2023 -0800

    Remove --overriding-return-type-checks (now a no-op).
    
    PiperOrigin-RevId: 504355485

[33mcommit acd7a7271e907396d4f730199f955bb11e072747[m
Merge: 2b145eaa 37cc2769
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 20 17:32:13 2023 -0800

    Merge pull request #1358 from google/google_sync
    
    Google sync

[33mcommit 37cc27696f755cfedf569bebca62787c6643250b[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 20 16:55:57 2023 -0800

    Deduplicate multiple copies of the same class in matcher.py.
    
    When we re-analyze a module that we already have a pyi file for, we can end up
    with two copies of the same class, one from the current analysis and another
    from the pyi file. The two should match.
    
    Fixes https://github.com/google/pytype/issues/1028.
    
    PiperOrigin-RevId: 503551056

[33mcommit 5335b13b332284b14f3619f2f67b4861d8c044f1[m
Author: sthorne <sthorne@google.com>
Date:   Fri Jan 20 08:45:35 2023 -0800

    Add missing methods from collections.abc.MutableSequence
    
     * `clear()` was missing.
     * `__getitem__(self, slice)` was inherited from Sequence, which meant that `MutableSequence[:]` would be of type `Sequence` not `MutableSeqeunce`
    
    Tests added for both these cases.
    
    PiperOrigin-RevId: 503452266

[33mcommit 4f89e15495d90ad5b56ea33cd86ca7fd6bf26d4c[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 19 18:18:31 2023 -0800

    Remove some useless code.
    
    At some point, this piece of code seemed to have changed from overwriting
    instance_param with a different value to setting instance_param to the same
    thing it was already set to, which is pointless.
    
    PiperOrigin-RevId: 503316608

[33mcommit 1d25cb95a05758a3b7ee695cf4debf907a9dec53[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 19 17:24:37 2023 -0800

    Rename could_contain_anything to is_concrete and define it on BaseValue.
    
    Renames the could_contain_anything attribute on abstract.Dict and abstract.List
    to is_concrete (inverting it) and defines it on all abstract values. This makes
    usage a little simpler by removing the need for isinstance and hasattr checks.
    
    PiperOrigin-RevId: 503307039

[33mcommit 5818fe553a9472be654b20250416c294ddf905c8[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jan 19 12:59:43 2023 -0800

    Output ParamSpecs in source files in the generated pyi file.
    
    PiperOrigin-RevId: 503242983

[33mcommit 4dfac4beb893ca331f04c2b9d327985403b9e456[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 18 18:45:27 2023 -0800

    Python 3.11: how to calculate LOAD_GLOBAL's argument value has changed.
    
    For #1308.
    
    PiperOrigin-RevId: 503034216

[33mcommit 7bca793d3223bcea161349a6d45fbc26028aa0a5[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 18 16:18:13 2023 -0800

    Don't unnecessarily mutate type parameter values to Any.
    
    PiperOrigin-RevId: 503007491

[33mcommit 2b145eaab2a2b541c1c8b0466c4a8dc053764f2f[m
Merge: fc56046c bfe7e002
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 18 16:09:52 2023 -0800

    Merge pull request #1357 from google/google_sync
    
    Google sync

[33mcommit bfe7e002fbfde7de1cc26a9ebf182a207b6b4308[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 17 17:53:22 2023 -0800

    Document that pytype allows `x: X = None` and `x: X = ...`.
    
    PiperOrigin-RevId: 502735833

[33mcommit 31d126aee2b283ed2cb7ca48b88817f22f51db2b[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 17 16:46:01 2023 -0800

    Fix types of Mapping.keys(), values(), items().
    
    Fixes https://github.com/google/pytype/issues/775.
    
    PiperOrigin-RevId: 502723453

[33mcommit fc56046cdc4b37cfeb365f85aabda105c98e9093[m[33m ([m[1;33mtag: 2023.01.17[m[33m)[m
Merge: 829c5895 aad57d49
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 17 15:49:45 2023 -0800

    Merge pull request #1355 from google/google_sync
    
    Google sync

[33mcommit aad57d49c2d58b79a3895fdacb7db490393c0f3e[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 17 15:02:47 2023 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 502698684

[33mcommit 1bbac9a3cbd0c8154554d49adcdfcb8c32da8945[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jan 17 12:00:01 2023 -0800

    Make `ChainMap` accept `MutableMapping`.
    
    `ChainMap` supports setting new dict items, e.g. `cm['key'] = 'value'` updates the first dict in `cm.maps`. It also doesn't *not* support directly accessing the underlying maps and updating them, e.g. `cm.maps[-1]['key'] = 'value'`.
    
    This means `maps` should be `list[MutableMapping]` and at least the first argument to `__init__` should be a `MutableMapping`.
    
    PiperOrigin-RevId: 502650441

[33mcommit acf4668d2af90879d86d36b4442e85dafeee6eba[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 13 09:29:52 2023 -0800

    Do some preliminary work for pytype Python 3.11 support.
    
    * Adds new opcodes and magic numbers.
    * Removes generate_opcode_diffs' dependency on pytype.platform_utils. This is
      supposed to be a standalone script.
    * Handles a change to the MAKE_FUNCTION opcode: pre-3.11, it expects two values
      on the data stack, the function name and code. In 3.11, the name is removed.
    * Adjusts _Loadmarshal.load_code. I couldn't find documentation anywhere on
      how/why load_code changed, so I compared the 3.10 and 3.11 code objects. This
      method is still not quite right, but it seems to be mostly working.
    * Takes into account new JUMP_BACKWARD* opcodes in opcodes._dis.
    
    This reduces the number of 3.11 failures (found by grepping for "FAIL:" and
    "ERROR:" in the opensource test logs) from 3,676 to 3,066.
    
    For https://github.com/google/pytype/issues/1308.
    
    PiperOrigin-RevId: 501867542

[33mcommit 829c5895f59d730cf8719d4dd6180364e40cdcb4[m
Author: Jelle Zijlstra <jelle.zijlstra@gmail.com>
Date:   Thu Jan 12 18:21:44 2023 -0800

    Do not parse default values as types (#1350)
    
    See python/typeshed#9501.
    
    Resolves #1350
    
    PiperOrigin-RevId: 501717379

[33mcommit 0b797cc8f8127419b0758bef409a9046d54a39bb[m
Merge: 9507e6a7 bd68536d
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 12 13:57:26 2023 -0800

    Merge pull request #1352 from google/google_sync
    
    Google sync

[33mcommit bd68536d37fb75de0f028730b27eb369b752c15d[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 11 18:24:41 2023 -0800

    Add pytype:load_pytd to the :api target and reduce usages of :libvm.
    
    Out of curiosity, I looked through all of the usages of pytype:libvm and
    realized that, for the vast majority of them, the only module not in the public
    API that was needed was load_pytd. I added :load_pytd to :api and removed all
    the usages of :libvm that I could. (While there's nothing terribly wrong with
    targets under pytype/... depending on :libvm, it's still nice to make the
    dependency structure clearer and to see how close/far :api is to providing a
    usable interface.)
    
    PiperOrigin-RevId: 501430070

[33mcommit 959ec4b58aefe5afd948d504c2d7d785f4593ff2[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 11 17:51:28 2023 -0800

    Add an example to errors.md showing how to address TypeGuard not-supported-yet.
    
    Also tweaks the error message to use the more specific verb "calling" instead
    of "using".
    
    PiperOrigin-RevId: 501424557

[33mcommit af83be51a72d5ba0e6940048b677b0b12e21f4e3[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 11 01:14:40 2023 -0800

    Tidy up pytype's package structure a bit.
    
    * Moves blocks.py into the directors/ subdirectory, since multiple files in
      directors/ import this file.
    * Moves metaclass.py, special_builtins.py into overlays/ for the same reason.
    
    PiperOrigin-RevId: 501209789

[33mcommit 9507e6a7d2b590236a5f248b6b33c43f8d8d4417[m
Merge: 6bbf172e f55acec1
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 12 12:54:26 2023 -0800

    Merge pull request #1351 from AlexWaygood/gitattributes
    
    Improve syntax highlighting of `.pytd` files on GitHub

[33mcommit f55acec113d0a697d7f47b43595a0eae39e2b73d[m
Author: AlexWaygood <alex.waygood@gmail.com>
Date:   Thu Jan 12 16:05:43 2023 +0000

    Improve syntax highlighting of `.pytd` files on GitHub

[33mcommit 6bbf172e38442dba2d458a393c513b4830eec1af[m
Merge: b0e2dbc8 89baa284
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 10 23:54:20 2023 -0800

    Merge pull request #1348 from google/google_sync
    
    Google sync

[33mcommit 89baa2840c61ee6f8f4e485cf6a687e151999dfd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 10 23:18:51 2023 -0800

    Bump required libcst version.

[33mcommit b3f9a60b1ee6d35136cb8dc3b67f8ff4a3cbfd89[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 10 23:14:44 2023 -0800

    Create a filegroup for pytype/test_data files.
    
    Our oss build system doesn't seem to support depending on individual files, but
    it can do filegroups.
    
    PiperOrigin-RevId: 501190882

[33mcommit 6f98ba3f612ebaa3f43b4e0287f6f59637db2170[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 10 23:10:59 2023 -0800

    Re-enable merge_pyi_test on GitHub.
    
    PiperOrigin-RevId: 501190342

[33mcommit 99cf9c17628f38932d9174ba5203a9ba7d183906[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 10 15:46:40 2023 -0800

    Optimise literal output for class variables as well as constants.
    
    PiperOrigin-RevId: 501113687

[33mcommit 3b78f243fd3422764dd601a5d4df1e8f5eec6200[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 10 15:45:32 2023 -0800

    Add missing 3.10 attributes to typing.Counter.
    
    Fixes https://github.com/google/pytype/issues/1342.
    
    PiperOrigin-RevId: 501113400

[33mcommit 69a3382bb1b03756b6bdee515b126bba5a2514d4[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 10 13:25:55 2023 -0800

    Default --overriding-return-type-checks to True.
    
    PiperOrigin-RevId: 501079098

[33mcommit b0e2dbc80aa7eb1b6e84f9da459d1093fc2062ff[m
Merge: 8ee2d9c0 34a5c4d0
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 10 15:23:29 2023 -0800

    Merge pull request #1346 from google/setup_cfg
    
    Remove [pytype] section from setup.cfg.

[33mcommit 34a5c4d0581733d3e295a6b4292b8fe8cdef0873[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 10 13:38:12 2023 -0800

    Remove [pytype] section from setup.cfg.
    
    The same information is in pyproject.toml, which is supported as of
    version 2023.01.10.

[33mcommit 8ee2d9c0b4536570d99f3d383c134d900e431ac7[m[33m ([m[1;33mtag: 2023.01.10[m[33m)[m
Merge: 0eb2c04f baff5bd4
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 10 13:27:48 2023 -0800

    Merge pull request #1345 from google/google_sync
    
    Add a new "missing_modules" parameter to load_pytd.create_loader.

[33mcommit baff5bd48700106b0972dd107876cdb9e54e20f1[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 10 12:25:07 2023 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 501063699

[33mcommit 9f0ab6f19e73d203065316cd79a64bf3405ec86c[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 10 12:04:12 2023 -0800

    Add a new "missing_modules" parameter to load_pytd.create_loader.
    
    This will allow typeshed's pytype_test to declare missing modules. See
    https://github.com/python/typeshed/issues/5768 and
    https://github.com/python/typeshed/pull/9459 for context.
    
    PiperOrigin-RevId: 501058238

[33mcommit 0eb2c04f81257877c6374f9e022f91d8c23a1dd2[m
Merge: 03632831 d7c84f06
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 4 19:33:35 2023 -0800

    Merge pull request #1340 from google/google_sync
    
    Google sync

[33mcommit d7c84f0649ee5c86b9ea58eb6901f884db4b26b0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 4 19:00:25 2023 -0800

    Add a tool.pytype section to pyproject.toml.

[33mcommit 6b6742f489452c458e9524d2365e4a698ecbedf3[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 4 16:02:11 2023 -0800

    Support putting pytype settings in a pyproject.toml file.
    
    Resolves https://github.com/google/pytype/issues/645.
    
    PiperOrigin-RevId: 499605874

[33mcommit 4418bedc5a9ad8e45b2cc3cc4e1c51621e572169[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 4 15:41:32 2023 -0800

    Add missing int.bit_count method.
    
    Fixes https://github.com/google/pytype/issues/1338.
    
    PiperOrigin-RevId: 499598655

[33mcommit 8df027b709ce45195d549f37e9f75214b3af645e[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 20 15:11:59 2022 -0800

    Internal change
    
    PiperOrigin-RevId: 496763264

[33mcommit aefb46d6b8c4ddc945507f7860054250e013a50c[m
Author: mdemello <mdemello@google.com>
Date:   Fri Dec 16 10:54:56 2022 -0800

    Add a performance optimisation for outputting the type of large collections.
    
    TGP: []
    PiperOrigin-RevId: 495913206

[33mcommit 03632831f0b3d62e606543c1c42fe78ce985f940[m
Merge: ed2aeeaf afa9f5c6
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 29 20:11:08 2022 -0500

    Merge pull request #1337 from google/py311
    
    Update some dependencies to newer versions that support Python 3.11.

[33mcommit ed2aeeafc507993e50e30fcbcdd30957bfe33fb5[m
Merge: 9056d154 c200efb8
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 29 20:10:42 2022 -0500

    Merge pull request #1335 from cclauss/patch-1
    
    Add Python 3.11 production release to ci testing

[33mcommit afa9f5c6ed9b24357acc37288910974d923bf524[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 29 15:28:46 2022 -0800

    Update some dependencies to newer versions that support Python 3.11.

[33mcommit 9056d154a3529394355a6430dd71c44b0c5b78d8[m
Merge: 8d097008 779ff4c1
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 27 18:12:58 2022 -0500

    Merge pull request #1336 from google/precommit
    
    Re-add accidentally deleted file.

[33mcommit 779ff4c149703d14a2cc78c0837775b6794cbb4b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 27 14:22:11 2022 -0800

    Re-add accidentally deleted file.

[33mcommit c200efb89ec38ff8c71a3b89b1e1ba68e033d4e1[m
Author: Christian Clauss <cclauss@me.com>
Date:   Sat Dec 24 13:06:05 2022 +0100

    Python 3.11 production release fails

[33mcommit 445c7fb5ebfe99066d6462dcebec9ba4b8734079[m
Author: Christian Clauss <cclauss@me.com>
Date:   Sat Dec 24 13:00:11 2022 +0100

    Add Python 3.11 production release to ci testing

[33mcommit 8d0970083128ffc7f6042b08fad076f8c2ee01a6[m
Merge: b21137e1 11977979
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 15 18:25:46 2022 -0800

    Merge pull request #1334 from google/google_sync
    
    Google sync

[33mcommit 119779796bae3ec20ea7d947bd3639de2ba5e075[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 15 17:24:30 2022 -0800

    Skip test in 3.8 that requires 3.9+ behavior.

[33mcommit 91fe28862b822910d16e6ba7d33d70e8cc80fe4d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 15 16:51:19 2022 -0800

    builtins.pytd: remove Python 3.8+ syntax.
    
    The double-underscore prefix to the parameter name already indicates
    that it should be positional-only.

[33mcommit 6bc03dbe5f734e9ba53ec22184628feb2cf2c4bc[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 15 15:58:06 2022 -0800

    Improve pytype's handling of dict.update.
    
    * In Dict.update_slot, calls match_args to catch illegal positional args.
    * Does some general cleanup/refactoring of Dict.update_slot and Dict.update.
    * Changes dict.update's final fallback overload in builtins.pytd to accept at
      most one positional arg that has to be a mapping or an iterable of key, value
      pairs. Making the positional arg optional also fixes a bug where pytype did
      not allow heterogeneous kwargs.
    
    Fixes https://github.com/google/pytype/issues/460.
    
    PiperOrigin-RevId: 495719442

[33mcommit 07b84a318b5e5693122f2fd152f13b58ea5dc26d[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 15 15:21:00 2022 -0800

    Do better matching of overloads in generic classes.
    
    This removes a blocker for updating typeshed.
    
    PiperOrigin-RevId: 495710699

[33mcommit cbe964d828e90efb1135c56ecc467524892c8218[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 15 12:36:34 2022 -0800

    Show expected type in InterpreterFunction error messages with *args/**kwargs.
    
    PiperOrigin-RevId: 495667919

[33mcommit 1349ff96dc8b428e71c9d0b07b114c83368cddf7[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 15 12:33:52 2022 -0800

    Allow 'self' as a keyword argument to str.format.
    
    PiperOrigin-RevId: 495667258

[33mcommit b21137e10a3923480684b9f6a0827dda759405f1[m[33m ([m[1;33mtag: 2022.12.15[m[33m)[m
Merge: 8571a1a0 1e690936
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 15 12:52:49 2022 -0800

    Merge pull request #1333 from google/google_sync
    
    Google sync

[33mcommit 1e690936a491f665a5f77e3d794d712cac63252b[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 15 12:18:09 2022 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 495663425

[33mcommit 9afd984522eba8bd4c417b197f723e10a0c22aee[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 15 09:15:07 2022 -0800

    Internal change
    
    PiperOrigin-RevId: 495611615

[33mcommit 8571a1a0bc2cd5b19366df31ae881ff66ff2d06e[m
Merge: 7dfc46aa af461f94
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 13 17:18:28 2022 -0800

    Merge pull request #1332 from google/google_sync
    
    Google sync

[33mcommit af461f94dc38ab058c8a707cbb9938abbe87752d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 13 16:39:42 2022 -0800

    Update typeshed to 78d96cd17e1b0ddefe74dfd91a3ecb5768b80b32.

[33mcommit e97f58a1664f57f1659edb4b9fbfc9224cfa77c6[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 13 15:19:25 2022 -0800

    Update typeshed to 78d96cd17e1b0ddefe74dfd91a3ecb5768b80b32.
    
    This update contains only a single commit, which drops Python 2 support from
    typeshed.
    
    PiperOrigin-RevId: 495140384

[33mcommit ed7b524acc11f4a1953639fde763b86a405e71d7[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 9 16:26:52 2022 -0800

    Update freshness for docs.
    
    PiperOrigin-RevId: 494289973

[33mcommit 9b2bbf246353023ff9349cf11496c9813a6a4f51[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 9 16:13:25 2022 -0800

    Delete no-op feature flags.
    
    PiperOrigin-RevId: 494287200

[33mcommit 7dfc46aaffbf7148799fba87569943edbc3755a6[m[33m ([m[1;33mtag: 2022.12.09[m[33m)[m
Merge: 75cf8065 86c115ac
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Dec 9 13:55:25 2022 -0800

    Merge pull request #1331 from google/google_sync
    
    Google sync

[33mcommit 86c115ac27d06e77759d91f62ec0473714563d52[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 9 13:09:17 2022 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 494246123

[33mcommit 2578647ff4ad08b2481f52639725951c3146cce0[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 8 16:23:54 2022 -0800

    Add a section to pytype's support.md on non-standard/experimental features.
    
    PiperOrigin-RevId: 494024403

[33mcommit 4ffd0b385bbd3f8145e7c9b41d24894306ac806d[m
Author: tsudol <tsudol@google.com>
Date:   Thu Dec 8 13:33:59 2022 -0800

    Add a simple legend to the visualization.
    
    - Separates `style` from `cy` so it can be reused.
    - Adds legend generation to the visualizer, to take advantage of the `gen_*` methods.
    - Also tweaks CSS for the variable table.
    
    PiperOrigin-RevId: 493982097

[33mcommit 82a3740d688e242161aa2c9c33d2b2173e4e217f[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 8 11:31:18 2022 -0800

    Merge special_builtins.PyTDClassWithCustomMethod into mixin.HasSlots.
    
    * Updates HasSlots to support setting slots to any abstract value, not just
      NativeFunctions.
    * Adds a property_get implementation to NativeFunction so that
      HasSlots.get_special_attribute can call property_get and handle
      bound/unbound methods properly.
    * Fixes a bug in MixinMeta involving inheriting from multiple mixins.
    * Gets rid of HasSlots._function_cache. Unless I'm missing something, this
      cache wasn't doing anything useful.
    
    PiperOrigin-RevId: 493950715

[33mcommit b875053e6a51e405cead4fd92ccadc8a7f201022[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 7 15:42:50 2022 -0800

    Add missing attributes to typing.TextIO.
    
    * Adds missing encoding, errors, line_buffering, and newlines attributes. I
      copied the types of the first 3 from typeshed. typeshed has newlines typed as
      `Any`, so I got the type from
      https://docs.python.org/3/library/io.html#io.TextIOBase.newlines.
    * Removes a sys.version_info check that has been unnecessary for ages.
    
    PiperOrigin-RevId: 493728777

[33mcommit 210efe6b01ca77535fdb0a4c3b7eedf9559be0dc[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 6 18:21:01 2022 -0800

    Add a case for matching an Instance against a ParamSpec.
    
    PiperOrigin-RevId: 493466037

[33mcommit c3ae69319b40cfded0fc5cf453edc106f5741ccb[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 6 18:19:18 2022 -0800

    --always-use-return-annotations: handle coroutines.
    
    PiperOrigin-RevId: 493465744

[33mcommit 7ab0b1a693ea6605f6b8e5feb08e9b3b0a4645a4[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 6 15:14:33 2022 -0800

    Don't report container errors for late types.
    
    We can't report the "not a container" pyi error when a class has a LateType as
    a base, since the LateType could resolve to a container type.
    
    With this change, it's possible that we'll miss genuine container errors, but
    we're up to four user reports of false positives (three bugs, plus a direct
    message this morning).
    
    PiperOrigin-RevId: 493425492

[33mcommit 0c7e714569c7431c3cc3a677e17a7db7343069ee[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 6 15:08:57 2022 -0800

    Ensure all variables have bindings when unpacking a splat in a function call.
    
    PiperOrigin-RevId: 493424033

[33mcommit e276b5a78673d4f8899e4b0aead39c572e29a174[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 6 13:46:30 2022 -0800

    Set --overriding-parameter-name-checks to True.
    
    PiperOrigin-RevId: 493401838

[33mcommit 75cf8065de93911123e8c708221ac3325db75306[m
Merge: e67ade6d 30b33d38
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 6 13:47:09 2022 -0800

    Merge pull request #1330 from google/google_sync
    
    Google sync

[33mcommit 30b33d384c563249e31952a364e75ae45c6493cc[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 6 13:09:48 2022 -0800

    Update typeshed to 4e0aaccdabffdf717d45113bbd7eddc2484c56ea.

[33mcommit 27aeffc662d09b4abde38b5ca29678490411df99[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 6 12:07:30 2022 -0800

    Update typeshed to 4e0aaccdabffdf717d45113bbd7eddc2484c56ea.
    
    * Pulls in a month of typeshed updates, from June 14 to July 12.
    * Updates pytype's subprocess overlay in response to typeshed switching from
      __new__ to __init__ overloads for subprocess.Popen.
    * Adds an overlay to treat abc.ABCMeta.__new__ like type.__new__. This used to
      happen automatically, but it broke when typeshed added a __new__ definition
      to ABCMeta.
    
    PiperOrigin-RevId: 493375597

[33mcommit cb994f181b4c0c45dd3da6a4ed3cc4a4cb8a8016[m
Author: tsudol <tsudol@google.com>
Date:   Tue Dec 6 11:22:21 2022 -0800

    Highlight variable-related nodes.
    
    - When revealing a variable's node, highlight it.
    - When hovering over an entry in the variable table, highlight all directly related nodes.
    
    PiperOrigin-RevId: 493362519

[33mcommit 03c9a26f574e7f706420d987cdaeb4b131e237a0[m
Author: mdemello <mdemello@google.com>
Date:   Mon Dec 5 18:59:35 2022 -0800

    Print out ParamSpecArgs and ParamSpecKwargs in pytd output.
    
    PiperOrigin-RevId: 493173825

[33mcommit f4c34c99b473d368066866ef4ac4e6be362d156a[m
Author: mdemello <mdemello@google.com>
Date:   Mon Dec 5 18:38:36 2022 -0800

    Implement ParamSpec matching for Callables as well as functions.
    
    PiperOrigin-RevId: 493169813

[33mcommit 97c215d782371dd93f0320506efbbb700cc23c40[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 5 18:12:53 2022 -0800

    Cleanup: resolve a couple pytype TODOs.
    
    * Removes a workaround that doesn't seem to be needed anymore. (I added an
      'assert False' inside the condition that the TODO claimed should never
      happen, and the assert did not fire in any of the tests.)
    * Removes a ctx.make_native_function method and switches its one usage over to
      abstract_utils._make.
    
    PiperOrigin-RevId: 493165097

[33mcommit e67ade6d51326ce6d3f51e9fc1026f87f1a4f19c[m
Merge: 0c8265cc bcd2331f
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 5 18:58:45 2022 -0800

    Merge pull request #1329 from google/google_sync
    
    Google sync

[33mcommit bcd2331fdc1be448c1ffff38367bd900cc135b43[m
Author: tsudol <tsudol@google.com>
Date:   Mon Dec 5 17:55:48 2022 -0800

    Make clicking on an already-added variable toggle visibility.
    
    - Adds a "class" field to Cytoscape nodes, making it much easier to filter them.
    - Adds a little bit of node separation in the dagre layout engine, so nodes don't stack up as much. Makes labels easier to read, at the cost of a slightly wider tree.
    - Fixes a small nit in cfg_visualizer.py re: unnecessary variables.
    
    PiperOrigin-RevId: 493161863

[33mcommit 388c7cbd45200f23198d05e4fbb1066a5ab8e931[m
Author: mdemello <mdemello@google.com>
Date:   Mon Dec 5 14:57:18 2022 -0800

    Fix annotation of *args and **kwargs when constructing a SimpleFunction
    
    They need to be annotated as tuple and dict, not Any.
    
    PiperOrigin-RevId: 493121382

[33mcommit 2f797594f06fb2604ffb636965923959c07c87e7[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 2 16:43:21 2022 -0800

    Add a base class for a PyTDClass with one custom method.
    
    builtins.type.__new__ and subprocess.Popen.__new__ have similar custom
    implementations. This change creates a new base class for them both to inherit
    from. For now, the _METHOD_NAME attribute is unnecessary (since it's always
    __new__), but in the upcoming typeshed update, typeshed switches to defining
    Popen.__init__, so we'll soon need this attribute. This will also make it
    easier to add a custom implementation of abc.ABCMeta.__new__, which again will
    be needed for updating typeshed.
    
    PiperOrigin-RevId: 492589488

[33mcommit f2296ad680ccef0d167c410451062c4afe2691f4[m
Author: mdemello <mdemello@google.com>
Date:   Fri Dec 2 16:32:26 2022 -0800

    Fix for decorated functions containing *args or **kwargs
    
    PiperOrigin-RevId: 492587469

[33mcommit c4d49e709fd07c2d19772fb9affd84f7cd871c44[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 2 16:11:32 2022 -0800

    Support calling super() with a subclass of builtins.type.
    
    PiperOrigin-RevId: 492583504

[33mcommit 240ceddcbb815f6724a5582789bd7abc67e64c58[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 2 15:28:52 2022 -0800

    Get rid of the ExpandCompatibleBuiltins visitor.
    
    The abstract matcher already applies these expansions (parameter type `float`
    accepts both `int` and `float`, etc.), so the only thing
    ExpandCompatibleBuiltins was doing was over-applying the expansions to things
    like attributes and variables.
    
    PiperOrigin-RevId: 492574853

[33mcommit 42fa1237117a148649c272f029ce83b1c163fe1d[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 2 15:15:41 2022 -0800

    Add an empty __init__ file to pytype.tools.debugger for oss package detection.
    
    PiperOrigin-RevId: 492572222

[33mcommit 367f11dbfe5a92dcd0204cbf7d1712837fbe6529[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 2 15:10:26 2022 -0800

    Don't let one TypeVar contain another, and keep invalid TypeVars when possible.
    
    I found user code that is doing stuff like:
      T1 = TypeVar('T1')
      T2 = TypeVar('T2', T1)
    =/ Pytype was just silently downgrading types to Any. It's better to warn the
    user that this is invalid. However, converting to Any as soon as we notice an
    invalid TypeVar causes follow-on errors when attempting to use that TypeVar in
    a generic class definition. As long as we have the TypeVar name, we can instead
    create an unbounded, unconstrained TypeVar.
    
    PiperOrigin-RevId: 492571068

[33mcommit a1d602dc923adec56f6f252a4420abd93227c3bd[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 2 14:12:59 2022 -0800

    Fix a bug in module resolution in load_pytd.
    
    With the previous logic, if the module prefix didn't have '.' in it, we would
    raise a KeyError even though it should have been found.
    
    PiperOrigin-RevId: 492557921

[33mcommit 0c8265cc7512169c2779287b9e905849c7fffb12[m
Merge: dc408ff3 065fd79d
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Dec 2 15:07:28 2022 -0800

    Merge pull request #1328 from google/google_sync
    
    Google sync

[33mcommit 065fd79dde393cd1b5e74bb6e9e0f69014f73310[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Dec 2 14:34:37 2022 -0800

    Yet another pylint ignore long lines rule.

[33mcommit ae164108c3fa3337246c381fd9f82d81b80151a0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Dec 2 14:27:13 2022 -0800

    Add everyone's favorite __init__.py.

[33mcommit 8dae0f05ed37a37b991df819098ca22040c7469e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Dec 2 13:52:16 2022 -0800

    Add dependency on jinja2.

[33mcommit 32f2b23292d1139d5c8c5e18159ef8a96ab91c71[m
Author: mdemello <mdemello@google.com>
Date:   Fri Dec 2 01:23:52 2022 -0800

    Suppress the convert cache when converting a paramspec return type.
    
    Fixes a bug where multiple calls to the same decorator all get the first
    substitution of type params.
    
    This works but it introduces some technical debt; we should ideally figure out
    why constant_to_value is not doing the right thing in this one case rather than
    patching around it.
    
    PiperOrigin-RevId: 492407544

[33mcommit d00980d9759c27e323d4ce1d62c09aadef524d0f[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 1 18:05:14 2022 -0800

    Cleanup: get rid of utils.message, which was needed for Python 2 compatibility.
    
    PiperOrigin-RevId: 492346626

[33mcommit ddf8efdddc900ae5780a2e8373cf2dd72f955c60[m
Author: mdemello <mdemello@google.com>
Date:   Thu Dec 1 17:08:47 2022 -0800

    Fix for passing an overloaded function to a ParamSpec.
    
    PiperOrigin-RevId: 492337241

[33mcommit f0bec3afbdfeecc50cd11fd33ce88866ed18bace[m
Author: tsudol <tsudol@google.com>
Date:   Thu Dec 1 16:01:06 2022 -0800

    Add very rudimentary support for making Variables visible in the graph.
    
    - Adds a table of all the Variables with names.
    - Clicking on a row in the table makes that Variable visible.
    - Exposes the dict of variable IDs -> names in the pytype vm.
    
    PiperOrigin-RevId: 492322881

[33mcommit 0617d638d409a14eeef898dfbe6be6b8b744e472[m
Author: mdemello <mdemello@google.com>
Date:   Thu Dec 1 15:11:36 2022 -0800

    Add support for typing.Concatenate imported from pyi files.
    
    Decorator signatures containing Concatenate are fully supported when imported
    from a pyi file and applied to an interpreter function.
    
    PiperOrigin-RevId: 492311429

[33mcommit b32d7174ddd7567b1449fcdc8946b6544cd6e033[m
Author: tsudol <tsudol@google.com>
Date:   Wed Nov 30 16:47:17 2022 -0800

    Create a Google-internal binary for the CFG visualizer.
    
    PiperOrigin-RevId: 492054139

[33mcommit 19549b3d9fc9fd41acc63bc189944985079688b1[m
Author: mdemello <mdemello@google.com>
Date:   Wed Nov 30 12:58:07 2022 -0800

    Basic PEP612 (ParamSpec) support.
    
    This is a first pass at ParamSpec support, focused mainly on importing
    ParamSpec-based signatures from pyi files, since that lets us immediately
    support code using definitions from typeshed.
    
    * Introduces several new pytd nodes for ParamSpec features
    * Adds parser and printer support for round-tripping of type definitions.
    * Adds ParamSpec and Concatenate to the typing overlay
    * Adds abstract classes for ParamSpec and ParamSpecInstance
    * Supports applying pyi decorators to interpreter functions
    
    PiperOrigin-RevId: 491996148

[33mcommit ddc5b5f54cb7a8d1c2c0d78af4d33e499fef3d39[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 30 09:08:39 2022 -0800

    Update feature flags.
    
    * Defaults --overriding-default-value-checks to True.
    * Deletes no-op --mapping-is-not-sequence.
    
    PiperOrigin-RevId: 491934771

[33mcommit dc408ff33cc73ea58aa1fc34843fbe83edc5ba0e[m[33m ([m[1;33mtag: 2022.11.29[m[33m)[m
Merge: 277a49b7 9bd6ace0
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 29 14:22:20 2022 -0800

    Merge pull request #1327 from google/google_sync
    
    Google sync

[33mcommit 9bd6ace0aae43f808c4d7c14fdd0af5ad650114c[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 29 13:22:59 2022 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 491721214

[33mcommit cd49e5ffe40e57228c2fceb14dd18b1783dbcccf[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 28 17:35:12 2022 -0800

    Move SignedFunction and SimpleFunction to abstract/_function_base.
    
    (Doing some preliminary work for ParamSpec support; this will let them be used within pytd_function)
    
    PiperOrigin-RevId: 491484369

[33mcommit 277a49b7d5ade8ef4ae6d96d22c19c1730f88ee0[m
Merge: 680b5656 d29a9822
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 28 17:30:04 2022 -0800

    Merge pull request #1326 from google/google_sync
    
    Google sync

[33mcommit d29a9822b483b4eb87951416930636319842f5c0[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 23 11:58:23 2022 -0800

    Relax assert in pytd/printer.py.
    
    PiperOrigin-RevId: 490554942

[33mcommit c2816bb879ab266bcde62b2d49f98589f99994ab[m
Author: tsudol <tsudol@google.com>
Date:   Tue Nov 22 16:43:10 2022 -0800

    Label Binding nodes with their data.
    
    For callables, the default repr is fine. (e.g. `foo(...)`)
    For everything else, use pytd_utils.Print.
    
    PiperOrigin-RevId: 490367076

[33mcommit a3e82feecad34f8ee8ee550d4218e0460ce5073d[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 22 16:17:02 2022 -0800

    Fix incorrect "Any" count in pytd printer for Callable[nothing, X].
    
    The pytd printer was assuming that Callables that don't specify a parameter
    list are always represented as Callable[Any, X], but they're sometimes
    Callable[nothing, X].
    
    PiperOrigin-RevId: 490361758

[33mcommit 84e56d43b971035b989f4ee36e8c6cbaf4a7d58a[m
Author: tsudol <tsudol@google.com>
Date:   Tue Nov 22 14:30:33 2022 -0800

    Move all the graph visualization into a JS script.
    
    - Instead of generating nodes to inject into a template, use a script to dynamically generate them. (This massively reduces the output file size.)
    - The visualizer script handles adding nodes to the graph when users request them.
    - Use the pyglib resource loader, in preparation for this being the internal version of the visualizer.
    - Use type aliases in typegraph_serializer to make connections between nodes easier to understand.
    
    PiperOrigin-RevId: 490338233

[33mcommit 514db4ae6aa55de4cdbf3c9cdd83d042ff6109d4[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 22 09:41:43 2022 -0800

    Default --mapping-is-not-sequence to True.
    
    PiperOrigin-RevId: 490265136

[33mcommit 680b5656e93c260ea0c5a5aaf3d319ba0677c809[m[33m ([m[1;33mtag: 2022.11.18[m[33m)[m
Merge: 0a01ffed 44a822a8
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 18 15:56:58 2022 -0800

    Merge pull request #1322 from google/google_sync
    
    Google sync

[33mcommit 44a822a83f70ece9e323b679c1b198dd21c5b13d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 18 23:16:38 2022 +0000

    Skip the [*'abc'] test before Python 3.9.

[33mcommit 2eca8b346c65750bde1101295cd2672a5ded1921[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 18 22:58:41 2022 +0000

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 489569503

[33mcommit 2993c36eb6d5021fafed0928bca141196d32adb2[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 18 22:40:47 2022 +0000

    constant_folding: don't crash on `[*'string']`.
    
    PiperOrigin-RevId: 489565628

[33mcommit 9efc7c8560b7443ecf4e8394dd9b6138fc17728f[m
Author: mdemello <mdemello@google.com>
Date:   Fri Nov 18 21:18:41 2022 +0000

    Use typing.Self as the unsupported feature in tests.
    
    PiperOrigin-RevId: 489547306

[33mcommit e9e146b1e460b538416fc1d0c93ff3b3d7cd1983[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 18 00:48:08 2022 +0000

    Stop accidentally converting bound to unbound functions.
    
    When a function fills in for a TypeVar, we were accidentally converting bound
    functions to unbound ones, causing spurious errors about missing arguments.
    
    PiperOrigin-RevId: 489340769

[33mcommit 457cd5f8bbd038e584bc4529f16f8ef0758965b5[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 17 23:34:00 2022 +0000

    Look for TypeGuard target names in f_builtins as well.
    
    This is a pretty weird case, but it does somehow get triggered by one of the
    targets in the Build Failures table.
    
    PiperOrigin-RevId: 489324769

[33mcommit 0a01ffed29a42f939f9a18c8e2d37a587809190c[m
Merge: ee9aa6dc 606ef3e1
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 17 15:14:23 2022 -0800

    Merge pull request #1321 from google/google_sync
    
    Google sync

[33mcommit 606ef3e148e33a88125d18d3f89ba20577b125d0[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 17 14:33:43 2022 -0800

    Support using TypeGuard on cell variables.
    
    Looks up target names in the `cells` attribute of the current frame.
    
    PiperOrigin-RevId: 489310047

[33mcommit fdf8d7759bed8a7aabd4315c3e942f8535047f09[m
Author: mdemello <mdemello@google.com>
Date:   Thu Nov 17 13:36:51 2022 -0800

    Fix constant folding for python-3.9+ literals compiling to LIST_EXTEND
    
    PiperOrigin-RevId: 489295263

[33mcommit f455f47f6ef707c4e32f43eeb1d0535c02c9b7b8[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 17 01:11:39 2022 -0800

    Add some skipped TypeGuard parsing tests.
    
    We don't have any checks to prevent TypeGuard misuse in pyi files. I'm not
    planning to add them for now, but we should at least have some tests for what
    errors we would want to catch.
    
    PiperOrigin-RevId: 489147378

[33mcommit a74b8f37207079b0d1ed96ab4c11d1c1a3d03d56[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 17 00:54:33 2022 -0800

    Do a better job of catching bad parameterized types in pyi files.
    
    * Catch illegal '...' parameters to builtin and typing containers.
    * Don't allow Callable to be parameterized with only one value.
    
    Our own tests had a surprising number of bad annotations.
    
    PiperOrigin-RevId: 489144209

[33mcommit 4bf79b4b9f8e56f31081151e01af764f242bb25b[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 16 16:19:22 2022 -0800

    Mark TypeGuard as supported.
    
    There are still a few things I want to look into, but the current state should
    be good enough for basic support.
    
    PiperOrigin-RevId: 489067820

[33mcommit ee9aa6dc0b8d6a08188c243ce5b685491c478173[m
Merge: b2dae8dd 80272d20
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 16 14:50:39 2022 -0800

    Merge pull request #1320 from google/google_sync
    
    Google sync

[33mcommit 80272d2094fd69baa1a1e2cbe48ca2c5fa710a27[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 16 13:59:18 2022 -0800

    Don't exclude tools/debugger/CMakeLists.txt from export.
    
    PiperOrigin-RevId: 489031645

[33mcommit df16f8a62d2b5f185b2ee4b6b261d0f4bab934bf[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 16 13:39:02 2022 -0800

    Mark TypeGuard as a subclass of bool to match reality.
    
    PiperOrigin-RevId: 489026353

[33mcommit 294a270256d00b25ce9406cf984a39a47320d22b[m
Author: mdemello <mdemello@google.com>
Date:   Tue Nov 15 23:48:19 2022 -0800

    Improve imports handling in the pytd printer.
    
    * Always combine multiple from-imports from the same module into one line
    * Special-case `typing_extensions` similarly to `typing`, since internally we
      often convert typing_extensions.X to typing.X
    
    PiperOrigin-RevId: 488858316

[33mcommit 1b2a65d8f2d79ebd1ad6645f2a16e13170d7875f[m
Author: mdemello <mdemello@google.com>
Date:   Tue Nov 15 22:27:25 2022 -0800

    Internal change
    
    PiperOrigin-RevId: 488847013

[33mcommit e0125a7181de3fe88ca83885424792fcf426d308[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 15 22:06:09 2022 -0800

    Add the TypeGuard function name to the 'arbitrary expression' error message.
    
    PiperOrigin-RevId: 488843932

[33mcommit 602566736bc139fa61e1c0e740ec7c5a113be395[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 15 17:40:47 2022 -0800

    Add some support for pyi TypeGuard functions.
    
    * Adds an abstract.function.ReturnType class that wraps abstract and pytd
      return types, so that PyTDFunction can reuse handle_typeguard.
    * Stops rewriting TypeGuard[X] to bool in the pyi parser.
    * Resolves a [not-supported-yet] error in pytype's own code for calling
      inspect.isfunc (a TypeGuard function in typeshed) on an attribute.
    
    PiperOrigin-RevId: 488803843

[33mcommit 6dedccc7e50574e45b043d4f038a9379c59a897c[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 11 17:50:41 2022 -0800

    Support using TypeGuard as the return type of a Callable.
    
    PiperOrigin-RevId: 487957792

[33mcommit 22bd8ec769fe00e799f8749be0576df742bb9d30[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 11 17:28:52 2022 -0800

    Allow NoReturn to appear anywhere.
    
    The typing docs now explicitly say, "NoReturn can also be used as a bottom
    type, a type that has no values"
    (https://docs.python.org/3/library/typing.html#typing.NoReturn). This change
    will also make supporting typing.Never trivial - we can alias it to NoReturn.
    
    PiperOrigin-RevId: 487954915

[33mcommit a0f423cf329bc3b51de1a8ab1946e5f618df3846[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 11 10:06:04 2022 -0800

    Remove outdated 'six' advice from errors.md
    
    PiperOrigin-RevId: 487852548

[33mcommit eb430f82dca5180ce53e1a6c92aa35ff64c030d0[m
Author: tsudol <tsudol@google.com>
Date:   Fri Nov 11 10:01:23 2022 -0800

    Add the CFG visualizer to the debug_pytype tool.
    
    PiperOrigin-RevId: 487851267

[33mcommit 8792aa70a888d8114cd7b79bb3afc15ac9ad285c[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 10 22:06:17 2022 -0800

    Detect TypeGuard misuse.
    
    Detects various forms of TypeGuard misuse. This resolves all our existing TODOs
    related to TypeGuard, but I realized that I've missed a couple cases that need
    supporting (TypeGuard in pyi files and in Callable), so we can't remove the
    not-supported-yet error yet.
    
    I deleted two of the TODOs without implementing them:
    * I didn't switch init_annotation to init_class because I wasn't able to
      construct a test case in which this made a difference.
    * I didn't optimize the code to avoid creating unnecessary new instances
      because this turned out to be more difficult/finicky than I expected. We can
      revisit this if we actually observe performance problems caused by TypeGuard.
    
    PiperOrigin-RevId: 487726625

[33mcommit b2dae8dd05346fedd56f91159ab377915def17a8[m[33m ([m[1;33mtag: 2022.11.10[m[33m)[m
Merge: 4582d1da 45518e11
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 10 15:39:49 2022 -0800

    Merge pull request #1318 from google/google_sync
    
    Google sync

[33mcommit 45518e119b018a28b5ba3f5a3a1c57ba0a013f92[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 10 13:21:19 2022 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 487622881

[33mcommit 7ffdafd723b3dfbea49fbc465c0fa496475c4147[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 9 17:36:42 2022 -0800

    TypeGuard: support local and global variables.
    
    * Fixes a bug where a local variable's original binding(s) weren't visible, by
      forwarding them to the node at which the TypeGuard function was called.
    * Fixes a bug where TypeGuard did not work for globals that were annotated but
      not defined, by having vm._load_annotation update members and _var_names.
    
    PiperOrigin-RevId: 487391804

[33mcommit 6e5d48b0c9e3785c888755a23c78b7598cf9a587[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 9 13:50:34 2022 -0800

    Add pytype/pyi:evaluator to pytype/pyi:parser.
    
    This way we don't have to expand the visibility of the former.
    
    PiperOrigin-RevId: 487337632

[33mcommit 7cf23d85fa071871a687aeb0d8d2944b08507bdf[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 9 12:24:34 2022 -0800

    TypeGuard: support repeat calls and union types.
    
    PiperOrigin-RevId: 487315681

[33mcommit c6a3ec05ad940e13389909a5e29e343967fdb635[m
Author: sthorne <sthorne@google.com>
Date:   Wed Nov 9 10:34:45 2022 -0800

    Interpret special characters in serialized (pyi or pickle) Literal[""] type defintions correctly.
    
    Testing showed that round-tripping Literal["\0"] did not work properly, as the
    parser was using a simple regex to extract the string contents, which didn't
    understand how to do backslash escapes appropriately.
    
    Using the `ast` module by way of `pyi.evaluator.eval_string_literal(string)` we
    interpret the string correctly.
    
    PiperOrigin-RevId: 487285573

[33mcommit 4582d1dab6bbce7ffd48f570c3112c6bed467261[m
Merge: 68d95b31 01697f16
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 7 18:15:50 2022 -0800

    Merge pull request #1317 from google/google_sync
    
    Google sync

[33mcommit 01697f160b10686af120b782a37d414b465bccd0[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 4 17:06:13 2022 -0700

    Support generic TypeGuard functions.
    
    PiperOrigin-RevId: 486263127

[33mcommit 7fa510dc6bd4662130e7a3644fa9e52106f58b74[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 4 15:59:20 2022 -0700

    Add rudimentary TypeGuard support.
    
    PiperOrigin-RevId: 486250616

[33mcommit ddcef3612a83178fa8720ea49e7a3ea9083aa208[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 3 17:03:35 2022 -0700

    Cleanup: delete ObjectPredicate._vm_values, a copy of convert.bool_values.
    
    PiperOrigin-RevId: 486010898

[33mcommit 4eb32293e8f5a9bc5c9a94c0484928425959134a[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 3 12:36:05 2022 -0700

    Rollback of changelist 485474229.
    
    *** Reason for rollback ***
    
    Our nightly build_all run has been failing since the first run after CL was submitted. Roll it back to see if it's the culprit.
    
    *** Original change description ***
    
    Fix an if-splitting bug by filtering in unique_parameter_values.
    
    Doing some cheap filtering via Variable.Bindings fixes a bug where we grabbed
    a non-visible binding for an instance parameter.
    
    ***
    
    PiperOrigin-RevId: 485944253

[33mcommit b7ed05931a5b64be4e2996ebf80ebab38fa978b2[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 1 19:02:02 2022 -0700

    Move some flags from "feature" to "experimental".
    
    --strict-parameter-checks is definitely not ready to be used. Are
    --enable-cached-property and --strict-primitive-comparisons release-ready?
    
    I also alphabetized the two lists of flags while I was at it.
    
    PiperOrigin-RevId: 485475126

[33mcommit 0061ec2802eb3d04ad7ea7d3b552d9464c5d5ca0[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 1 18:55:33 2022 -0700

    Fix an if-splitting bug by filtering in unique_parameter_values.
    
    Doing some cheap filtering via Variable.Bindings fixes a bug where we grabbed
    a non-visible binding for an instance parameter.
    
    PiperOrigin-RevId: 485474229

[33mcommit 68d95b31dc28bef98f8e21daa6c20cdb35d48de5[m
Merge: 26a3ce71 7079db4a
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 1 19:17:27 2022 -0700

    Merge pull request #1312 from google/google_sync
    
    Google sync

[33mcommit 7079db4ad8ec10594c8cea2c2c6f1d7377f2d203[m
Author: mdemello <mdemello@google.com>
Date:   Tue Nov 1 12:49:40 2022 -0700

    Add an optional no-return-any flag to disallow Any as a return type.
    
    Also adds a mechanism to allow per-file opting in to feature flags, via a
    file-level `features` directive, e.g. in this case
    ```
    # pytype: features=no-return-any
    ```
    would set the same option as `--no-return-any` as a command line argument,
    overriding the CLI flag if both are supplied. The `features` directive can only
    be used to enable a feature flag.
    
    PiperOrigin-RevId: 485392928

[33mcommit 00bfce679721df762c478837db8c7aa4290be379[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 1 10:47:07 2022 -0700

    Update pytype's README to indicate Python 3.10 support.
    
    Apparently we never did this ^^;
    
    PiperOrigin-RevId: 485360353

[33mcommit 58704267e9242f223d3fde8ce0109b887a62b0af[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 31 11:27:07 2022 -0700

    Add (skipped) tests for TypeGuard.
    
    I basically copied all the examples from the PEP into test cases.
    
    PiperOrigin-RevId: 485103474

[33mcommit 98fb506c444f937294dd9e23811469051fceb207[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Fri Oct 28 11:24:10 2022 -0700

    Use `defines/implicit` instead of `defines/binding` for package.
    
    According to https://www.kythe.io/docs/schema/#package, we should use `implicit`  since Python module is implicitly defined based on the file name.
    
    PiperOrigin-RevId: 484578796

[33mcommit 6be6d37390fa0082b11069a6682f0ab053a6a612[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Fri Oct 28 11:15:30 2022 -0700

    Rollback of changelist 484310702.
    
    *** Reason for rollback ***
    
    The way we annotate import aliases is not clear. Roll this back until we have a conclusion on how it should be.
    
    *** Original change description ***
    
    Add node/kind talias for class aliases.
    
    ***
    
    PiperOrigin-RevId: 484576748

[33mcommit 9e461a2ce3da7299e15940256db3b2562d33b92c[m
Author: mdemello <mdemello@google.com>
Date:   Thu Oct 27 16:02:05 2022 -0700

    Do not let a kwarg in **args interfere with a posonly arg of the same name, pyi edition.
    
    PiperOrigin-RevId: 484373060

[33mcommit 7a56f054afe12cf7b348ba90312019bcd2052371[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 27 14:50:31 2022 -0700

    Delete old matching code that we no longer need.
    
    PiperOrigin-RevId: 484355634

[33mcommit 054751296093215e0c0e1f3a8d0b9a84c985ff17[m
Author: mdemello <mdemello@google.com>
Date:   Thu Oct 27 11:46:52 2022 -0700

    Add node/kind talias for class aliases.
    
    PiperOrigin-RevId: 484310702

[33mcommit 26a3ce71e540373c59903291a9acd2af3bdc06c0[m[33m ([m[1;33mtag: 2022.10.26[m[33m)[m
Merge: 05957a94 3c5a7194
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 26 14:20:05 2022 -0700

    Merge pull request #1310 from google/google_sync
    
    Prepare a PyPI release.

[33mcommit 3c5a71945a2ed581a39aabe21a0d9610aa40d889[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 26 13:29:06 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 484055460

[33mcommit 05957a942927710585cef43526742397a2a4e0ae[m
Merge: d5c0a6d3 4241cf82
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 25 19:53:26 2022 -0700

    Merge pull request #1309 from google/google_sync
    
    Google sync

[33mcommit 4241cf8218c1934f734a34b65360fa0b550df33e[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 21 14:00:25 2022 -0700

    Fix a bug in subprocess_overlay.
    
    In the presence of an opaque *args or **kwargs, we don't know which overload of
    subprocess.Popen.__new__ was matched.
    
    PiperOrigin-RevId: 482882419

[33mcommit e817814c11ea8ec9607f7f2ab584cb07f549143c[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 21 13:45:16 2022 -0700

    Add a missing parameter type to bytearray.__add__.
    
    PiperOrigin-RevId: 482878678

[33mcommit 8155f0fd159e1166f08b86ae64244cbb5a311eec[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 20 23:42:49 2022 -0700

    Switch fully to argument-by-argument call matching for PyTDFunction.
    
    * Groups matches by view so that multiple overloads work.
    * Gets rid of the "variable view" hack we were using to simultaneously support
      the old and new matching implementations.
    * Does a few performance optimizations to mitigate slowdowns caused by changes
      to CFG queries. This change was causing a few random slowdowns/timeouts by
      causing us to hit queries that are inexplicably slow. I simplified variables
      and avoided/delayed filtering in a few places to fix this.
    * Removes buggy enforcement of --strict-parameter-checks in
      matcher.compute_one_match. I'll re-implement this feature flag in a more
      correct manner at a later time.
    * Updates the subprocess overlay to work with the new matching implementation.
    
    PiperOrigin-RevId: 482701895

[33mcommit d5c0a6d35f1942be12868edc876f582175b30696[m
Merge: 0c74980b e3683d8f
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 20 16:34:43 2022 -0700

    Merge pull request #1306 from google/google_sync
    
    Google sync

[33mcommit e3683d8fbcd07aefb8fe941a5080a7c68e375f39[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 20 15:21:28 2022 -0700

    Copy parser._Matches to parser_libcst._Matches.

[33mcommit e53ce6c62bdda7b02fe582337a956293f17cd14f[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 20 11:55:25 2022 -0700

    Fix a crash caused by accessing is_enum on a non-class.
    
    Noticed this while testing another change.
    
    PiperOrigin-RevId: 482555441

[33mcommit a425494fad1a083cbaad3312a7a89862fe84879f[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 19 13:26:29 2022 -0700

    Avoid expensive variable filtering in a couple of places.
    
    * When Any is among the possible return types of an InterpreterFunction,
      replace the entire return type with Any. This way, we don't need to call
      HasCombination to see which types are visible.
    * Similarly, when Any is among the possible types of a module-level variable,
      replace the entire type with Any so we don't need to use FilteredData.
    
    PiperOrigin-RevId: 482288192

[33mcommit cbdc8bdba1061ffe6ece85a5b5c0939288588509[m
Author: mdemello <mdemello@google.com>
Date:   Wed Oct 19 11:19:23 2022 -0700

    Add error checks for enum case matching.
    
    Checks for:
    * Nonexhaustive match over an enum
    * Redundant match (i.e. checking the same case in two different branches)
    
    PiperOrigin-RevId: 482255366

[33mcommit 27ea7a3833f9dee7d833e384130ad16f39259d2f[m
Author: mdemello <mdemello@google.com>
Date:   Tue Oct 18 15:36:17 2022 -0700

    Implement basic exhaustiveness checking for pattern matches over enums.
    
    In code of the form
    
    ```
    def f(x: SomeEnum):
      case SomeEnum.A:
        ...
      case SomeEnum.B:
        ...
      case SomeEnum.C:
        ...
    ```
    
    if the cases cover the entire enum, the branch that covers the final value will
    always succeed, and everything after that will be ignored.
    
    PiperOrigin-RevId: 482039606

[33mcommit 5f48e821bcbdc28e399c850a1dbe2e5905a12ba0[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon Oct 17 09:37:52 2022 -0700

    Emit `node/kind record` and `subkind class` facts instead of `node/kind class`
    
    Change class schema so that `node/kind record` and `subkind class` facts are emitted instead of `node/kind class` facts, according to the Kythe docs. This change is made in both PyWald and Pytype.
    
    #GoWaldPythonIndexer
    
    PiperOrigin-RevId: 481662854

[33mcommit 6352968c3e3f67a8a271a30516d6b5d285980a11[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 14 17:32:47 2022 -0700

    Track TypeVar unions in the matcher.
    
    Fixes a bug in our new function call matching implementation caused by assuming
    that the same value can simultaneously substitute for all TypeVars in a union.
    The old view-based implementation circumvented this by carrying over
    substitutions from previous arguments, so conflicting values were ignored. We
    don't want to do this in the new implementation because it would require
    calling compute_one_match for every possible subst when matching an argument,
    rather than calling it just once. Instead, we can track TypeVar unions and
    reject impossible errors.
    
    PiperOrigin-RevId: 481267921

[33mcommit 519cc655543cd743684cac5bdf22925395a0da95[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 13 16:50:43 2022 -0700

    Relax an overly strict TypeVar consistency check.
    
    PiperOrigin-RevId: 481015825

[33mcommit 0c74980b6db3f1faa168b2c90ca666173786b155[m[33m ([m[1;33mtag: 2022.10.13[m[33m)[m
Merge: fd21934f 77e2633b
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 13 16:05:54 2022 -0700

    Merge pull request #1303 from google/google_sync
    
    Google sync

[33mcommit 77e2633bb7aadb7fa2f0ada3907564b95cc6b214[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 13 15:17:37 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 480996257

[33mcommit 7cd7961269382e304a7742e25a9ac22265507e1c[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 12 16:09:16 2022 -0700

    Handle 'self' matches better in matcher.compute_matches.
    
    We can avoid blowing up the number of matches by applying 'self' matches as we
    go rather than at the very end.
    
    PiperOrigin-RevId: 480741943

[33mcommit fd21934fd88f6a55d3dd9e9dfeb46c89dfe81419[m
Merge: b3fb2944 fcd36b73
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 12 15:58:15 2022 -0700

    Merge pull request #1302 from google/google_sync
    
    Google sync

[33mcommit fcd36b7346176334a8d89dc4a84c62bdcceb03ec[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 12 14:39:09 2022 -0700

    Re-resolve LateType instances that resolve to another LateType.
    
    PiperOrigin-RevId: 480720948

[33mcommit 77cb5d6111abffdca4eb20a492a9bcbfd6e3f458[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 11 13:06:46 2022 -0700

    Deduplicate argument data in function.Args.simplify.
    
    * Adds a step in Args.simplify() to also simplify variables by combining
      bindings whose data has the same hash.
    * Reimplements the get_fullhash() method on abstract values to actually do
      useful hashing; it was previously little better than hashing by memory
      address.
    * Fixes bugs exposed by doing actual hashing and caching.
    
    PiperOrigin-RevId: 480433759

[33mcommit 990e06dbc85a50e4cd05b093413012f9612763a1[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 11 09:31:05 2022 -0700

    Fix an incorrect type annotation in vm.py.
    
    PiperOrigin-RevId: 480378593

[33mcommit d41a671ce1700ff689c63495467679b28c2ca278[m
Author: mdemello <mdemello@google.com>
Date:   Mon Oct 10 19:31:48 2022 -0700

    Do not let a kwarg in **args interfere with a posonly arg of the same name.
    
    PiperOrigin-RevId: 480234767

[33mcommit fdb687c3ab6f1349b5b739ef39d9e0a3a2524fd7[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 10 16:33:14 2022 -0700

    Inline abstract_utils.func_name_is_class_init.
    
    This method was only necessary because of Python 2/3 differences.
    
    PiperOrigin-RevId: 480205463

[33mcommit 3e75b8651081e0e23c0f7b9c99a93cc2c2c80c5a[m
Author: tsudol <tsudol@google.com>
Date:   Wed Oct 5 17:30:52 2022 -0700

    Add Binding.id to the Python CFG.
    
    PiperOrigin-RevId: 479182952

[33mcommit e15f3a2c084b2c7dcd5509f8e72ddfc2d189caa1[m
Author: tsudol <tsudol@google.com>
Date:   Wed Oct 5 17:00:54 2022 -0700

    Add a library for serializing the CFG.
    
    Also adds a couple attributes to some CFG members.
    
    PiperOrigin-RevId: 479177675

[33mcommit 41729eeb1f275a11192407e0555ac71fb6feb551[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 5 16:36:23 2022 -0700

    Fix timeout caused by TypeParameterInstance referring to itself.
    
    PiperOrigin-RevId: 479172756

[33mcommit b3fb2944d096d9c4dc51392cc8c370a89f8163b2[m
Merge: 66032d69 5a1228e8
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 12 15:07:48 2022 -0700

    Merge pull request #1301 from ilCatania/main
    
    add pre-commit hook definition

[33mcommit 5a1228e8b277c3446c50fdc3767bd5057a886405[m
Author: Gabriele Catania <gabriele.catania@uk.mlp.com>
Date:   Tue Oct 11 13:32:53 2022 +0000

    add pre-commit hook definition

[33mcommit 66032d69969e8e5a8c2e2041f943f7c839082855[m
Merge: 465fb7ea ee4bb1a9
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 5 15:56:01 2022 -0700

    Merge pull request #1299 from google/google_sync
    
    Google sync

[33mcommit ee4bb1a92ec6d08d55bceae05413fefdb47214e6[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 5 15:02:44 2022 -0700

    Use compute_matches instead of compute_subst in CallableClass.call_slot.
    
    PiperOrigin-RevId: 479152490

[33mcommit f509bb0d4045ea8cfe5feb441e32eafe64b66f6c[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 5 11:24:43 2022 -0700

    Move a variable that was put at the wrong indentation level.
    
    Oops.
    
    PiperOrigin-RevId: 479096311

[33mcommit e7e39efba5b4cb72abd648b4efd492d0b5ac2e4d[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 4 16:06:12 2022 -0700

    Switch fully to argument-by-argument call matching for SignedFunctions.
    
    Improves matcher.compute_matches so that we can switch fully from compute_subst
    to compute_matches for SignedFunction and its subclasses (most importantly,
    InterpreterFunction!).
    
    * Passes `alias_map` all the way through to compute_one_match to preserve
      aliases in subst.
    * Merges `subst` dictionaries when multiple parameters produce non-empty substs
      by factoring out and reusing the matcher's existing code for checking that
      possible TypeVar substitutions are consistent with one another.
    * Adds subst deduplication logic so that merging doesn't blow up.
    * Tracks seen type parameters in the matcher so that we can access bounds and
      constraints during merging.
    * Copies the code for preserving `self` substitutions from compute_subst.
    * Sets matcher._error_subst for better error messages.
    
    PiperOrigin-RevId: 478906124

[33mcommit 465fb7eaedd14700babde911a745839e2b57a69c[m
Merge: 79a1d535 a102377b
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 4 15:16:01 2022 -0700

    Merge pull request #1298 from google/google_sync
    
    Google sync

[33mcommit a102377b9c240f5b013523db065ab3a01e326dba[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 4 14:27:02 2022 -0700

    Fix "appears only once" TypeVar error on overloads in generic classes.
    
    Fixes https://github.com/google/pytype/issues/446.
    
    PiperOrigin-RevId: 478883652

[33mcommit 35463998bd367fc311195f5ea0da89e9541275a7[m
Author: Łukasz Wieczorek <wieczorek1990@gmail.com>
Date:   Tue Oct 4 13:24:54 2022 -0700

    Fix incorrect captialization of project name (#1296)
    
    "PyType" is only used in code. "pytype" is the project name.
    
    Resolves #1296
    
    PiperOrigin-RevId: 478868463

[33mcommit a97ce66f53f6b86f528782de089e0be6a204f8e5[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 4 12:01:33 2022 -0700

    Improve `subst` and `view` type annotations in matcher.py.
    
    * Makes dict subclasses in datatypes.py generic so we can indicate key and
      value types.
    * Refines matcher._SubstType, adds a matcher._ViewType, and uses both
      consistently throughout the file.
    
    PiperOrigin-RevId: 478849184

[33mcommit 697b049a25a98159daabf33b31935e896690e71c[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 4 11:45:06 2022 -0700

    Resolve aliases in AliasingDict.__init__.
    
    PiperOrigin-RevId: 478845175

[33mcommit e4dd7e2043aef2d9c29cc61fecd998d6c9aaaf2d[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 3 12:41:43 2022 -0700

    Put Mapping vs. Sequence fix behind --mapping-is-not-sequence flag.
    
    PiperOrigin-RevId: 478577904

[33mcommit f664cf1e3af6960f4e1a64e76aa0bc712db351fc[m
Author: tsudol <tsudol@google.com>
Date:   Mon Oct 3 10:48:20 2022 -0700

    Add a type stub for typegraph/cfg.cc.
    
    PiperOrigin-RevId: 478546881

[33mcommit bef218e1d381556f612880d0a44af9ad289c2ecd[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 30 21:23:59 2022 -0700

    Make creating and copying AliasingDicts less error-prone.
    
    I discovered that first setting the `uf` attribute and then setting keys on an
    AliasingDict produces different behavior from first setting the keys and then
    setting `uf`. This seems like an excellent way to have hard-to-find bugs, so
    I made `uf` read-only, changed the `__init__` and `copy` methods to allow
    easily specifying `uf` when creating a new AliasingDict, and renamed `uf` to
    `aliases` for readability.
    
    PiperOrigin-RevId: 478141861

[33mcommit 4ea6210b7d9586f64b60862a0eee7f3e3c54e59d[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 30 11:24:31 2022 -0700

    Deduplicate some of the match_args_sequentially code.
    
    * Adds a matcher.compute_matches that contains the shared code between
      InterpreterFunction.match_args_sequentially and the PyTDFunction equivalent.
    * Renames the original matcher.compute_matches to compute_one_match.
    
    PiperOrigin-RevId: 478039135

[33mcommit c59347e995efeb963093a8a573e5f4b7b63f5764[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 30 11:07:43 2022 -0700

    Store more information in matcher._recursive_annots_cache.
    
    We were assuming that all cached matches are successful, leading to some errors
    being missed.
    
    PiperOrigin-RevId: 478035075

[33mcommit 8826d89ddd4e6acc3e88c309e1338bcf1fdc589b[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 29 17:42:21 2022 -0700

    Forbid matching of Mapping against Sequence.
    
    PiperOrigin-RevId: 477864388

[33mcommit 79a1d535fc84c660066f24f7ed4417f9921271b9[m
Merge: 06978a83 498c4a30
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 29 15:13:26 2022 -0700

    Merge pull request #1294 from google/google_sync
    
    Google sync

[33mcommit 498c4a307c6a2ffab5413fa9bda4822810b5efcf[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 28 15:33:53 2022 -0700

    Enable running pytype check actions with --output-errors-csv.
    
    I changed --output-errors-csv to preserve the exit status rather than always
    zeroing it, since the latter is undesirable for check actions. In places where
    we want to keep the zeroing behavior, we can use --return-success.
    
    PiperOrigin-RevId: 477568695

[33mcommit d03c3402a0bbbf906744a0c45a4b90d60efdff79[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 28 14:42:41 2022 -0700

    Add tests to cover some pattern matching features.
    
    PiperOrigin-RevId: 477556540

[33mcommit 06978a83fd976a6ae10d0458e2d8f2a1ec4be31f[m[33m ([m[1;33mtag: 2022.09.27[m[33m)[m
Merge: 173a7a41 365b76d0
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 27 14:50:58 2022 -0700

    Merge pull request #1293 from google/google_sync
    
    Google sync

[33mcommit 365b76d0cbe6089d0e4bbf092f13598a2fbdf48f[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 27 13:59:41 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 477268094

[33mcommit 8cfd78fa613b55405baa6e490577d65a44848a5f[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 27 11:03:53 2022 -0700

    Define __new__ instead of __init__ for np.ndarray.
    
    PiperOrigin-RevId: 477219061

[33mcommit 17d7c1302cf92ff49bd7f7025293ea0cfdbfddfe[m
Author: mdemello <mdemello@google.com>
Date:   Mon Sep 26 22:11:56 2022 -0700

    Fixes for pattern matching on mappings:
    * Support the `{**rest}` catchall pattern
    * Match abstract as well as concrete mappings
    
    Also implements the (trivial) `GEN_START` opcode since it was the last
    remaining 3.10 opcode.
    
    PiperOrigin-RevId: 477075920

[33mcommit cafb0f7bce1fda3069ee9bbc740bca2dfd44f519[m
Author: mdemello <mdemello@google.com>
Date:   Mon Sep 26 17:52:21 2022 -0700

    Add support for pattern matching classes with posargs.
    
    PiperOrigin-RevId: 477035223

[33mcommit 76a50f211f121eec17bd5385f1fd9252da2d0891[m
Author: mdemello <mdemello@google.com>
Date:   Mon Sep 26 12:52:18 2022 -0700

    Add support for matching on class keyword patterns.
    
    PiperOrigin-RevId: 476967634

[33mcommit c2400a9c8edc66cdb1c82ada25c2d3abdf790fa4[m
Author: sthorne <sthorne@google.com>
Date:   Mon Sep 26 10:03:59 2022 -0700

    typeshed type annotation corrections for IO objects: `seek` and `truncate`.
    
     * `seek` has a return type of `int`. This is the new position in the file.
     * `truncate` Has an Optional parameter, not an optional return value! Move the Optional[] annotation to the correct place.
    
    This new type signatures matches stdlib/typing.pyi:
     * https://github.com/python/typeshed/blo[]bc0590a6615266180b5640c730f62f8ad84d04/stdlib/typing.pyi#L662
     * https://github.com/python/typeshed/blo[]bc0590a6615266180b5640c730f62f8ad84d04/stdlib/typing.pyi#L668
    
    PiperOrigin-RevId: 476925227

[33mcommit 173a7a416787a1b37f4a69ac6d00e18c69788b3e[m
Merge: e0b9ddb8 11245379
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 23 20:24:25 2022 -0700

    Merge pull request #1292 from google/google_sync
    
    Google sync

[33mcommit 11245379af8a108508a64113c9130fbb706c82df[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 23 19:53:11 2022 -0700

    Make pytype_extensions.Attrs compatible with 3.8 and below and add some tests.
    
    * Uses typing.Tuple instead of builtins.tuple, since the latter can't be
      subscripted in earlier versions.
    * Adds some tests for Attrs and Dataclass.
    
    PiperOrigin-RevId: 476517236

[33mcommit f07eb8c8e0023f69c8e34b40fd397f1c0787718c[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 23 16:50:21 2022 -0700

    Fix a breakage caused by attr.Attribute not being subscriptable at runtime.
    
    PiperOrigin-RevId: 476491212

[33mcommit 06fcd885e92ddae93ad5260efe29c692dc5a19e2[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 23 16:36:41 2022 -0700

    Remove a use of the walrus operator.
    
    No walruses for us yet =(
    
    PiperOrigin-RevId: 476488780

[33mcommit d1c6ebf77dcf8570a57d9c376a6f86fcbec41a4c[m
Author: michaelreneer <michaelreneer@google.com>
Date:   Fri Sep 23 16:25:17 2022 -0700

    Add `Attrs` protocol and `__attrs_attrs__` member to attr overlay.
    
    This can be used to write type annotations that match any `Attrs` class or instance of an `Attrs` class, but not other classes/instances of other classes. Also supports a generic argument so that, for example, a dataclass whose keys are all strs can be matched. See the docstring of pytype_extensions.Attrs for more details.
    
    PiperOrigin-RevId: 476486826

[33mcommit 6995d637c5048158d493c568faebdbb262e386d7[m
Author: michaelreneer <michaelreneer@google.com>
Date:   Fri Sep 23 16:25:17 2022 -0700

    Add `Attrs` protocol and `__attrs_attrs__` member to attr overlay.
    
    This can be used to write type annotations that match any `Attrs` class or instance of an `Attrs` class, but not other classes/instances of other classes. Also supports a generic argument so that, for example, a dataclass whose keys are all strs can be matched. See the docstring of pytype_extensions.Attrs for more details.
    
    PiperOrigin-RevId: 476486826

[33mcommit 27f044a53563efff330f5682513630c6bea69014[m
Author: mdemello <mdemello@google.com>
Date:   Fri Sep 23 11:34:44 2022 -0700

    Add support for pattern matching with dict patterns.
    
    Also fixes some uses of get_atomic_value where we needed
    get_atomic_python_constant.
    
    PiperOrigin-RevId: 476421333

[33mcommit ff40811aff3c40f8c766ae3f3661278d07660683[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 22 16:48:37 2022 -0700

    Add pattern matching support for sequences.
    
    PiperOrigin-RevId: 476229080

[33mcommit e0b9ddb8b8a09bef325c858b351038a5ec1a8f12[m
Merge: a8a40aa6 dc88a1ca
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 22 17:11:16 2022 -0700

    Merge pull request #1290 from google/google_sync
    
    Google sync

[33mcommit a8a40aa6580dc7624aeb8f1d11438a7e2006e811[m
Merge: 0d4cb9a9 25227750
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 22 17:10:12 2022 -0700

    Merge pull request #1291 from google/bump
    
    Bump importlab version to pick up an import resolution fix.

[33mcommit dc88a1caf305d84f08b27c90e8086119747624ef[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 22 16:33:20 2022 -0700

    No walruses for us yet =(

[33mcommit 25227750c249452b50e6ef643931c0ae8624998a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 22 16:29:08 2022 -0700

    Bump importlab version to pick up an import resolution fix.
    
    Fixes #1081, #1287.

[33mcommit d3c452c0dd5884f4d1182a05b88a094fdb1e15b4[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 22 12:31:22 2022 -0700

    Support empty generic protocols.
    
    Weird but legal.
    
    Fixes https://github.com/google/pytype/issues/1288.
    
    PiperOrigin-RevId: 476168569

[33mcommit 845a703f9390b9b7435357aa721e7814e8e246d2[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 22 12:17:59 2022 -0700

    Take nested classes into account when re-resolving dependencies in load_pytd.
    
    I wasn't able to reproduce the error locally, but I confirmed that this fixes
    the pyi-error seen in the linked bug.
    
    Fixes https://github.com/google/pytype/issues/1289.
    
    PiperOrigin-RevId: 476165460

[33mcommit 658a5f3b47e927d808039c2bc1833952b1024e59[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 21 22:58:13 2022 -0700

    Change how we detect infinite recursion in __new__ calls.
    
    My previous attempt caused __new__ calls to no longer be recorded in
    InterpreterFunction._call_records, which then led to some weird inference
    results. Instead, this change does more fine-grained tracking of what stage of
    instance creation vm.init_class() is on (instantiating = calling __new__,
    initializing = calling __init__) so that we can avoid calling __new__ again if
    we see that we're already in the instantiating stage. Using classes as keys in
    the cache exposed a bug in LiteralClass.__eq__, which I also fixed.
    PiperOrigin-RevId: 476010028

[33mcommit 950d704921317979dc7bfc0816f270c99493b731[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 21 16:19:24 2022 -0700

    Improve "Analyzing method: ..." logging calls.
    
    * Print out the class name, so we don't just get a bunch of "Analyzing method:
      '__init__'"s.
    * Skip logging if the method var doesn't actually contain any methods to
      analyze.
    
    PiperOrigin-RevId: 475950854

[33mcommit 48500de1c2e8ef894245fd9d578d0ed82008971a[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 21 11:27:29 2022 -0700

    Add a debug indexer option to show kythe spans.
    
    PiperOrigin-RevId: 475879575

[33mcommit 6ee6fa76c3d6dd3c884dd68a39306783b5eb57c6[m
Author: mdemello <mdemello@google.com>
Date:   Tue Sep 20 13:13:39 2022 -0700

    Preserve the raw input arg for the debug xref indexer.
    
    PiperOrigin-RevId: 475634044

[33mcommit bd09b342439aa8c1105b7b5fc7b6a6839fba4122[m
Author: sinopalnikov <sinopalnikov@google.com>
Date:   Tue Sep 20 01:59:24 2022 -0700

    Remove --overriding-parameter-type-checks flag that is now enabled by default.
    
    PiperOrigin-RevId: 475496818

[33mcommit 65f5ac53e31fb7780a0d046e618c1032cec664fa[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 19 13:52:40 2022 -0700

    Slightly improve pytype's numpy stub.
    
    * Makes ndarray generic and fleshes out the types in some magic methods.
    * Adds np.dtype.
    
    These changes are copied from
    https://github.com/numpy/numpy/blob/main/numpy/__init__.pyi, with a whole lot
    of simplifications because that type stub is very, very, very complicated.
    
    PiperOrigin-RevId: 475377000

[33mcommit 00680211fd530d294724c6e434ef578d7314af97[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 19 13:15:20 2022 -0700

    Fix infinite recursion caused by annotated __new__ methods.
    
    With --always-use-return-annotations set, something like:
    
    class Foo:
      def __new__(cls) -> Foo: ...
    
    triggers infinite recursion because we call Foo.__new__ while trying to create
    an instance of Foo for the return type of Foo.__new__.
    
    PiperOrigin-RevId: 475367920

[33mcommit 0d4cb9a9a0c43011158397bf1a341a0b7874cca5[m[33m ([m[1;33mtag: 2022.09.19[m[33m)[m
Merge: 95bd2ba0 7705fa97
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 19 13:26:32 2022 -0700

    Merge pull request #1286 from google/google_sync
    
    Prepare a PyPI release.

[33mcommit 7705fa972c0ce32ca3f20aa49736292309c3133d[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 19 11:52:57 2022 -0700

    Prepare a PyPI release.
    
    * Updates __version__ and CHANGELOG.
    * Makes a disable directive 3.7-compatible.
    
    PiperOrigin-RevId: 475348187

[33mcommit 95bd2ba0d6f0dfbead22dba15861d0eabcf87600[m
Merge: 776372d1 c1442fe8
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 16 17:17:13 2022 -0700

    Merge pull request #1285 from google/google_sync
    
    Google sync

[33mcommit c1442fe8ac5c19022947ea0e72455d3f31e2da24[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 16 14:49:23 2022 -0700

    Switch to block disable for 3.7 compatibility.

[33mcommit 62f5fc2ca0de93b18d400e73387ff522bfa59347[m
Author: jaslanides <jaslanides@google.com>
Date:   Thu Sep 15 11:30:48 2022 -0700

    pytype: Improve documentation/function signature for pytype_extensions.assert_type.
    
    BEGIN_PUBLIC
    Improve documentaitno/function signature for pytype_extensions.assert_type.
    END_PUBLIC
    
    PiperOrigin-RevId: 474614881

[33mcommit e1e4691a18792061b4e991f702ee5a24899d5d45[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 15 16:30:56 2022 -0700

    Treat LiteralString as str in pyi files.
    
    typeshed is already using typing_extensions.LiteralString in type annotations.
    We were treating LiteralString as Any, which led to odd behavior like thinking
    os.path.basename can accept and return None.
    
    I had to move our handling of typing_extensions._SpecialForm earlier in the
    parsing process to avoid a BadDependencyError caused by `builtins.str` not
    being resolved early enough.
    
    PiperOrigin-RevId: 474684578

[33mcommit 2e3b76a74b82b88699bf5031ccd3919cf5e97c5a[m
Author: sinopalnikov <sinopalnikov@google.com>
Date:   Thu Sep 15 02:44:54 2022 -0700

    Default --overriding-parameter-type-checks to True.
    
    PiperOrigin-RevId: 474513173

[33mcommit 458daca29b0abb843f386c6ca0874903365d40bf[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 14 21:31:20 2022 -0700

    Add a feature flag to always use return type annotations.
    
    Currently, if maximum analysis depth is hit while analyzing a function, we
    return `Any` even if the function has a return type annotation.
    
    This change found a bug in pytype/tools/debugger/main.py (there's no "ctx"
    attribute io pytype.io.AnalysisResult, but there is a "context").
    
    PiperOrigin-RevId: 474467811

[33mcommit d3bf91e841cd7f02b2fdf65a972eb38833769435[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 14 20:46:18 2022 -0700

    Factor out filesystem access for typeshed.
    
    PiperOrigin-RevId: 474461801

[33mcommit e9cf31028bcb4bc15d26b4876db76715d96d934f[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 14 16:28:57 2022 -0700

    Do not add a defines/binding edge for `a.x = ...` if `a` is not `self`.
    
    PiperOrigin-RevId: 474419286

[33mcommit 51eab3604c0fe96a07271af4b3b61177c4f4731f[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 14 08:47:59 2022 -0700

    FIX: record.errors is only set after the checkpoint context manager exits.
    
    PiperOrigin-RevId: 474302525

[33mcommit f64042111af41c11b625a0a042ceb311fdd24ef5[m
Author: mdemello <mdemello@google.com>
Date:   Mon Sep 12 12:21:46 2022 -0700

    Move typegraph and cfg graph visualisation to a separate frontend binary.
    
    The new `pytype/tools/debugger/debug_pytype` binary handles the `--output-cfg`
    and `--output-typegraph` options, and passes the rest on to pytype.
    
    PiperOrigin-RevId: 473814698

[33mcommit 5efb96da45ef8fb6b8acefb443a7d44e8977d8e4[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon Sep 12 08:27:14 2022 -0700

    Replace `record` into `package` kind and add `chilof` edge from `file`
    
    Updated Pytype related part as well to make them consistent.
    
    PiperOrigin-RevId: 473754202

[33mcommit 2c6671d6d904ee18c316b1622a2a627bf554b3bb[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 8 22:20:11 2022 -0700

    FIX: In the xref parser, the input should be a pytype arg, not a tool arg.
    
    PiperOrigin-RevId: 473162937

[33mcommit 944f333749bf26446dd4c5788e1ed6aacd06dbee[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 8 16:19:51 2022 -0700

    Rework arg parsing to make using pytype as a library in tools easier.
    
    This optimises the tools arg parser for the common use case of passing in a set
    of options for the tool plus a disjoint set of options that need to be passed
    through to pytype.
    
    - Add more fine-grained control to adding options in config.py
    - Change the tools arg parser to maintain separate tool and pytype options.
    - Add a separate entry point to process already-parsed args from a namespace
      (rather than needing to reconstruct argv)
    - Fill in some options that are required by pytype-single but not necessarily
      by a tool (most notably the input file; tools will not necessarily get this
      as an arg)
    - Separate out the analyze_project parser; it does not use pytype as a library
    
    PiperOrigin-RevId: 473111230

[33mcommit 7ea2e2c48e4abc313eb29b757ef05fb969d7b039[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 8 13:32:34 2022 -0700

    Add an OrderedCode object to LOAD_FOLDED_CONST.
    
    errors.py needs this in order to get a filename and method name for error
    messages.
    
    PiperOrigin-RevId: 473071426

[33mcommit 776372d16633ca781283c9a226750c4c9c89e043[m[33m ([m[1;33mtag: 2022.09.08[m[33m)[m
Merge: f5700fbc 384f437e
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 8 13:09:16 2022 -0700

    Merge pull request #1284 from google/google_sync
    
    Google sync

[33mcommit 384f437ec3f86e860a489d761bb075d576a0cbc1[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 8 12:24:40 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 473055233

[33mcommit 57bd042bbdc45a1551dcfd164dd56fd287206666[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 8 11:17:51 2022 -0700

    Tool arg parser postprocessing fixes.
    
    - Separate out string conversion from postprocessing; they are different
      phases of arg parsing
    - Use a lookup table to get CLI opts from args
    
    PiperOrigin-RevId: 473038707

[33mcommit f41afe24950477724b49a21c793501aa7ede4574[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 7 13:32:09 2022 -0700

    Make feature flags _Arg objects too.
    
    PiperOrigin-RevId: 472800442

[33mcommit a4ed48466ccea0bcfc3bd67b7988db73e4b8eef6[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 6 20:22:52 2022 -0700

    Resolve --overriding-parameter-count-checks findings in pytype itself.
    
    I'm starting the process of releasing --overriding-parameter-count-checks and,
    somewhat amusingly, this check finds a bunch of inconsistent subclass method
    signatures in pytype itself. I disabled a few errors for inconsistent
    Mixin.init_mixin() signatures, since we always call
    `BaseClass.init_mixin(self, ...)` anyway.
    
    PiperOrigin-RevId: 472622108

[33mcommit acb882529b27a01085c3cdd8af7ba15c9dc0db40[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 6 18:07:55 2022 -0700

    Make collections.OrderedDict an alias for typing.OrderedDict.
    
    I verified that at runtime, instantiating typing.OrderedDict creates an
    instance of collections.OrderedDict, so it makes sense to treat them as the
    same class.
    
    PiperOrigin-RevId: 472602118

[33mcommit 00b0705460bc3acea738c91a3b08148742f4dbe3[m
Author: mdemello <mdemello@google.com>
Date:   Tue Sep 6 17:19:29 2022 -0700

    Store pytype flag definitions as objects.
    
    This will make it easier to reuse individual flags in other tools.
    
    PiperOrigin-RevId: 472594407

[33mcommit 953a9524e92628c7e89904373ba8b8a47d30b525[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 6 12:39:38 2022 -0700

    Return more information from matcher.bad_matches.
    
    Returns the view associated with each successful match as well as the overall
    success/fail status of the match. Also renames the method to compute_matches,
    since it does much more than find bad matches now.
    
    Putting this information in the return value of compute_matches lets us get rid
    of abstract.function.match_succeeded as well as easily grab the right bindings
    for sources in PyTDFunction.call_with_args.
    
    The subst(s)_or_match(es) nonsense can be cleaned up once the old matching
    implementation is gone.
    
    PiperOrigin-RevId: 472530586

[33mcommit 961ab67f7aa3a6563f7e52593b980049c33ae48b[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 2 12:57:05 2022 -0700

    Finish removing --build-dict-literals-from-kwargs.
    
    PiperOrigin-RevId: 471865853

[33mcommit 9db4d867fabadef1f7c949b0484d909b7bba1fca[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 1 17:52:03 2022 -0700

    Add a context manager to ParserWrapper to only add certain args.
    
    Useful because config.py defines args in groups, and a tool might want to add a
    single arg without adding the rest of the args in its group. (Currently the
    only way to do this was to copy the arg definition from config.py into the
    tool's arg parser.
    
    PiperOrigin-RevId: 471678940

[33mcommit 7ef316e567bcfc5d9466d671cde5d45ac14657f3[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 1 16:38:34 2022 -0700

    Fix imports_map config dependencies.
    
    PiperOrigin-RevId: 471665809

[33mcommit b778f64c719e3d7b27e21a50faa447ad17b6ca66[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 1 15:41:47 2022 -0700

    Default --build-dict-literals-from-kwargs to True.
    
    PiperOrigin-RevId: 471653994

[33mcommit 8fd8a9ebef73ad1205ce55ed717d926489baaae2[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 31 17:16:58 2022 -0700

    Consistently use TypeParameter.full_name in matcher.py.
    
    matcher.py mostly uses the full names of type parameters when populating subst,
    but there was one place where we were using the short name (without the module
    prefix).
    
    PiperOrigin-RevId: 471394919

[33mcommit dce63272a743481cffad053df716b9691d6c7cbe[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 31 15:53:26 2022 -0700

    Parse Literal values containing quotes better.
    
    PiperOrigin-RevId: 471377090

[33mcommit f5700fbcaefca898a13c4f7657967217b34105d5[m[33m ([m[1;33mtag: 2022.08.30[m[33m)[m
Merge: ea1bc673 f684c6b4
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 30 16:19:02 2022 -0700

    Merge pull request #1282 from google/google_sync
    
    Google sync

[33mcommit f684c6b4e2de7a834c5821276ed29df80a986c8b[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 30 15:26:49 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 471104996

[33mcommit c66d414dc097d73ac1212069fce7bc40843e102f[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 30 12:12:17 2022 -0700

    Fix open-source tests.
    
    I will be very happy when we can drop Python 3.7.
    
    * Support typed_ast (Python 3.7) in new TypedDict pyi conversion.
    * Don't try to access posonlyargs in Python 3.7.
    
    PiperOrigin-RevId: 471056955

[33mcommit 9e13eeafebb9bad56c6912f7e58bb05d2744a654[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 30 11:53:15 2022 -0700

    Fully delete strict_namedtuple_checks, now enabled by default.
    
    PiperOrigin-RevId: 471052225

[33mcommit 49b6cc0f41f63b3e3ae00a15856094bab4b2020a[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 30 11:52:13 2022 -0700

    Add missing constants to _ctypes.
    
    Fixes https://github.com/google/pytype/issues/1281.
    
    PiperOrigin-RevId: 471051954

[33mcommit 9b69459e4ffac362b11231f65a8b5cc6d22fb531[m
Author: sinopalnikov <sinopalnikov@google.com>
Date:   Mon Aug 29 01:48:17 2022 -0700

    Internal change
    
    PiperOrigin-RevId: 470660867

[33mcommit ea1bc6734716e30afc4dabff20c059d3807f9965[m
Merge: 806870b7 a81c1095
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 29 19:28:04 2022 -0700

    Merge pull request #1280 from google/google_sync
    
    Google sync

[33mcommit a81c1095beb30b225eae223084f7732977109c42[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 29 18:08:09 2022 -0700

    Don't try to access posonlyargs in Python 3.7.

[33mcommit 85348011f0d41a62540d5ad53e0177c6698872cc[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 29 17:47:00 2022 -0700

    Support typed_ast (Python 3.7) in new TypedDict pyi conversion.

[33mcommit 90c01987d0de7093b85283545203191a95c27986[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 26 16:06:14 2022 -0700

    Use TypedDict functional form if a keyword is used as a field name.
    
    Resolves https://github.com/google/pytype/issues/1222.
    
    PiperOrigin-RevId: 470353956

[33mcommit 80e944b33b1520b2fd602b9b6de35ad8b03dd39d[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 26 16:00:40 2022 -0700

    Support TypedDict construction via function call in pyi files.
    
    This is needed for https://github.com/google/pytype/issues/1222.
    
    PiperOrigin-RevId: 470352841

[33mcommit 966bb0e065bfad96f1ff0562b6e66cd1604714b5[m
Author: mdemello <mdemello@google.com>
Date:   Fri Aug 26 15:08:30 2022 -0700

    Check for misuse of ellipses in Callable
    
    Specifically, `Callable[[...], ret]` should be `Callable[..., ret]`, so the
    error message offers that as a suggestion if `...` appears in the arg list.
    
    PiperOrigin-RevId: 470342812

[33mcommit 4a3f892b2c660a63cd140bbe9e9f80ba3572f6d2[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 25 14:24:50 2022 -0700

    Index class attributes defined as classvars.
    
    e.g. in
    ```
    class A:
      x: int
    ```
    
    the `x` will be indexed as an instance variable, and `self.x` or `A().x` will link to it.
    
    PiperOrigin-RevId: 470082880

[33mcommit be774f976bacfa9dd09156bcc4cec93a45ce7cc5[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 25 13:06:58 2022 -0700

    Fix a check that was wrongly filtering out lambdas in function bodies.
    
    PiperOrigin-RevId: 470064353

[33mcommit 4ab5a92407cf4b0047febcc0bf84b8b72c740819[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 25 11:34:35 2022 -0700

    Fix function param indexing.
    
    PiperOrigin-RevId: 470041275

[33mcommit 806870b7fe74dec9ed4b933417dd1c2c5e779d62[m
Merge: 2a2883c2 fd694d39
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 26 14:00:36 2022 -0700

    Merge pull request #1279 from google/ts
    
    Update typeshed to 7de1ed95895a05f10a84714d2a1013edacda11e7.

[33mcommit fd694d3937951d86d07ca60d1bab1c8299070659[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 26 13:19:53 2022 -0700

    Disable unsupported-binary-operation.

[33mcommit 7593987d1f71b8f22528d819e3dc0f13b0bf4940[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 26 12:26:36 2022 -0700

    Update typeshed to 7de1ed95895a05f10a84714d2a1013edacda11e7.

[33mcommit 2a2883c2469ee1f8f85567c32d24319c0c659e9b[m
Merge: 77d4db79 1c5de364
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 24 17:13:56 2022 -0700

    Merge pull request #1278 from google/google_sync
    
    Google sync

[33mcommit 1c5de36451b5e3cafc84c629f32963be6c311d20[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 24 16:30:38 2022 -0700

    Revert accidental revert.

[33mcommit a6ad158c7e2bc2bc02f3059d279c6e33e503f800[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 23 15:56:40 2022 -0700

    Make some filesystem accesses less visible.
    
    - Move file_utils.Tempdir to tests/test_utils
    - Make pytype_source_dir() private
    
    Ultimately these are still useful for tests and tools but should not be
    accessed in the main pytype code.
    
    PiperOrigin-RevId: 469577812

[33mcommit 4601984e244f9ba798b1f5520b6bf5751bf2f2f9[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Thu Apr 14 14:16:18 2022 -0700

    Fix comment typo that apparently went unnoticed for a year
    
    Whoops.
    
    PiperOrigin-RevId: 441852666

[33mcommit 851ef2a8f92e0467b3ad4c636cfb7e2ca4237bbd[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 19 13:06:06 2021 -0800

    Rename pytype "master" branch to "main".
    
    I already did the branch rename on GitHub; this updates copybara, docs, etc.
    
    PiperOrigin-RevId: 411126488

[33mcommit a3c0cc3e1d2547de19ceb8def67841435d6a82eb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 24 16:07:53 2022 -0700

    Skip a Python 3.8+ test in 3.7.

[33mcommit ac591b3e174588ac45b1638d50eb70d7408431ad[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 24 15:42:14 2022 -0700

    Remove extra trailing newline.

[33mcommit 2e2b60bd80fd4fad66047579476448b36e488c4c[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 24 15:34:49 2022 -0700

    Internal change
    
    PiperOrigin-RevId: 469840522

[33mcommit a57577d9ae65af17523e22e6623f0b50efaed143[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 24 15:25:50 2022 -0700

    Teach pytype that _typeshed.NoneType is the same as type(None).
    
    PiperOrigin-RevId: 469838477

[33mcommit 4233b42a1a40a813b636205e5c1a119b7b0ef1ab[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 24 11:25:23 2022 -0700

    Isolate filesystem access for bytecode compiling and errors
    
    - Move bytecode compilation to pyc/compilers.py
    - Move python executable related utilities to pyc/compilers.py
    - Have csv error reporting take a file handle rather than a filename
    
    PiperOrigin-RevId: 469779656

[33mcommit b5def4471b96c14936d343331a81612ecd52765a[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 23 16:50:51 2022 -0700

    Specify option conflicts and required dependencies in @uses
    
    ```
    @uses([-opt1, +opt2, opt3])
    _store_opt(opt_value):
    ```
    
    to indicate that if opt_value is set, `opt1` cannot be set and `opt2` needs to be set.
    
    PiperOrigin-RevId: 469589845

[33mcommit 54f0cd8c7ac29c1e6ec5beaa18992a285aeda459[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 23 15:56:40 2022 -0700

    Make some filesystem accesses less visible.
    
    - Move file_utils.Tempdir to tests/test_utils
    - Make pytype_source_dir() private
    
    Ultimately these are still useful for tests and tools but should not be
    accessed in the main pytype code.
    
    PiperOrigin-RevId: 469577812

[33mcommit f81983c2dd710b62b20e469b172c5a01ba7fecdf[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 23 15:46:29 2022 -0700

    Allow [signature-mismatch] disable to be put on any line of a function signature.
    
    PiperOrigin-RevId: 469575527

[33mcommit 77d4db79fa5f34ce271841c3a50b6a0b847adef5[m[33m ([m[1;33mtag: 2022.08.23[m[33m)[m
Merge: 56095384 44339da6
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 23 15:01:07 2022 -0700

    Merge pull request #1277 from google/google_sync
    
    Google sync

[33mcommit 44339da6ab9acd39e06949c12b2f330dc029daf9[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 23 14:12:32 2022 -0700

    Prepare a PyPI release.
    
    * Update __version__ and CHANGELOG.
    * Fix an opensource lint error: "Redefining argument with the local name 'path'
      (redefined-argument-from-local)".
    
    PiperOrigin-RevId: 469553476

[33mcommit cd83479f4c6f9ea8c53b36400deb09a1a5255ae9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 23 12:36:26 2022 -0700

    Rename a local variable that shadowed a function parameter.

[33mcommit bf706c662c244b47e3486ec492b876b7680ce8f4[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 23 12:16:42 2022 -0700

    Improve name resolution for typeshed.
    
    Makes a couple improvements to unblock a typeshed update:
    * Supports yet another kind of circular import.
    * Looks up aliases when filling in class pointers.
    
    PiperOrigin-RevId: 469523555

[33mcommit 2bf9f4e82235769f524210c2b553339621a36573[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 22 18:37:56 2022 -0700

    Handle multiple substitutions better in PyTDSignature.call_with_args.
    
    PiperOrigin-RevId: 469337895

[33mcommit 6ba9999ee561f50a26dbd6d6549f8a3050865d1b[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 22 12:19:39 2022 -0700

    Separate out reading and building the imports map.
    
    Adds a library-only option, imports_map_items, that lets the imports map be
    specified as a list of tuples rather than a path to a file.
    
    PiperOrigin-RevId: 469253179

[33mcommit c7dc2b9ddca86b7d4bce1b022a29befc3444cc2d[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 19 16:58:37 2022 -0700

    Change the order of the Protocol and Generic bases when expanding Protocol[_T].
    
    We were originally following the order shown in the Protocol PEP, but it turns
    out that typeshed usually puts Protocol last in base class lists. I discovered
    this when I tried to update typeshed and encountered MRO errors in protocols
    that inherit from generic protocols.
    
    PiperOrigin-RevId: 468812905

[33mcommit e9eb87a4b4a01081235c81b07b235b6f55ab0339[m
Author: mdemello <mdemello@google.com>
Date:   Fri Aug 19 15:25:41 2022 -0700

    Define a standard base class for builtins loaders.
    
    Also make some param names more consistent.
    
    PiperOrigin-RevId: 468796883

[33mcommit 90601319f1ef00ecc2fdb27ba5bd09a93b7deb53[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 18 18:31:52 2022 -0700

    Refactor the typeshed and builtins loaders to follow the same structure.
    
    PiperOrigin-RevId: 468595787

[33mcommit 8977dac80e0aac983327cc8352d905d5b44bee2b[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 18 16:01:02 2022 -0700

    Allow bare variable annotations at the module level.
    
    I noticed that pytype wasn't able to handle some of the code snippets in the
    typing docs that declare variables like this. I'm rather surprised that no
    one's noticed this yet!
    
    PiperOrigin-RevId: 468569419

[33mcommit 0d93b8deb124296f180edfcc2bc4087343cc972f[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 18 12:15:34 2022 -0700

    Add missing attrs.validators.min_len.
    
    PiperOrigin-RevId: 468518142

[33mcommit 5609538482a90339bad78d44098a46bb723b586b[m[33m ([m[1;33mtag: 2022.08.17[m[33m)[m
Merge: 9fe40714 e3f0a723
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 17 18:40:47 2022 -0700

    Merge pull request #1275 from google/google_sync
    
    Google sync

[33mcommit e3f0a72324e0a204e3b2a7b7d73392dde0633dea[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 17 22:58:24 2022 +0000

    Don't use node.end_lineno in Python 3.7.

[33mcommit f0f53e4709a42ac09f527d6b93c41e3b1c270603[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 17 22:23:49 2022 +0000

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 468307101

[33mcommit fa5d40194058b026d23ef3969a0b731b3d4d10b1[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 17 21:36:28 2022 +0000

    Link the entire span of a function call.
    
    PiperOrigin-RevId: 468295993

[33mcommit 9fe40714b31dac21ca79df37ccb7a6d552fc54ad[m
Merge: 7758b98b 6611390a
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 16 18:31:02 2022 -0700

    Merge pull request #1273 from google/google_sync
    
    Google sync

[33mcommit 6611390a946f57f9405645d873107f647025a94d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 17 00:53:32 2022 +0000

    Import TypedDict from typing_extensions.

[33mcommit 81a849a9727320d41d6855490f52688d569961e9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 16 23:37:22 2022 +0000

    Add expected not-callable errors to pre-3.8 tests.

[33mcommit 46ba1be7a78fa54b3d51c49a12e227737266afce[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 16 23:17:13 2022 +0000

    Fix expected error message in parser_test.

[33mcommit 82b3fb22d06150b94da65e58ddaf8bcbc381f54c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 16 23:08:42 2022 +0000

    Handle DEFAULT_PYI_PATH_SUFFIX = None.

[33mcommit d53a78efb699973189eb8111b35372ceec32bf2c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 16 23:07:20 2022 +0000

    Add explicit dependency on typing-extensions.

[33mcommit a76d21764ab05a9eb3f3672abf72284056c6cc21[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 16 22:58:08 2022 +0000

    Silence lint warnings.

[33mcommit f8313e51bc0b59e7db49269af6959036178f0b55[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 16 22:31:03 2022 +0000

    Extend function.get_signatures to handle Unknown and Empty.
    
    I also removed an isinstance() check that didn't appear to be strictly
    necessary, so it wouldn't need to be kept in sync with the corresponding one in
    get_signatures.
    
    PiperOrigin-RevId: 468040246

[33mcommit 46b04a8835f1a968fd030393e0d33b2bb527a52d[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 16 21:58:06 2022 +0000

    Fix nested class inference for TypedDict and ParameterizedClass.
    
    Fixes https://github.com/google/pytype/issues/1270.
    
    PiperOrigin-RevId: 468032935

[33mcommit d459992f467d43a8bf26e1401d48a5c922a43a9f[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 16 20:26:16 2022 +0000

    Move pickle file related functions out of pytd/
    
    - Move `PICKLE_EXT` and `is_pickle()` to `file_utils`
    - Move pickle loading and saving to `imports/pickle_utils`
    - Keep pickle diffing in `pytd/`, since that's mostly dealing with in-memory
      pickled ASTs, not file I/O
    
    PiperOrigin-RevId: 468008902

[33mcommit 3fab17b366fc79fadef4a4658cc87c675d1318eb[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 16 00:33:37 2022 +0000

    Treat `Any` as a callable when matching function signatures and decorators.
    
    PiperOrigin-RevId: 467801630

[33mcommit 23faae4f9e8bfe30331214420fc14a6b697c5ffb[m
Author: tsudol <tsudol@google.com>
Date:   Mon Aug 15 19:46:00 2022 +0000

    Add StopIteration.value and turn type comments into annotations.
    
    PiperOrigin-RevId: 467737761

[33mcommit c3360a30b09ab1bf4a2fff537107522d19d0eb14[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 15 19:38:38 2022 +0000

    Check that @classmethod and @staticmethod are applied to callable functions.
    
    Fixes a crash when stacking @classmethod over an invalid decorator.
    
    PiperOrigin-RevId: 467736016

[33mcommit acaabc08a7734021893760037defbb0f3bccec5b[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 11 22:16:37 2022 +0000

    Move predefined stub file loading into imports/builtin_stubs
    
    PiperOrigin-RevId: 467061408

[33mcommit 83aad9c6904231a4fe7b17ffe90e26bfcdd669ce[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 10 22:31:53 2022 +0000

    Move typeshed and builtins loaders from pytd/ to imports/
    
    PiperOrigin-RevId: 466800908

[33mcommit 9f5cadb85e58ac11f024f4c6517b1eab37d0084f[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 10 19:57:26 2022 +0000

    Start splitting out filesystem access for module loading into its own module.
    
    * Creates a new `imports/` subdirectory
    * Defines an interface for loading module ASTs
    * Moves code dealing with finding and loading pyi and pickle files from
      `load_pytd` to `imports.module_loader`
    
    PiperOrigin-RevId: 466765361

[33mcommit b50453e9de5c2667e2ad877922c11fe1d405bef3[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 8 18:57:58 2022 +0000

    strip trailing newline from multiline docstrings
    
    PiperOrigin-RevId: 466107725

[33mcommit 4ca0475c24972a01fdf97582719877eee5f4c835[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 8 18:21:30 2022 +0000

    Improve pytype's type annotations.
    
    * Replace some assert isinstance(...) statements with type annotations.
    
      In most cases, type annotations on function parameters are more readable and
      catch errors earlier than runtime assertions on the types in the function
      body. I looked through all of our `assert isinstance(...)` statements and
      replaced most of them with type annotations. I left in asserts in places
      where it seems particularly important to do runtime type verification, or
      we're asserting type information that can't be expressed via annotations.
    
    * Standardize the names of pure type aliases: I added a "Type" suffix to the
      names of all aliases that should be used only in annotations. For example,
      `X = dict` was left alone, since `dict` is a class that can also be used at
      runtime, but `X = Dict[K, V]` was changed to `XType = Dict[K, V]`.
    
    * Do a bit of general cleanup: remove an unused alias, finish annotating some
      partially annotated functions, resolve lint warnings.
    
    PiperOrigin-RevId: 466096958

[33mcommit c0e8e50891bc8b096ceaaa27c96fc89f8b6b27ed[m
Author: mdemello <mdemello@google.com>
Date:   Fri Aug 5 22:54:42 2022 +0000

    Dedent multiline docstrings during indexing.
    
    PiperOrigin-RevId: 465665649

[33mcommit e87222e12a8b08450b92c39b5202a48527979836[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 4 20:13:59 2022 +0000

    Use argument-by-argument call matching for some simple generic functions.
    
    Switches from view-based to argument-by-argument call matching for some simple
    generic functions whose substitution values come from a single parameter (e.g.,
    `def f(x: T) -> T: ...`). In these simple cases, we can just grab the single
    non-empty substitution dictionary and don't have to worry about merging
    multiple ones.
    
    PiperOrigin-RevId: 465387323

[33mcommit 7758b98b5427caa24ba8e0647c0b02b8388aee99[m
Merge: 28b890f9 bb9b6fd8
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 4 15:12:59 2022 -0700

    Merge pull request #1269 from google/google_sync
    
    Google sync

[33mcommit bb9b6fd88297277c4e7cf8b5d544a723d31f2fe4[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 4 12:53:24 2022 -0700

    analyze_project: fix parsing of `jobs=auto` from config files.
    
    Fixes https://github.com/google/pytype/issues/1267.
    
    PiperOrigin-RevId: 465382283

[33mcommit 77b5c8681421a46ceb3e1d2be68960a58d095507[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 4 09:08:29 2022 -0700

    Cleanup: remove PyTDFunction.generate_ast().
    
    The one use of this method can be replaced with to_pytd_def().
    
    PiperOrigin-RevId: 465328422

[33mcommit c31d80b7801b222763810267b7ec6a7cfa495f86[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 3 20:01:16 2022 -0700

    Add a matcher.BadMatch data structure.
    
    This allows us to store some information in the return value of bad_matches
    that we previously had to pass around separately. I renamed the BadParam class
    to BadType, since I reused it in BadMatch and it doesn't make much sense to
    have a reference to a "Param" there. The only user-visible effect of this
    change is slightly improved error messages, due to bad_matches now being able
    to return a postprocessed version of the expected type.
    
    PiperOrigin-RevId: 465211620

[33mcommit 4e9337dda3affeb72a684306ce1aad59feda9006[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 3 18:46:58 2022 -0700

    Add more logging to tracer_vm.py and fix a couple of issues this reveals.
    
    I was trying to track down a performance issue that occurred at some point
    during the inference step, and it took me forever to pin down because of how
    sparse the logging was. This change adds log statements to important substeps
    of tracer_vm.compute_types(). It also removes a bit of dead code and fixes a
    bug in pytd_classes_for_call_traces, both of which I noticed because they were
    causing log statements to never be hit.
    
    PiperOrigin-RevId: 465200574

[33mcommit cab69f4a1a1c60551eb9b4fe7fb768dbd4a886d7[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 3 13:51:11 2022 -0700

    Add childof edges for nested definitions.
    
    PiperOrigin-RevId: 465139840

[33mcommit 28b890f9465dfca4be7f30142f0fb3fb273c30a2[m[33m ([m[1;33mtag: 2022.08.03[m[33m)[m
Merge: 908c9dff 7f1f835d
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 3 13:28:40 2022 -0700

    Merge pull request #1268 from google/google_sync
    
    Google sync

[33mcommit 7f1f835df46580eb76404ba9ff5354822b8bf93e[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 3 13:27:03 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 465133634

[33mcommit 15542b1cadfe181c3c849d9fe1569b9b2cb97c1c[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 2 18:12:45 2022 -0700

    Fully resolve pytd aliases in LookupExternalType's duplicate aliases check.
    
    This fixes a pytype test failure in
    https://github.com/python/typeshed/pull/8469.
    
    PiperOrigin-RevId: 464935418

[33mcommit c59cdb01e00a8276732884b9bb30af86f6b4948b[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 1 16:22:52 2022 -0700

    Remove the deprecated `<anchor> childof <file>` kythe edges
    
    PiperOrigin-RevId: 464649849

[33mcommit 5238f52789578969fb9fe806f7d405462c2b5f63[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jul 28 17:12:36 2022 -0700

    Don't allow partial late annotations in | union types.
    
    Python 3.10 raises an error for expressions like
      x : `int` | str = 10
    
    so we should treat them as invalid annotations rather than late annotations.
    
    PiperOrigin-RevId: 463961430

[33mcommit 908c9dff94e4b12862a91f364cc0668d257c7c48[m
Merge: a806cb93 be17fe6f
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 28 16:23:04 2022 -0700

    Merge pull request #1266 from google/google_sync
    
    Google sync

[33mcommit be17fe6f3c6db4b7aabfd025d861c0f4c7b1a012[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 28 15:43:50 2022 -0700

    Support aliases of module name prefixes in load_pytd.
    
    Fixes https://github.com/google/pytype/issues/1229.
    
    PiperOrigin-RevId: 463944425

[33mcommit 2f053aef8beedfc2baa56af0b7177257b4400d81[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 28 14:11:03 2022 -0700

    Check in some of our upcoming version testing code.
    
    I cleaned up some of the code I used for 3.9->3.10 testing so we can reuse it
    to test future upgrades.
    
    PiperOrigin-RevId: 463922128

[33mcommit a806cb93fe4bdc2dba73d3f9e22a3ed28ef210b7[m[33m ([m[1;33mtag: 2022.07.26[m[33m)[m
Merge: 08d5f1ba 43b072f6
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 26 15:03:48 2022 -0700

    Merge pull request #1265 from google/google_sync
    
    Google sync

[33mcommit 43b072f66b32ac4fda9bfa598f8c55b0ccafb9a8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 26 14:21:30 2022 -0700

    Remove a usage of functools.cache (new in Python 3.9) in a test.

[33mcommit 7da144036e72ca4b638af01eb52683087237b2fb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 26 14:02:29 2022 -0700

    Silence unnecessary-dunder-call.

[33mcommit 08d5f1ba42695eb0a122ad813bffa561743042ba[m
Merge: 21b741e0 c5dd08bb
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 26 13:58:18 2022 -0700

    Merge pull request #1264 from google/ci
    
    Combine now-identical workflow steps.

[33mcommit 41cd08e55cae07958b2aba94e9f729353e2e0584[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 26 13:49:57 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 463419126

[33mcommit 9233c6ff721dbf8f5313e82a9adb7967543ba280[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 25 18:13:44 2022 -0700

    Sort classes by name in convert.merge_classes.
    
    This actually resolves the performance issue introduced by the generic
    properties change, albeit in a somewhat roundabout way. I had observed that
    pytype took either 8s or 30s to analyze a particular file, and after the
    generic properties change, the analysis time jumped to 13s or minutes. I
    tracked down the difference in analysis time to merge_classes creating
    abstract.Union instances with inconsistently ordered options, which eventually
    leads to abstract_utils.get_views() generating more views than needed due to
    not being able to deduplicate these unions. (Unions probably shouldn't actually
    be ordered, but dealing with that is a much bigger task.) With the classes
    ordered, the problematic file consistently takes 13s to analyze, which on
    average is a bit faster than before.
    
    PiperOrigin-RevId: 463222024

[33mcommit 3eb24e4abfcc9273b2ab870b38b570d631a7d6d2[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jul 25 16:56:19 2022 -0700

    FIX: Calculate starts of decorated functions correctly.
    
    PiperOrigin-RevId: 463209656

[33mcommit c8d510ccc822a966c674494ba59e1d65f2fb90ff[m
Author: rechen <rechen@google.com>
Date:   Sun Jul 24 23:47:14 2022 -0700

    Rollback of changelist 462730859.
    
    *** Reason for rollback ***
    
    Incorrect fix, causes breakages
    
    *** Original change description ***
    
    Add an 'always_store' parameter to load_lazy_attribute.
    
    This fixes a performance regression caused by too many attributes being
    reloaded when they could be cached.
    
    ***
    
    PiperOrigin-RevId: 463013517

[33mcommit 81794a11c8088288db939832e015505c2b95d895[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 22 16:46:30 2022 -0700

    Add an 'always_store' parameter to load_lazy_attribute.
    
    This fixes a performance regression caused by too many attributes being
    reloaded when they could be cached.
    
    PiperOrigin-RevId: 462730859

[33mcommit 88395760fa2f5769542b2880623e67f292d4ad93[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 21 17:51:58 2022 -0700

    Don't crash on a nested function referenced in a closure before definition.
    
    PiperOrigin-RevId: 462508840

[33mcommit e898130ef8a1fd66d978451d6f677f5bbca9bc00[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 21 17:19:02 2022 -0700

    Cleanup: move closure tests from test_functions to test_closures.
    
    PiperOrigin-RevId: 462504026

[33mcommit c0584437d821a3337eed084c54c52cee172accf1[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 21 15:18:38 2022 -0700

    Don't assume Any | Any is a type annotation.
    
    An '|' operation in which both sides are Any might be a type annotation or
    (more likely) a regular __or__ operation whose arguments we don't have any type
    information on.
    
    I also moved the UnionOr tests from test_typing to test_unions.
    
    PiperOrigin-RevId: 462481868

[33mcommit d7a0189664db776e2f9e0e6b7f6f09033cb277b2[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 21 13:03:37 2022 -0700

    Support generic properties.
    
    Adds support for properties in generic classes whose return type involves class
    type parameters and fixes several bugs that this exposes.
    
    * Reuses BoundFunction's get_generic_type+replace_self_annot logic for
      properties.
    * Changes load_lazy_attribute to not store the attribute in members if it was
      computed using a substitution dictionary (since the substitution can change
      between load calls) and instead return the attribute.
    * When computing the substitution dictionary in attribute.py, preserves
      aliasing information and sets unset type parameters to Any.
    * Unwraps pytd.Annotated nodes when converting a node as an instance.
    * Preserves generic properties in pyi by adding an allowed_type_params argument
      to output._function_to_return_types.
    * Adds a missing 'valself' arg to a get_attribute call in vm.py.
    
    PiperOrigin-RevId: 462452438

[33mcommit 1a49ddbfe3736ae977b71bedbb3c7d9db351aa6b[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 20 16:12:46 2022 -0700

    Wrap up the enable-bare-annotations and dynamic-method-lookup releases.
    
    * Remove the --enable-bare-annotations flag now that it's a no-op.
    * Set the dynamic-method-lookup landing date to Monday, when we released the
      pytype version that contains this feature.
    
    PiperOrigin-RevId: 462252873

[33mcommit c5dd08bb977d16f4047ad4d1fccee19e0a38fd30[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 21 12:07:53 2022 -0700

    Combine now-identical workflow steps.

[33mcommit 21b741e072bc8bf7c81adb01303b156307def556[m
Merge: a322ce7c 00eb4cf9
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 20 16:33:52 2022 -0700

    Merge pull request #1262 from google/google_sync
    
    Fix a few very minor style issues.

[33mcommit 00eb4cf99e8788efb6308a28974f5c33de814394[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 20 15:52:34 2022 -0700

    Try moving continue-on-error to the step level.
    
    GitHub actions does a very poor job of reflecting continue-on-error in
    the UI
    (https://github.com/github-community/community/discussions/15452), but
    moving it to the step level at least prevents misleading red x's.

[33mcommit 25c6ad8b5deaf713957fca61065a1ecd3f98306d[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 19 15:23:32 2022 -0700

    Fix a few very minor style issues.
    
    * Reorganize abstract_utils.py so that public classes and the special
      _isinstance and _make methods are at the top of the file.
    * Use abstract.Class, not class_mixin.Class, to refer to Class in context.py.
    * Make parser.BlockReturns private.
    * Fix another 3.11 lint warning (missing super call) in vm_utils.py.
    
    PiperOrigin-RevId: 461989284

[33mcommit a322ce7c1822285bdd3a9ea6a5e83a574203d2e3[m
Merge: e06eb0ce 2b16acdf
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Jul 19 15:16:54 2022 -0700

    Merge branch 'wayhowang-windows-support'
    
    NOTE: Due to some complicated merge issues the PR commit history got messed up;
    here is the original commit message, with changes distributed over several
    commits in the log:
    
    I tried to add windows support for pytype. It seems to work now. The package installed with `pip install -e .` works fine now. At least my needs has been satisfied.
    
    * Replace delegate initializers with ordinary ones.
    * Update pybind11 to v2.9.0. Previous version of pybind11 causes compiler errors on msvc ( https://github.com/pybind/pybind11/issues/3477).
    * Add `tools/path_tools.py`. It provides functions with the same signatures as thoes defined in `os.path` and `glob`, but they replace the `\` in return value with `/` if pytype is running on Windows.
    * Add `tools/tempfile.py`. Files created by NamedTemporaryFile cannot be opened twice in the same process on Windows if by default. `tools/tempfile.py` provides an alternative `NamedTemporaryFile ` implementation for Windows. See https://stackoverflow.com/questions/23212435/permission-denied-to-write-to-my-temporary-file for details.
    * Edit several `CMakeLists.txt`s
    
    I ran `pip install -e . && python build_scripts/run_tests.py` to test it. It passed every test cases before following text showed in the command line. It seems there are some problems with the build system. (But building with `pip install -e .` works fine.)
    ```
    >>> Found Ninja target failures (includes test failures):
        - pytype/typegraph/cfg.so pytype/typegraph/cfg.lib
    >>> FAILED: Ninja command 'ninja -k 100000 test_all'.
    >>>         Run it in the 'out' directory to reproduce.
    >>>         Full Ninja output is available in 'C:\Users\wweih\Documents\pytype-modified\pytype\out\ninja.log'.
    >>>         Failing test modules (if any) will be reported below.
    ```
    ninja.log
    
    * I am not expertize in building systems. Are there any advice about the above issue?
    * Which tool should I use in order to format the source code?
    * `/` and `\` are both valid seperators on Windows. It caused a lot of problems for pytype. I tried to solve this by replacing all `\`  with `/` on windows. Is this an acceptable solution?
    * Is there any automated test pipline to test my commits on Linux and macOS? Or should I setup an Linux system to test it on myself?
    
    Addresses #1154

[33mcommit 2b16acdf220aee08488dee48f5dffde59e8d9ecb[m
Merge: e06eb0ce 6dbe11aa
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Jul 19 15:02:26 2022 -0700

    Merge branch 'windows-support' of https://github.com/wayhowang/pytype into wayhowang-windows-support

[33mcommit e06eb0ce31af1284797a7a4a245cd8b5ea5eb621[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 19 12:36:40 2022 -0700

    Remove some incorrect asserts in load_pytd.py.
    
    PiperOrigin-RevId: 461947693

[33mcommit b1380e35274db4b7031e8ec39e1c507275073c21[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 18 21:09:19 2022 -0700

    Copy changes from parser.py to parser_libcst.py.
    
    We don't actually need the return line adjustment logic in 3.8-, but the two
    files do need to have roughly the same structure for the opensource tests to
    pass.
    
    PiperOrigin-RevId: 461789851

[33mcommit 1321099bc1346e4241268088683f3104066aef8b[m
Author: wayhowang <108025183+wayhowang@users.noreply.github.com>
Date:   Mon Jul 18 20:38:39 2022 -0700

    Windows support (#1242)
    
    Resolves #1242
    
    PiperOrigin-RevId: 461785239

[33mcommit 673607b657e1bfda34bec263e8eef453746dfcd8[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 18 13:49:56 2022 -0700

    Default --enable-bare-annotations to True.
    
    PiperOrigin-RevId: 461704778

[33mcommit 9703f778ff57c68c44b4b5b070273c1c365a9562[m[33m ([m[1;33mtag: 2022.07.18[m[33m)[m
Merge: 9d456210 5b045e8b
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 18 17:39:30 2022 -0700

    Merge pull request #1257 from google/google_sync
    
    Google sync

[33mcommit 5b045e8b3b88183d4eed178f545d771998c7a0b6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 18 16:32:19 2022 -0700

    Copy changes from parser.py to parser_libcst.py.

[33mcommit b2fdcd25b4edb25cd2f12ea6bfcf65822f146047[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 18 13:46:50 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 461704026

[33mcommit 1dcac948d5bc7f7668e948d2d44b98a9cf851acc[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 15 15:54:25 2022 -0700

    Respect NoReturn annotations even when maximum depth is reached.
    
    This lets us fix some errors in 3.10 caused by pytype not descending into
    functions that always raise exceptions, by adding NoReturn annotations.
    
    Really we should use all return annotations, not just NoReturn, but this is a
    minimal change to unblock us for 3.10.
    
    PiperOrigin-RevId: 461257304

[33mcommit b61ca53d6467aa89ccb2b44e521342f49aa22cec[m
Author: sinopalnikov <sinopalnikov@google.com>
Date:   Fri Jul 15 05:29:00 2022 -0700

    Handle generic types correctly in signature compatibility checks.
    
    IF THIS CL BROKE YOU:
    This change has gone through several TGPs, but given how many files it affects,
    it is highly likely a new breakage will appear in the lag between the final TGP
    and submission. If the breakage you are seeing follows the following pattern,
    please consider fixing forward before asking for a rollback.
    
    Known breakage pattern:
    
    File "<f>", line <d>, in <class>: Overriding method signature mismatch [signature-mismatch]
      Base signature: '<overridden method signature>'.
      Subclass signature: '<overriding method signature>'.
      Type mismatch for parameter '<parameter name>'.
    
    Fix:
      Add `# pytype: disable=signature-mismatch` to the end of line <d> in file <f>.
    If you have a [] id for the breakage, the []_patch tool can automatically add the directives for you:
    []
    
    In case of emergency, you can pass `--define=PYTYPE=FALSE` to build a target
    broken by pytype.
    
    PiperOrigin-RevId: 461180641

[33mcommit 6b2c03db09bf00d4c8f611ccfb3535fccf6a1387[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 14 10:40:54 2022 -0700

    Fix coroutine signatures in overriding_checks.
    
    PiperOrigin-RevId: 460998756

[33mcommit a19c3095dc92667ecfece3ff0196af9b3ae84173[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jul 13 17:09:03 2022 -0700

    Internal change
    
    PiperOrigin-RevId: 460837601

[33mcommit 2adf76d61fa5450b3eacb5ced0401096d3d65dc7[m
Author: tsudol <tsudol@google.com>
Date:   Wed Jul 13 13:14:41 2022 -0700

    Remove optimize.Factorize, which unnecessarily flattens overloaded functions.
    
    This optimization seems to be a holdover from when pytype inferred function
    argument types from function calls, which would generate multiple function
    signatures that needed to be flattened into a single signature. However,
    functions decorated with `typing.overload` are indistinguishable from these
    generated signatures, leading to overloaded functions being flattened. Since
    pytype no longer uses function call inference, Factorize is not needed.
    
    PiperOrigin-RevId: 460788149

[33mcommit 65fb497c550dccab8b932269035fdbf3fc50cfe2[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jul 12 23:53:41 2022 -0700

    Adjust opcode line numbers for return statements in python 3.10+
    
    Python 3.10 changed the way line numbers are assigned to `return` statements
    within `with` blocks, to attach to the `with` statement. This follows the
    actual control flow in the python interpreter, but makes it hard to report
    errors attached to the right line in the source code.
    
    We examine the AST and use the line number information from the parser to
    adjust the `RETURN_VALUE` opcodes to have the same line numbers as the source
    `return` statements that generated them. `RETURN_VALUE` opcodes corresponding
    to implicit `return None` continue to be moved to the last line of the
    function.
    
    PiperOrigin-RevId: 460639960

[33mcommit ebf1d16d3cb150a872e847d0416d67df3ab06145[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 12 17:58:58 2022 -0700

    Teach pytype that builtins.code and types.CodeType are the same.
    
    PiperOrigin-RevId: 460593975

[33mcommit 658b1c0c20c9f626a7465f2136e3b5fe00cbd272[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 12 14:01:14 2022 -0700

    Handle .pyi-1 files in load_pytd.Module.is_package().
    
    I also realized that the last time I changed is_package, I accidentally added
    an extra '.' in the .pickled extension for __init__ files (so they became
    __init__..pickled), but I did this both when unpickling and when checking the
    filename of the unpickled file, so it worked itself out. This has been fixed.
    
    For https://github.com/google/pytype/issues/1229.
    
    PiperOrigin-RevId: 460546845

[33mcommit 1e50be0941aaa6220eb167f9db8cded6b39843d0[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 12 12:07:46 2022 -0700

    Address two lint warnings.
    
    I was curious and took a look at our opensource 3.11 CI results. There were two
    lint warnings, so I've fixed them.
    
    PiperOrigin-RevId: 460521319

[33mcommit 6dbe11aa8d8801bf5c84f91d5e7aaea3c9e1390e[m
Author: Wang Weihao <w.weihao@qq.com>
Date:   Mon Jul 18 08:36:43 2022 +0800

    remove description on README.md, since pytype wont compile on windows after this PR is merged

[33mcommit 630e978e235300024d9cdd366a1b7ac259ac2bbd[m
Author: Wang Weihao <w.weihao@qq.com>
Date:   Mon Jul 18 08:32:06 2022 +0800

    revert cfg.cc; set ci-windows to expremental

[33mcommit 9d456210b25a6c0ad1cf711598daf6259085f2c4[m
Merge: 07c60d96 49bc7750
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 12 00:18:00 2022 -0700

    Merge pull request #1251 from google/google_sync
    
    Google sync

[33mcommit 49bc7750348132b3b5c8006747915b78f365affa[m
Author: Prasad Jivane <prasadjivane@gmail.com>
Date:   Mon Jul 11 23:44:39 2022 -0700

    Update README.md File (#1248)
    
    The README.md is updated.
    
    Resolves #1248
    
    PiperOrigin-RevId: 460386623

[33mcommit d818af95e62b8d6701e94b2821905129504afab5[m
Author: Tim Gates <tim.gates@iress.com>
Date:   Mon Jul 11 23:44:01 2022 -0700

    docs: Fix a few typos (#1247)
    
    There are small typos in:
    
    Resolves #1247
    
    PiperOrigin-RevId: 460386547

[33mcommit 6be6bfac62fb6dfc37e2293f471c4b261e6ff65e[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 11 23:02:05 2022 -0700

    Look up methods properly on classes with _HAS_DYNAMIC_ATTRIBUTES.
    
    We were treating all methods on classes that set _HAS_DYNAMIC_ATTRIBUTES as
    having type Any.
    
    Also adds type annotations to convert.py to fix a type error caused by this
    change.
    
    PiperOrigin-RevId: 460381645

[33mcommit 07c60d964ebc09527287f5445d1bc6afd0af0687[m
Merge: 1b7fa75c 656f2f81
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 11 17:26:29 2022 -0700

    Merge pull request #1250 from google/google_sync
    
    Google sync

[33mcommit 656f2f81b77fff5e293a189d9901eb1506fc9792[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 11 16:42:56 2022 -0700

    Move some internal stuff.
    
    PiperOrigin-RevId: 460329609

[33mcommit 167a3a6b7141b2b4e15e93e318a22db92098bd88[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jul 8 06:28:16 2022 -0700

    Add an option to xref to skip kythe entries for builtins and stdlib.
    
    PiperOrigin-RevId: 459744319

[33mcommit 78d3254853f8d9db89947861ab01f17136cdabcb[m
Author: zwzhao <zwzhao@google.com>
Date:   Fri Jul 1 19:07:20 2022 -0700

    Internal change
    
    PiperOrigin-RevId: 458584724

[33mcommit 7cd0811f4cff509b151834457b0fe94ab8cdd602[m
Author: zwzhao <zwzhao@google.com>
Date:   Thu Jun 30 20:09:24 2022 -0700

    Internal change
    
    PiperOrigin-RevId: 458370942

[33mcommit 0994cb4cf8fd67658993f231ec46f7a2f21239ed[m
Author: Wang Weihao <w.weihao@qq.com>
Date:   Sun Jul 10 09:50:35 2022 +0800

    satisfy pytype type checking on windows

[33mcommit 04beb9eebe0a3321088c127e7aa7e67e661fa6f5[m
Author: Wang Weihao <w.weihao@qq.com>
Date:   Sun Jul 10 09:05:10 2022 +0800

    add description about windows support in README.md

[33mcommit 63b3551f9e7ece448c8091a4eb82fdf1056f36e3[m
Author: Wang Weihao <w.weihao@qq.com>
Date:   Sun Jul 10 08:38:33 2022 +0800

    add doc string for new sources

[33mcommit 685e9c4b723dd69d53a99c1f6472597758f64824[m
Author: Wang Weihao <w.weihao@qq.com>
Date:   Sun Jul 10 08:06:43 2022 +0800

    refactor: move new files to platform_utils

[33mcommit 9ff798f9af0c34c5f4ad43e912db54d31133c032[m
Author: Wang Weihao <w.weihao@qq.com>
Date:   Sat Jul 9 23:00:36 2022 +0800

    add support for windows

[33mcommit 1b7fa75c6fd82044cf542802355443a3a2e6bdf2[m
Merge: 6f187fba f7ca1a15
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jul 1 12:47:53 2022 -0700

    Merge pull request #1245 from prasadjivane/patch-1
    
    modified requirements.txt by removing unused stuff

[33mcommit f7ca1a1571467e2cc5a1c2b266879c11a586ecaa[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jul 1 12:45:53 2022 -0700

    Update requirements.txt

[33mcommit 6ee5405141dbd57b62dea831172bba2a6afcca67[m
Author: prasadjivane <prasadjivane@gmail.com>
Date:   Fri Jul 1 13:59:15 2022 +0530

    updated

[33mcommit 729dc8d5ab0ebf68d5e01dfc624213de6f144070[m
Author: Prasad Jivane <26869583+prasadjivane@users.noreply.github.com>
Date:   Fri Jul 1 02:19:51 2022 +0530

    ubuntu fixes modified
    
    Updating validation.py added fixes

[33mcommit 13d650d938359a9ac7e7ab2e48121b6ba4c15091[m
Author: Prasad Jivane <26869583+prasadjivane@users.noreply.github.com>
Date:   Fri Jul 1 01:36:09 2022 +0530

    modified requirements.txt by removing unused stuff
    
    Removed unused dataclasses and typed_ast also modified versions.

[33mcommit 6f187fba89d93a151b22f4a268ee317b3b9c2ea2[m[33m ([m[1;33mtag: 2022.06.30[m[33m)[m
Merge: 68baeafc bcdbdb03
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 30 12:14:31 2022 -0700

    Merge pull request #1244 from google/google_sync
    
    Google sync

[33mcommit bcdbdb035f08dda6c04da1161a44f516832a72de[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 30 11:00:10 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 458265988

[33mcommit 6d0ee0003259f180cca1b0ae52e328bcd77e2de2[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Jun 29 13:32:49 2022 -0700

    Add a command-line argument `pickle-metadata` to pytype and store it in SerializableTupleClass during serialization to pickle file.
    
    PiperOrigin-RevId: 458050926

[33mcommit 3b76f609a1016d784029f28de505eed85aa61e8b[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 28 16:36:06 2022 -0700

    BEGIN_PUBLIC
    Add some metadata fields to the serialized ast.
    
    Added fields:
      src_path: Full path to the original source file.
      metadata: List of arbitrary string-encoded metadata
    END_PUBLIC
    
    The new fields are mainly for kythe, so that cross references to generated code
    link to the correct place.
    
    Also includes a pytype release, so that kythe stays in sync.
    
    PiperOrigin-RevId: 457845537

[33mcommit f4279fe6b14015d23f691541ccc90fc57100662d[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jun 27 17:06:00 2022 -0700

    Add the option to show kythe facts in the debug indexer
    
    PiperOrigin-RevId: 457600595

[33mcommit 68baeafccb710e75c91dd4f26c74fc0bd42eda67[m
Merge: 516cf846 f5640bf2
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 27 17:03:21 2022 -0700

    Merge pull request #1241 from google/google_sync
    
    Google sync

[33mcommit f5640bf2dfd64c944a2b0291fa2db44935fe0f2c[m
Author: byoshimi-github <byoshimi@google.com>
Date:   Mon Jun 27 14:57:24 2022 -0700

    Preliminary work to make local debugging of jekyll work. (#1239)
    
    Running jekyll locally requires a Gemfile and null '---' header to convert .md files to .html (otherwise jekyll doesn't touch these files.) Also added google_analytics to _config.yml.  Both _layout/*.md files appear to support this already.
    
    Resolves #1239
    
    PiperOrigin-RevId: 457573545

[33mcommit bdd15561967d482a89299fe88546aa82001cc340[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 27 14:23:53 2022 -0700

    Internal copy of GitHub PR #1237.
    
    pyupgrade --py37-plus **/*.py
    
    Python f-strings are shorter, easier to read, and faster. https://www.scivision.dev/python-f-string-speed
    
    This PR touches both internal and external files, so I merged it directly, but
    we also need to import it so that the internal changes aren't reverted the next
    time we do an export.
    
    PiperOrigin-RevId: 457566465

[33mcommit fe5ef06a4498fb3d618936aae734f2e2e5c2514a[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 27 11:57:54 2022 -0700

    Preserve comments when preprocessing source code.
    
    PiperOrigin-RevId: 457533565

[33mcommit 516cf8465b9544369fb85a8312d81d6ac51e73b4[m
Merge: a1ec5211 ba5ad629
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 27 13:28:15 2022 -0700

    Merge pull request #1237 from cclauss/pyupgrade
    
    pyupgrade --py37-plus **/*.py

[33mcommit ba5ad6298e8fb55331ac4cf759900c4acf015de0[m
Author: Christian Clauss <cclauss@me.com>
Date:   Mon Jun 27 21:56:42 2022 +0200

    Revert one change in imports_multiple.pep484.py

[33mcommit 650afd968d9395f5dd95483af119833defa866ed[m
Author: Christian Clauss <cclauss@me.com>
Date:   Fri Jun 24 22:26:02 2022 +0200

    80 characters per line like punch cards used to be

[33mcommit b216289b1a1283bb335e0f717f38a510853772bd[m
Author: Christian Clauss <cclauss@me.com>
Date:   Fri Jun 24 22:20:30 2022 +0200

    80 characters per line like punch cards used to be

[33mcommit 8dc4e7ca40bdbea2b3fc54f9c0dce37dbab6cff2[m
Author: Christian Clauss <cclauss@me.com>
Date:   Fri Jun 24 21:15:08 2022 +0200

    pyupgrade --py37-plus **/*.py

[33mcommit a1ec5211c7070ec8d051253f15e14f451ed747f3[m
Merge: 6a674607 2c7c57d5
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 24 09:56:24 2022 -0700

    Merge pull request #1236 from cclauss/patch-1
    
    Upgrade GitHub Actions

[33mcommit 2c7c57d52707ee8e1a216aaf1c102d3909304122[m
Author: Christian Clauss <cclauss@me.com>
Date:   Fri Jun 24 09:01:26 2022 +0200

    Upgrade GitHub Actions

[33mcommit c31ecdcb0190fcca7dd5dead7a76138b6f91ef63[m
Author: Christian Clauss <cclauss@me.com>
Date:   Fri Jun 24 08:59:21 2022 +0200

    Upgrade GitHub Actions
    
    * https://github.com/actions/checkout/releases
    * https://github.com/actions/setup-python/releases
    * https://github.com/actions/upload-artifact/releases
    https://github.com/docker/setup-qemu-action/releases

[33mcommit 6a6746073699bb87137eb78f96baa8e10ac032fd[m
Merge: 5ae96507 53caa897
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 23 19:43:40 2022 -0700

    Merge pull request #1235 from google/google_sync
    
    Google sync

[33mcommit 53caa897c98efeee691a02ca7e1f0fa8d05d564e[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 23 16:43:41 2022 -0700

    Add missing pytype/directors/__init__.py and fix lint errors.
    
    This allows pytype.directors to be recognized as a subpackage (which also
    apparently triggers opensource pylint to analyze it).
    
    PiperOrigin-RevId: 456888956

[33mcommit 2dc32ea562054c7a48f4ea09acd81ffbcff1c59f[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 23 16:18:56 2022 -0700

    Make slight improvements to --overriding-default-value-checks.
    
    * Only attempt the check when default values are all concrete values.
    * Print default values better in error messages. Previously, we printed things
      like: `def f(x: int = int)` (or worse: `def f(x: int = Any)`). Now we print
      `def f(x: int = 0)` when the default value is a single concrete value and
      `def f(x: int = ...)` otherwise.
    
    PiperOrigin-RevId: 456884389

[33mcommit 5ae9650758d34b1406a994e5806ee4e69b1976bb[m[33m ([m[1;33mtag: 2022.06.23[m[33m)[m
Merge: ca9aedf2 86f798ba
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 23 16:43:01 2022 -0700

    Merge pull request #1234 from google/directors_init
    
    Add __init__.py to pytype/directors/.

[33mcommit 86f798ba783f0a363b059c0c3621ee7664f84c2a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 23 16:02:47 2022 -0700

    Add missing pytype/directors/__init__.py and fix lint errors.
    
    This allows pytype.directors to be recognized as a subpackage (which also
    apparently triggers opensource pylint to analyze it).

[33mcommit ca9aedf2dd7ee68a43e7df36191522cc993907b1[m
Merge: 665bb495 56f1a266
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 23 16:00:11 2022 -0700

    Merge pull request #1233 from google/google_sync
    
    Google sync

[33mcommit 56f1a266c3f4d7c3ae4c3dad3df2ffc896f79d8b[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 23 14:31:59 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 456862728

[33mcommit 1a63ea6fdef3b25c4677b1af975642d20ca6168d[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 23 00:35:59 2022 -0700

    Update pytype docs.
    
    * Mark union pipe syntax as supported.
    * Update the opensource docs.
    
    PiperOrigin-RevId: 456700771

[33mcommit 0867657fd6d54c9ed759eaa5328c569a53491d3e[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jun 22 22:36:18 2022 -0700

    Factor out the director function line range code into a utility class.
    
    We will need the same logic for other blocks (e.g. `with` and `try`)
    
    PiperOrigin-RevId: 456686085

[33mcommit 665bb4956629d029db1d289c31b99cdc7336d1d8[m
Merge: 1e7f5405 25f46700
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 23 00:09:52 2022 -0700

    Merge pull request #1232 from google/google_sync
    
    Don't use Call line ranges to move function range end lines.

[33mcommit 25f467007909216664de91463a415d3d822566ad[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 22 14:55:48 2022 -0700

    Don't use Call line ranges to move function range end lines.
    
    Return statements are always regular line ranges, not call ranges.
    
    PiperOrigin-RevId: 456615690

[33mcommit 1e7f5405eb4208cec0b42779909845f719136789[m
Merge: fd803039 596f657d
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 21 23:36:59 2022 -0700

    Merge pull request #1231 from google/google_sync
    
    Replace libcst with ast in directors.py in Python 3.9+.

[33mcommit 596f657d48198d91e48d90b755d4a2cd1d206ebb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 21 22:30:06 2022 -0700

    Fix opensource test failures.

[33mcommit 8636777ec934167627a6ed4737ecf65e80adbfb8[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 21 21:27:43 2022 -0700

    Replace libcst with ast in directors.py in Python 3.9+.
    
    The ast library is much faster.
    
    We still need libcst for 3.8 and earlier, since we're making use of recent ast
    features like the 'end_lineno' attribute on nodes.
    
    PiperOrigin-RevId: 456423980

[33mcommit fd803039f161a096447831c4cf5e1778754bfb0d[m
Merge: 99dbf23e ef1422cd
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 21 18:31:14 2022 -0700

    Merge pull request #1230 from google/google_sync
    
    Google sync

[33mcommit ef1422cd3ca9a161a45f762b8fd8a25e0d9f9cd2[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 21 17:38:59 2022 -0700

    Fix a couple bugs in implicit return line placement.
    
    When a function ends with a multi-line statement and no explicit return, the
    implicit return needs to be associated with the first line of the statement.
    
    The _function_starts attribute needs to be sorted for bisect to work properly.
    
    PiperOrigin-RevId: 456391278

[33mcommit 6b1fee04f8e040be59b9787228abaa4bb48cd407[m
Author: Alex Waygood <Alex.Waygood@Gmail.com>
Date:   Tue Jun 21 16:05:10 2022 -0700

    Add `ParamSpecArgs` and `ParamSpecKwargs` to `typing.pytd` (#1228)
    
    At runtime, `typing_extensions` does this with `ParamSpecArgs` and `ParamSpecKwargs`:
    
    Resolves #1228
    
    PiperOrigin-RevId: 456372967

[33mcommit d3019d8bc2b7e5eeede605945473b0dd4d7d689f[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 21 11:48:11 2022 -0700

    Use the 'attrs' namespace instead of 'attr'.
    
    We might as well switch, since 'attrs' is the future. It also has better
    defaults.
    
    PiperOrigin-RevId: 456314378

[33mcommit 7b024610ca88009ba5bfba18887cc035690800f6[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Tue Jun 21 11:42:29 2022 -0700

    Adds missing <iterator> include to third_party/py/pytype/typegraph/solver.cc
    
    A future crosstool release will require explicitly including the <iterator>
    header where it is used.
    
    Reproducer:
    blaze --blazerc=/dev/null build  \
      --config=llvm-unstable \
      //third_party/py/pytype/typegraph:typegraph
    
    [] after fix: []
    
    PiperOrigin-RevId: 456313133

[33mcommit a759afd2e6844cb561bd2647e1109a7a40e21034[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Fri Jun 17 13:14:52 2022 -0700

    Add a *skipped* test for [] (Generics are too lenient)
    
    I'm really just interested in fixing this for protos, and in theory if we hard-code `message.Message` in the matcher then we might want to add a proto-specific regression test. But for now, this can be written with general Python classes.
    
    Without the _skip_, the failure is:
    ```
    AssertionError: Errors not found:
    Line 13: wrong-arg-types
    Line 27: wrong-arg-types
    ```
    PiperOrigin-RevId: 455681387

[33mcommit 3a9c3bc0644909fdb0eb294a459cbb8c47096ab5[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jun 16 17:32:32 2022 -0700

    Fix a bug in matching an opcode to a function location.
    
    PiperOrigin-RevId: 455502894

[33mcommit 97ef2b3b7085e906df8b48b0fd3984af1ecfe095[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 16 16:36:57 2022 -0700

    Move directors.py into its own directory.
    
    Moves directors into its own directory and separates out the parsing into a
    separate module so that it's easier to replace libcst with another library.
    
    Also collects the disable tests that were scattered all over the place into
    test_disables and adds a few more tests.
    
    PiperOrigin-RevId: 455493607

[33mcommit 2bb9519e62f33aeb2179a7007352d60c6400c85e[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jun 16 16:02:16 2022 -0700

    Add opcode line numbers to the bytecode debug output.
    
    PiperOrigin-RevId: 455487256

[33mcommit 6d85e705b80350b26c633042680af53034531552[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jun 16 15:44:26 2022 -0700

    Adjust the error line number for an implicit `return None`.
    
    In python 3.10+ the opcode line number for an implicit `return None` has
    changed from the last line of the function to the line number of various
    control flow opcodes. We adjust the error line number to the last line when
    this happens.
    
    PiperOrigin-RevId: 455483865

[33mcommit cbabb72cbf90b1a49084afcb2e57ece589103458[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jun 15 17:24:36 2022 -0700

    Support `T1 | T2 | ...` syntax for union types in python 3.10+ (PEP604)
    
    Fixes #785
    
    PiperOrigin-RevId: 455257374

[33mcommit 0cfcaa4d13b20a361a0512717a9e0d3cdc9777eb[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 15 13:03:08 2022 -0700

    Get rid of directors._Attribute.
    
    I'm not sure how or why, but this seems to have become unnecessary.
    
    PiperOrigin-RevId: 455200846

[33mcommit dcc4d6ed045019f3c43d968c28a75be6480f348f[m
Author: tsudol <tsudol@google.com>
Date:   Wed Jun 15 12:05:05 2022 -0700

    Rollback of changelist 454970864.
    
    *** Reason for rollback ***
    
    This breaks *way* too many targets. It would be good to fix this, but it needs a whole cleanup.
    
    *** Original change description ***
    
    Remove `copy` method from Mapping and MutableMapping.
    
    This is a method on dicts, not Mappings.
    
    ***
    
    PiperOrigin-RevId: 455188019

[33mcommit 2aaac8e97df61a4cdee0b7d39de26ba642b840c2[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 14 17:09:09 2022 -0700

    Convert `types.NoneType` to `builtins.NoneType`
    
    PiperOrigin-RevId: 454992025

[33mcommit 8ff2bfc8c2bef452a040b0f614778996ea0f1dc3[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jun 14 15:30:02 2022 -0700

    Remove `copy` method from Mapping and MutableMapping.
    
    This is a method on dicts, not Mappings.
    
    PiperOrigin-RevId: 454970864

[33mcommit 99dbf23e2910debbfdfea9826f34b9741c53a87d[m[33m ([m[1;33mtag: 2022.06.14[m[33m)[m
Merge: 723ed27b cdd5868c
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 14 15:00:59 2022 -0700

    Merge pull request #1227 from google/google_sync
    
    Google sync

[33mcommit cdd5868c86019c1a526972fc9f882e2531a6a6bc[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 14 13:59:06 2022 -0700

    Update dependencies.
    
    * Bump attrs to 21.4.0.
    * Don't use latest networkx version (2.8.4) - seems to have a pydot bug.
    
    Bump required attrs version.

[33mcommit 70028f1fab3dc4cf9ddaadd303f71725fb1d5f94[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 14 13:41:41 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 454944929

[33mcommit eec1c35127a087924b8be209b70ebe605a14f0b5[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jun 13 23:06:58 2022 -0700

    Fix chained attribute traces for python 3.10
    
    The opcode line numbering for multiline chained attributes like
    ```
    x = (a.
         b.
         c)
    ```
    has changed in 3.10.
    PiperOrigin-RevId: 454777611

[33mcommit 351a2cdf945642e5a49058c09b4d3d3f88083ccd[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 13 22:57:07 2022 -0700

    Modernize usages of collections.namedtuple in pytype.
    
    I mostly replaced collections.namedtuple with dataclasses.dataclass. In one
    case, I replaced it with attrs.define in order to use a converter. I used
    typing.NamedTuple for a couple classes that need namedtuple's iteration and/or
    pickling behaviors.
    
    PiperOrigin-RevId: 454776470

[33mcommit fe58b6cbc83dd5a08fe07d291caebda49b462864[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jun 10 20:59:09 2022 -0700

    Remove some redundant code in state merging.
    
    PiperOrigin-RevId: 454294250

[33mcommit 75473f3f4098424207ae78b7cf458190b3cf2577[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 10 15:45:25 2022 -0700

    Add a stub and overlay for the 'attrs' module.
    
    The attrs library introduced "next-generation" APIs a couple years ago and
    recently introduced a new namespace, attrs, which contains only the next-gen
    APIs (unlike the old one, attr, which also contains the historical APIs).
    
    The new attrs/__init__.pytd stub is copied from the attrs GitHub repo (from a
    commit back in December, in order to be compatible with our attr/ stubs).
    
    PiperOrigin-RevId: 454257324

[33mcommit 723ed27b0eb66d17541cccfc64ce76042eec7513[m
Merge: 70cef46b cdc0c22e
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 10 14:33:18 2022 -0700

    Merge pull request #1226 from google/google_sync
    
    Google sync

[33mcommit cdc0c22e4b2e955379d471cddb5f715939bc0242[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 10 09:42:59 2022 -0700

    Add missing memoryview.nbytes attribute.
    
    Fixes https://github.com/google/pytype/issues/1225.
    
    PiperOrigin-RevId: 454183699

[33mcommit 03295c0bfeb577b1ad7a08f1efaaf5744b6bf69a[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 9 16:08:35 2022 -0700

    Mark dict views as reversible in Python 3.8+.
    
    Fixes https://github.com/google/pytype/issues/1212.
    
    PiperOrigin-RevId: 454034928

[33mcommit 70cef46b0d8f2702cfabb6c6ef6d963ce9237a1f[m
Author: Romain Goncalves <accounts@rgoncalves.se>
Date:   Tue Jun 7 21:39:56 2022 -0700

    Fix parameterized attributes for dataclass subclasses (#1218)
    
    In subclasses of a Generic dataclass, the init method accepts the right
    
    Resolves #1218
    
    PiperOrigin-RevId: 453595104

[33mcommit b7fbe4988004921a19f03234dc9be1b46380cd09[m
Merge: 8b1c0587 892a4d3b
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 7 13:29:04 2022 -0700

    Merge pull request #1223 from google/google_sync
    
    Google sync

[33mcommit 892a4d3b8b68937edf9f9963110ceed769a75707[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 7 12:48:22 2022 -0700

    Remove now-unnecessary 3.7 install.

[33mcommit 6cfcd6be0dc9242cf5eb82d6e790e16c27c8c23d[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 7 12:43:29 2022 -0700

    Remove 3.7-specific tests from vm_test.
    
    These tests are tedious to maintain and don't provide much value. Removing them
    also allows us to get rid of a good chunk of code involving custom python exes.
    
    PiperOrigin-RevId: 453501733

[33mcommit 8b1c0587a5628246fa0d0675001e74072b0b0963[m[33m ([m[1;33mtag: 2022.06.06[m[33m)[m
Merge: 2d83faba b2a1e977
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 6 20:33:56 2022 -0700

    Merge pull request #1221 from google/google_sync
    
    Google sync

[33mcommit b2a1e977328a05356756d343d625c8052b5374da[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 6 19:35:14 2022 -0700

    Remove no-longer-necessary MANIFEST.in entry.

[33mcommit 1526853d6230987e52ce52244754fddeff5204e3[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 6 19:31:11 2022 -0700

    Fix a few CMakeLists.txt files.
    
    * Adds an __init__.py file to pytype/inspect/, so it's recognized as a
      subpackage.
    * While doing this, I also realized that pytype/pyi/__init__.py had never been
      added to a target, so I fixed that as well.
    * Updates the CMakeLists.txt files in pytype/tools/xref/ and adds them to the
      gen_cmake test to keep them from going out-of-sync again.
    
    PiperOrigin-RevId: 453335554

[33mcommit c2d4676fb61dfd1b128db0eab921489dfec2f450[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 6 17:28:53 2022 -0700

    Add just-accepted PEP 681 (Data Class Transforms) to support.md.
    
    PiperOrigin-RevId: 453319458

[33mcommit 2d83faba47906c8a0f8b2f73c5843f93402220dd[m
Merge: 97492c1c 28a69642
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 6 17:05:16 2022 -0700

    Merge pull request #1220 from google/google_sync
    
    Google sync

[33mcommit 28a696427b26045dd5ee7577985aab20b8291cc7[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 6 17:04:06 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 453315080

[33mcommit 43c31b52861f7f71b080061ab0c40b2fbd418ccb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 6 16:06:00 2022 -0700

    Add pydot to dependencies.

[33mcommit 6eb795e810879309bba65013d578be1854f9300d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 6 15:57:17 2022 -0700

    Fix pylint issues.

[33mcommit 83bdd9c71b41a1d3d5cdda64faa6d7eeedaed9c1[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jun 2 12:36:21 2022 -0700

    Create a pytype.inspect subproject to inspect pytype's internal state.
    
    Also move `program_to_dot()` from `debug` to `inspect.graph`.
    
    PiperOrigin-RevId: 452598502

[33mcommit 05f17952f3e69dacdf4ad05e9ffcbf3b151f9daf[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jun 2 09:07:13 2022 -0700

    update doc freshness
    
    PiperOrigin-RevId: 452551291

[33mcommit 97492c1c23398f67a404f304da6a391b941b8c31[m
Author: mdemello <mdemello@google.com>
Date:   Fri May 27 17:24:33 2022 -0700

    Add a merge_project binary to recursively merge files in a project.
    
    Fixes https://github.com/google/pytype/issues/1164
    
    PiperOrigin-RevId: 451518425

[33mcommit f90a4b39d12ab071e4f79734df17eee4a26eb6c9[m
Author: mdemello <mdemello@google.com>
Date:   Thu May 26 18:01:30 2022 -0700

    Fix a crash in the indexer.
    
    PiperOrigin-RevId: 451283486

[33mcommit 321df96f9fd7ad619c33d26fc3bb4e9ea3b93141[m
Author: mdemello <mdemello@google.com>
Date:   Thu May 26 15:42:33 2022 -0700

    Fix a line too long lint error
    
    PiperOrigin-RevId: 451259912

[33mcommit a91d853292a929cbc06bddebc7376d2705adeb83[m
Author: mdemello <mdemello@google.com>
Date:   Thu May 26 15:07:59 2022 -0700

    Add a `--backup` option to merge_pyi to copy the source file when overwriting.
    
    Also refactors the code to move file merging from the binary to the library,
    and gets rid of the obsolete `--as-comments` option.
    
    Addresses https://github.com/google/pytype/issues/1164
    
    PiperOrigin-RevId: 451253119

[33mcommit 4deb8317413a6b677311f7405a8cd5265badd46b[m
Author: mdemello <mdemello@google.com>
Date:   Wed May 25 12:58:34 2022 -0700

    Fix a tuple addition crash.
    
    PiperOrigin-RevId: 450994516

[33mcommit 04a25b9aeba082ba1cfd625970fe557eceda9123[m
Author: mdemello <mdemello@google.com>
Date:   Wed May 25 11:07:06 2022 -0700

    Fix some off-by-one errors in sequence unpacking.
    
    https://github.com/google/pytype/issues/1207
    
    PiperOrigin-RevId: 450967152

[33mcommit 7d92f7666ab634f0bb94bfd9cbb904ce630cc663[m
Author: mdemello <mdemello@google.com>
Date:   Wed May 25 10:23:59 2022 -0700

    Fix a crash when applying a method decorator to a property.
    
    PiperOrigin-RevId: 450955387

[33mcommit 155da37bd543ecd6ed78375a075b48f8491208c9[m
Author: tsudol <tsudol@google.com>
Date:   Tue May 24 17:20:12 2022 -0700

    Don't check Literals when expanding compatible builtins.
    
    Literals can't contain types or TypeVars, so this visitor shouldn't be checking
    them.
    
    Fixes GitHub #1210.
    
    PiperOrigin-RevId: 450805081

[33mcommit d4c7064e897b0f8115299da35a6e5580a66b3d63[m
Author: mdemello <mdemello@google.com>
Date:   Tue May 24 15:11:35 2022 -0700

    Add support for the TypedDict functional constructor.
    
    Fixes https://github.com/google/pytype/issues/1184
    
    PiperOrigin-RevId: 450779646

[33mcommit 5e810a1d4d00beffa5e4c1d797413d54cf20f95f[m
Author: mdemello <mdemello@google.com>
Date:   Mon May 23 11:46:21 2022 -0700

    Raise a meaningful exception when unpickling a pytd file fails.
    
    PiperOrigin-RevId: 450490346

[33mcommit 843abace2dd09b0edc41ea9a8cccffd1fd082f3d[m
Author: mdemello <mdemello@google.com>
Date:   Mon May 23 11:31:22 2022 -0700

    Support `__all__ += [...]` in pyi files.
    
    Also stop raising an error for constant literal lists and tuples of all sorts;
    if the constant is not one we currently preserve the literal value for we will
    simply discard it and retain the type.
    
    Fixes https://github.com/google/pytype/issues/1208
    
    PiperOrigin-RevId: 450486959

[33mcommit 5fc73dbd2c9683b9fecf51b1298532f18835bed8[m
Author: mdemello <mdemello@google.com>
Date:   Thu May 19 14:34:29 2022 -0700

    Preserve precise element types when adding two fixed-length tuples.
    
    PiperOrigin-RevId: 449834940

[33mcommit 357c630f711e3df04b0735a369509845e5eb6233[m
Author: rechen <rechen@google.com>
Date:   Thu May 19 14:08:30 2022 -0700

    Finish removing --enable-nested-classes flag.
    
    PiperOrigin-RevId: 449829499

[33mcommit 9124d79c0e67d6edf4257c540db08ce8eb1067b2[m[33m ([m[1;33mtag: 2022.05.19[m[33m)[m
Merge: 559970fe 978cb26a
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 19 14:25:28 2022 -0600

    Merge pull request #1209 from google/google_sync
    
    Google sync

[33mcommit 978cb26a1a1fbab3d33bdeca836ba648bd4c011a[m
Author: rechen <rechen@google.com>
Date:   Thu May 19 12:20:27 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 449806401

[33mcommit 52bb89625f50a18f5b29dd12d25d1d0216ab566b[m
Author: rechen <rechen@google.com>
Date:   Wed May 18 14:50:11 2022 -0700

    Default --enable-nested-classes to True.
    
    PiperOrigin-RevId: 449583134

[33mcommit 131be549e2f297d74c924f16e22d02770fbfd831[m
Author: rechen <rechen@google.com>
Date:   Wed May 18 14:14:12 2022 -0700

    Fix a crash caused by trying to look up typing.Any in typing.pytd.
    
    Any is special-cased.
    
    PiperOrigin-RevId: 449574289

[33mcommit a55a159cbb9c75d9c90720308b598f0919d6f014[m
Author: mdemello <mdemello@google.com>
Date:   Tue May 17 17:21:59 2022 -0700

    Load symbols from typing when converting parametrised collection classes.
    
    For instance, if we have the late annotation `"list[int]"` and convert it to
    `"typing.List[int]"` we will get an error in late resolution because
    `typing.List` has not been imported. Therefore we need to make sure the import
    is added before the late annotation is resolved.
    
    PiperOrigin-RevId: 449354181

[33mcommit e3dad3b93ad18736f80da61aa4e6dea05d82cc52[m
Author: mdemello <mdemello@google.com>
Date:   Tue May 17 17:11:27 2022 -0700

    Put @cached.property support behind a feature flag.
    
    PiperOrigin-RevId: 449352208

[33mcommit 5d1afcbce823a69834208a485c6c469c1f16c7b5[m
Author: mdemello <mdemello@google.com>
Date:   Mon May 16 17:41:02 2022 -0700

    Add an overlay to support `@cached.property` from pyglib.
    
    PiperOrigin-RevId: 449094982

[33mcommit 559970fefc9ab49a41a81367d02958b483fd7fe4[m
Merge: 5b617a57 6d028893
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 16 18:35:21 2022 -0600

    Merge pull request #1206 from google/google_sync
    
    Google sync

[33mcommit 6d0288935a6c208353199407a8ec23fb0bdaefde[m
Author: rechen <rechen@google.com>
Date:   Mon May 16 16:14:03 2022 -0700

    Use argument-by-argument matching for PyTDFunction in simple cases.
    
    Uses argument-by-argument function call matching for PyTDFunction in cases in
    which no generic classes or functions are involved in the call.
    
    Keeping both the old and new matching implementations around is unfortunately
    very messy (I was surprised how much more complicated PyTDFunction is than
    InterpreterFunction!), but we should be able to clean this up considerably once
    the old implementation is gone.
    
    What I ended up doing was creating a dummy view (a variable->variable identity
    mapping) that the new implementation could pass to helper methods that expect a
    view. Where necessary, we're also passing around a `variable` argument to
    indicate whether the view values are bindings or variables. I branched
    PyTDSignature.substitute_formal_args because I thought that made the code
    cleaner-looking, rather than trying to save a few lines by factoring out common
    code between the two implementations.
    
    PiperOrigin-RevId: 449077864

[33mcommit 1613003dfc8a29f6e7fbb41f007681594ec86747[m
Author: mdemello <mdemello@google.com>
Date:   Fri May 13 15:21:09 2022 -0700

    Raise an error when referencing a nonexistent pyi file in another pyi file.
    
    PiperOrigin-RevId: 448589096

[33mcommit f9be18d1a203e2761a0ecfd38b1ba7ad5b79d91f[m
Author: rechen <rechen@google.com>
Date:   Fri May 13 14:05:39 2022 -0700

    Don't preprocess in Python 3.7.
    
    The `ast` library doesn't add the end_lineno attribute, which the
    preprocessor uses, until 3.8.
    
    PiperOrigin-RevId: 448573419

[33mcommit 17d7158f9241929452370b827da920d3acdb7e92[m
Author: mdemello <mdemello@google.com>
Date:   Fri May 13 12:22:11 2022 -0700

    Take `__all__` into account when importing `*` in pyi files.
    
    If `a.pyi` contains `from b import *`, `a` wiil only reexport
    symbols from `b.__all__`.
    
    PiperOrigin-RevId: 448552151

[33mcommit 5b617a57f03a3d54127dafc2050ae977be5169cc[m
Merge: 2e16f03c 6180b7b1
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 13 14:44:07 2022 -0600

    Merge pull request #1205 from google/google_sync
    
    Google sync

[33mcommit 6180b7b1f173aade9f30e1e63276ea5fc2fc3707[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 13 12:38:04 2022 -0700

    Don't preprocess in Python 3.7.
    
    The `ast` library doesn't add the end_lineno attribute, which the
    preprocessor uses, until 3.8.

[33mcommit a5704ecb83d73056c2f891042cec93fa2f998d0b[m
Author: rechen <rechen@google.com>
Date:   Fri May 13 11:17:29 2022 -0700

    Support `from x import y` for stdlib modules in pickled pyi files.
    
    * Adds an `is_package` attribute to serialized asts.
    * Moves `collections.pytd` to `collections/__init__.pytd` so pytype can tell
      that collections is a package.
    
    PiperOrigin-RevId: 448537633

[33mcommit 177a8d347193f82d8732e97040ae1272c2ecca10[m
Author: mdemello <mdemello@google.com>
Date:   Wed May 11 13:02:12 2022 -0700

    Preprocess source code to augment bare annotations in functions.
    
    Transforms
    
    ```
    def f():
      x: int
    ```
    
    to
    
    ```
    def f():
      x: int = ...
    ```
    
    at the beginning of the analysis pipeline. This makes sure that we catch
    annotations in method bodies that set the type of attributes.
    
    PiperOrigin-RevId: 448065181

[33mcommit 19e77ef09f73cd29065dde2f2b314743d28297be[m
Author: rechen <rechen@google.com>
Date:   Tue May 10 16:37:32 2022 -0700

    Slightly change the format of the [signature-mismatch] error.
    
    Moves the error class to the first line, to be consistent with our other error
    messages.
    
    PiperOrigin-RevId: 447857281

[33mcommit 021b6f696c35b7aef7f17c1c3b8ddfc61e1c6e25[m
Author: rechen <rechen@google.com>
Date:   Tue May 10 13:47:41 2022 -0700

    Switch resolution order for nested and top-level classes in AddNamePrefix.
    
    This fixes a crash when a nested class inherits from a top-level class with the
    same name.
    
    PiperOrigin-RevId: 447818588

[33mcommit 2e16f03c5baa24b7f3121651d4f97d9103424b4b[m[33m ([m[1;33mtag: 2022.05.10[m[33m)[m
Merge: 3ceba5db 623039cc
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 10 15:08:21 2022 -0600

    Merge pull request #1203 from google/google_sync
    
    Prepare a PyPI release.

[33mcommit 623039cc90db2cfb6199ca090e4c852493a38b39[m
Author: rechen <rechen@google.com>
Date:   Tue May 10 11:43:45 2022 -0700

    Prepare a PyPI release.
    
    I also updated the opensource docs.
    
    PiperOrigin-RevId: 447788818

[33mcommit 3ceba5db8dad1d956934fbebf4a118ce0ae470dc[m
Merge: 679b1869 652b9bbf
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 9 18:46:26 2022 -0600

    Merge pull request #1202 from google/google_sync
    
    Google sync

[33mcommit 652b9bbf509c0ae37e40b12f0d2270bac846ec79[m
Author: rechen <rechen@google.com>
Date:   Mon May 9 16:56:19 2022 -0700

    Resolve GenericType nodes better in LookupLocalTypes.
    
    For https://github.com/python/typeshed/pull/7680.
    
    PiperOrigin-RevId: 447596238

[33mcommit c40716d912e222f9236a5ceecd6507215119c8c8[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon May 9 15:05:25 2022 -0700

    Make verifier test have better error message, and re-enable it.
    
    PiperOrigin-RevId: 447573557

[33mcommit 0bf54186c6530650548789f56b62dbcacc8214d7[m
Author: rechen <rechen@google.com>
Date:   Mon May 9 14:03:47 2022 -0700

    Allow method return types to be changed when the overridden type is NoReturn.
    
    PiperOrigin-RevId: 447558672

[33mcommit fb3d35c9cc6a6077717c65624d27c26d58ea290f[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon May 9 06:52:30 2022 -0700

    Add pytype kzip indexer tool sharing implementation with local indexer server.
    
    The pytpe local indexer server already provides an interface to pytype
    indexing which consumes compilation units and generates Kythe storage
    entries.  Abstracting the implementation only slightly allows us to
    create a tool for indexing compilation units from kzip archives
    without duplicating any of the already-implemented and -tested logic
    required for indexing compilation units generally.
    
    PiperOrigin-RevId: 447457328

[33mcommit d55e2447cded12049ae7a2eff816bed036ccf9c3[m
Author: rechen <rechen@google.com>
Date:   Fri May 6 16:06:25 2022 -0700

    Reset matcher errors between individual parameter matches.
    
    This prevents unrelated information about protocols, etc., from being printed
    in error messages.
    
    PiperOrigin-RevId: 447090615

[33mcommit 679b1869be62f3d33498974e82343bf9a4112591[m
Merge: 8fdc7ef7 f930fba7
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 6 17:33:17 2022 -0600

    Merge pull request #1201 from google/google_sync
    
    Google sync

[33mcommit f930fba776d58b99ab0b7d46d87a5b610a5e11f9[m
Author: rechen <rechen@google.com>
Date:   Fri May 6 15:34:09 2022 -0700

    Raise an exception for typed dict errors rather than logging them immediately.
    
    This lets us filter out bindings that aren't visible.
    
    I also made a couple of tangentially related minor improvements:
    * Changed the typed dict error message to say that keys should be "constant
      strings", not just "strings", since the error is also reported when the key
      is a string that can't be resolved to a pyval.
    * Silenced a weird lint error.
    
    Resolves https://github.com/google/pytype/issues/1186.
    
    PiperOrigin-RevId: 447085010

[33mcommit 91e5aa6826fdf993be43ef12d948d28979999cbc[m
Author: rechen <rechen@google.com>
Date:   Thu May 5 17:13:50 2022 -0700

    Improve the collections_abc overlay.
    
    * Handle typing containers better.
    * make collections_abc.Set an alias for typing.AbstractSet: https://github.com/python/typeshed/blo[]fc7768c4df6f713e81a0078e72b9805679c25f/stdlib/_collections_abc.pyi#L4
    
    PiperOrigin-RevId: 446856323

[33mcommit a6b08cd2e8213816864c0a13fd4ca4c47055f154[m
Author: rechen <rechen@google.com>
Date:   Thu May 5 13:42:41 2022 -0700

    Fix oss test issues.
    * Bump Python 3.7 version.
    * typing.final -> typing_extensions.final.
    
    PiperOrigin-RevId: 446805903

[33mcommit 6fde42e3d236e25c7c73e08ff0f6d61089ccdbb7[m
Author: rechen <rechen@google.com>
Date:   Thu May 5 11:25:08 2022 -0700

    Prepare a PyPI release.
    
    Doesn't look like head is going to be clean anytime soon, so I'm going to
    reorder commits a bit in order to do a PyPI release at the same point we did
    the internal release earlier this week.
    
    PiperOrigin-RevId: 446770647

[33mcommit 8fdc7ef71d5f1dfcd25a552b16bfa3ca4dd36386[m
Merge: a2c5f97f 148c42c9
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 5 14:21:20 2022 -0600

    Merge pull request #1200 from google/google_sync
    
    Google sync

[33mcommit 148c42c988b4450221a7aa1a02812b58af114325[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 5 12:28:28 2022 -0700

    Fix oss test issues.
    
    * Bump Python 3.7 version.
    * typing.final -> typing_extensions.final.

[33mcommit 8d6dec43c23fa6518b94d957d2cb320f2b1916f2[m
Author: mdemello <mdemello@google.com>
Date:   Wed May 4 16:47:28 2022 -0700

    Do not call convert.name_to_value() directly in typing overlays.
    
    Calling pytd.ToType first ensures we handle cases like type aliases.
    
    PiperOrigin-RevId: 446583723

[33mcommit d22e763701b189d5e2f6d1e19c5ea7df3c7e392c[m
Author: rechen <rechen@google.com>
Date:   Wed May 4 16:33:22 2022 -0700

    Remove another enable_nested_classes check.
    
    Removes another check that was added to suppress (legitimate) errors introduced
    by --enable-nested-classes.
    
    PiperOrigin-RevId: 446580972

[33mcommit b438739aa46bf046621d692f93bbb9fe29a79f86[m
Author: tsudol <tsudol@google.com>
Date:   Wed May 4 12:15:38 2022 -0700

    Add Python 3.8 signatures for bytes.hex, memoryview.hex and bytearray.hex.
    
    PiperOrigin-RevId: 446520548

[33mcommit 8364eaec1dcb0f2fa122cc1a91f992c5f38ae875[m
Author: mdemello <mdemello@google.com>
Date:   Tue May 3 10:38:53 2022 -0700

    Fix a crash when loading decorated classes from a pickled pyi file.
    
    PiperOrigin-RevId: 446230910

[33mcommit 1165aa1aac82184f6ce2e57156d90dd58e315967[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon May 2 21:04:36 2022 -0700

    Forgot to add the CMakeLists file to the last CL
    
    PiperOrigin-RevId: 446101707

[33mcommit 860d00794e44896c4d72f9044d0d092d9b37444a[m
Author: rechen <rechen@google.com>
Date:   Mon May 2 16:47:03 2022 -0700

    Fix a crash in vm_utils.
    
    PiperOrigin-RevId: 446062501

[33mcommit 9a3f3fcc834b0cd51e21e1ef29594cd525cf6f99[m
Author: mdemello <mdemello@google.com>
Date:   Mon May 2 15:53:29 2022 -0700

    Add a redirect from collections.abc.* to typing.*
    
    PiperOrigin-RevId: 446049941

[33mcommit 62dbf1d8c14e872fbb460b56e1afe6346d9d5534[m[33m ([m[1;33mtag: 2022.05.05[m[33m)[m
Author: rechen <rechen@google.com>
Date:   Thu May 5 11:25:08 2022 -0700

    Prepare a PyPI release.
    
    Doesn't look like head is going to be clean anytime soon, so I'm going to
    reorder commits a bit in order to do a PyPI release at the same point we did
    the internal release earlier this week.
    
    PiperOrigin-RevId: 446770647

[33mcommit a2c5f97f8a32daaeef98a6e0982786eb9eec85b1[m
Merge: 5710b855 855735e4
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 2 17:11:58 2022 -0600

    Merge pull request #1199 from google/google_sync
    
    Google sync

[33mcommit 855735e49d814e527807448b91bba35ef5a83487[m
Author: rechen <rechen@google.com>
Date:   Mon May 2 15:29:45 2022 -0700

    Add code structure for gradual migration to argument-by-argument call matching.
    
    This adds some code that will let our current function call matching algorithm
    and a new, faster one exist side-by-side until the new one can handle all the
    cases that the current one does. It also enables the new matching for trivial
    cases (when we're matching against an InterpreterFunction with no TypeVars in
    the function signature, the containing class (for a method), or the function
    arguments). This is already enough to show a pretty impressive speedup in our
    function call benchmark but not in the real-world use case I tested. If
    anything, it's a tad slower because of the _is_generic_call check, but that'll
    go away eventually.
    
    PiperOrigin-RevId: 446044514

[33mcommit 2e78dd1a7689e6cb84e29285b3acc82976887ac5[m
Author: rechen <rechen@google.com>
Date:   Mon May 2 15:05:55 2022 -0700

    Fix spurious not-callable error for typing.OrderedDict.
    
    I also added a __repr__ for AnnotationContainer because the fact that it was
    using the __repr__ of the AnnotationClass base class initially threw off my
    debugging attempts.
    
    Resolves https://github.com/google/pytype/issues/1196.
    
    PiperOrigin-RevId: 446039108

[33mcommit dafb12975366d0b46ab57baea06adbcf0086b2f6[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon May 2 13:55:06 2022 -0700

    Add build rules for testdata
    
    generated by `echo $(ls) | build_cleaner --nofilter_to_affected_rules` in the test folder.
    
    Fixed broken files:
     1. list definition multiline.py
     2. mro in class_def.py (can't have inherit from the same class twice)
    
    PiperOrigin-RevId: 446021970

[33mcommit 6bf9e70c0fe2681a58e170084b3a4ddbc6cf2750[m
Author: rechen <rechen@google.com>
Date:   Mon May 2 13:40:53 2022 -0700

    Move a check out of --enable-nested-classes.
    
    The --enable-nested-classes flag guards several related changes that generate
    new type errors. This moves out one of the smaller changes (in terms of
    breakage) from behind the flag. I've also sent out patches for the breakages.
    
    PiperOrigin-RevId: 446018474

[33mcommit 5710b855a1d7029ed5f973cfc06d138d96ffd61a[m
Merge: 0537dc26 d8861572
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 2 14:49:50 2022 -0600

    Merge pull request #1198 from google/ts
    
    Update typeshed to 354787f6e0037f7b8d37d11eb851b8f4e0931a42.

[33mcommit d8861572c4f998befca1fbfa319dfb877e7b5a89[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 2 13:04:31 2022 -0700

    Update typeshed to 354787f6e0037f7b8d37d11eb851b8f4e0931a42.

[33mcommit 0537dc266d09a7fcc7da069238e173addb55cdfe[m
Merge: f892ff91 a0b3faeb
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Apr 30 18:39:05 2022 -0600

    Merge pull request #1197 from google/google_sync
    
    Google sync

[33mcommit a0b3faebc39bd4564cef2736310d5db6dee73fd8[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 29 09:34:08 2022 -0700

    Fix a crash in pytype/overriding_checks.py.
    
    Very rarely, the type of a kwargs parameter can be a plain dict rather than a
    Dict[str, X].
    
    PiperOrigin-RevId: 445439268

[33mcommit b61e00f8c199517f0ab468b6c20581c2ad9d8311[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Apr 27 00:31:51 2022 -0700

    BEGIN_PUBLIC
    Check compatibility of signatures for overriding methods.
    END_PUBLIC
    
    PiperOrigin-RevId: 444780409

[33mcommit e65c156bab6e580cc7db5bd121a418a01bf0868a[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 26 18:30:16 2022 -0700

    Remove --enable-typed-dicts.
    
    This flag was already set to always-True.
    
    PiperOrigin-RevId: 444723798

[33mcommit a34afd4b72c065f38532a63dd73b0d2929e5b536[m
Author: mdemello <mdemello@google.com>
Date:   Tue Apr 26 13:51:46 2022 -0700

    Add an option to the debug indexer to display inferred types.
    
    This is a convenient place to experiment with coverage display before
    extracting it into a more formal tool. The chief weakness of the current
    approach is that when we capture traces for the indexer, types can still be
    partial (we display these as <unknown> here).
    
    PiperOrigin-RevId: 444657815

[33mcommit f892ff916624e54aca25a90eed4d26316c81d380[m[33m ([m[1;33mtag: 2022.04.26[m[33m)[m
Merge: efc1fd95 43fae0f2
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 26 14:08:59 2022 -0700

    Merge pull request #1194 from google/google_sync
    
    Google sync

[33mcommit 43fae0f244e8e2e841e079130483f7334f09dddc[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 26 13:21:28 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 444648708

[33mcommit f799055fa6cadd515333d8c97b3a5d32b8feac12[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 25 18:50:18 2022 -0700

    Fix more typeshed circular dependency issues.
    
    Fixes pytype test failures seen in https://github.com/python/typeshed/pull/7676
    by doing more extensive re-resolving of external types upon encountering
    circular imports. This also lets us remove a previous hack that we put in to
    partially work around this problem.
    
    PiperOrigin-RevId: 444427690

[33mcommit d8f5a9255d50f32e90f3e1414d98ee9bfe892b83[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 25 16:41:34 2022 -0700

    Instantiate imported TypedDicts to typed_dict.TypedDict, not Instance.
    
    PiperOrigin-RevId: 444403156

[33mcommit 9ea6e3a49534572a212a45872cb2e135bfb01ec6[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 25 13:22:35 2022 -0700

    Don't mark fields of anonymous namedtuple parents as ClassVars.
    
    I came across some user code that defines a class inheriting from
    collections.namedtuple and uses variable annotations to declare the field
    types. While the code can (and probably should) be migrated to use
    typing.NamedTuple instead, it's easy enough for us to support this.
    
    PiperOrigin-RevId: 444353204

[33mcommit 2897588a2acbec82fcf72f60d80344497bb65f43[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 22 16:09:48 2022 -0700

    Enable --enable-typed-dicts by default.
    
    PiperOrigin-RevId: 443781675

[33mcommit efc1fd95170e0569fa1821d960108017f072cc17[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 21 13:18:27 2022 -0700

    Import TypedDict from typing_extensions.

[33mcommit e76c3478e45ca9742f12c35f30e728984f9ae35b[m
Author: mdemello <mdemello@google.com>
Date:   Thu Apr 21 12:27:07 2022 -0700

    Stop dropping TypedDict annotations from local assignments.
    
    Previously if we had
    ```
      f: SomeTypedDict = {...}
    ```
    and f was not a module-level variable, we would drop the type (after checking
    the dict's validity) and store it as a `Dict[str, ...]` instead.
    
    Fixes https://github.com/google/pytype/issues/1185
    
    PiperOrigin-RevId: 443447773

[33mcommit fac1237486a60f5004a2abf03095c15c224b4773[m
Author: mdemello <mdemello@google.com>
Date:   Thu Apr 21 12:26:55 2022 -0700

    Preserve the full name of imported TypedDicts
    
    Fixes https://github.com/google/pytype/issues/1187
    
    PiperOrigin-RevId: 443447741

[33mcommit 68ab7be75590bfca17f16f560a7f481343989444[m[33m ([m[1;33mtag: 2022.04.22[m[33m)[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 22 13:42:54 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 443748114

[33mcommit 511faf360a1fc840945587332ce9029b9663bd8f[m
Author: mdemello <mdemello@google.com>
Date:   Wed Apr 20 17:42:23 2022 -0700

    Represent namedargs as a python dict throughout.
    
    We were using an inconsistent mix of python dicts and `abstract.Dict`.
    
    PiperOrigin-RevId: 443239505

[33mcommit 6d3105234e152f01d2ca7da3590c4b0921b5acca[m
Author: tsudol <tsudol@google.com>
Date:   Wed Apr 20 16:17:53 2022 -0700

    Don't print Variable in error messages.
    
    Changes how error messages print Variables that contain pyvals. Before this, the dict `{'a': 1} would be printed like `{'a': Variable}`. After this, it will be printed like `{'a': 1}`.
    
    For non-pyvals, including those in containers, an ellipsis is printed instead.
    
    Also fixes two lint errors in errors_test.py.
    
    PiperOrigin-RevId: 443221161

[33mcommit 0591617b1aadb9a1563911cb5f8a4f125d96e9df[m
Merge: c74cfb48 044fefee
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 20 16:53:00 2022 -0700

    Merge pull request #1190 from google/google_sync
    
    Google sync

[33mcommit 044fefeebbbe564938f8b75a66ef7bc361dc786a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 20 15:34:46 2022 -0700

    Disable modified-iterating-dict lint.

[33mcommit 15effd0a77527328bb564af8ede3d4dcc2bda5fa[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 20 14:29:53 2022 -0700

    Evaluate late annotations before checking for 'TypeVar not in scope' error.
    
    Fixes https://github.com/google/pytype/issues/1188.
    
    PiperOrigin-RevId: 443194433

[33mcommit 99ba9920b5621ece16f39c2753acfe3dc700ad5e[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 20 12:36:39 2022 -0700

    Remove duplicate NamedTuple class definition from typing.pytd.
    
    I was looking at how we defined NamedTuple because of the chat discussion, and
    I realized that we actually have two definitions, NamedTuple and
    _NamedTupleClass. Based on the overlay comments, it appears that using
    NamedTuple in stubs made our old pyi parser unhappy. That parser's long dead, so
    we can merge NamedTuple and _NamedTupleClass.
    
    PiperOrigin-RevId: 443164761

[33mcommit 8b46d31d7c998d2634f03af91ee727be1f9e9760[m
Author: tsudol <tsudol@google.com>
Date:   Wed Apr 20 12:33:49 2022 -0700

    Remove collections.OrderedDict from pytype.
    
    Not every usage of OrderedDict needs to be removed.
    - directors.py: uses move_to_end.
    - overlays/classgen.py: uses move_to_end.
    
    PiperOrigin-RevId: 443164123

[33mcommit 5d8ab4fd3468d7fe115aebeaa8f42df06e787046[m
Author: mdemello <mdemello@google.com>
Date:   Wed Apr 20 12:30:05 2022 -0700

    Handle attribute accesses on Final[...] constants from pyi files.
    
    PiperOrigin-RevId: 443163259

[33mcommit c74cfb48ac03c12ad82483fbd9cf0ade2973836c[m
Merge: d64c1eea f1af4b4d
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 20 11:07:30 2022 -0700

    Merge pull request #1189 from google/google_sync
    
    Google sync

[33mcommit f1af4b4de136105ad5034c94540d417f3ca1bce7[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 19 18:14:46 2022 -0700

    Make a collection of bug fixes needed for nested class support.
    
    This change does most of the things we need to support nested classes in .py
    files. I've hidden some changes behind an --enable-nested-classes flag because
    some cleanup needs to happen first.
    
    For https://github.com/google/pytype/issues/50.
    
    PiperOrigin-RevId: 442961900

[33mcommit c4d3f812bb406a263e78347801b2668fda71b879[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 19 16:08:39 2022 -0700

    Set enable_typed_dicts=True in all tests, not just the typed dict ones.
    
    PiperOrigin-RevId: 442937325

[33mcommit f97b08b8ac2122721094ba6f9c99234476a04f45[m
Author: tsudol <tsudol@google.com>
Date:   Mon Apr 18 15:24:39 2022 -0700

    Add support for `|` for Dicts in 3.9.
    
    PiperOrigin-RevId: 442646452

[33mcommit d64c1eeaf2e5dcd19e581d93265928299ee84215[m[33m ([m[1;33mtag: 2022.04.15[m[33m)[m
Merge: b832233e c6ba55d6
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 15 14:48:05 2022 -0700

    Merge pull request #1183 from google/google_sync
    
    Google sync

[33mcommit c6ba55d6639165a4ef2898581566be20cbae4476[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 15 14:10:13 2022 -0700

    Remove failing merge_pyi test.
    
    This test is broken until
    https://github.com/Instagram/LibCST/commit/abc566cd4a2502cf7c93bfeb63d07d76b0a3cea3
    is released to PyPI.

[33mcommit 7dfaf854f369aff54c27fa7efeb10bf7008da672[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 15 13:23:05 2022 -0700

    Prepare a PyPI release.
    
    Includes a small hack I had to add to vm.py to fix some weird issues I saw in
    global testing. With this, there are some 250+ new findings at head but no
    crashes, and all the errors I spot-checked were legitimate.
    
    PiperOrigin-RevId: 442082748

[33mcommit 940f1ae62a095c967f03f01d4d34dfb023a2ad5f[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 14 17:17:56 2022 -0700

    Fix a method binding bug.
    
    The is_subclass check in _lookup_from_mro_flat needs to use the original lookup
    class, not the base class that we're currently looking for the attribute on.
    Since I don't want to pass the original class to _lookup_from_mro_flat, I moved
    the part that needs access to the class back into lookup_from_mro.
    
    PiperOrigin-RevId: 441893419

[33mcommit 453d13da4ffe2c2e84e2b62c862952eb741492af[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 14 16:06:39 2022 -0700

    Handle NamedTuple field defaults better.
    
    * Uses pytd.Constant.value to indicate whether a field has a default.
    * Respects setting __new__.__defaults__.
    
    PiperOrigin-RevId: 441878530

[33mcommit a78d16dcf6d0cbbf3451fbcd3b01d146fd434866[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 14 15:49:55 2022 -0700

    Fix more namedtuple-related build errors.
    
    * Changes the SimpleFunction constructor to take a function.Signature, to fix a
      bug where SimpleFunction.from_signature would deconstruct and rebuild a
      signature, leading to annotations being postprocessed twice.
    * Adds yet another allow_recursive_convert() call during the NamedTuple
      construction process.
    * Unwraps typing.Annotated when reading namedtuple members so that annotated
      members are bucketed and typed correctly.
    * Improves namedtuple error messages so they say "[...] in function
      MyNamedTuple.__new__" instead of "[...] in function __new__".
    * Outputs imported namedtuples as aliases rather than redefining them.
    * Stops applying the PullInMethodClasses optimization to namedtuples, as it
      causes fields to be interpreted as methods.
    * In output.py, extends subclass signature filtering to classmethods, to avoid
      generating spurious __new__ overloads for namedtuple.
    * Tracks "Any" counts better in the pytd printer to avoid unnecessary imports.
    
    PiperOrigin-RevId: 441874836

[33mcommit 1937781b69d53168970535d6ab0d378b03d619b7[m
Author: mdemello <mdemello@google.com>
Date:   Thu Apr 14 11:08:33 2022 -0700

    Use libcst's built-in annotation merging visitor for merge_pyi
    
    Also gets rid of comment-based annotations entirely.
    
    Tweaks a couple of tests to account for libcst's slightly different handling of
    imports, and for the fact that we no longer take type comments into account.
    
    PiperOrigin-RevId: 441806970

[33mcommit 1c8f1b2007457606ebb77fb95d057bbf57600156[m
Author: mdemello <mdemello@google.com>
Date:   Wed Apr 13 20:19:00 2022 -0700

    Fix performance issue with constant literal dicts.
    
    When creating a constant dict, do not call `set_str_item` for every key; this
    will create a type parameter with a literal string binding for every key,
    leading to a blowup in HasCombination and similar methods.
    
    PiperOrigin-RevId: 441648688

[33mcommit b832233e81a339ec81db3cc14c735eea30f7392c[m
Merge: 1902a3f3 5ac5faf8
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 13 19:36:42 2022 -0700

    Merge pull request #1181 from google/google_sync
    
    Google sync

[33mcommit 5ac5faf8c197b4eb4ecc6112116de0385bde32dd[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 13 16:50:51 2022 -0700

    Actually fix phantom annotations bug.
    
    PiperOrigin-RevId: 441614152

[33mcommit 0cf5190de8a5f7197cd7ef09db70aa1627574c3d[m
Author: mdemello <mdemello@google.com>
Date:   Wed Apr 13 16:11:58 2022 -0700

    Internal change
    
    PiperOrigin-RevId: 441605416

[33mcommit 0be66a1fbe86748d6bbea733ec243df781254e6d[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 13 15:46:40 2022 -0700

    Add a couple more allow_recursive_convert calls to the namedtuple overlay.
    
    Fixes some more recursion errors that I was still seeing.
    
    PiperOrigin-RevId: 441599512

[33mcommit 16f230ca5514a7020f65f164e690cddd75ff6ac0[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 13 15:40:57 2022 -0700

    Fix an [unbound-type-param] error.
    
    I came across this while trying to do a typeshed update.
    
    PiperOrigin-RevId: 441598213

[33mcommit fe9bafc73b8040943fa8c55d23c15983f901f9f8[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 13 14:39:06 2022 -0700

    Copy the annotations dict instead of modifying it in STORE_ATTR.
    
    This prevents some wonky bugs with attributes having phantom annotations.
    
    PiperOrigin-RevId: 441582780

[33mcommit b048df7092c7718183e73912fe132e3c32d90541[m
Author: mdemello <mdemello@google.com>
Date:   Wed Apr 13 13:35:00 2022 -0700

    move all overlay code to overlays/
    
    PiperOrigin-RevId: 441566209

[33mcommit 6c51d7947393c2132f05926a2495379986d7b7d8[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 13 13:15:06 2022 -0700

    Stop sorting function signatures in CanonicalOrderingVisitor.
    
    Sorting signatures doesn't make sense in the presence of @overload.
    
    PiperOrigin-RevId: 441560704

[33mcommit 19446483ecf8641d91bc700e2e019bb78d6dfad6[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 12 19:29:51 2022 -0700

    Don't reorder a NamedTuple's fields in CanonicalOrderingVisitor.
    
    PiperOrigin-RevId: 441356229

[33mcommit 49ecdecd728f48304daa5a74df57c843a87465ef[m
Author: mdemello <mdemello@google.com>
Date:   Tue Apr 12 16:38:42 2022 -0700

    Fix some namedtuple typing issues.
    
    * Distinguish class attributes from namedtuple fields
    * Handle subclasses of anonymous namedtuples correctly
    * Handle staticmethods and classmethods in NamedTuple subclasses
    
    This contains some fairly hacky code to work around the differences between
    PyTDClass and InterpreterClass, but which will be useful to consider in our
    ongoing effort to unify the two.
    
    PiperOrigin-RevId: 441323856

[33mcommit aaa0d67c1b2629238bb6379dd6057e86496b28ef[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 12 15:38:04 2022 -0700

    Handle Unions better in byte_STORE_ATTR.
    
    We have some logic in STORE_ATTR to avoid overwriting attribute types in pytd
    classes. This did not work in the presence of multiple variable bindings, which
    led to a mock bug in Python 3.8+, when the return type of mock.patch.object
    changes to contain a union.
    
    PiperOrigin-RevId: 441309601

[33mcommit dc31bf009ccb46ed2272017aeee94b5d5e2e1b4a[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 11 21:05:45 2022 -0700

    Fix a bug in looking up attributes defined via variable annotation.
    
    We were sometimes accidentally ignoring annotations because we didn't check
    them unless regular lookup returned None. Fixed by merging the
    annotation-checking code into lookup_from_mro.
    
    PiperOrigin-RevId: 441075681

[33mcommit 1902a3f3a4579812e482a7c627d824e230f67884[m
Merge: 8a8704da 72b7b476
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 8 16:45:33 2022 -0700

    Merge pull request #1178 from google/google_sync
    
    Google sync

[33mcommit 72b7b4764b24f04d7d556cbee713f4cab01971c8[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 6 15:39:40 2022 -0700

    3.10: Add 'strict' keyword to zip.
    
    I went through https://docs.python.org/3/whatsnew/3.10.html looking for
    bugs/FRs to file, and this particular change seemed trivial to support, so I
    went ahead and did so.
    
    PiperOrigin-RevId: 439953080

[33mcommit d18ea20c112a0ce5c1435d02102cc9518aa0e0ea[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 6 15:07:38 2022 -0700

    Allow __match_args__ in pyi files to be assigned a tuple value.
    
    Typeshed has a lot of these in 3.10. We'll probably have to actually use the
    values when we want to support structural pattern matching, but for now, I'm
    just setting the type to tuple.
    
    PiperOrigin-RevId: 439945643

[33mcommit 1347ddbd47c97c1c8f13818a243a737e765b383f[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 6 14:38:39 2022 -0700

    Indicate Python 3.10 support.
    
    PiperOrigin-RevId: 439938385

[33mcommit 4c79d5d2f303662826890654f8620a69f39ff767[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 6 14:33:22 2022 -0700

    Remove the last traces of the no-longer-necessary --trace-all-classes flag.
    
    PiperOrigin-RevId: 439937082

[33mcommit 8a8704da0113902480755726898ad1ff6ab30b8d[m
Merge: 6afed8ef a830da21
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 6 15:52:44 2022 -0700

    Merge pull request #1176 from google/py310
    
    Enable Python 3.10.

[33mcommit a830da217ad3ed1253a0ba81cd6fb70babe05ae2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 6 15:00:51 2022 -0700

    Quote Python versions so 3.10 isn't interpreted as 3.1.

[33mcommit 0f71fc32545bf1a233471950b203892c15f0b84b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 6 14:22:47 2022 -0700

    Enable Python 3.10.

[33mcommit 6afed8efc508c8d5a540efa48c5e435071f3cee8[m
Merge: 20a68e6d 42d2c89c
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 6 14:00:13 2022 -0700

    Merge pull request #1175 from google/google_sync
    
    Google sync

[33mcommit 42d2c89cd1fa2263131eccb1618610a1d61147b9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 6 13:24:13 2022 -0700

    Disable cache-max-size-none lint.

[33mcommit c9b7e1ee8d8d2853f4cfcaa5436e9942e43b4e1c[m
Author: mdemello <mdemello@google.com>
Date:   Wed Apr 6 12:53:16 2022 -0700

    Instantiate pyi namedtuples directly as interpreter classes.
    
    * Gets rid of most code generation in the parser
    * Outputs all namedtuple forms as `typing.NamedTuple` subclasses without
      generated methods.
    * Does not generate an intermediate class in the case of subclass definitions.
    
    Functional constructors in pyi files are still converted to subclasses of an
    intermediate class.
    
    PiperOrigin-RevId: 439912087

[33mcommit 615bea7cfd06b93dde05ce3e38bafd94f794450f[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 6 12:21:27 2022 -0700

    Python 3.10: Get last few tests passing.
    
    The last few test failures were due to the line numbers of RETURN_VALUE opcodes
    changing. The only real bugs were in pytype's handling of function type
    comments, and since (1) no one should have any reason to use function type
    comments anymore and (2) the failures are in what look like pretty uncommon
    edge cases, I just skipped those tests in 3.10.
    
    I also updated the upper version bound and fixed a type annotation so that the
    GitHub pytype check runs successfully in 3.10.
    
    For #1022.
    
    PiperOrigin-RevId: 439905120

[33mcommit 20a68e6d981fddeb3ce34750e15ad4098139de4b[m[33m ([m[1;33mtag: 2022.04.06[m[33m)[m
Merge: 2a5b0038 31e24f74
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 6 12:51:13 2022 -0700

    Merge pull request #1174 from google/google_sync
    
    Prepare a PyPI release.

[33mcommit 31e24f7436081dffa6325d33660158d09f84bcd5[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 6 11:48:41 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 439897533

[33mcommit 2a5b0038a10b095c6b9f097e745de386e9bbee45[m
Merge: fd73ca41 aad54ceb
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 5 18:37:25 2022 -0700

    Merge pull request #1173 from google/google_sync
    
    Google sync

[33mcommit aad54cebcebda1b1bf52dc97358a303df5bdac25[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 5 16:46:31 2022 -0700

    Add a skipped test case and some logging for a complexity bug.
    
    The recent namedtuple refactoring somehow triggered this bug for a couple of
    files. While investigating it, I created a nice self-contained test case, so
    adding it to test_namedtuple. I also added some logging to make this issue
    easier to debug in the future.
    
    PiperOrigin-RevId: 439707655

[33mcommit 0fbd363e010b68db4a4f3518db51100d97279418[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 5 15:42:54 2022 -0700

    Update definition of typing.get_type_hints.
    
    Copies a more accurate definition from typeshed. This fixes a build breakage
    at head caused by us using our own typing.get_type_hints definition instead of
    typeshed's typing_extensions.get_type_hints.
    
    I typed obj as Any instead of Callable[..., Any] (like it is in
    typing_extensions) because typeshed's typing.get_type_hints has the type of obj
    as some complicated union that includes 'object'.
    
    PiperOrigin-RevId: 439694585

[33mcommit fdf13a257c9aea91b0afd8aee6ba3de146155ab4[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 5 14:58:16 2022 -0700

    Don't raise duplicate-keyword-argument for positional-only arguments.
    
    PiperOrigin-RevId: 439684361

[33mcommit c55eaeccc36984ab2d227e423502dd7124446975[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 4 21:52:47 2022 -0700

    Python 3.10: get two more test files passing.
    
    * tests/test_errors1: All that needed to be done here was adjusting some of the
      expected error counts and messages. While I was in the file, I also changed
      some unnecessary usages of InferWithErrors to CheckWithErrors.
    * constant_folding_test: In 3.10, LIST_APPEND, MAP_ADD, and DICT_UPDATE are
      used to construct large constant lists and dicts, so constant_folding needs
      to know what to do with them.
    
    Only four failures in three test files left!
    
    For #1022.
    
    PiperOrigin-RevId: 439487010

[33mcommit fd73ca41b8ece30076b53f95c42c483969898de7[m
Merge: b4480bdd 2084fa3e
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 4 16:44:19 2022 -0700

    Merge pull request #1172 from google/google_sync
    
    Google sync

[33mcommit 2084fa3e15ef55c8cfd7eed0b44dd815a774106f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 4 16:10:20 2022 -0700

    Fix line-too-long issues in typing.NamedTuple tests.

[33mcommit 0a248f43c8554b6bc59560b37c90cf49ff48dc51[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 4 15:53:50 2022 -0700

    Simplify function arguments before SimpleFunction uses them.
    
    There was a comment in SimpleFunction.call() explaining why the arguments were
    deliberately not simplified, but simplifying them doesn't break any of our
    tests (in fact, it catches a mistake in one of the tests!), so I just deleted
    the comment.
    
    This fixes a few more namedtuple-related errors at head.
    
    PiperOrigin-RevId: 439432265

[33mcommit d2f3b0856a9b9392fbd0d8d839156795811c44b4[m
Author: rechen <rechen@google.com>
Date:   Sat Apr 2 12:00:36 2022 -0700

    Generate unique TypeVar names for namedtuples.
    
    Some of the new findings at head were caused by the overlay generating
    duplicate TypeVars for namedtuples with the same name.
    
    PiperOrigin-RevId: 439051805

[33mcommit 06c5b24245a5fa40f6156444789341147aa4c92d[m
Author: mdemello <mdemello@google.com>
Date:   Fri Apr 1 15:32:26 2022 -0700

    Move some more special-case code from abstract/_classes to abstract/_special_classes.
    
    PiperOrigin-RevId: 438925435

[33mcommit e08acd6fa56f171813035b200db31b52944d6c9d[m
Author: mdemello <mdemello@google.com>
Date:   Fri Apr 1 15:20:39 2022 -0700

    Refactor ctx.make_class to take a single struct as an argument.
    
    PiperOrigin-RevId: 438923095

[33mcommit b4480bdd5cb00ed85ef2ec563fe2d7c05af2979a[m
Merge: a07a86ad 7bb4a1ca
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 31 20:06:14 2022 -0700

    Merge pull request #1170 from google/google_sync
    
    Google sync

[33mcommit 7bb4a1ca3bd5a6c4e27a95dd1bb3c2d02bf8fa1d[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 31 17:48:32 2022 -0700

    Add a --platform option to pytype.
    
    Defaults pytype to platform=sys.platform and tests to platform="linux".
    
    Also fixes a minor issue in analyze_project/config.py: for feature/experimental
    flags, we were outputting the flag description rather than the default value to
    sample config files.
    
    Resolves https://github.com/google/pytype/issues/1133.
    
    PiperOrigin-RevId: 438703758

[33mcommit 1342429877882daf06769a463488b56b588f06b4[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 31 17:06:19 2022 -0700

    Set TypedDict pyval items when instantiating a TypedDictClass.
    
    This also lets us simplify TypedDict.getitem_slot a little.
    
    Resolves https://github.com/google/pytype/issues/1163.
    
    PiperOrigin-RevId: 438696340

[33mcommit ea9be67b20926584b51fa52518ce8c46e2a69c16[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 31 12:42:40 2022 -0700

    3.10: Do some simple test updates.
    
    Updates some tests in cases where it was obvious to me that the problem was in
    the test and not the functionality under test.
    
    Only 21 failures in 5 test modules left.
    
    For #1022.
    
    PiperOrigin-RevId: 438635996

[33mcommit d98d573f26475226af09fe76ba79e44345b1e09e[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 31 11:26:43 2022 -0700

    Note chex overlay in support.md.
    
    PiperOrigin-RevId: 438617742

[33mcommit ec51e356bf15ee7e31e39481b450c74d2738c48a[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 31 11:21:54 2022 -0700

    Mark literal enums as supported.
    
    PiperOrigin-RevId: 438616404

[33mcommit f94857529f7f5e9558cc73a1bb9c627884b9a726[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 30 20:56:15 2022 -0700

    Add link to typing_extensions member_map to developer doc.
    
    PiperOrigin-RevId: 438468321

[33mcommit a07a86ad8fb12dfb953ae426b03a008f4dfb23a8[m
Merge: 6709a69c d96a9c34
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 30 20:44:31 2022 -0700

    Merge pull request #1167 from google/google_sync
    
    Google sync

[33mcommit d96a9c34a22f80dc032be9cd4327e6815c8cbe0e[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 30 18:16:38 2022 -0700

    Default --trace-all-classes to True.
    
    The blocklist is empty.
    
    PiperOrigin-RevId: 438445804

[33mcommit 58745c117018f16415fa2ef6f8fe65c39e6b49a3[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 30 18:12:03 2022 -0700

    Cleanup: get rid of an unused 'bases' parameter in NamedTupleFuncBuilder.call.
    
    I couldn't find anywhere 'bases' is actually passed in, and when I changed the
    code to:
    
    _UNIQ = object()
    
    def call(..., bases=_UNIQ):
      assert bases is _UNIQ
      bases = None
    
    none of the tests failed, so I'm fairly certain this parameter can be removed.
    
    PiperOrigin-RevId: 438445134

[33mcommit 10dd92c80dc8bf4265f9c69a343286c690c31fce[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 30 17:18:54 2022 -0700

    Do a better job of determining whether a typing(_extensions) import is allowed.
    
    The immediate reason for this change is to fix a test that was failing in 3.10
    because we were failing to log [not-supported-yet] for
    typing_extensions.TypeGuard. I took the opportunity to simplify some things in
    typing_overlay and typing_extensions_overlay to make future development easier
    and enable us to log more accurate and helpful error messages.
    
    For #1022.
    
    PiperOrigin-RevId: 438436286

[33mcommit 9fa28692920f5b252dde98fc5dc6e397114ef8bd[m
Author: mdemello <mdemello@google.com>
Date:   Wed Mar 30 15:50:25 2022 -0700

    Fix for comparing recursive tuples for equality.
    
    Fixes a corner case where a recursive tuple containing a namedtuple could
    trigger a crash. (This does not fix the underlying issue where the tuple should
    not have been recursive (see the test case), but the bandaid seems safe enough
    to apply here.)
    
    PiperOrigin-RevId: 438416749

[33mcommit 2a2ae22696df2bffda42bf7e00c24be1cfb61cab[m
Author: mdemello <mdemello@google.com>
Date:   Wed Mar 30 13:25:49 2022 -0700

    Merge collections.namedtuple() and typing.NamedTuple() builders
    
    Refactors both classes to expose an identical "construct a named tuple from
    function arguments" workflow, and extracts argument handling code into a common
    base class and some helper structs.
    
    One side effect is that collections.namedtuples are "promoted" to
    typing.NamedTuples, which have a slightly richer interface; if that turns out
    to be a problem we can pass in an argument to distinguish between them but in
    practice it shouldn't matter.
    
    Also cleans up the comments and docstrings a bit.
    
    PiperOrigin-RevId: 438381586

[33mcommit 1bc5938dba8c0fa555b779b664d826695ecf56fe[m
Author: mdemello <mdemello@google.com>
Date:   Tue Mar 29 21:51:11 2022 -0700

    Create the same InterpreterClass for collections.namedtuple and typing.NamedTuple
    
    Modifies the collections.namedtuple tests to not check the generated pyi directly.
    
    Disables a couple of tests that are no longer passing with the new
    representation; these seem to be more related to InterpreterClass in general
    than to namedtuples specifically.
    
    PiperOrigin-RevId: 438208204

[33mcommit 6709a69cbe53b27de724931732cc7410573a359d[m[33m ([m[1;33mtag: 2022.03.29[m[33m)[m
Merge: ed3f1820 a9477748
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 29 18:01:07 2022 -0700

    Merge pull request #1165 from google/google_sync
    
    Google sync

[33mcommit a94777484e3e8916ec8eb7488fe966f1facadd3c[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 29 16:38:52 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 438157615

[33mcommit 139aa003bdca57139283f65d49f7acc1d5dc0bd9[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 29 12:01:27 2022 -0700

    Fix a couple of crashes at head.
    
    * Load lazy PyTDClass members before accessing them.
    * Use a heuristic to distinguish between Literal enums and imported Literal
      aliases in the pyi parser.
    
    PiperOrigin-RevId: 438086448

[33mcommit 79b0781f89ec89b4953717a21d685246e8931294[m
Author: mdemello <mdemello@google.com>
Date:   Mon Mar 28 17:01:40 2022 -0700

    Refactor the namedtuple class-style builder code.
    
    The class-style namedtuple builder no longer calls the function-style builder;
    instead, the actual namedtuple construction is pulled out into a standalone
    function, and both builders call it.
    
    Rather than construct function args, the class-style builder constructs a
    NamedTupleProperties object and passes it to the builder. This will ultimately
    serve as the common interface for all namedtuple construction.
    
    PiperOrigin-RevId: 437889056

[33mcommit b26655106f19e1e7a911c4b2550cbf273f3b2b11[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 25 18:02:38 2022 -0700

    3.10: Do some odd line delta adjustments and fix pyi.parser_test.
    
    * Copies some logic for adjusting line deltas from the CPython source. I don't
      understand it, but it works?
    * Fixes an expected error message in the pyi parser test. The pre-3.10 error
      message was better IMO, but the error message comes from the stdlib ast
      parser, so we don't have control over it.
    
    We now have just 26 test failures in 8 test files left.
    
    For #1022.
    
    PiperOrigin-RevId: 437374111

[33mcommit ed3f1820bb475b2f8939b22ec6583a9a23995c2a[m
Merge: d4304b39 c1d12e34
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 25 17:40:26 2022 -0700

    Merge pull request #1161 from google/google_sync
    
    Google sync

[33mcommit c1d12e3467fb4ec3fa6eb99a180e51383723a5b2[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 25 15:57:39 2022 -0700

    Resolve (arguments-renamed) lint findings.
    
    See https://github.com/google/pytype/actions/runs/2038672022.
    
    PiperOrigin-RevId: 437353280

[33mcommit ef12362824cb038db8727ef4d46d21130571e4a5[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 25 14:06:08 2022 -0700

    3.10: Don't skip the first line number delta in the line number table parser.
    
    In our line number calculations, we were skipping the first delta, leading to
    our line numbers sometimes being off by one.
    
    This fix brings down the test failure count from 320 to 69.
    
    For #1022.
    
    PiperOrigin-RevId: 437330907

[33mcommit 02973ffdb9a3cdf312a8cf2243edff2410d129d5[m
Author: mdemello <mdemello@google.com>
Date:   Fri Mar 25 13:59:12 2022 -0700

    Factor out typed-dict specific code from the PyTDClass constructor.
    
    Creates an `abstract._special_classes` module and defines a common interface
    for special classes that generate code via inheritance from a given class.
    
    PiperOrigin-RevId: 437329277

[33mcommit bae65f403b80f9429313d11ba584ef107132d066[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 25 15:17:59 2022 -0700

    Resolve (arguments-renamed) lint findings.

[33mcommit 7d702147552f021e4a33fbc62f0c124850fba074[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 24 17:55:15 2022 -0700

    Support partial forward references in pyi files.
    
    I was looking into adding a better error message for these and realized that
    they seem fairly simple to support.
    
    PiperOrigin-RevId: 437130032

[33mcommit 8abb5f8567e7720d16d459d8c1a5e52980270ce8[m
Author: tsudol <tsudol@google.com>
Date:   Thu Mar 24 13:36:57 2022 -0700

    Fix a couple crashes related to literal enums.
    
    - convert.py: Pickled modules may have some LateTypes floating around. Detect
    those and resolve them while converting.
    - matcher.py: It's now possible for `left` and `other_value` to be different
    types, causing a crash when accessing attributes that aren't on the other type.
    
    PiperOrigin-RevId: 437075104

[33mcommit 9a557cf627f31a49fa4c86b9a31e0150890e26a6[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 24 12:59:24 2022 -0700

    Generate new views when instantiating a value in output.py.
    
    This fixes a crash that happens when we try to access a binding that isn't
    present in the original view.
    
    PiperOrigin-RevId: 437065925

[33mcommit d4304b39732b09e57fc99c7663508ecfff642d49[m
Merge: 5a271c11 f4396870
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 23 13:29:13 2022 -0700

    Merge pull request #1160 from google/google_sync
    
    Google sync

[33mcommit f43968706516087ee14e2c6035d6fd441a85132e[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 23 11:44:24 2022 -0700

    Convert type aliases in pyi files to aliases instead of constants.
    
    I can't for the life of me figure out why only aliases work, and only if
    they're added to defs. (Constants show up in the generated pyi file even
    without being added but break in some weird way in typeshed, and adding them to
    defs doesn't help.)
    
    Resolves https://github.com/google/pytype/issues/1159.
    
    PiperOrigin-RevId: 436792633

[33mcommit 1740d7aa7e7617395eb3e5147ad17128b54a308f[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 23 11:44:05 2022 -0700

    Fix some Python 3.10 crashes.
    
    * Handles a change in how function annotations are stored.
    * Adds the NO_NEXT flag to the new RERAISE opcode.
    * Implements NOP. This opcode was present in 3.9 as well but seems to have gone
      unused until 3.10.
    
    These fixes reduce the number of tracebacks in our test logs from 966 to 320
    (and the remaining ones seem to be assertion errors for test failures).
    
    For #1022.
    
    PiperOrigin-RevId: 436792541

[33mcommit cd21ae9309fede73cd133a16efba8c4e887e22de[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 23 11:03:38 2022 -0700

    Fix line-too-long issues.
    
    The internal linter was happy with these lines but the oss one wasn't.
    
    PiperOrigin-RevId: 436782270

[33mcommit 51bc7ca54b33c22d10f5088039f96d29f736b179[m
Author: tsudol <tsudol@google.com>
Date:   Tue Mar 22 17:02:28 2022 -0700

    Improve error messages for Literals in type stubs.
    
    PEP 586 forbids using expressions in Literals. The current error message doesn't make this particularly clear.
    
    PiperOrigin-RevId: 436606630

[33mcommit fc1cf37d7cc1f6ecb31b1ab2fce9c3cd6cb7b487[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 22 12:29:48 2022 -0700

    --strict-parameter-checks: Strictify function.call_function.
    
    For #365.
    
    PiperOrigin-RevId: 436540958

[33mcommit 5a271c1110562694b87b35065398fcdb4c33021b[m
Merge: 243c95df 41fca969
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 22 16:46:22 2022 -0700

    Merge pull request #1158 from google/google_sync
    
    Google sync

[33mcommit 41fca969197dd93d57a7ea6fefb20d1ac388cef7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 22 16:09:33 2022 -0700

    Fix line-too-long issues.

[33mcommit 7eb213c8e86d9e7e1f58f66a5a5f1a150cb6747e[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 21 19:01:22 2022 -0700

    Handle subclasses in property_get.
    
    PiperOrigin-RevId: 436360117

[33mcommit f21eeb5c1da35baa54be2477dd4e38f2a0aa27de[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 21 17:55:12 2022 -0700

    Apply a couple of user-proposed fixes to merge-pyi.
    
    These fixes were proposed by @mrolle45 in the linked issues.
    
    Resolves https://github.com/google/pytype/issues/1153.
    Resolves https://github.com/google/pytype/issues/1156.
    
    PiperOrigin-RevId: 436350521

[33mcommit 2c21609db3c8ae3e6448db93c4d675699b95a034[m
Author: tsudol <tsudol@google.com>
Date:   Mon Mar 21 17:36:21 2022 -0700

    Add support for literal enums.
    
    PiperOrigin-RevId: 436347608

[33mcommit 243c95df01a989f4acf2437e1f490804f404523c[m[33m ([m[1;33mtag: 2022.03.21[m[33m)[m
Merge: 9f6746fb 7282bc92
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Mar 21 18:05:33 2022 -0700

    Merge pull request #1157 from google/google_sync
    
    Google sync

[33mcommit 7282bc926dfb7ce4b450f8af9b06cd148a3cd2dd[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 21 16:13:40 2022 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 436330289

[33mcommit 548c0539ccb91d62776c2b16766c572f5f17f15e[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 21 14:20:17 2022 -0700

    Add newly accepted PEPs to support.md
    
    PiperOrigin-RevId: 436303551

[33mcommit b6a3a4dae29587c4a19a11e0a3bcf63b13e44fd9[m
Author: rechen <rechen@google.com>
Date:   Sat Mar 19 00:13:37 2022 -0700

    Actually use the extracted type annotation when typing.TypeAlias is seen.
    
    This fixes a bug where forward references weren't evaluated.
    
    PiperOrigin-RevId: 435826058

[33mcommit bbbe61f627834a812dcbd80a9a8d4c6dce070d2f[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 17 12:57:45 2022 -0700

    Fix a crash in matcher.py.
    
    PiperOrigin-RevId: 435424286

[33mcommit 0db79933067713ae022a0c0fbf658e0471557c4c[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 17 12:54:16 2022 -0700

    Mark explicit type aliases as supported.
    
    PiperOrigin-RevId: 435423414

[33mcommit 8a74502666e964ea2f6fab1dfa221120fd8fa7f7[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 16 19:15:29 2022 -0700

    Check IsVisible() before reporting errors in function.call_function.
    
    PiperOrigin-RevId: 435223368

[33mcommit 092890e50df8d77d6466b2597a65a18c128be6d0[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 16 11:06:47 2022 -0700

    Add a pyi_to_pickle tool.
    
    This will be used to convert pyi files generated by the proto compiler to
    pickle files, so we can get rid of proto_to_pyi.
    
    Note that most of the code is lifted from proto_to_pyi.py.
    
    PiperOrigin-RevId: 435100772

[33mcommit 9f6746fbe47b3adab31c0b33e733105e16914698[m
Merge: c8410c44 ba883395
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 16 11:55:45 2022 -0700

    Merge pull request #1150 from google/google_sync
    
    Google sync

[33mcommit ba8833959d5dce4320892d220482bda8d26c0573[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 16 10:49:53 2022 -0700

    Support typing.TypeAlias.
    
    I noticed that we seem to be holding up usage of TypeAlias in typeshed:
    https://github.com/python/typeshed/pull/7493#issuecomment-1068425766. TypeAlias
    is relatively simple, so I went ahead and added support for it in both .py and
    .pyi files.
    
    Resolves https://github.com/google/pytype/issues/787.
    
    PiperOrigin-RevId: 435095246

[33mcommit fe791056bba0316eb15a7d7c232ef659216d4248[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon Mar 14 21:42:39 2022 -0700

    Fix typing error when moving from named tuple to dataclass.
    
    PiperOrigin-RevId: 434654254

[33mcommit 014f3a99573dd3106babe598b86cb24a22104a12[m
Author: mdemello <mdemello@google.com>
Date:   Thu Mar 10 19:43:20 2022 -0800

    Get rid of the `errorlog` argument to `Context()` and `analyze.*`
    
    The vm error log is now created and owned by the context rather than being
    injected into it.
    
    PiperOrigin-RevId: 433911128

[33mcommit c841e8072bb516cee6420b09d09882bd9f724f92[m
Author: mdemello <mdemello@google.com>
Date:   Thu Mar 10 18:37:30 2022 -0800

    Do not initialize the context with an ErrorLog
    
    * Always creates an errorlog within the context's init method.
    * Returns `ctx.errorlog` from `analyze.check_types` and `analyze.infer_types`
    * Passes `errorlog=None` to analyze.*
    
    Note: `errorlog` is kept as an arg to both `Context.__init__` and `analyze.*`
    until we have cleaned up all the callers. Pytype internal code always passes
    `None` now though.
    PiperOrigin-RevId: 433901710

[33mcommit 4bc0524cc9d7c6aa39bcc3a5c178812d10579e27[m
Author: mdemello <mdemello@google.com>
Date:   Thu Mar 10 17:32:13 2022 -0800

    Make the errorlog argument in Context() optional.
    
    If the argument defaults to None, the context will create its own ErrorLog.
    
    This CL does not use the default argument, it just fixes everywhere that was
    calling Context() with posargs, and refactors some test code to call the
    constructor in fewer places.
    
    PiperOrigin-RevId: 433891436

[33mcommit 9b64c0226ce1dd9e444acc0d19602b0583211c98[m
Author: mdemello <mdemello@google.com>
Date:   Thu Mar 10 13:15:13 2022 -0800

    Refactor the test error matcher slightly.
    
    It is now a matcher wrapping the errorlog, rather than an ErrorLog subclass.
    
    This is part of a larger refactoring effort to stop injecting an errorlog into
    the context, and let the context create and own it instead.
    
    PiperOrigin-RevId: 433833999

[33mcommit c8410c441ad2d283be5f45002fc7955e06b9ff53[m
Merge: c92d839b d00e296d
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 10 13:09:36 2022 -0800

    Merge pull request #1149 from google/google_sync
    
    Google sync

[33mcommit d00e296d19f1c6fe2aceebe4eb3216a06ae3a312[m
Author: slebedev <slebedev@google.com>
Date:   Thu Mar 10 11:17:04 2022 -0800

    Internal change
    
    PiperOrigin-RevId: 433803114

[33mcommit fc08da16d4eab1deace406c52130457a7da66020[m
Author: mdemello <mdemello@google.com>
Date:   Wed Mar 9 20:55:22 2022 -0800

    Fix matching of Final[T] against T for imported final constants.
    
    Fixes https://github.com/google/pytype/issues/1147
    
    PiperOrigin-RevId: 433648289

[33mcommit d015991e723b371439dffd318b0f3d5a5471652d[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 9 16:33:20 2022 -0800

    Internal change
    
    PiperOrigin-RevId: 433607289

[33mcommit 31ca07fbbd863a582f2c2ec1f3619fbfe57e998c[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 9 13:27:29 2022 -0800

    Fix TypedDictClass.instantiate(...) signature.
    
    `container` needs to have a default value, so that calling instantiate() with a
    single arg works.
    
    PiperOrigin-RevId: 433560297

[33mcommit 6e831a197668744482acb99fd01db4726d99f498[m
Author: mdemello <mdemello@google.com>
Date:   Tue Mar 8 12:30:57 2022 -0800

    Fix a crash when reporting an error for an undefined value.
    
    Variable type displayed as `nothing`, since `Any` would be misleading.
    
    PiperOrigin-RevId: 433281706

[33mcommit c92d839babb061b36d909bdb8481d1648cabc074[m[33m ([m[1;33mtag: 2022.03.08[m[33m)[m
Merge: 7f23e0ad 4c3c3499
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 8 13:07:47 2022 -0800

    Merge pull request #1146 from google/google_sync
    
    Google sync

[33mcommit 4c3c34993d770332ba6ffd0d320284c9af60fa75[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 8 12:00:36 2022 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 433273370

[33mcommit c608f0d4720ebea887410953bf88c8ea40d15846[m
Author: mdemello <mdemello@google.com>
Date:   Mon Mar 7 15:18:18 2022 -0800

    Catch type errors when folding constants.
    
    PiperOrigin-RevId: 433053030

[33mcommit 358e617c158e70ddaa30894e18f0527c36d55b11[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 7 10:43:52 2022 -0800

    Add a --strict-primitive-comparisons flag.
    
    Adds a feature flag for the builtins.pytd change in
    https://github.com/google/pytype/commit/b10ccb1727a46b3abf3fe4a36a47e7550d39b42d,
    since it causes ~80 new breakages. (I didn't bother to put the slots.py change
    behind the flag because it causes <20 breakages.)
    
    Modifies the pyi parser to recognize `if PYTYPE_OPTIONS.flag_name` checks so
    that feature flags can be used to modify pyi contents.
    
    PiperOrigin-RevId: 432983156

[33mcommit 7f23e0adf1d52ef276f2c3297cabcb76231d60a9[m
Merge: 58e44c6d fd117e28
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 4 15:00:42 2022 -0800

    Merge pull request #1144 from google/google_sync
    
    Google sync

[33mcommit fd117e28a7f9d5647377327824694a4ef649059a[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 4 14:22:29 2022 -0800

    Fix Callable argument count inconsistency for decorated instance methods.
    
    For code like:
    
    def decorate(...) -> Callable[[SelfType], Any]: ...
    
    class Foo:
      @decorate
      def f(self): ...
    Foo.f()
    
    pytype would complain that 'f' had been called without the SelfType argument.
    (If SelfType were omitted, pytype would complain that 'decorate' had been
     passed a function with too many arguments.) This change fixes this problem by
    converting Callables to SimpleFunctions when they are stored as class
    attributes.
    
    Resolves https://github.com/google/pytype/issues/375.
    
    PiperOrigin-RevId: 432531661

[33mcommit c6ede83ac023f3f91533932b3385bcc840787730[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 4 13:37:52 2022 -0800

    Fix a bug where some classes weren't traced.
    
    We weren't calling trace_classdef() on most of the classes we create, with the
    result that in any classes that didn't end up in globals() (nested classes,
    classes whose decorators didn't return them, etc.), class methods were being
    analyzed as standalone functions with self=Any.
    
    This change generates a whole lot of new errors (enough to cause some 117,567
    breakages), so I've put it behind a new feature flag, --trace-all-classes.
    
    PiperOrigin-RevId: 432521586

[33mcommit 58e44c6deb51659f45d324471c57d8ecd206ba4b[m
Merge: b6b6448d 46d6c3c0
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 4 13:38:03 2022 -0800

    Merge pull request #1143 from google/google_sync
    
    Google sync

[33mcommit 46d6c3c00bba7313a24faf6d500a532ab255397c[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 3 15:38:21 2022 -0800

    Add an overlay for clif.python.type_customization.extend.
    
    I have an upcoming change to support nested classes in pytype, which as a side
    effect fixes a bug where decorated classes wouldn't get analyzed if the
    decorator isn't recognized as returning the class. This in turn generates
    errors in a bunch of @extend-decorated classes, unless we add an overlay.
    
    Note that this change does *not* add full support for
    type_customization.extend; it only gets rid of the most obvious errors.
    
    PiperOrigin-RevId: 432300381

[33mcommit 1ec9c71216a99a9c8545d7f6a40865926c6b779a[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 2 16:33:27 2022 -0800

    Fix a caching bug that caused closure variables to be reused.
    
    PiperOrigin-RevId: 432058029

[33mcommit b32b7c08df03ed894d1dd2c3ffd818c61f5b76d3[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 1 23:39:06 2022 -0800

    Cleanup: delete attr_overlay.Factory, which no longer does anything.
    
    The make method used to be more complicated but now just calls super().make.
    
    PiperOrigin-RevId: 431863893

[33mcommit 1f43c4e4a0511590f7b86a3992411c28e7a0170f[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 1 13:41:41 2022 -0800

    Merge typing and typing_extension's not_supported_yet.
    
    Yesterday's change to how typing_extension_overlay handles not_supported_yet
    hasn't caused any obvious problems, so let's do the same for typing_overlay.
    
    PiperOrigin-RevId: 431766025

[33mcommit 7df211baa7a477197130aa03285ecefbb7ebf0e3[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 28 20:52:50 2022 -0800

    Address lint finding.
    
    See https://github.com/google/pytype/runs/5369315518?check_suite_focus=true.
    
    PiperOrigin-RevId: 431593819

[33mcommit bfd37d269b004408e21892f93ab5fef4d8228da2[m
Author: mdemello <mdemello@google.com>
Date:   Mon Feb 28 19:57:31 2022 -0800

    Restore output.unpack(); kythe was using it.
    
    PiperOrigin-RevId: 431586142

[33mcommit b6b6448dc562a7200326c92e75efeed203984e16[m
Merge: ce8d23f6 f68b1fb1
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Feb 28 20:26:49 2022 -0800

    Merge pull request #1142 from google/google_sync
    
    Google sync

[33mcommit f68b1fb13e31114293f6382d66083e58829c5af4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Feb 28 18:59:37 2022 -0800

    Address lint finding.

[33mcommit 10c84a079cd8bee4944348a3b0b6688e95c66405[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 28 18:47:30 2022 -0800

    Import a documentation change.
    
    PiperOrigin-RevId: 431576947

[33mcommit 90301554e675d28987fab17010fb864ad5067700[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 28 18:38:30 2022 -0800

    Still look up typing_extensions types when reporting not-supported-yet.
    
    Resolves https://github.com/google/pytype/issues/1135.
    
    PiperOrigin-RevId: 431575621

[33mcommit c9a9ea374c6f254e93010ed3f4c5e462b2335a00[m
Author: mdemello <mdemello@google.com>
Date:   Mon Feb 28 17:19:19 2022 -0800

    Standardise on dataclasses for xref.
    
    We were using a mix of untyped attrs and namedtuples, replace them all with
    typed dataclasses (since we aren't using any attrs features).
    
    PiperOrigin-RevId: 431562769

[33mcommit b10ccb1727a46b3abf3fe4a36a47e7550d39b42d[m
Author: mdemello <mdemello@google.com>
Date:   Mon Feb 28 11:44:33 2022 -0800

    Copy the specific comparison methods for primitive classes from typeshed.
    
    Previously comparisons on int, str, float and complex would use the default
    
    `def __gt__(other: Any) -> bool`
    
    (and similarly for the other operators).
    
    PiperOrigin-RevId: 431488610

[33mcommit 0b9d0adc95dcb1a2dcf1f0dc510c7a0f2c0e1795[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 25 17:09:18 2022 -0800

    Parse Python 3.10's new line number table format.
    
    This brings down the number of 3.10 test failures from 106 to 87.
    
    For #1022.
    
    PiperOrigin-RevId: 431061841

[33mcommit ce8d23f60c4e0a61417487c22f88fc0c7655c035[m
Merge: e4e0670e c482e7db
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 25 17:54:56 2022 -0800

    Merge pull request #1141 from google/install
    
    Clean up pytype install requirements and documentation.

[33mcommit c482e7dbaf94ce2ab7273034068c7d5909221079[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Feb 26 00:59:57 2022 +0000

    Clean up pytype install requirements and documentation.
    
    Noticed these issues while setting up a pytype dev environment on a new machine.
    
    * Remove code that checked for the presence of bison and flex, which
      haven't been needed for a while.
    * Note in CONTRIBUTING.md that the python3.x-dev package is also needed;
      I got a cryptic error from pybind11 when it was missing.
    * Remove a line from requirements.txt that was previously needed to
      force installation of a newer version of astroid than pylint required.

[33mcommit e4e0670ee35c912869fa77f1b5955be77fa23da1[m
Merge: 3809097e 1e8d717d
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 25 15:15:48 2022 -0800

    Merge pull request #1140 from google/google_sync
    
    Unpack ClassVar in constant_to_var so unions are handled correctly.

[33mcommit 1e8d717d08c5d9d264ed6e26a268dde656cc816d[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 25 22:12:31 2022 +0000

    Unpack ClassVar in constant_to_var so unions are handled correctly.
    
    Fixes https://github.com/google/pytype/issues/1138.
    
    PiperOrigin-RevId: 431027196

[33mcommit 3809097e0cba656f6112020eb88b932164c6b238[m
Merge: ac76d175 b31f7aaa
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 24 16:24:02 2022 -0800

    Merge pull request #1137 from google/google_sync
    
    Google sync

[33mcommit b31f7aaaf98cad7263f9571bd3cd347be25af88f[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Thu Feb 24 12:47:07 2022 -0800

    Use VName path for source files.
    
    PiperOrigin-RevId: 430770601

[33mcommit ee7af295416cd8ace51c8bf88c381d1b3b053fb6[m
Author: mdemello <mdemello@google.com>
Date:   Thu Feb 24 00:11:40 2022 -0800

    Handle `__getitem__` correctly for typed dicts passed as function args.
    
    ```
    # A = TypedDict with x: int
    def f(a: A):
      return a['x']  # => int
    ```
    
    PiperOrigin-RevId: 430633710

[33mcommit 3ef3022dcaa1ad33846f7649267a9cb6a718b66e[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 23 16:52:44 2022 -0800

    Allow using the `python3` executable if it matches the requested version.
    
    Currently, pytype fails if a `python3.x` executable can't be found, even if
    `python3` is a 3.x executable.
    
    Also gets rid of the always-empty "flags" part of options.python_exe and fixes
    a bug where get_python_exe_version let some subprocess errors slip through
    because it wasn't catching the corresponding exception type.
    
    Fixes https://github.com/google/pytype/issues/1129.
    
    PiperOrigin-RevId: 430570557

[33mcommit ac76d175dc2d19597d345880bb075f3c42aa4a36[m
Merge: a7d61585 48eed2fb
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 24 14:40:27 2022 -0800

    Merge pull request #1136 from google/ts
    
    Update typeshed to da093c395c16800fc81cebbf2fa8026d9e489c61.

[33mcommit 48eed2fb97aefc33113d215a30998160530f496e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 24 13:24:53 2022 -0800

    Update typeshed to da093c395c16800fc81cebbf2fa8026d9e489c61.
    
    Resolves https://github.com/google/pytype/issues/1135.

[33mcommit a7d61585697790a6d5343e2d59306b48337dc203[m[33m ([m[1;33mtag: 2022.02.23[m[33m)[m
Merge: 9a0f4928 4beab8de
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 23 16:05:19 2022 -0800

    Merge pull request #1132 from google/google_sync
    
    Google sync

[33mcommit 4beab8dee7b995dfea7c8db9628b40faa1f02713[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 23 13:59:10 2022 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 430532783

[33mcommit 61056f0277d96f14d719c4e0732217d3a5ee606e[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 22 17:00:16 2022 -0800

    Ignore some private attributes when doing pyi star imports.
    
    * __all__ should always be skipped.
    * Underscore-prefixed TypeVar definitions are obviously not meant to be
      exported.
    
    See https://github.com/python/typeshed/pull/7343.
    
    PiperOrigin-RevId: 430327362

[33mcommit 3f639d5c0922ea158b9433df6498de6d0bcc4f99[m
Author: mdemello <mdemello@google.com>
Date:   Fri Feb 18 17:46:16 2022 -0800

    Replace some uses of pytd_tree.Lookup() with pytd_tree.Get()
    
    Lookup throws an exception for not-found, while Get returns None
    
    PiperOrigin-RevId: 429683249

[33mcommit 9a0f492875f8440627fef7de42ee9244e89e8a06[m
Merge: 28c8780a 0bd4a137
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 18 15:45:50 2022 -0800

    Merge pull request #1128 from google/google_sync
    
    Google sync

[33mcommit 0bd4a137dd92c877f85f7708b7ed9d42eefa549e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 18 15:12:22 2022 -0800

    Modify pylintrc to ignore long URLs on a line by themselves.

[33mcommit a4e3ca582a50a9e550cc7ef9b4d026e5558f2dbe[m
Author: mdemello <mdemello@google.com>
Date:   Fri Feb 18 14:57:46 2022 -0800

    Do not use exceptions for flow control within LookupItemRecursive
    
    Also does some minor refactoring around the lookup cache.
    
    PiperOrigin-RevId: 429654929

[33mcommit 7e091552e877315abad501c0e2aa9e6af681ec5d[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 18 13:59:27 2022 -0800

    Allow `<name>: Final = <Literal value>` in pyi files.
    
    See https://github.com/python/typeshed/issues/7258. While that issue proposes
    that Final constants be handled differently from Literal ones, we generally
    allow type mutations (unless a name is annotated), so it should be fine to just
    convert Final to Literal.
    
    PiperOrigin-RevId: 429642600

[33mcommit 44438e7e3bf07878cc0be21f42611595526c2017[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 18 09:47:49 2022 -0800

    Cleanup: remove an unused keep_bytes() method from pyc/loadmarshal.py.
    
    PiperOrigin-RevId: 429587312

[33mcommit f27aec9656f9cb7c6064d3952c652533c82ecb5e[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 17 23:12:29 2022 -0800

    Fix Opcode.arg calculation for Python 3.10.
    
    This bug manifested in tests as an IndexError on the
    `op.arg = op.pretty_arg = offset_to_index[op.arg]` line in pyc/opcodes.py.
    Skimming through the Python changelog
    (https://docs.python.org/3/whatsnew/changelog.html), I found this entry:
    
    bpo-27129: The bytecode interpreter uses instruction, rather byte, offsets
    internally. This reduces the number of EXTENDED_ARG instructions needed and
    streamlines instruction dispatch a bit.
    
    The corresponding CPython commit
    (https://github.com/python/cpython/commit/fcb55c0037baab6f98f91ee38ce84b6f874f034a)
    helpfully includes a change to the stdlib `dis` library that shows how to
    adjust oparg calculation to account for this change.
    
    For #1022.
    
    PiperOrigin-RevId: 429488804

[33mcommit 0e7f41b113aa590d0a560776451e47eb4c661530[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 17 19:57:34 2022 -0800

    Fix a bug in generate_opcode_diffs and add a missing 3.10 opcode.
    
    The script missed an opcode (RERAISE) whose index changed in 3.10.
    
    Technically speaking, we should be using different class definitions for
    RERAISE in pyc/opcodes.py depending on the target version, but using the 3.10
    definition in older versions doesn't seem to cause any issues, so it's simpler
    to just always use the newest definition.
    
    For #1022.
    
    PiperOrigin-RevId: 429463279

[33mcommit fdc0c37f393005fd3fca442b7f9ab20730009e89[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 17 17:12:38 2022 -0800

    Add mising magic methods to typing.Counter.
    
    Copied [] here: https://github.com/python/typeshed/blo[]bdda8fd925963c7d57f239f7ab4306e768e43a/stdlib/collections/__init__.pyi#L285-L290
    
    PiperOrigin-RevId: 429438002

[33mcommit 39f9599ca2d7abaa080a91651d81e71a42b80bfb[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 17 15:33:37 2022 -0800

    Add a --strict-parameter-checks flag for exhaustive checking of param types.
    
    Also enables the flag for all of the tests that still do the right thing with
    it on.
    
    PiperOrigin-RevId: 429417761

[33mcommit a12633a03b8008b302abcb71d548bafbe4a74821[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 17 12:38:37 2022 -0800

    Make Python 3.10 changes to builtins.pytd and typing.pytd.
    
    * Change builtins.NotImplementedType to _NotImplementedType to match typeshed.
    * Add Concatenate, ParamSpec, TypeAlias, TypeGuard, and is_typeddict to typing.
    
    These changes get pytype.load_pytd_test and typeshed's pytype_test passing in
    3.10.
    
    For https://github.com/google/pytype/issues/1022.
    
    PiperOrigin-RevId: 429376959

[33mcommit 28c8780a3d2ac88954ea36fdccbac06f89ca0889[m[33m ([m[1;33mtag: 2022.02.17[m[33m)[m
Merge: ab1fb85b 84b78b17
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 17 12:42:00 2022 -0800

    Merge pull request #1127 from google/google_sync
    
    Prepare a PyPI release.

[33mcommit 84b78b1707641d647ebf30f5fcaca8bbe153b3ba[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 17 12:03:11 2022 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 429368500

[33mcommit ab1fb85bc98fe34a09e333bf034a89fbde3e4c3a[m
Merge: acaed298 3bcb904f
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 16 22:16:43 2022 -0800

    Merge pull request #1126 from google/google_sync
    
    Google sync

[33mcommit 3bcb904f5d5f07bf982626992adff353eb7fc557[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 16 21:41:59 2022 -0800

    Remove TypedDict 'total' check that sometimes fires incorrectly.
    
    Fixes https://github.com/google/pytype/issues/1122.
    
    A proper fix would be to do this check after external types have been resolved,
    but we currently discard information on TypedDict totality rather than storing
    it anywhere.
    
    PiperOrigin-RevId: 429217158

[33mcommit a377bf6f7be0fd62a4bfe05a0a855db92819ede4[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 16 17:32:51 2022 -0800

    Always attach disable directives to the original line the user put them on.
    
    This ensures that we never end up in the situation in which putting a disable
    directive on the exact line an error is reported on doesn't work.
    
    PiperOrigin-RevId: 429180840

[33mcommit f41d793c024891c43292cc1e6d1a1a9fe3a9596c[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 15 18:52:31 2022 -0800

    Move abstract.function.PyTDSignature into abstract._pytd_function.
    
    This grouping makes a little more sense conceptually.
    
    PiperOrigin-RevId: 428929203

[33mcommit f49e8a12193b66e680766ce0fde8e4ed18ba3352[m
Author: mdemello <mdemello@google.com>
Date:   Tue Feb 15 18:19:04 2022 -0800

    Fix an error when checking for `__getitem__` on a metaclass.
    
    PiperOrigin-RevId: 428924066

[33mcommit e5e49949bdd18af52764668c5317b5cd589be802[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 15 15:24:19 2022 -0800

    Refactor: add an abstract_utils.is_ellipsis() method.
    
    PiperOrigin-RevId: 428889705

[33mcommit acaed298185380129dcafc45945191052a08f0ee[m
Merge: 4acd2070 44a2b368
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 16 14:24:03 2022 -0800

    Merge pull request #1125 from google/ts
    
    Update typeshed to fc60d02c3ea5ca006d0e8244c556f48d697a7c66.

[33mcommit 44a2b36885460e75dfd3320f9e7a333fc543e6d6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 15 18:49:12 2022 -0800

    Update typeshed to fc60d02c3ea5ca006d0e8244c556f48d697a7c66.

[33mcommit 4acd20700a8dc7b1e0e0d6b5d415a955047284bc[m
Merge: fe308084 89534fd1
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 15 15:39:15 2022 -0800

    Merge pull request #1124 from google/google_sync
    
    Google sync

[33mcommit 89534fd1ec3e4113a8002661c3216315e9874c08[m
Author: mdemello <mdemello@google.com>
Date:   Tue Feb 15 11:48:10 2022 -0800

    Support typed dicts in pyi files.
    
    Intercepts abstract.PyTDClass creation and creates a TypedDictClass instead.
    
    Also rewrites `typing_extensions.TypedDict` to `typing.TypedDict` in the
    external name lookup visitor, since the typeshed definition of
    `typing_extensions.TypedDict` is just `Any`
    
    Fixes https://github.com/google/pytype/issues/1120
    
    PiperOrigin-RevId: 428837804

[33mcommit 647542ee5c881eafca2b9f5e2a19f74ab28b689f[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Tue Feb 15 07:52:24 2022 -0800

    Support ellipses when __future__.annotations enabled.
    
    PiperOrigin-RevId: 428780862

[33mcommit c3be39bbe262d2531e278713e46d46a39f93d5a6[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 14 13:06:45 2022 -0800

    Python 3.9: Don't ignore disables buried in header blocks.
    
    PiperOrigin-RevId: 428589036

[33mcommit 090e841bc59bb33aaa062e0ea3def10f3d4e2836[m
Author: pulkitsinha <pulkitsinha@google.com>
Date:   Mon Feb 14 12:38:09 2022 -0800

    Internal change
    
    PiperOrigin-RevId: 428582250

[33mcommit e37ec8a1b5a37d49f9ebed3db795a6d222abb8c1[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 10 20:14:37 2022 -0800

    Avoid triggering PYTHONBYTESWARNING=2 errors.
    
    Setting PYTHONBYTESWARNING=2 causes `str(some_bytes_object)` to fail. Pytype
    has never intentionally avoided calling str() on a bytes object, but we happen
    to not do it most of the time, so tests that set PYTHONBYTESWARNING=2 and run
    pytype get lucky and pass. The latest typeshed update causes them to fail by
    introducing a bytes Literal into the stdlib stubs. We don't own the tests in
    question, so the easiest way to fix this is to instead use
    `repr(some_bytes_object)`, which produces the same output.
    
    PiperOrigin-RevId: 427908070

[33mcommit e11b50fa34228a9a30c1dad5c2c46d193e5f633a[m
Author: mdemello <mdemello@google.com>
Date:   Thu Feb 10 17:34:34 2022 -0800

    Add a flag to log pytype invocation details to a file.
    
    PiperOrigin-RevId: 427883316

[33mcommit 62bf43a2016c14f3a75a823ce5eb78ef655b0cf5[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 10 13:23:41 2022 -0800

    Fix a few Python 3.9 crashes.
    
    Fixes a few corner cases found via global testing:
    * We never actually implemented byte_END_ASYNC_FOR XD
    * Splat handling needs to be tweaked to handle opcode changes in 3.9.
    * We occasionally build code objects that contain multiple references to the
      same child code object? When this happens, code visitors can visit the same
      code object multiple times, which is problematic when the visitor modifies
      the object in-place. I dealt with this by adding a visitor cache.
    
    PiperOrigin-RevId: 427829588

[33mcommit 01cdb01b1f1a1156e5ee6a4141950bd9a1cb69af[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 9 18:04:06 2022 -0800

    Handle direct class imports in pickle dependency loading.
    
    I'm not sure how this hasn't come up before, but in the latest version of
    typeshed, some of the stdlib modules directly import class names, which makes
    _unpickle_module() unhappy because it assumes all dependency names are modules.
    
    PiperOrigin-RevId: 427619475

[33mcommit fe3080843be4ac6e0d69b112417b7ad068cdcfa5[m
Merge: c335043a 3e228a03
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 9 18:38:37 2022 -0800

    Merge pull request #1121 from google/google_sync
    
    Google sync

[33mcommit 3e228a03c7428ee03e33460ca239155063b91689[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 9 14:43:32 2022 -0800

    Support positional-only parameters, and use enums for pytd.Method{Types,Flags}.
    
    Adds support for positional-only parameters. Changes pytd.Parameter.kwonly
    to a 'kind' enum parameter with REGULAR, POSONLY, and KWONLY options; adds a
    posonly_count attribute to abstract.function.Signature; and raises a
    WrongKeywordArgs exception if a positional-only parameter is passed by keyword.
    
    Also uses enums for pytd.MethodTypes and pytd.MethodFlags. We can freely use
    enums now that pytype type-checks them properly. I changed the names to
    MethodKind and MethodFlag to better follow enum naming conventions and to avoid
    confusion with other usages of "type".
    
    PiperOrigin-RevId: 427575979

[33mcommit a6f4957af45f63b389a95f4739f6600bdfe9ae47[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 8 15:29:43 2022 -0800

    Recognize type-annotated callables as attributes in attrs classes.
    
    PiperOrigin-RevId: 427308995

[33mcommit c335043ab4c6f11f7b1b154b47584dbf59f0080f[m[33m ([m[1;33mtag: 2022.02.08[m[33m)[m
Merge: af15b0a9 46ec05a2
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 8 15:42:26 2022 -0800

    Merge pull request #1119 from google/google_sync
    
    Google sync

[33mcommit 46ec05a2ae6679870d3f93161e2d8e69e66a0432[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 8 14:04:44 2022 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 427287418

[33mcommit c9f00601ca99abe085ba47e50313073bb0dc85b0[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 4 13:17:01 2022 -0800

    Add a TupleClass._new_instance() method to avoid creating multiple instances.
    
    A TupleClass assumes (and verifies in register_instance()) that only one
    instance of itself is ever created. Class._new_instance() can create multiple
    instances, so TupleClass needs its own _new_instance() implementation.
    
    PiperOrigin-RevId: 426476107

[33mcommit da2b8b8c216248db441fc4046f8e53d777dd7ae6[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 4 12:16:25 2022 -0800

    Remove --allow-recursive-types flag.
    
    This flag was already a no-op. Also added some missing docstrings that pylint
    was complaining about in test_base.
    
    PiperOrigin-RevId: 426463179

[33mcommit ab39de5406ffc63d48c9376114c1ff3b65cb447d[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 3 17:11:38 2022 -0800

    Do a docs update.
    
    PiperOrigin-RevId: 426273892

[33mcommit af15b0a97c99aeb3cd473267ea5c5767f3bf5258[m
Merge: 50f21239 e9a259ce
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 3 16:01:37 2022 -0800

    Merge pull request #1116 from google/google_sync
    
    Google sync

[33mcommit e9a259ce7f040a438ca3e749b3383fd7d8a0f87a[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 3 13:29:27 2022 -0800

    Finish a TODO in byte_GET_YIELD_FROM_ITER.
    
    I'm kicking off a typeshed update, and one of the changes makes it so that
    byte_GET_YIELD_FROM_ITER is passed a coroutine in one of our tests. This causes
    spurious attribute errors if we call GET_ITER on the coroutine.
    
    PiperOrigin-RevId: 426225166

[33mcommit a75a21d64bb906148f1de28d4bc50e2aa818b18d[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 3 13:25:29 2022 -0800

    Strip "__init__" from module names when checking supported versions.
    
    This fixes a test failure in a typeshed update I'm working on.
    
    I also added a couple docstring comments and an assert about places where we
    expect __init__ to have already been stripped, since the situation's gotten
    pretty confusing.
    
    PiperOrigin-RevId: 426224296

[33mcommit bd9f05f38ff919c402b2e3edf4e0fdae6b82d62e[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 3 11:35:34 2022 -0800

    Get rid of an overly restrictive [not-callable] check in ParameterizedClass.
    
    Fixes https://github.com/google/pytype/issues/1114.
    
    PiperOrigin-RevId: 426198327

[33mcommit 1db46a16682952b49153f8b718aff320f9bcc7e8[m
Author: mdemello <mdemello@google.com>
Date:   Wed Feb 2 15:08:45 2022 -0800

    FIX: Don't raise a final-error when analysing the same method repeatedly.
    
    PiperOrigin-RevId: 425988096

[33mcommit 50f21239013907c35ae060b43b5ef8cff1317032[m
Merge: af3a9ccf 482c2024
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 2 14:27:03 2022 -0800

    Merge pull request #1115 from google/google_sync
    
    Google sync

[33mcommit 482c20245428ce221b6f36c5497597e1813c4058[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 2 12:33:31 2022 -0800

    Enable --allow-recursive-types.
    
    PiperOrigin-RevId: 425951218

[33mcommit 13609e13ad37cb94a0c8e8f57b02ccb1edde088a[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 1 18:56:37 2022 -0800

    Track late annotations more carefully in sub_one_annotation().
    
    Don't create a new LateAnnotation unless necessary, and pop them after we've
    finished processing them so we don't attempt to reprocess.
    
    PiperOrigin-RevId: 425769286

[33mcommit 15b32c9a7ee77dcfd06a17e09d2213dd08b103be[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 1 18:42:45 2022 -0800

    Fix more recursion issues.
    
    These are issues that I encountered during global testing. I wasn't able to
    create test cases that trigger them, so I've just bundled the fixes together.
    
    * Adds a 'seen' parameter to annotation_utils methods that descend into
      NestedAnnotations. Also gets rid of an unnecessary block of code that
      special-cases TupleClass but doesn't actually do anything different from how
      a NestedAnnotation is handled.
    * Moves the lazy loading logic for ParameterizedClass.formal into
      NestedAnnotation so it gets used for Union as well.
    * Explicitly allows recursion in convert.py when a recursive type is being
      converted. (Most of the time, we get lucky and allow_recursive_convert() is
      set by a caller.)
    
    PiperOrigin-RevId: 425767459

[33mcommit ba5e9f4852ceca9318f9ea32f5c6e4f12fa7b850[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 1 18:30:21 2022 -0800

    Make sure frame.f_globals is populated even in a SimpleFrame.
    
    Also does some light refactoring of call_function_in_frame; it was previously
    halfheartedly trying to handle function variables, when it was only ever called
    with a variable with a single binding.
    
    PiperOrigin-RevId: 425765812

[33mcommit 4c06fcece04b5126aa70eb671ee7e975d95673a2[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 1 17:46:03 2022 -0800

    Handle TypeVar scopes more carefully so aliases of recursive types work.
    
    PiperOrigin-RevId: 425758006

[33mcommit 224c5e94fadb5ba59d354eb71fee87adae08e0b7[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 1 17:39:56 2022 -0800

    Standardize _init__ module names in LateTypes.
    
    We had a number of mistakes in adding/removing the "__init__" part of a module
    name in LateTypes. These mistakes mostly cancelled one another out, but it's
    still better to get this right.
    
    PiperOrigin-RevId: 425756917

[33mcommit c357b8010fe8fcb3a5bfebf1c0f40e98067aeded[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 1 14:04:17 2022 -0800

    Fix a bunch of recursion errors when using a recursive type in a dataclass.
    
    PiperOrigin-RevId: 425710813

[33mcommit ab75f63dbca538d2b95ce9957edd19a9795c05aa[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 1 13:51:41 2022 -0800

    Replace periods with _DOT_ in recursive type names.
    
    When a recursive type is forwarded, it can end up with a dotted name that needs
    to be flattened to something like Mod1_DOT_Type. If it is forwarded again, its
    name can end up as Mod2.Mod1_DOT_Type, so unflattening has to handle both
    regular and flattened periods.
    
    PiperOrigin-RevId: 425707502

[33mcommit 9aa7b2e72349f76e0965343072918af3e40554ac[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 1 13:31:21 2022 -0800

    Set DETAILED output mode when printing protocol error messages.
    
    This ensures that recursive types get printed as, e.g., Structure[V] instead of
    _Structure_LBAR_V_RBAR. (I couldn't figure out how to construct a test that
    showed the bad recursive type behavior, so I picked a different construct -
    nested classes - that also prints differently in DETAILED mode.)
    
    PiperOrigin-RevId: 425702698

[33mcommit af3a9ccf05308ac05f0d9c726ba2a6211592788e[m[33m ([m[1;33mtag: 2022.01.31[m[33m)[m
Merge: 2155a2e4 7e20ec59
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jan 31 14:41:10 2022 -0800

    Merge pull request #1113 from google/google_sync
    
    Google sync

[33mcommit 7e20ec59dfdbed867dd18f50c3968ddff5443ad2[m
Author: rechen <rechen@google.com>
Date:   Mon Jan 31 13:58:11 2022 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 425454895

[33mcommit 474804d2c3e3977cba5938b2a9ceaf98b8b85b1e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jan 31 13:06:03 2022 -0800

    Resolve (trailing-newlines).

[33mcommit 5c3d861d29a77bd16311acd518e32dc78a7a4b42[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jan 27 18:37:08 2022 -0800

    Mark final as supported.
    
    PiperOrigin-RevId: 424757668

[33mcommit c62b5f87c9d4b2676206599663773b817085d467[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jan 27 18:06:24 2022 -0800

    Export `Final[...]` as a generic type rather than an annotation.
    
    PiperOrigin-RevId: 424752982

[33mcommit 3bf3e82e6c225e20e4b573e95f62f89426ba2758[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jan 27 14:57:21 2022 -0800

    Add `@final` decorators in pyi output.
    
    PiperOrigin-RevId: 424715026

[33mcommit 9109d422725ccf8e4029be4449a631569de54fcb[m
Author: ramrachum <ramrachum@google.com>
Date:   Thu Jan 27 12:58:55 2022 -0800

    Allow finer-grained control of --color flag
    
    Instead of True and False, we allow always/auto/never.
    
    Tested:
    []
    PiperOrigin-RevId: 424686692

[33mcommit 369ecbc5de531229a37a504fb8f57966601bde2f[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jan 26 23:08:50 2022 -0800

    Output TypedDicts as classes in pyi files.
    
    PiperOrigin-RevId: 424526829

[33mcommit fadfb664455ef221e993d692286e93097cac0717[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jan 26 18:29:06 2022 -0800

    Use definitions from typing_extensions directly in typing, in all versions.
    
    Removes sys.version checks for TypedDict and Annotated, adds Final.
    
    PiperOrigin-RevId: 424490540

[33mcommit 89a9c5cf48ed85e08711f7f67074e5b3ed67e1cb[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jan 26 02:30:24 2022 -0800

    Output typed dicts into the pyi file.
    
    This is a very basic representation to fix a pytype crash, and will be expanded
    to include properly round-tripped typed dicts later.
    
    PiperOrigin-RevId: 424297362

[33mcommit 566a09b8e2e9cd7b70b95ef5df38a17e462a1e2a[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 25 16:35:43 2022 -0800

    If we have multiple errors in one line, let test cases enter them in any order.
    
    Behavioural change: Putting an error on the wrong line will generate an
    unexpected-error and an error-not-found, rather than an error-mismatch.
    error-mismatch is now strictly for the wrong error on a line that does have an
    error.
    
    PiperOrigin-RevId: 424209316

[33mcommit 2155a2e4de0795aa6025f33f3c7458dc797b76b9[m
Merge: 07662feb d9b35a2a
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 26 14:26:01 2022 -0800

    Merge pull request #1111 from google/google_sync
    
    Google sync

[33mcommit d9b35a2a923579a8838b9a68c2812479897d32a5[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 25 16:01:49 2022 -0800

    Tweak directive handling based on 3.9 testing.
    
    * The FunctionDef line ranges weren't quite right: I initially thought that
      params and return needed to be split up, but on further testing, what's going
      on is that annotation subscripting needs its own _Call range, and the
      examples of multi-line return annotations I came up with happen to be
      subscripted.
    * I added a few more error classes and line ranges.
    
    PiperOrigin-RevId: 424202062

[33mcommit 000d4a37d957d0d35329eb6afa4e00f7d27700cb[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 25 15:28:39 2022 -0800

    Defer checking of `Final` so that it can be used with `Annotated`.
    
    Also tweaks a couple of initializers to let __repr__ work during construction.
    
    Fixes https://github.com/google/pytype/issues/1110
    
    PiperOrigin-RevId: 424194421

[33mcommit 2ae395cafdb57516da58471d8c4f6d610253fafb[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 25 13:42:04 2022 -0800

    Support typing.Final and @typing.final in pyi files.
    
    This provides a separate mechanism for final checking in PyTDClass, since the
    mechanisms we use in InterpreterClass do not work well with lazy loading of
    members and with the way pytd classes handle attribute setting.
    
    PiperOrigin-RevId: 424168689

[33mcommit 06c24eba050550969ef0ea51f149a5e6f18685f2[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 25 13:36:06 2022 -0800

    Prevent misfiring of "NoReturn is not allowed as inner type" error.
    
    Changes the cls of NoReturn to Type so that runtime usages of NoReturn don't
    cause pytype to think that it's being used illegally in type annotations.
    
    PiperOrigin-RevId: 424167104

[33mcommit 827e564cb4bd92b26d45ba5b846f5c0b53a2f978[m
Author: ramrachum <ramrachum@google.com>
Date:   Tue Jan 25 00:03:11 2022 -0800

    Show error name in red in Linux-like environments.
    
    Also adds the `--color` flag to disable it.
    
    PiperOrigin-RevId: 424006427

[33mcommit 07662febd183e4a3395e05ea8d3adf75397bd7cb[m
Merge: 557b0757 6a4d254e
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jan 24 18:41:28 2022 -0800

    Merge pull request #1109 from google/google_sync
    
    Google sync

[33mcommit 6a4d254ed5545597a03089f69c28d400a5d58858[m
Author: rechen <rechen@google.com>
Date:   Mon Jan 24 16:09:52 2022 -0800

    Fix two directors.py issues turned up by more testing.
    
    * Don't assume that LibCST processes larger line ranges earlier: I had
      previously assumed that, e.g., _LineRange(2, 5) would always be seen before
      _LineRange(3, 3), due to the order in which _ParseVisitor processes nodes.
      This assumption breaks down when 'with' statements with backslash line
      continuations are present.
    * Attach 'type: ignore' to all lines it may affect.
    
    PiperOrigin-RevId: 423935740

[33mcommit a31a7cfa13f09f469385ac26d2d9402f21d3ad4d[m
Author: rechen <rechen@google.com>
Date:   Sat Jan 22 01:36:36 2022 -0800

    Rework directors.py's source parsing using LibCST.
    
    Replaces directors.py's tokenize-based _parse_source() implementation with a
    LibCST-based one, which fixes a number of bugs involving directive line numbers
    changing between Python versions.
    
    In Python 3.8+, the LibCST tree can be used to determine the exact line numbers
    that directives should be on, so we'll be able to stop adjusting line numbers
    based on the bytecode once we drop 3.7 support. Even in 3.7, the new
    implementation is an improvement: it fixes some edge cases and prevents us from
    adjusting line numbers too far up.
    
    LibCST does have a couple minor issues:
    * A tree structure more than a few hundred levels deep triggers a
      RecursionError.
    * Not putting spaces around a keyword triggers a parse error, even in the
      presence of other delimiters like newlines.
    Both of these are rare: I found 2 RecursionErrors and 10 parse errors across
    the entire codebase. I'm ignoring the RecursionErrors for now, since they're in
    files that are not much more than large data dumps, and adjusting user code to
    avoid the parse errors. I'll also file bugs with LibCST.
    
    Tested:
      I put this change through global testing and fixed bugs until I obtained a
      clean rerun.
    PiperOrigin-RevId: 423492319

[33mcommit 797a51642af727b1dcb2de1d42c19687bda9084f[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jan 21 20:52:32 2022 -0800

    Check for invalid uses of `typing.Final`
    
    Also adds several improvements to error line number reporting:
    * preserve opcode information when analysing a method in tracer_vm
    * store the opcode corresponding to a function `def` statement in addition to
      the first opcode of the function body
    * add a `skip_in_tracebacks` attribute to a frame, to let it only be shown in
      errors if it is the sole frame in the stack.
    
    PiperOrigin-RevId: 423464667

[33mcommit 47593020ec66d0215d8f06065c5981e8f8ec5cd9[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jan 21 11:34:31 2022 -0800

    Fixes for instantiating a typed dict from an annotation.
    
    For
    ```
      x: Foo = {...}
    ```
    we want to preserve the concrete dict, not overwrite it with an instantiation
    of `Foo`.
    
    For
    ```
    def f(x: Foo): ...
    ```
    we want to instantiate `Foo` as a `TypedDict`, not a `PyTDClass`.
    
    PiperOrigin-RevId: 423369441

[33mcommit bfc31fc5fe2b7974e164a9c8c606b5b6701cb084[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 21 02:16:34 2022 -0800

    Re-enable the [not-supported-yet] test using typing_extensions.TypeGuard.
    
    TypeGuard is new in 3.10, so we shouldn't need to touch this test for a while.
    
    I also fixed a stale url.
    
    PiperOrigin-RevId: 423271216

[33mcommit 25a4af2891467ba6c82aaa83ef3d4adb8abadde4[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 20 23:03:04 2022 -0800

    Unbreak pytype/tests:test_final in 3.9.
    
    PiperOrigin-RevId: 423242212

[33mcommit 8b23931b36f17e8d16541d0d2e2e3ed247fa8a6e[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jan 20 18:23:37 2022 -0800

    Check that `@final` is being applied to a class or method.
    
    PiperOrigin-RevId: 423205329

[33mcommit 1fbcdcb36a4e969ae214cd10a62b127a2ea44be8[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jan 20 17:55:54 2022 -0800

    Check for overriding final class attributes.
    
    Also introduces a new `final-error` and moves all final violations to that
    error.
    
    PiperOrigin-RevId: 423200828

[33mcommit 557b07570678f2667e3ecb0a38cd21f1a585155e[m
Merge: 347bd850 3c92e1a4
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 20 17:57:08 2022 -0800

    Merge pull request #1107 from google/google_sync
    
    Google sync

[33mcommit 3c92e1a4e79c4e8f9af926030d9b0e9037393249[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 20 16:27:52 2022 -0800

    Get rid of Director.docstrings.
    
    All tests pass without it, so I think at some point this became unnecessary?
    I've put this in its own change instead of combining it with other cleanups
    so it's easy to roll back if necessary.
    
    PiperOrigin-RevId: 423185580

[33mcommit dc8bb4affa4b7b2d9fb99dd62c9556331d37da32[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 20 16:27:09 2022 -0800

    Do some general cleanup of directors and directors_test.
    
    * Run adjust_line_numbers() in directors_test so we don't need a second copy of
      the test cases in vm_test.
    * Fix some incorrect typing.Collection annotations in directors.
    * Pull out the list of error classes modified by adjust_line_numbers into an
      _ALL_ADJUSTABLE_ERRORS constant.
    
    PiperOrigin-RevId: 423185455

[33mcommit b97a18dd27e601ca59dc374a31d8749cd1fc4bf4[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jan 19 20:28:38 2022 -0800

    Support `typing.Final` without an explicit type.
    
    ```
    x: Final = 10
    ```
    means "infer the value of `x`, and tag it `Final`".
    
    Refactors a bit to move `Final` from the annotation type to metadata within
    `annotation_utils` rather than returning it as an extracted type from
    `apply_annotation`. This introduces a bit of tech debt because we should
    ideally be doing this in other code paths too (see `vm.byte_STORE_SUBSCR()`).
    
    PiperOrigin-RevId: 422969779

[33mcommit 03ee4451871af2e9f888f0cfa31f75ab4e8e9074[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 19 18:50:27 2022 -0800

    Remove no-longer-necessary vm._fold_constants attribute.
    
    PiperOrigin-RevId: 422955121

[33mcommit 2104500c6e3c35e06367108c025fc4edd35fd95d[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jan 19 15:11:18 2022 -0800

    Check for overriding `@final` methods when constructing a class.
    
    PiperOrigin-RevId: 422914609

[33mcommit 5fefba180f1615e424008b8bab898c200285eb8c[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 19 00:47:21 2022 -0800

    Update support.md.
    
    PiperOrigin-RevId: 422746684

[33mcommit 1eaeae8dabaa9fa4263128a8e1eb312589550db0[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 18 22:51:06 2022 -0800

    Add support for typing.Final
    
    Checks that variables and attributes annotated with Final[T] are not
    reassigned.
    
    PiperOrigin-RevId: 422731247

[33mcommit ec5b999516e6a5c24560abf3e1e60ac162e7d125[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 18 21:16:25 2022 -0800

    Fix how type comments are attached to multiline assignments in Python 3.9.
    
    PiperOrigin-RevId: 422719472

[33mcommit a2895439cddd513c32d5433d4b247c02739d545d[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 18 16:34:20 2022 -0800

    Add support for final classes.
    
    Adds a `self.final = True` to all objects decorated with `@final`, and enforces
    final behaviour for classes (a final class cannot be subclassed). Final
    behaviour for methods is not enfoced, and checks for decorating random objects
    with `@final` have not yet been implemented.
    
    PiperOrigin-RevId: 422676529

[33mcommit e61d61393cdd95e68b35346cbffa8efd1ac2f7ff[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 18 14:06:58 2022 -0800

    Start off "2022 Roadmap" with things we know we need to do.
    
    PiperOrigin-RevId: 422643653

[33mcommit 347bd85000e788d0a7c314da39f6cdf5fbcded02[m[33m ([m[1;33mtag: 2022.01.13[m[33m)[m
Merge: fa43edc9 7aa86882
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 13 14:57:44 2022 -0800

    Merge pull request #1106 from google/google_sync
    
    Google sync

[33mcommit 7aa86882df6c98edfb126fc006605b52f41f641d[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 13 14:25:28 2022 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 421659649

[33mcommit 42b9360404cca137ee9265e8ed1691460f245b0c[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 13 13:51:04 2022 -0800

    Update support status for --allow-recursive-types.
    
    Also slightly clarifies language around feature flags.
    
    PiperOrigin-RevId: 421651264

[33mcommit 9116807a80652bee678ee7a44699262636e318de[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 12 22:32:07 2022 -0800

    --allow-recursive-types: Add intermediate variables for parameterized types.
    
    Previously, when a recursive type was parameterized like so:
    ```
    X = Union[T, List['X']]
    Y = X[int]
    ```
    the parameterized type was being written out as-is to the type stub (so
    "Y = X[int]" would appear literally in the stub). This caused problems with
    stub validation (because pytype doesn't expect types like pytd.Union to appear
    as the base type of a pytd.GenericType) and parsing (the parser would try to
    evaluate "X[int]"), in addition to the output being difficult to get correct
    (things get weird when a type is parameterized multiple times).
    
    The simplest way I could think of to fix these issues is to instead create
    intermediate variables to hold parameterized types, like so:
    ```
    X = Union[T, List[X]]
    Y = _X_LBAR_int_RBAR
    _X_LBAR_int_RBAR = Union[int, List[_X_LBAR_int_RBAR]]
    ```
    
    This requires (1) tweaking sub_one_annotation to construct an accurate
    expression string for LateAnnotations it creates, (2) figuring out which
    LateAnnotations are parameterized recursive types and writing those out as
    module-level variables, and (3) coming up with a way to transform
    LateAnnotation expressions into variable names and back.
    
    This is the last piece of the initial implementation of recursive types! :D
    
    PiperOrigin-RevId: 421477310

[33mcommit f7bbda75912199745083df00bd0052e573dbde8c[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 12 22:23:25 2022 -0800

    --allow-recursive-types: Make a number of small fixes.
    
    * Recompute a ParameterizedClass's hash when a LateAnnotation in its parameters
      is resolved.
    * Don't manually handle LateAnnotation in ErrorLog._print_as_expected_type.
      This way, any improvements we make to how output.py handles LateAnnotation
      will be automatically reflected in error message printing.
    * test_recursive_types:
      * Standardize on single quotes in code snippets, because why not.
      * Add some more tests for generic aliases.
      * Fix a redundant type in InferenceTest.test_branching.
    * Sort LateAnnotations so they're resolved in the right order.
    
    PiperOrigin-RevId: 421475932

[33mcommit c3d345e562025cbd6ad2b06a5ccb14523df7a4cc[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 12 18:39:55 2022 -0800

    Better handle type aliases with multiple options.
    
    Previously, when a type alias had multiple possible definitions, we would
    create a pytd.Union[pytd.Alias(...), ...] object, which pytype would later
    crash while processing because a union of aliases is not something it ever
    expects to see.
    
    This partially fixes test_recursive_types:InferenceTest.test_branching.
    
    PiperOrigin-RevId: 421445771

[33mcommit 2db37b187e8d0eb05822e9cae2bc5073204e7f94[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 12 18:26:41 2022 -0800

    Stop replacing unsubstituted type params in generic aliases with Any in stubs.
    
    There are several problems with the substitution behavior:
    * It's inconsistent with how pytype treats generic aliases in source code.
    * Whether or not the parser does the replacement depends on the order in which
      definitions appear in a stub.
    * In some cases, it replaces type params in imported functions with Any.
    
    The second reason (that the behavior is order-dependent) is the main reason I
    want to remove it - I noticed while testing --allow-recursive-types that
    whether a stub containing a recursive type was parsed correctly depended on the
    order in which types appeared, which is pretty counterintuitive.
    
    PiperOrigin-RevId: 421443836

[33mcommit 9f88622103f38f337338eb42f64d09b587b07ead[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 11 15:28:10 2022 -0800

    --allow-recursive-types: Add yet more tests.
    
    Adds a few more pyi tests, pickle equivalents for all the pyi tests, and a test
    based on some user code that I happened to notice we can't handle:
    https://github.com/deepmind/tree/blob/b452e5c2743e7489b4ba7f16ecd51c516d7cd8e3/tree/__init__.py#L91-L110
    
    These tests cover all the remaining missing functionality that I'm aware of, so
    once these last few tests are passing, I'll finally be able to start global
    testing for this feature.
    
    PiperOrigin-RevId: 421139444

[33mcommit 9f3f21e7a5bcedf6584bb41fd228878498182991[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 7 19:46:21 2022 -0800

    Allow using '...' as a top-level type annotation.
    
    This is an experimental features that allows explicitly annotating a type as
    "inferred." See https://github.com/python/typing/issues/276.
    
    PiperOrigin-RevId: 420417222

[33mcommit fa43edc95dd42ade6e3147d6580d63e778c9d506[m
Merge: b0ce308d 5a51bc7f
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 7 16:25:02 2022 -0800

    Merge pull request #1103 from google/importlab
    
    Require importlab>=0.7 to pick up a MacOS bug fix.

[33mcommit 5a51bc7f0af7249eb50bd8fca9d4bb51027b9651[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 7 14:15:57 2022 -0800

    Require importlab>=0.7 to pick up a MacOS bug fix.

[33mcommit b0ce308d57984df0aef98a5247d0178ea7d035fc[m[33m ([m[1;33mtag: 2022.01.07[m[33m)[m
Merge: 4f2f2a0c 24886af9
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 7 13:32:22 2022 -0800

    Merge pull request #1102 from google/google_sync
    
    Google sync

[33mcommit 24886af9023f54ac438aa345d068873266e843ad[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 7 12:55:59 2022 -0800

    Prepare a PyPI release.
    
    This will release a stub change that typeshed is waiting on.
    
    PiperOrigin-RevId: 420352479

[33mcommit 64945fd33a04845d00f87deeea60fbd874e715b6[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 7 12:42:06 2022 -0800

    Allow 'None' for the 'obj' parameter in (class|static)method.__get__.
    
    pytype sometimes passes in None (see
    https://github.com/google/pytype/blo[]f2f2a0c09f914491434ac2a23c94384eecde3b3/pytype/attribute.py#L377-L386),
    which causes problems if _T2 is filled in as None.
    
    PiperOrigin-RevId: 420350039

[33mcommit 6aaf95514fcb482fed960856e4e47f3073c29c92[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 6 22:12:49 2022 -0800

    Copy some typeshed changes to builtins.pytd and fix a load_pytd bug.
    
    We need to make classmethod and staticmethod generic to unblock
    https://github.com/python/typeshed/pull/5703.
    
    Running pytype over that PR also exposes a circular dependency bug involving
    star imports, which I've fixed.
    
    PiperOrigin-RevId: 420213268

[33mcommit 4f2f2a0c09f914491434ac2a23c94384eecde3b3[m
Merge: 40fcb2e9 76d3945b
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 6 19:42:49 2022 -0800

    Merge pull request #1101 from google/google_sync
    
    Google sync

[33mcommit 76d3945b808ad3b65a030aa4752e6bc0fb8902a5[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 6 18:51:38 2022 -0800

    Drop Python 3.6 support.
    
    Drops Python 3.6 support from pytype now that 3.6 has reached end-of-life. Also
    cleans up some lingering 3.5 code that I found while grepping for 3.6.
    
    PiperOrigin-RevId: 420189036

[33mcommit a351ad2266d394e170fdb0d8e257f48eff411f3b[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 5 17:52:15 2022 -0800

    Fix two out-of-date comments in builtins.pytd.
    
    PiperOrigin-RevId: 419950449

[33mcommit 1347d9562c7b8929a2b2924b25e2c7f4c6ea5fc9[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 5 15:05:16 2022 -0800

    Create fewer unnecessary LateAnnotations.
    
    This fixes a crash caused by a LateAnnotation making its way into a class's
    MRO, which happened because we were creating LateAnnotations for all imported
    LateTypes, regardless of whether the LateTypes were recursive.
    
    Startblock:
      diffbase is submitted
    PiperOrigin-RevId: 419921210

[33mcommit 40fcb2e95b3a96a2bd71be63ed33efacf57afe41[m
Merge: 78368e6f cacd6309
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 6 17:51:01 2022 -0800

    Merge pull request #1100 from google/py36
    
    Drop Python 3.6 in setup.cfg and CI.

[33mcommit cacd63092fdbef253b55c45a3886b0ad50d53fc0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 6 17:13:02 2022 -0800

    Drop Python 3.6 in setup.cfg and CI.

[33mcommit 78368e6f0fbe18c6d4a4bea96985e25a62a33ec0[m[33m ([m[1;33mtag: 2022.01.05[m[33m)[m
Merge: 76aa1e90 a22b626f
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 5 18:29:46 2022 -0500

    Merge pull request #1099 from google/google_sync
    
    Google sync

[33mcommit a22b626f9a3aab797f92d03613d383cf3a661f5b[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 5 13:32:45 2022 -0800

    Prepare our first PyPI release of 2022.
    
    PiperOrigin-RevId: 419901139

[33mcommit 6653bf3641c6f45636a2e59ca15abdda6a71265f[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 5 11:42:13 2022 -0800

    Internal change
    
    PiperOrigin-RevId: 419878227

[33mcommit 76aa1e90534926ab79237734752d3b7e87ddbc39[m
Merge: d0380474 4999e1cd
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 4 23:27:04 2022 -0500

    Merge pull request #1098 from google/google_sync
    
    Google sync

[33mcommit 4999e1cdadef456ad293b4e9eb5c0f1e21499c7d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 4 18:49:13 2022 -0800

    Make opensource tests happy.
    
    * Fix trailing-newlines issue.
    * Disable pytype error.

[33mcommit 76a2ea1aa261a58d4cae863fa2a0f776cd859ada[m
Author: rechen <rechen@google.com>
Date:   Mon Jan 3 10:21:42 2022 -0800

    Fix ParamSpec bugs that are blocking typeshed.
    
    * Don't create multiple TypeVars for the same ParamSpec. We were creating a new
      TypeVar every time we saw a ParamSpec used in a class definition, leading to
      "Duplicate top-level identifier" errors.
    * Show a more helpful error message when P.args or P.kwargs is misspelled.
      Misspelling a ParamSpec attribute previously produced a mysterious "Can't
      find pyi for <ParamSpec name>" error at the dependency loading phase.
    
    See https://github.com/python/typeshed/pull/6670 and
    https://github.com/python/typeshed/pull/6676.
    
    PiperOrigin-RevId: 419457152

[33mcommit 375e5ad2a5645607d6b910eb6879cab201e1902a[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 30 13:03:54 2021 -0800

    Fix a bug in parameterizing a generic type alias with a TypeVar.
    
    We were silently converting the TypeVar to Any.
    
    PiperOrigin-RevId: 418996977

[33mcommit e324d8b7121a8c42480c6d1a05c6f4dfebf12fca[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 30 11:55:37 2021 -0800

    Hide a buggy change behind --allow-recursive-types.
    
    This change isn't quite ready for primetime (it's responsible for all but half
    a dozen of 4400+ entries in the Build Failures table). I have a fix prepared,
    but it requires changing the pytd format, so it'll have to wait for a
    simultaneous release.
    
    PiperOrigin-RevId: 418988458

[33mcommit b22f4c7c2a7254a4df588a8a4b19d0c00ba9b310[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 29 18:32:58 2021 -0800

    Don't rewrite Union[Any, ...] to Any in ErrorLog._print_as_expected_type.
    
    Collapsing Unions containing Any to Any makes error messages confusing.
    
    PiperOrigin-RevId: 418876791

[33mcommit e841f0abb559bc9b6d725220e19f5f6f4061cdbc[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 29 16:16:41 2021 -0800

    Improve an [invalid-annotation] error message.
    
    Improves the error message for a type annotation being parameterized with the
    wrong number of values and changes the Union error message to match the one for
    other containers.
    
    Example 1:
    
    ```python
    X = List[int, str]
    ```
    
    Before:
    ```
    Invalid type annotation for list[_T]
      Expected 1 parameter(s), got 2
    ```
    After:
    ```
    Invalid type annotation 'list[int, str]'
      list[_T] expected 1 parameter, got 2
    ```
    
    Example 2:
    
    ```python
    S = TypeVar('S')
    X = Dict[S, str]
    Y = X[int, int]
    ```
    
    Before:
    ```
    Invalid type annotation for dict[_K, _V]
      Expected 1 parameter(s), got 2
    ```
    After:
    ```
    Invalid type annotation 'Dict[S, str][int, int]'
      Dict[S, str] expected 1 parameter, got 2
    ```
    
    Example 3:
    
    ```python
    from typing import Union
    X = Union[int, str]
    Y = X[float]
    ```
    
    Before:
    ```
    Invalid type annotation 'Union[int, str]'
      Union has 0 type parameters but was instantiated with 1
    ```
    After:
    ```
    Invalid type annotation 'Union[int, str][float]'
      Union[int, str] expected 0 parameters, got 1
    ```
    PiperOrigin-RevId: 418861495

[33mcommit 960eb9a61681166e0fb19ce1d8536f3005d342d3[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 23 15:13:41 2021 -0800

    Support importing simple recursive types.
    
    * Improve Parameterized.__repr__ so parameterized classes can be printed before
      formal_type_parameters has been loaded.
    * Add a LateAnnotation.__setattr__. Without this, attributes are set on the
      LateAnnotation but read from LateAnnotation._type.
    * Have convert.constant_to_value build a LateAnnotation when it encounters a
      LateType.
    * Prefix LateTypes with the module name.
    
    PiperOrigin-RevId: 418071784

[33mcommit fa722f3c87181e7cc7edccb1cf1cf1add0baabad[m
Author: mdemello <mdemello@google.com>
Date:   Wed Dec 22 19:51:40 2021 -0800

    Move all named tuple code into a single module.
    
    The code was split between `typing_overlay` and `collections_overlay`. This
    moves it to a separate `overlays.named_tuple` module.
    
    PiperOrigin-RevId: 417928267

[33mcommit 795d46805d03dfeabc469981ec4fb821420ca26b[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 22 15:25:44 2021 -0800

    --allow-recursive-types: Use variable annotations to test abstract matching.
    
    I spent quite some time yesterday and today trying to figure out how to fix the
    one last failing matching test, before I realized that the test was failing due
    to https://github.com/google/pytype/issues/365, and the recursive matching
    logic is actually just fine.
    
    Our annotation-checking code doesn't suffer from the same bug as function
    parameter checking, so switching the tests over to use variable annotations
    instead of function calls makes them all work as expected.
    
    I also added some extra tests that I wrote while trying to figure out what was
    going on.
    
    PiperOrigin-RevId: 417895404

[33mcommit deb178ecff28284bf5b74ec6473644be37842c2b[m
Author: mdemello <mdemello@google.com>
Date:   Wed Dec 22 15:21:39 2021 -0800

    Move all typed dict code into its own module.
    
    PiperOrigin-RevId: 417894827

[33mcommit f55d1367905f05b893ccbfdc2ee0a3874ba4f764[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 21 14:41:36 2021 -0800

    Add support for @attr.dataclass
    
    The `attr.dataclass` constructor is `attr.s(auto_attribs=True)`
    
    PiperOrigin-RevId: 417693630

[33mcommit 4a632098cf17df264beeeeade3f179abab550637[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 21 14:11:56 2021 -0800

    Downgrade 'no MAKE_FUNCTION opcode found for decorator' to a warning.
    
    We are currently not using the decorator line numbers for anything, and the
    line number detection code is fragile.
    
    PiperOrigin-RevId: 417688522

[33mcommit a7077a7023ce94267a51e50922a2505c5765a93e[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 21 11:21:45 2021 -0800

    --allow-recursive-types: Implement matching for types with no base case.
    
    * Fixes infinite recursion in the ParameterizedClass.formal property.
    * Adds an abstract_utils.is_recursive_annotation() so I don't have to keep
      typing `value.is_late_annotation() and value.is_recursive()`.
    * Improves error messages by printing the names of recursive types encountered
      in containers rather than Any.
    * Fleshes out the abstract matching test suite.
    
    PiperOrigin-RevId: 417657436

[33mcommit 9c15d29b60c95e54b0f574f87ac55345140f4814[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 21 11:05:35 2021 -0800

    Add support for the `total` argument to TypedDicts.
    
    Tracks required and optional keys for each TypedDictClass.
    
    PiperOrigin-RevId: 417654538

[33mcommit d0380474aac428df613b43b3e5355c7bd8e4be87[m
Merge: 6b4fadbb 9275c2a9
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 21 14:26:36 2021 -0500

    Merge pull request #1094 from google/google_sync
    
    Google sync

[33mcommit 9275c2a946727fc1d26d6b677c516570fdaa0b6b[m
Author: Kian Meng, Ang <kianmeng.ang@gmail.com>
Date:   Tue Dec 21 10:43:41 2021 -0800

    Import of GitHub PR #1091: Fix typos
    https://github.com/google/pytype/pull/1091
    Merge b225bc227d478b0fbaded7ac47d78df66f8322bb into 38d368f576548c80dfee9a4a51fd4e70b00865b2
    
    PiperOrigin-RevId: 417650562

[33mcommit 0a5a874b716865f54e32606187ff69186ac18ea7[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 21 10:38:06 2021 -0800

    Support TypedDict constructors.
    
    Also changes tests to reflect that TypedDicts default to `total=True`. (Support
    for `total=False` has not yet been implemented).
    
    PiperOrigin-RevId: 417649583

[33mcommit a58cc1c19b79624005242cc72c9985e4bf1f25a1[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 20 15:18:50 2021 -0800

    Delete --fix-module-collisions flag.
    
    This flag was already a no-op. I'll wait a couple hours to submit just in case
    the release needs to be rolled back.
    
    Startblock:
      after 2021-12-20 15:00 in US/Pacific
    PiperOrigin-RevId: 417488476

[33mcommit 6b4fadbbd595a578bbd6a6a34c008a1925fde257[m
Merge: 38d368f5 b225bc22
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 21 10:51:39 2021 -0800

    Merge pull request #1091 from kianmeng/fix-typos
    
    Fix typos

[33mcommit b225bc227d478b0fbaded7ac47d78df66f8322bb[m
Merge: ae7c5930 38d368f5
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 21 09:43:15 2021 -0800

    Merge branch 'main' into fix-typos

[33mcommit ae7c59308dd44ef90389079bb3564727553ebba5[m
Author: Kian-Meng, Ang <kianmeng@cpan.org>
Date:   Sun Dec 19 15:44:41 2021 +0800

    Fix typos

[33mcommit 38d368f576548c80dfee9a4a51fd4e70b00865b2[m
Merge: b64248d6 4286975f
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 20 13:08:57 2021 -0800

    Merge pull request #1092 from google/google_sync
    
    Google sync

[33mcommit 4286975f5aa19d95706f585d5e6f7271c84f9bb0[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 20 12:34:07 2021 -0800

    Don't report an unhelpful name error when YIELD_FROM yields nothing.
    
    Resolves https://github.com/google/pytype/issues/978.
    
    PiperOrigin-RevId: 417458882

[33mcommit f56008a505db30bf6d1f63439a5ea08277e17cb4[m
Author: mdemello <mdemello@google.com>
Date:   Mon Dec 20 11:38:47 2021 -0800

    Add a config flag for --enable-typed-dicts.
    
    Will be removed when the `A(k1=v1, k2=v2, ...)` style constructor is supported.
    
    PiperOrigin-RevId: 417447856

[33mcommit 2fe4d58a88b2ed3705a41131c32d8d52eb257f33[m
Author: mdemello <mdemello@google.com>
Date:   Fri Dec 17 17:37:53 2021 -0800

    Raise not-supported-yet error for the TypedDict functional constructor.
    
    The error message suggests using the class definition form instead.
    
    PiperOrigin-RevId: 417073649

[33mcommit bdb49d4f51c07ccbb389cde9fe49e585da503f52[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 17 13:32:42 2021 -0800

    Tidy up visitors.py and enable pytype.
    
    Analyzing visitors.py actually only takes 5-6s, so we can go ahead and remove
    the `# pytype: skip-file`. I had already started tidying the file up a bit
    before I thought to check what the current analysis time is, so this change
    also removes some unused visitors and marks RemoveTypeParametersFromGenericAny
    as private.
    
    PiperOrigin-RevId: 417050978

[33mcommit 2b81e5f5d7180bac36d008164cd61150cd6d4ab8[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 17 13:16:15 2021 -0800

    Tweak errors.py and pytd/slots.py to speed up pytype analysis.
    
    Annotating a heavily used decorator and converting slots.Slot to a dataclass
    drastically speeds up pytype analysis of these files.
    
    PiperOrigin-RevId: 417049462

[33mcommit a5b13b104f8309b95432a74abd92da21fd53fc77[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 17 13:16:06 2021 -0800

    Alias class_mixin.Class to abstract.Class.
    
    I replaced all occurrences of class_mixin.Class with abstract.Class, then
    rewrote all references to "a abstract" to "an abstract", and finally ran
    build_cleaner and gen_cmake.
    
    PiperOrigin-RevId: 417049448

[33mcommit 71f274e69a4067a07c4306baaeab9d6453c849b1[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 16 22:20:19 2021 -0800

    Move function-related classes out of abstract.py into three new modules.
    
    InterpreterFunction and friends now live in _interpreter_function.py,
    PyTDFunction in _pytd_function.py, and everything else function-related in
    _function_base.py.
    
    I also moved abstract_utils methods used in only one module into the module
    itself and fixed a bunch of type errors.
    
    And with this, we can remove the `pytype: skip-file` from abstract.py!
    
    PiperOrigin-RevId: 416960862

[33mcommit 7b4e7db9685164877451d3dff568a7868983dfb5[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 16 19:20:10 2021 -0800

    Move annotation-related classes out of abstract.py into a new _typing.py.
    
    I had to make a few minor changes to squash pytype errors.
    
    PiperOrigin-RevId: 416941786

[33mcommit b80b1a860adca209427f6149400213450689d4c6[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 16 18:09:11 2021 -0800

    Move class representations out of abstract.py into a new _classes.py.
    
    PiperOrigin-RevId: 416933093

[33mcommit 2bdab75971bb0854a5e53cff9ca01a148d8d0e99[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 16 16:58:05 2021 -0800

    Add an abstract_utils._make() for constructing abstract.py classes.
    
    After poking at this for a while, I've concluded that I don't see any way to
    fully untangle the circular dependency mess we created, so we might as well
    make it more pleasant to manage by consolidating our various hacks for creating
    abstract classes.
    
    PiperOrigin-RevId: 416923717

[33mcommit 691a16d7bb12219b89a3a1de6c8d98331679f372[m
Author: mdemello <mdemello@google.com>
Date:   Thu Dec 16 15:07:01 2021 -0800

    Implement annotation matching for TypedDicts.
    
    Also slightly refactors the handling of error details in the matcher.
    
    PiperOrigin-RevId: 416904691

[33mcommit 76137ac89fefab186d2d85cbc128ba50047f8a99[m
Author: mdemello <mdemello@google.com>
Date:   Thu Dec 16 15:05:17 2021 -0800

    Add support for TypedDict inheritance.
    
    PiperOrigin-RevId: 416904375

[33mcommit 5e61719760ceb82a23a796ae8f2364ca14301ea0[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 16 00:44:52 2021 -0800

    --allow-recursive-types: Implement more abstract matching logic.
    
    PiperOrigin-RevId: 416743529

[33mcommit 4c4e42340aa3b8b5721450e0180e78f1c9dca5f4[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 15 18:17:01 2021 -0800

    Adjust [bad-return-type] disable line numbers.
    
    PiperOrigin-RevId: 416691638

[33mcommit 05c6caae931acf08b151b0b4fefe6fc6b641bf5f[m
Author: mdemello <mdemello@google.com>
Date:   Wed Dec 15 17:10:23 2021 -0800

    Basic support for TypedDict.
    
    Adds type checking support for a class inheriting directly from TypedDict.
    
    https://github.com/google/pytype/issues/680
    
    PiperOrigin-RevId: 416680857

[33mcommit a325c44c3ad386bad1d79ca720497a2ed37fd95f[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 15 16:09:51 2021 -0800

    Fix a bug in adjusting line numbers for annotation-type-mismatch.
    
    Function definitions can contain any BUILD_* opcode, not just BUILD_TUPLE.
    
    PiperOrigin-RevId: 416669658

[33mcommit b64248d6f8d9553da5b2f258fd6ad31d18b001d4[m[33m ([m[1;33mtag: 2021.12.15[m[33m)[m
Merge: 002b88cf f52cf6dd
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 15 12:51:14 2021 -0800

    Merge pull request #1088 from google/google_sync
    
    Google sync

[33mcommit f52cf6dd27f89a4c5356e63df1c4f0875aedb8cc[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 15 11:50:01 2021 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 416612188

[33mcommit 170e9925accc404d2bafd359f81f4b8cb8f1eeef[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 14 22:27:37 2021 -0800

    Fix another 'TypeVar not in scope' false positive.
    
    Resolves https://github.com/google/pytype/issues/1085.
    
    PiperOrigin-RevId: 416471670

[33mcommit faee4bf3ea375c567edea58ddcb8c100041b6472[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 14 13:59:19 2021 -0800

    Move Instance subclasses out of abstract.py.
    
    * Moves subclass of Instance out of abstract into their own _instances module.
    * Renames _instance.py to _instance_base.py.
    * Adds a ctx.abstract_classes_for_submodules attribute that makes some abstract
      classes available in places where abstract.py can't be imported.
    * Moves var_map from abstract_utils to _instances. The latter is the only place
      it's used.
    * Fixes a small issue in abstract_utils._isinstance I happened to spot (missing
      trailing "." in a couple module name checks).
    
    PiperOrigin-RevId: 416388709

[33mcommit b4dd8fef9c259fe97a865cccb0a75383cfb621ae[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 13 19:44:33 2021 -0800

    Split out abstract.py's singletons into a new _singletons module.
    
    PiperOrigin-RevId: 416193000

[33mcommit cc982f3992fd538cbb40dab3d937ff848ef4be9b[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 13 18:34:49 2021 -0800

    Split SimpleValue and Instance out of abstract.py.
    
    Creates a new _instance module for these classes. Also makes a couple small
    changes to SimpleValue to remove unwanted dependencies on abstract.py:
    
    * Changes an isinstance(InterpreterClass, PyTDClass) check in
      maybe_missing_members to isinstance(class_mixin.Class).
    * Instead of doing a series of isinstance() checks in _get_class, moves
      subclass-specific behavior into overriding methods in the subclasses.
    
    PiperOrigin-RevId: 416184013

[33mcommit 7b37ba4be0178cfcc806c8973d5a17a44c434f3c[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 13 11:43:46 2021 -0800

    Add a few missing opcodes to directors.py attribute-error detection.
    
    PiperOrigin-RevId: 416095891

[33mcommit 8e914bfc15e278745ce8aca76d95bfbf8f8e2344[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 13 11:43:40 2021 -0800

    Track late annotations by id in LateAnnotation.is_recursive().
    
    This fixes a crash caused by pytype thinking a late annotation is recursive if
    it happens to resolve to the same type as another late annotation.
    
    PiperOrigin-RevId: 416095866

[33mcommit 80fd8953d2882a71ff619a4b1d83e1ce2762f1fc[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 10 19:15:35 2021 -0800

    Stop reporting weird name errors for ".0".
    
    PiperOrigin-RevId: 415660309

[33mcommit 002b88cf8e0254fbd73fa0277800ec1d0c4e9a99[m
Merge: 1d2e99eb 99041ad4
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 13 22:48:58 2021 -0800

    Merge pull request #1086 from google/pyi
    
    Stop excluding pytype/pyi/ files from type-check.

[33mcommit 99041ad4b98c03d0d6d7d4f27ada6fce1a9a5e9c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 13 22:02:59 2021 -0800

    Stop excluding pytype/pyi/ files from type-check.
    
    The type errors in these files were fixed a few weeks ago.

[33mcommit 1d2e99eb2fab3393029ae0bee5112f0740c9161e[m
Merge: 3406552d 6152bf40
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Dec 10 19:09:13 2021 -0800

    Merge pull request #1084 from google/google_sync
    
    Google sync

[33mcommit 6152bf405944e3bd710a9e236fd849684bc9245a[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 10 18:25:24 2021 -0800

    Eliminate a spurious 'TypeVar not in scope' error.
    
    For some reason, in some cases, 'self' does not appear in the f_locals of the
    frame for a class method. Using first_arg seems more reliable.
    
    Resolves https://github.com/google/pytype/issues/1083.
    
    PiperOrigin-RevId: 415654323

[33mcommit 49a935582e446b059b02545422e524e0b84e73e3[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 10 18:07:25 2021 -0800

    --allow-recursive-types: fix a bug in abstract->pyi conversion.
    
    PiperOrigin-RevId: 415652061

[33mcommit a79f4c521d3fcc10da0918eb86f1c5ef47afe8f4[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 10 15:28:03 2021 -0800

    Fix a Python 3.9 issue with `# pytype: disable=attribute-error` line numbers.
    
    PiperOrigin-RevId: 415623696

[33mcommit 8236a62889326ea1bfe5a9d83e534bfe666ae4a3[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 10 12:57:25 2021 -0800

    Partially implement abstract matching for --allow-recursive-types.
    
    PiperOrigin-RevId: 415589838

[33mcommit b79f8ec3a34f196c1b51f43e9fa2f9ea56bf73c0[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 9 19:15:53 2021 -0800

    Internal change
    
    PiperOrigin-RevId: 415409461

[33mcommit 81e72e472cc862bbeff2a65fbe095ceb56c696c2[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 9 16:20:45 2021 -0800

    Fix a bug in resolving dotted name types in load_pytd.
    
    PiperOrigin-RevId: 415382312

[33mcommit f31f53b7772e18ae72a34b594bfd17838071bb7c[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 9 16:08:42 2021 -0800

    Default --fix-module-collisions to True.
    
    PiperOrigin-RevId: 415379842

[33mcommit 1aaeb103b0dc1ee2e5b3e6d4a6f3489a9eb04f9c[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 8 18:25:22 2021 -0800

    Make an [invalid-annotation] error a bit clearer.
    
    PiperOrigin-RevId: 415147536

[33mcommit 3406552df136327ce11655cb42107176fdadd5b9[m[33m ([m[1;33mtag: 2021.12.08[m[33m)[m
Merge: 4a5878fc 0dec1b46
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 8 14:37:44 2021 -0800

    Merge pull request #1079 from google/google_sync
    
    Prepare a PyPI release.

[33mcommit 0dec1b46572d6035e7994f50b92af9f8503678dd[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 8 13:48:35 2021 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 415087137

[33mcommit 4a5878fca7691aa48d200eada6aa89adbfc63659[m
Merge: c0712249 f202f0e2
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 7 18:11:30 2021 -0800

    Merge pull request #1078 from google/google_sync
    
    Google sync

[33mcommit f202f0e223e7c03f8ad440ff0d4f6fd171360cff[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 7 17:33:19 2021 -0800

    Add object.__dir__ to builtins.pytd.
    
    Resolves https://github.com/google/pytype/issues/1061.
    
    PiperOrigin-RevId: 414868451

[33mcommit 4c8221b77cd55466205816b4ffbbbacb0f123175[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 7 17:16:26 2021 -0800

    Fix a crash in --protocols mode.
    
    Resolves https://github.com/google/pytype/issues/410.
    
    PiperOrigin-RevId: 414865549

[33mcommit c0712249a23f3341633cf0f012d9816bf037598a[m
Merge: 8addfb60 97cd9610
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 7 16:30:46 2021 -0800

    Merge pull request #1077 from google/google_sync
    
    Google sync

[33mcommit 97cd9610a5cc0ab64ef938da82153048a3b794f0[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 7 12:53:38 2021 -0800

    Remove pytd optimizations that broke overloads.
    
    A couple of the optimizations in pytype.pytd.optimize were messing up function
    overloads in .py files. These optimizations aren't very helpful anymore, as
    far as I can tell (they were probably more useful back when pytype regularly
    inferred multiple signatures for a single function), so the easiest thing to do
    is to get rid of them.
    
    One of the removed optimizations was hiding a bug in the RemoveDuplicates
    visitor by removing signatures that the latter failed to detect as duplicate,
    so I fixed that bug as well.
    
    PiperOrigin-RevId: 414802324

[33mcommit 4edd3a7de2ad5c11c392ce59491596c41182eefa[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 7 12:21:09 2021 -0800

    Add a `--debug-logs` option to write machine-parsable info to the logs.
    
    Prefixes each log line with a colon-separated block of information.
    
    Also adds a simple log parsing script to read this information back out.
    
    PiperOrigin-RevId: 414794979

[33mcommit 8addfb60532c32c56e3ac49029bfce0d254bf75b[m
Merge: 41ce7914 eca00c29
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 1 14:35:48 2021 -0800

    Merge pull request #1073 from google/google_sync
    
    Allow summing anything with an __add__ method.

[33mcommit eca00c29bf8e321cb5f1c9963c45c7bcd5a7b9b4[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 1 13:14:55 2021 -0800

    Allow summing anything with an __add__ method.
    
    Fixes https://github.com/google/pytype/issues/1067.
    
    PiperOrigin-RevId: 413493250

[33mcommit 41ce7914c8fce77acdb85b8613523cecf22b236d[m
Merge: 9df7d78c eccb7b3c
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 30 17:33:22 2021 -0800

    Merge pull request #1070 from google/ts
    
    Update typeshed to 3b6a52b8581bde232a36c407f08c51564b00597a.

[33mcommit eccb7b3c74096a1ae277ca9f691af4cbb8ab2bc3[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 30 16:59:23 2021 -0800

    Update typeshed to 3b6a52b8581bde232a36c407f08c51564b00597a.

[33mcommit 9df7d78c4a7ab5ad63dd639c15b37d61e3dc2cf5[m
Merge: 1044d8c4 bae68715
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 30 16:58:19 2021 -0800

    Merge pull request #1069 from google/google_sync
    
    Google sync

[33mcommit bae687154748d0306c80dfc3c090b7e63be212bc[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 30 13:03:56 2021 -0800

    Make a test less sensitive to typeshed changes.
    
    Defines our own version of math.pow for an import test so the test doesn't have
    to be updated when the typeshed definition of pow changes.
    
    PiperOrigin-RevId: 413225494

[33mcommit ba7badb77fc0dbe0fe78acc0dbf48c9ee5d74442[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 29 21:09:08 2021 -0800

    Review docs and update freshness.
    
    PiperOrigin-RevId: 413052419

[33mcommit a3c8a29f7b6b4ca30aba7a8e10f83bdfbdcff82c[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 29 20:44:37 2021 -0800

    Recognize typing_extensions.SupportsIndex as a protocol.
    
    pytype did not recognize that typing_extensions.SupportsIndex inherits from
    Protocol, which causes problems when trying to update typeshed to a version
    that uses SupportsIndex more heavily.
    
    PiperOrigin-RevId: 413049303

[33mcommit 1044d8c4c105667f45be13e35e774b56f474099a[m[33m ([m[1;33mtag: 2021.11.29[m[33m)[m
Merge: 1e48e202 4cf9c2d4
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 29 16:20:47 2021 -0800

    Merge pull request #1068 from google/google_sync
    
    analyze_project: pass feature flags to the INFER command.

[33mcommit 4cf9c2d4bc0a70f09e46ef23301f13142ee2a15c[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 29 15:27:51 2021 -0800

    analyze_project: pass feature flags to the INFER command.
    
    Previously, feature flags were passed only to CHECK, so flags that modify
    inference behavior didn't work.
    
    Also bumps __version__ and CHANGELOG so I can release this immediately. (No
    point in waiting for nightly testing, since we don't use analyze_project
    internally anyway.)
    
    For https://github.com/google/pytype/issues/1057.
    
    PiperOrigin-RevId: 412996772

[33mcommit 1e48e2020a0d952437125602fc837ad77728704a[m[33m ([m[1;33mtag: 2021.11.24[m[33m)[m
Merge: bf718ab9 61b4dccb
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 24 14:29:36 2021 -0800

    Merge pull request #1065 from google/google_sync
    
    Google sync

[33mcommit 61b4dccba177e68fee42dd50652a6f1d95e7a9f1[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 24 13:55:15 2021 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 412129441

[33mcommit 7a2e6aa276011e588e94cd5b3600fb5b6cd187f1[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 24 13:53:49 2021 -0800

    Put 'duplicate top-level identifier' fix behind a feature flag.
    
    This seems to have caused quite a few breakages. As far as I can tell, it's
    because we now handle the 'bidict.bidict' class properly, which is a good
    thing, but this has also exposed some sort of weird bug involving overloads and
    __init__. I'd like to get a PyPI release out today, so I'm going to stick this
    behind a flag for now and dig into it more next week.
    
    For https://github.com/google/pytype/issues/1057.
    
    PiperOrigin-RevId: 412129190

[33mcommit 243ae66548be93476efb667e47e736aaa379bfe5[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 24 13:00:23 2021 -0800

    Don't enforce @abstractmethod and @coroutine consistency on properties.
    
    See https://github.com/python/typeshed/pull/6361.
    
    PiperOrigin-RevId: 412119101

[33mcommit e3dcd51fabfa3e6c74ff3df42fe0cb83113ad87b[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 24 12:43:05 2021 -0800

    Fix a crash caused by SimpleValue not implementing instantiate().
    
    PiperOrigin-RevId: 412116246

[33mcommit 30d84c3a915ca9456c8ba8c4afab05782625694c[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 23 17:29:15 2021 -0800

    Fix a 'duplicate top-level identifier' pyi issue.
    
    We were generating a bad pyi for 'from datetime import datetime' that defined
    'datetime' twice (once via an 'import datetime' line and again as a 'datetime:
    Type[datetime.datetime' constant).
    
    Fixed by changing the import statement to 'import datetime as _datetime'.
    
    Resolves https://github.com/google/pytype/issues/1057.
    
    PiperOrigin-RevId: 411930502

[33mcommit bf718ab92b30000a10a56a7a090417d7fdcd0cfc[m
Merge: b3e9e2ba 54c7a399
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 23 16:34:03 2021 -0800

    Merge pull request #1064 from google/ts
    
    Update typeshed to 7cc5eb29506992bad1e2c0948b847d349b7438e0.

[33mcommit 54c7a399754d20a4cfe71ca1947010272236051d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 23 16:04:24 2021 -0800

    Update typeshed to 7cc5eb29506992bad1e2c0948b847d349b7438e0.

[33mcommit b3e9e2ba00daa513e6b66bd34edb3cc99aec60ec[m
Merge: 03ffd067 69b43a98
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 23 14:30:09 2021 -0800

    Merge pull request #1063 from google/google_sync
    
    Google sync

[33mcommit 69b43a98738991d128f3888645698900dc0d2495[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 23 13:08:18 2021 -0800

    Split out abstract.BaseValue into its own file.
    
    This moves BaseValue into a new file, _base.py, along with
    abstract_utils.get_template and compute_template, which are only used in
    BaseValue. This has several advantages:
    * We avoid putting anything except abstract classes in abstract.py because it
      is already so bloated; if we split it up, we can put helper methods and
      classes close to where they're used.
    * xrefs and type-checking will actually work in _base.py.
    * Module boundaries may help with reinforcing good conceptual boundaries (e.g.,
      BaseValue shouldn't really reference its subclasses).
    
    All the code in _base.py is moved from other files, but I don't know a way to
    display the diff properly, so I left a few comments with screenshots instead.
    
    PiperOrigin-RevId: 411878308

[33mcommit 0004a9c5c4c4df3b79f5efd6194bf75ce77a66e2[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 23 12:53:19 2021 -0800

    Get rid of BaseValue's dependencies on Instance and AnnotationContainer.
    
    This will make it possible to split BaseValue out into its own file.
    
    PiperOrigin-RevId: 411875391

[33mcommit 34b197569f8660443e4dd2f5818fae67196e100a[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 23 12:36:04 2021 -0800

    Replace BaseValue.isinstance_* methods with an abstract_utils._isinstance().
    
    This has several advantages over the previous approach:
    * Calling isinstance() on a class for the first time does not require adding
      another isinstance_* method to BaseValue.
    * This is more readable, since it looks like builtins.isinstance().
    * The method being private should help avoid unnecessary usages.
    * BaseValue no longer depends on ~everything in abstract.py, which will make it
      easier to split up the file.
    
    PiperOrigin-RevId: 411872023

[33mcommit 7e0a6b0251b2c55c2f696c41b10576aaee1b14de[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 22 11:55:38 2021 -0800

    Rename the importlab "master" branch to "main".
    
    Again, I've already done the rename on GitHub; this is to update the remaining
    internal references.
    
    PiperOrigin-RevId: 411614290

[33mcommit 03ffd06787cf1fc9a2b615462d400ea12fdc000a[m
Merge: 52729999 c2869859
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 23 00:06:50 2021 -0800

    Merge pull request #1060 from google/google_sync
    
    Google sync

[33mcommit c2869859e46c854d8436afd0a2f7569a526df5ce[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 22 11:18:46 2021 -0800

    Address lint warnings.
    
    Addresses a couple warnings reported by the opensource linter.
    
    PiperOrigin-RevId: 411604980

[33mcommit 3ccf809718c776b6374b80b18e3181e086b23071[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 22 08:32:09 2021 -0800

    Internal change
    
    PiperOrigin-RevId: 411567251

[33mcommit 6f91782309b1f357ac68082acdb17072bfa4eb0e[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 19 17:33:43 2021 -0800

    Fix a [not-instantiable] false positive.
    
    This stops us from reporting [not-instantiable] when an abstract class is
    instantiated inside one of its own methods, which is not necessarily an error.
    
    PiperOrigin-RevId: 411178338

[33mcommit a535439c5bd0d74f7ae56e3b70234677cca0e60b[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 19 16:57:13 2021 -0800

    Remove gen_stub_imports flag, pass options bundle instead where appropriate.
    
    * Gets rid of --gen-stub-imports, now that we've done a release in which the
      flag defaults to True.
    * Adds a PyiOptions object that can copy values from the top-level
      config.Options and adds it to most functions that had a gen_stub_imports arg.
    
    PiperOrigin-RevId: 411173191

[33mcommit ba348e819d023f8b9b859fe11b21c480501f8ebd[m
Author: mdemello <mdemello@google.com>
Date:   Fri Nov 19 16:39:00 2021 -0800

    Look up local names in nested class scopes when importing pyi files.
    
    PiperOrigin-RevId: 411170820

[33mcommit 5f74354804bbc311426962649dd2aa3794708d3b[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 19 13:06:06 2021 -0800

    Rename pytype "master" branch to "main".
    
    I already did the branch rename on GitHub; this updates copybara, docs, etc.
    
    PiperOrigin-RevId: 411126488

[33mcommit 5272999943aeda19888439bcc6b0b5ad7b7f7c6d[m
Merge: 53cde534 c82cc1d5
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 19 14:09:05 2021 -0800

    Merge pull request #1059 from google/google_sync
    
    Google sync

[33mcommit c82cc1d568809a5f2d644c36830b2fd27e091119[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 19 13:38:02 2021 -0800

    Address lint warnings.

[33mcommit b29cbfeb7e04da9af0e28abf453a8564d3dc0d49[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 19 12:48:57 2021 -0800

    load_pytd.Loader: accept a config.Options object rather than individual options
    
    This will make it easier to pass options to the parser.
    
    PiperOrigin-RevId: 411123245

[33mcommit 8d8150c6b389ece9ef717b88c8a79a70f43ffb06[m
Author: tsudol <tsudol@google.com>
Date:   Fri Nov 19 12:46:13 2021 -0800

    Remove unneeded TODOs.
    
    These haven't been acted on in several years, and don't seem to indicate actual problems in the code.
    
    PiperOrigin-RevId: 411122735

[33mcommit 1c123229f468beb90a6f8cde6c256f4a9e74359f[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 19 12:31:23 2021 -0800

    Remove pytype's ability to accept python_version=3.
    
    This has been useless since we dropped target Python 2 support. Instead,
    python_version should be omitted or passed in as None.
    
    There are a few places in this change where I had to write
    'python_version or sys.version_info[:2]'. I didn't pull this out into a helper
    method because all but one of these will disappear in follow-up changes that
    will pass in config.Options rather than python_version in a lot of places.
    
    PiperOrigin-RevId: 411119902

[33mcommit afe9d311fd0bf4d64446030513ecc940a4eabac2[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 18 23:31:51 2021 -0800

    Get rid of pytype.config's dependency on pytype.load_pytd.
    
    This gets rid of an (implicit) circular dependency between config and load_pytd
    introduced by passing config.Option objects to load_pytd.Loader.
    
    PiperOrigin-RevId: 410983993

[33mcommit c8a91520bd57cd216f136e91f3585a30641ebe9b[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 18 17:22:10 2021 -0800

    Manually import part of GitHub PR #1055.
    
    Since this PR touches files tracked internally and ones tracked externally, I
    merged it and manually copied a few bits.
    
    PiperOrigin-RevId: 410936004

[33mcommit 6e4ba566deec1f43165306b346595b8186f62936[m
Author: mdemello <mdemello@google.com>
Date:   Thu Nov 18 15:36:24 2021 -0800

    Let `Signature.check_defaults()` raise an error message directly.
    
    This was only being called to return the name of a non-default parameter
    following a default one, so that the calling code could raise an error.
    
    PiperOrigin-RevId: 410915024

[33mcommit cfc4c4ac44f0a63894b38c952fce7a83c009ea6d[m
Author: mdemello <mdemello@google.com>
Date:   Thu Nov 18 15:26:13 2021 -0800

    Raise a not supported error for constructors in type annotations in pyi files.
    
    PiperOrigin-RevId: 410912715

[33mcommit 4fe76d236a4f3426d907610ad35f522ac130a135[m
Author: mdemello <mdemello@google.com>
Date:   Thu Nov 18 15:11:46 2021 -0800

    Check for multiple module-level `__getattr__` overloads.
    
    PiperOrigin-RevId: 410909687

[33mcommit 53cde534856bb54651cb1dd05fb2a56c2e2c9ab3[m
Merge: d41d819e 88f4e7de
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 19 13:30:24 2021 -0800

    Merge pull request #1058 from google/rename
    
    Rename "master" to "main" in setup.py and .github/workflows/

[33mcommit 88f4e7de1df216138199ffa2e2f748a93172b26c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 19 13:01:59 2021 -0800

    "master" -> "main" in .github/workflows/.

[33mcommit a0a4cb76bf0f506485a47075aeeb1f30ff2db17d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 19 12:57:47 2021 -0800

    Rename "master" to "main" in setup.py.

[33mcommit d41d819efd7ef2c108f30d4bcb0632de3f3010ed[m
Merge: 20d4fe80 3aecfef4
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 18 16:45:28 2021 -0800

    Merge pull request #1055 from lgeiger/remove-typed-ast
    
    Only require `typed-ast` for Python < 3.8

[33mcommit 20d4fe802480956518b6deb686e663789325b897[m[33m ([m[1;33mtag: 2021.11.18[m[33m)[m
Merge: c32c2469 3b9c5970
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 18 16:31:59 2021 -0800

    Merge pull request #1056 from google/google_sync
    
    Google sync

[33mcommit 3b9c59707e7f4a011e8852ff85aff586e0b8bfe5[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 18 15:03:55 2021 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 410907934

[33mcommit 41f6b8e55d1b4e01ebcd30fe706e924ca3fa3f70[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 17 21:45:37 2021 -0800

    Resolve 3.9 type errors in pytype/pyi/.
    
    PiperOrigin-RevId: 410706331

[33mcommit e2faeab97a2cf115363123d68c1e87e2530b0057[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 17 18:27:22 2021 -0800

    Fix another 3.9 line number issue.
    
    This one is a bug in adjusting line numbers for annotation-type-mismatch.
    
    PiperOrigin-RevId: 410679938

[33mcommit 9577afbf2b7aa05a6f630ac9170ac3ed93ba29fe[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 17 13:48:14 2021 -0800

    Detect more function call opcodes in directors.py.
    
    This should fix most of the failures caused by disables being moved to the
    wrong lines.
    
    PiperOrigin-RevId: 410619673

[33mcommit 3aecfef4a389551ca4deb30872fcc0eafff1b6d2[m
Author: Lukas Geiger <lukas.geiger94@gmail.com>
Date:   Thu Nov 18 12:39:14 2021 +0000

    Disable linter warning

[33mcommit 74fbfbb0d38d98bd6ee2b4719961ffd2609c6808[m
Author: Lukas Geiger <lukas.geiger94@gmail.com>
Date:   Wed Nov 17 15:12:31 2021 +0000

    Replace typed-ast with ast

[33mcommit ee954b337373e9e03c712d8535d0fd8b82c15512[m
Author: Lukas Geiger <lukas.geiger94@gmail.com>
Date:   Wed Nov 17 12:16:10 2021 +0000

    Only require `typed-ast` for Python < 3.8

[33mcommit c32c246993c27d2439189fa4e97a76e732668ed1[m
Merge: 6daf1a79 a8524fd0
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 16 21:04:59 2021 -0800

    Merge pull request #1054 from google/google_sync
    
    Google sync

[33mcommit a8524fd09ece290d7ea73ad6bfa6c7549a5083be[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 16 20:33:20 2021 -0800

    Disable pylint invalid-name for more of builtin_stubs.py.

[33mcommit 66ba8ec8452f8d882394d5e72ee9d6204700d4a8[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 16 20:22:21 2021 -0800

    Allow unknown node types when in a module with a test-like name.
    
    This is needed for our opensource tests.
    
    PiperOrigin-RevId: 410418944

[33mcommit e2256b5f720c4cc3db8155adf0cddc73bc72dfb1[m
Author: mdemello <mdemello@google.com>
Date:   Tue Nov 16 19:37:54 2021 -0800

    Add a helpful error message for use-after-delete.
    
    PiperOrigin-RevId: 410411635

[33mcommit 1a08f9d73aadb427dd67a7c548d94659dbdc933d[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 16 17:50:19 2021 -0800

    Remove some more TODOs.
    
    Removes a few obsolete TODOs assigned to people no longer working on pytype and
    one in printer.py to use types.ModuleType instead of builtins.module (using a
    non-builtins/typing type is complicated and usually not worth it).
    
    PiperOrigin-RevId: 410394576

[33mcommit dd23e6b54f7e7d7135fb7ca1897b71a68c64d485[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 16 17:35:17 2021 -0800

    Allow disables for invalid calls in 3.9 to be put on the same lines as in 3.7.
    
    This makes it easier to upgrade from Python 3.7 to 3.9.
    
    This change also fixes a slightly annoying issue where we didn't allow function
    call disables to go after the closing parenthesis if there was nothing else on
    that line, so you had to write
    
    def f(
      x  # pytype: disable=wrong-arg-types
    )
    
    rather than
    
    def f(
      x
    )  # pytype: disable=wrong-arg-types
    
    There's one downside to this change, which is that in 3.8+, it applies a
    disable to a function even if it's not on the final line, so
    
    def f(
      x,
      y,  # pytype: disable=wrong-arg-types
      z,
    )
    
    disables wrong-arg-types for f. This also means that disable behavior in 3.7
    and 3.8+ is slightly different. This may be fixable with some extra parsing
    and/or version-specific logic in directors.py, but that's more troublesome to
    maintain, so I'm inclined to just let this difference exist unless it starts
    causing bugs and/or problems with the upgrade.
    
    PiperOrigin-RevId: 410392112

[33mcommit 93083bb352969943a6dc63f747065e5e4041b7f1[m
Author: mdemello <mdemello@google.com>
Date:   Tue Nov 16 17:22:07 2021 -0800

    Get rid of `full_version_from_major()`
    
    PiperOrigin-RevId: 410389746

[33mcommit 832733c0b6c9db4a3d1fa27c3fdd30b3d6295180[m
Author: mdemello <mdemello@google.com>
Date:   Tue Nov 16 16:07:15 2021 -0800

    Refactor the builtin stubs loader.
    
    * Rename the module from `builtins` to `builtin_stubs` to avoid confusion with
      the standard lib `builtins`
    * Separate the code loading the `builtins` and `typing` modules from the code
      maintaining them in a global cache
    
    PiperOrigin-RevId: 410374895

[33mcommit 060ee7d0f7e6578bca1d56ba98abc3a8177ef980[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 16 15:03:54 2021 -0800

    Refactor directors.Director.adjust_line_numbers.
    
    adjust_line_numbers was getting unwieldy, so this breaks it up into a bunch of
    helper methods and classes.
    
    PiperOrigin-RevId: 410359941

[33mcommit 4791a26ee5b6a209ce2fd4c539ab6e535dcf4fc4[m
Author: tsudol <tsudol@google.com>
Date:   Tue Nov 16 14:28:54 2021 -0800

    Replace unnecessary TODO with explanatory comment.
    
    This TODO was a note to future maintainers: `call_with_fake_args` only works for functions that raised FailedFunctionCall, and re-calling functions that raised DictKeyMissing would require a different approach.
    
    PiperOrigin-RevId: 410351056

[33mcommit c1ebedf2e0a3028c46bac3a67cb22f5f91d5a604[m
Author: mdemello <mdemello@google.com>
Date:   Tue Nov 16 13:56:56 2021 -0800

    In `path_to_module_name()`, make sure the path is a python file.
    
    Also fix an issue with the typeshed blocklist this change exposed.
    
    PiperOrigin-RevId: 410342615

[33mcommit 80544c2c515d18dbae938dc143197146c2b99d30[m
Author: mdemello <mdemello@google.com>
Date:   Tue Nov 16 13:43:34 2021 -0800

    Move the builtins loader to pytd/builtins.py
    
    PiperOrigin-RevId: 410339204

[33mcommit 354a4ce94546f65945acdc3de3dd15b8901b0301[m
Author: tsudol <tsudol@google.com>
Date:   Tue Nov 16 11:57:50 2021 -0800

    Remove TODO: different version keyword args are handled in collections.pytd.
    
    PiperOrigin-RevId: 410312900

[33mcommit c97c40a51ae89f90b436b323ac40499cc2b53e8a[m
Author: tsudol <tsudol@google.com>
Date:   Tue Nov 16 11:57:37 2021 -0800

    Stop tools from complaining about a fake TODO.
    
    Apparently our tools aren't smart enough to pick out when a TODO is in a string, so let's change this to something innocuous.
    
    #Squeegee
    
    PiperOrigin-RevId: 410312850

[33mcommit f8f682597affebb26673b1a7dbb389f757e72b17[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 15 17:57:07 2021 -0800

    Remove some TODOs:
    
    * class_mixin.py: Decided to keep using the attribute as a key
    * typeshed.py: Can no longer remember why I wanted to do this
    
    PiperOrigin-RevId: 410125720

[33mcommit 0d7d4b9aa4c10cf0352a0e94ad2969920fbe895e[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 15 17:56:18 2021 -0800

    Audit TODOs assigned to rechen.
    
    * Deletes a variety of unactionable TODOs - vague, obsolete, no compelling
      motivation, etc.
    * Resolves a few simple ones.
    * Replaces my username with a bug id where a relevant bug already exists.
    
    I also resolved a self-assigning-variable lint finding in tyre/node_utils.py
    because why not.
    
    PiperOrigin-RevId: 410125613

[33mcommit 0715845ce24a460c0eda4a4b6e7c0afc3dbac9d3[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 15 17:21:55 2021 -0800

    Deal with TODOs assigned to Xooglers.
    
    * Finish a TODO that rpalaguachi@ didn't get to.
    * Delete two TODOs assigned to fyquah@ - he was an intern several years ago,
      and I no longer have the context for these.
    
    PiperOrigin-RevId: 410119916

[33mcommit 302066f69d5b86cb13c25c02b0ba1b2ad7cfb25f[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 15 16:40:09 2021 -0800

    Remove Python 2 and add Python 3 classes to abc_hierarchy.
    
    - Removes Python 2 classes from abc_hierarchy
    - Adds several missing base classes, such as the various async-related classes.
    
    Note that at this point we could derive this file from collections.abc directly, or by calling pytd_visitors.ExtractSuperClassesByName on the `_collections_abc.pyi` stub. However, given where and how abc_hierarchy is used and how rarely the base classes change, manually updating this file is much simpler.
    
    PiperOrigin-RevId: 410112153

[33mcommit 6daf1a791757a589236e95671cbbfd75415b39d8[m
Merge: c1b0a98e 01d8792a
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 16 20:23:23 2021 -0800

    Merge pull request #1052 from google/google_sync
    
    Google sync

[33mcommit 01d8792aa82a9c10dc2253a5a15461d4c56b4339[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 16 19:48:30 2021 -0800

    Allow unknown node types when in a module with a test-like name.

[33mcommit 263f4adacc5c95597df5734dfce9f1b3eb1b5d77[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 15 14:49:05 2021 -0800

    Disable an incorrect lint warning.
    
    This showed up during the latest GitHub export, presumably because
    ast.parse doesn't have a 'feature_version' argument in older versions.
    
    PiperOrigin-RevId: 410086015

[33mcommit 7aba25ed302fb975aa291b851150b7377707606a[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 15 14:46:32 2021 -0800

    Delete todo that we already have a bug for ([]).
    
    PiperOrigin-RevId: 410085436

[33mcommit 6ac154b92d9f3f34d75fe9183da6cca40335bafd[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 15 14:35:26 2021 -0800

    Remove fixed TODO.
    
    The underlying issue is not apparent, and we haven't had any issues related to super classes.
    
    PiperOrigin-RevId: 410082693

[33mcommit 4bf38b7cd7695760ad9c5d22d28a073073f53915[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 15 14:14:01 2021 -0800

    Remove outdated utils.memoize.
    
    This was added in 2015, before functools.lru_cache was added.
    
    When we move to host 3.9, we can use functools.cache, which is functionally equivalent to lru_cache(maxsize=None) but with some alleged optimizations.
    
    #Squeegee
    
    PiperOrigin-RevId: 410077505

[33mcommit 69577db851eb7ea31db4b248a844e5b4396b6b7b[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 15 14:09:39 2021 -0800

    Check for pytd visitors that visit unknown node types.
    
    Checks two special cases that need types not in pytd.pytd, and raises an error
    otherwise.
    
    PiperOrigin-RevId: 410076377

[33mcommit ae8ccfd6d4985052e2a6264809c8a73472364d6f[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 15 13:46:03 2021 -0800

    FIX: Subscript ast changed in 3.9, not 3.8.
    
    PiperOrigin-RevId: 410069985

[33mcommit a8606adc49bd096e7618e850ebb3d779d0d88f6e[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 15 13:24:23 2021 -0800

    Remove unneeded TODOs.
    
    Not sure why these TODOs existed in the first place. The linked bugs have no useful information.
    
    PiperOrigin-RevId: 410064507

[33mcommit e54faf2e36ed392de39bb124a0cb9021cf72d348[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 15 13:22:43 2021 -0800

    Remove unneeded TODOs.
    
    We should focus on improving optimize in response to bugs, not speculative changes with no obvious end goal.
    
    PiperOrigin-RevId: 410064097

[33mcommit f444366d6db83f6d0a3b62bd32a2efebfd9642ac[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 15 12:20:42 2021 -0800

    Pass more precise argument types to contextmanager __exit__ methods.
    
    Previously, we were assuming __exit__ would always be passed (None, None, None)
    even though it is passed sys.exc_info() when an exception is encountered.
    
    PiperOrigin-RevId: 410049523

[33mcommit e076cabfcbe97fa1fff39050ceb2483b54c7f11a[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 15 12:14:10 2021 -0800

    Use `move_to_end` instead of key deletion.
    
    This resolves the TODO on this function.
    Using an OrderedDict over a regular dict clearly communicates that item order matters, even though regular dicts also maintain item order now.
    While key deletion and `move_to_end` have the same result, `move_to_end` and setting a new value is faster than deleting and re-inserting the key.
    
    PiperOrigin-RevId: 410047862

[33mcommit 8d12ff6af37a54369a999337ce764812b2a4e93f[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 15 12:11:27 2021 -0800

    Remove references to the `__builtin__` module.
    
    `__builtin__` is a vestige of the Python 2->3 bridge. Now that pytype is Python 3-only, and typeshed has sequestered its Python 2-only stubs, we can remove support for `__builtin__`.
    
    PiperOrigin-RevId: 410047061

[33mcommit c1b0a98e2a6396b286676c80f3a4ff4560653da7[m
Merge: 385e4e84 017aa850
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 15 14:43:44 2021 -0800

    Merge pull request #1051 from google/google_sync
    
    Google sync

[33mcommit 017aa850d0115314b3a21ba5b21d557601c1a9e8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 15 12:24:31 2021 -0800

    Address a couple of parser-related issues.
    
    * Disable mistaken lint warning.
    * Fix a sys.version_info guard.

[33mcommit 818daa3dee0b57774e376a01b5d40ce798e8437a[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 15 12:08:46 2021 -0800

    Recognize "/dev/null" as a package path in load_pytd.
    
    imports_map_loader adds missing entries for __init__.py files in intermediate
    directories by setting the paths to os.devnull, so is_package() should return
    True. This fixes a bug triggered by opensource pytype attempting to analyze
    itself with --gen-stub-imports enabled.
    
    PiperOrigin-RevId: 410046371

[33mcommit fa0745583248ec20d935fc60313b55cd1c90b034[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 12 16:06:09 2021 -0800

    Fix up the CHANGELOG.
    
    I forgot to include the fact that we now release wheels for linux aarch64, and
    I also reverted a change that was supposed to be in today's release because it
    was making the opensource tests unhappy.
    
    PiperOrigin-RevId: 409529032

[33mcommit ffb2056b9fba2e5615acf14c38991ee91da5c234[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 12 14:16:12 2021 -0800

    Rollback of changelist 409002621.
    
    *** Reason for rollback ***
    
    Pytype still uses host 3.6 externally.
    
    *** Original change description ***
    
    remove an obsolete pytype disable.
    
    ***
    
    PiperOrigin-RevId: 409499819

[33mcommit 2a6a1cebb13a71d5a2dda08ef2e260a81659b392[m
Author: mdemello <mdemello@google.com>
Date:   Fri Nov 12 12:47:56 2021 -0800

    Use the internal ast module for python >= 3.8
    
    * Adds a conditional import everywhere we import the ast parser
    * Handles AST changes between 3.7 and 3.8
    * Drops explicit unicode strings; `u''` and `''` are both `str` in 3.8+
    * Renames `pyi.types.Constant` -> `pyi.types.Pyval` since there is an
      `ast.Constant` node now
    
    Also fixes or skips some tests that aren't passing in 3.9, so we can test the
    new ast parse path in 3.9.
    
    Fixes https://github.com/google/pytype/issues/1045
    
    PiperOrigin-RevId: 409479590

[33mcommit 385e4e846a98d352143a3cbeb9dff12c4be850b2[m[33m ([m[1;33mtag: 2021.11.12[m[33m)[m
Merge: f5d39d51 4aa128d1
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 12 13:13:57 2021 -0800

    Merge pull request #1050 from google/google_sync
    
    Google sync

[33mcommit 4aa128d1dbdabf6d20815be97abf2a006fc7db57[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 12 12:28:52 2021 -0800

    Re-add disables removed prematurely from generate_opcode_diffs.py.

[33mcommit 24f8cd39925236137104161d66bd127fc7fe5fb5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 12 11:58:26 2021 -0800

    Disable a feature flag that's causing problems.

[33mcommit 3a5fa9730b071ca114aa45b226b53f78e4b21bf5[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 12 11:33:27 2021 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 409461114

[33mcommit fc7596132a569863568793f21c35b63ac190b887[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 11 15:00:41 2021 -0800

    --allow-recursive-types: Add support in visitors.LookupLocalTypes.
    
    This allows stubs containing recursive types to be loaded without
    'Unresolved NamedType' errors.
    
    I also restructured test_recursive_types a bit; the only real change in this
    file is the addition of PyiTest.test_basic.
    
    PiperOrigin-RevId: 409252034

[33mcommit e4ae563f37bcb522870b4d2960117717ee298670[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 11 11:25:43 2021 -0800

    Fix a bug in which classmethods weren't detected as protocol members.
    
    PiperOrigin-RevId: 409198543

[33mcommit 5b03ef8f2fdaf8939e412e16caf12ea36afd5a49[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 10 17:49:50 2021 -0800

    Default --gen-stub-imports to True.
    
    PiperOrigin-RevId: 409021635

[33mcommit 7302add34db6cfd8d0a80de4844121bc9f448d07[m
Author: gps <gps@google.com>
Date:   Wed Nov 10 16:12:42 2021 -0800

    remove an obsolete pytype disable.
    
    PiperOrigin-RevId: 409002621

[33mcommit 42c5140cdb704ded3c9676d9f76f1de10a6ecba6[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 10 11:20:13 2021 -0800

    --allow-recursive-types: support recursive types in sub_one_annotation.
    
    * Switches sub_one_annotation from a recursive to an iterative algorithm, as
      this makes tracking shared state easier.
    * When a LateAnnotation representing a recursive type is encountered, generates
      a new LateAnnotation as a placeholder for the processed type. Then, once the
      processed type has been constructed, goes back and fills in the placeholder.
    
    PiperOrigin-RevId: 408930117

[33mcommit bcd2342da8dad3c3f5ba4368c57e565da79efc72[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 9 18:02:54 2021 -0800

    Fix a pytype bug in matching Literal against Literal.
    
    PiperOrigin-RevId: 408751005

[33mcommit f5d39d514070ea858174ec635376a2d62529a404[m
Merge: 2495d2ad 29b79249
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 12 11:15:39 2021 -0800

    Merge pull request #1049 from google/typed-ast
    
    Remove typed-ast version hack.

[33mcommit 29b79249fe3ba050fabca3c048e0d39038ef0729[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 12 10:43:37 2021 -0800

    Remove typed-ast version hack.
    
    Resolves https://github.com/google/pytype/issues/1047.

[33mcommit 2495d2adbb9ea8eee627e013e73c0c99e2996140[m
Merge: af5e2a65 4f596ba4
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 12 10:35:06 2021 -0800

    Merge pull request #1046 from google/typed-ast
    
    Update typed-ast to 1.5.0, which contains a Python 3.9.8 fix.

[33mcommit 4f596ba494718516dd0b937f11f38cfcba930528[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 11 16:56:10 2021 -0800

    Install latest astroid and pylint despite typed-ast version conflict.
    
    Also fix a pylint issue.

[33mcommit 7677056627d8b03f01e86006dddbdec92efd6fad[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 11 16:45:34 2021 -0800

    Update typed-ast to 1.5.0, which contains a Python 3.9.8 fix.

[33mcommit af5e2a65887b0989d396bba58c015449fbb6555e[m
Merge: f5ae9511 41e02ebf
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 9 19:17:07 2021 -0800

    Merge pull request #1043 from google/google_sync
    
    Google sync

[33mcommit 41e02ebfb34517b430fc0582b73c742a6df3770a[m
Author: mdemello <mdemello@google.com>
Date:   Tue Nov 9 16:47:59 2021 -0800

    Fixes for comparisons with type errors:
    
    * Report a type error when comparing types (e.g. `int > str`)
    * When calling overloaded comparison methods like `__gt__`, do not suppress
      type errors.
    
    PiperOrigin-RevId: 408737789

[33mcommit 40aab4e1bd9da81ed8c0ef4ad175b31dcd4f7a1b[m
Author: tsudol <tsudol@google.com>
Date:   Tue Nov 9 16:21:51 2021 -0800

    Actually set an enum's lookup-by-value `__new__` if there are members.
    
    Turns out it doesn't actually work if there's a base type!
    
    PiperOrigin-RevId: 408732615

[33mcommit f67e290efd5c32e8d0f18d10cdccc550d5764a49[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 8 14:01:49 2021 -0800

    Teach the enum overlay what a descriptor is.
    
    PiperOrigin-RevId: 408435723

[33mcommit c2cc705bc7fc731a4d3ae33a8f26a8ff09490310[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon Nov 8 12:50:22 2021 -0800

    Internal change
    
    PiperOrigin-RevId: 408417667

[33mcommit 8839327a37aea6b221934b46513ef94726b54edb[m
Author: tsudol <tsudol@google.com>
Date:   Fri Nov 5 16:35:58 2021 -0700

    Skip potential enum members that are functions or have dunder names.
    
    This is very basic filtering for InterpreterClass enums that should remove several targets from the use-enum-overlay blocklist. PytdClass enums only need to check names, because only the class constants are processed.
    
    PiperOrigin-RevId: 407938952

[33mcommit 2aa34ffd139203a4e41e74085aedcbb1948b45a0[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 5 15:31:29 2021 -0700

    Fix a pytd printer bug that was causing us to print 'Optional[import ...]'.
    
    I wasn't able to reproduce this locally (maybe it only happens when pyi files
    are pickled?).
    
    PiperOrigin-RevId: 407926461

[33mcommit 2fc2bcfb0e8520801c7d719416169e2966ee4a7a[m
Author: mdemello <mdemello@google.com>
Date:   Fri Nov 5 13:43:01 2021 -0700

    Move feature flags into their own option group in config.py
    
    Exports constants `FEATURE_FLAGS` and `EXPERIMENTAL_FLAGS` as public, so that
    `analyze_project` does not need to duplicate the flag list.
    
    PiperOrigin-RevId: 407900330

[33mcommit 37357697a2125fa369a953d9c46fc7cd5ba11ed6[m
Author: mdemello <mdemello@google.com>
Date:   Fri Nov 5 12:51:47 2021 -0700

    Use the official pyi files from attrs.
    
    Copied attrs/*.pyi -> stubs/builtins/attr/*.pytd, deleting the old stubs.
    
    attr/__init__.pytd required a few changes, which are documented at the start of
    the file; other files are unchanged.
    
    PiperOrigin-RevId: 407888217

[33mcommit 833f98cef66e232b197034331f50e67f30eee765[m
Author: tsudol <tsudol@google.com>
Date:   Fri Nov 5 11:43:55 2021 -0700

    Only add `__new__` to an enum if it has members to lookup.
    
    If the enum doesn't have members, keep the default `enum.Enum.__new__` definitions. This lets empty enums be used as entry points for the functional API.
    
    PiperOrigin-RevId: 407872432

[33mcommit f5ae9511dac25d53be5bcef3968e2240f39a2733[m
Merge: 7824bbee 917fc16d
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 9 13:02:06 2021 -0800

    Merge pull request #1042 from odidev/odidev_aarch64
    
    Add Linux AArch64 wheel build support

[33mcommit 917fc16d5c53fc173343ccd76dd2bc1ac49bab7c[m
Author: odidev <odidev@puresoftware.com>
Date:   Tue Nov 9 11:51:34 2021 +0500

    Add Linux AArch64 wheel build support
    
    Signed-off-by: odidev <odidev@puresoftware.com>

[33mcommit 7824bbee4809184852a7c5f2faaac6a77f0075d4[m
Merge: 24e396b0 41b13e87
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 4 21:41:55 2021 -0700

    Merge pull request #1041 from google/google_sync
    
    Google sync

[33mcommit 41b13e872f1280ddc5a850b282559881352c3db3[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 4 16:42:04 2021 -0700

    Whittle down vm.py further so we can enable pytype.
    
    * Moves some more methods that were in vm.py only because we wanted them in a
      central location into more sensible locations (mostly context.py).
    * Creates a new vm_utils.py module and moves a bunch of vm.py's private methods
      into it. I basically just read through vm.py and moved anything that looked
      like it didn't do a large amount of reading/writing VM state.
    
    With these changes, the amount of time it takes pytype to analyze vm.py is
    reduced to ~10s for inference and 15-20s for checking, so we can remove the
    `# skip-file` directive. The vm.py/vm_utils.py split is sort of haphazard,
    which might make navigation a little harder, but having cross-references should
    make navigation considerably easier, so I think we still come out ahead.
    
    PiperOrigin-RevId: 407699280

[33mcommit 21bf8101fbccfa68ee2bad8a3f0793577730cbb1[m
Author: tsudol <tsudol@google.com>
Date:   Thu Nov 4 16:34:05 2021 -0700

    Fix crash in pytd.Lookup caused by ClassType with unfilled cls pointer.
    
    This was showing up in `show_pickle`, which crashed when trying to load any pickled type stub.
    
    PiperOrigin-RevId: 407697523

[33mcommit 97d8d490408bb137712d7c21d32072e45f32e4b5[m
Author: mdemello <mdemello@google.com>
Date:   Wed Nov 3 16:27:42 2021 -0700

    Use a homogeneous tuple as a pytd node sort key.
    
    Fixes a crash when trying to sort heterogeneous tuples.
    
    PiperOrigin-RevId: 407452596

[33mcommit 22863f76a88ca6285186451395041173f4ddec84[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 3 11:14:55 2021 -0700

    --allow-recursive-types: fix infinite recursion in vm.init_class.
    
    * Makes ParameterizedClass.instantiate() cache instances even when there's no
      current opcode, so that the _initialized_instances check in init_class works.
    * I also merged Class.call() and PyTDClass.call() because I realized while
      modifying _new_instance() that it was confusing that there were two different
      call() implementations that called _new_instance() methods with slightly
      different signatures.
    
    PiperOrigin-RevId: 407381638

[33mcommit 86e5871ef04b917495b3aaa58e9865962dcb8af1[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 3 10:58:33 2021 -0700

    Fix a couple bugs in Union handling with --allow-recursive-types.
    
    * We can't completely skip vm._remove_recursion; the extract_annotation() call
      detects forward reference errors.
    * Union.__repr__ needs to detect recursion in order to print anything useful
      for a type like `X = Union[str, 'X']`.
    
    PiperOrigin-RevId: 407377428

[33mcommit 24e396b00fcf17d6c580bd2dafd1b095f1e7142b[m[33m ([m[1;33mtag: 2021.11.02[m[33m)[m
Merge: 926bdc74 1cb0647f
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 2 15:04:08 2021 -0700

    Merge pull request #1040 from google/google_sync
    
    Google sync

[33mcommit 1cb0647fd59a1eba3c3f61bed7fc49ce3ea84956[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 2 14:21:27 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 407176581

[33mcommit 03df5c3ba639a2e9c164c2b58cea4fe3ab21c61c[m
Author: tsudol <tsudol@google.com>
Date:   Tue Nov 2 14:07:19 2021 -0700

    Add test for circular types in enum instance attributes.
    
    PiperOrigin-RevId: 407173206

[33mcommit 6e332059bbed52ef00b36f8e8d061919f882836c[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 2 13:48:37 2021 -0700

    Add a bit more support for PEP 612 in stubs.
    
    This is to unblock https://github.com/python/typeshed/pull/6221.
    Also see https://github.com/google/pytype/issues/786.
    
    PiperOrigin-RevId: 407168815

[33mcommit c0ab8a92d87f240ed668f65f1b61e9429f7df1d8[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 2 12:09:27 2021 -0700

    Fix a crash caused by EnumInstance.instantiate() calling itself.
    
    PiperOrigin-RevId: 407145181

[33mcommit d97641f02458d85d42f303c2288662e71912e0d3[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 1 15:57:59 2021 -0700

    Add a feature flag, --gen-stub-imports, to improve pyi import handling.
    
    Currently, pytype adds "x: module" constants to pyi files, and all attributes
    on builtins.module are typed as Any, so accessing whatever_module.x.attribute
    always produces Any. This is fixed by instead adding "import x" statements and
    changing the pyi parser to always generate aliases for import statements.
    
    This is a very large change because of all the changes to test output and the
    places we need to plumb through --gen-stub-imports so that the pyi parser sees
    it. The actually interesting changes are in:
    * pytype/output.py
    * pytype/pyi/modules.py
    * pytype/pytd/printer.py
    * pytype/pytd/pytd_visitors.py
    
    PiperOrigin-RevId: 406940492

[33mcommit 758e2426eb366c5a17e8a70fc75028a83920f364[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 1 11:03:55 2021 -0700

    Fix a couple more pyi import bugs.
    
    * Recognize LateTypes as modules in the pytd printer. Otherwise, it's
      inconsistent whether an aliased import gets printed as an import or an alias.
    * Also in the pytd printer, add a heuristic for figuring out which prefix of a
      dotted NamedType is the module name. If we don't do this, we generate illegal
      imports containing class names for pb2 nested classes.
    * Fix a bug where pytype crashed on an empty Awaitable type. Improving pyi
      output exposes this bug by precisely typing code in which types were
      previously all Any.
    
    PiperOrigin-RevId: 406869267

[33mcommit dff7917dcf3f3130241f929ca1b1cac1bd9583a2[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 1 11:00:44 2021 -0700

    Add `__init__` attributes to canonical enum members.
    
    This kicks in whenever an enum class has its own `__init__` or `__new__` that adds attributes to members, and that enum is used in an annotation or other context that causes a canonical member to be created.
    
    PiperOrigin-RevId: 406868258

[33mcommit 4849e94c99d4ed756731cfad02a611c3a6e16611[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 1 10:58:18 2021 -0700

    Update comments about overwritten methods.
    
    The vm subclass now lives in tracer_vm.py, not analyze.py.
    
    PiperOrigin-RevId: 406867564

[33mcommit 1978155ea917557a52039a370c90facbe8e66c71[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 29 13:08:44 2021 -0700

    Try again to fix Coverage timeout.
    
    pytype/pyi:parser_test is still timing out. It seems to be a single test in
    particular that's very slow, so pulling that test out into its own file to
    ensure that nothing else gets put into the same shard as it seems to work.
    
    PiperOrigin-RevId: 406433991

[33mcommit 55772eafd75fd9c078911cda9ea5b5d33bb186ec[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 29 12:25:14 2021 -0700

    Support a [not-supported-yet] case in a generic class TypeVar renaming check.
    
    We have some logic that checks whether a TypeVar rename is ok, but it would
    emit [not-supported-yet] when trying to compare two bounded/constrained
    TypeVars against each other. The matcher is able to handle this case now, so do
    the comparison instead of complaining.
    
    PiperOrigin-RevId: 406424691

[33mcommit 147e3f2a465f90d6674b07e7e10b3d5ef67e83b0[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 29 12:03:15 2021 -0700

    Fix some issues with handling module aliases.
    
    Such aliases aren't currently common enough for this to be a problem, but an
    upcoming bug fix that adds a bunch of aliases exposes these issues:
    * In LateType resolution, we need to first check if the entire late type is a
      module name before assuming it's a module attribute.
    * convert._create_module needs to strip only the module prefix; taking off
      everything before the last dotted part is wrong for nested classes.
    * The pyi parser shouldn't allow imports like 'from x import typing' to change
      the meaning of 'from typing import ...'.
    * The pyi parser was rewriting __builtin__ to builtins too aggressively; we
      only want to get rid of imports like "import __builtin__"; lines like "import
      builtins as __builtin__" should not be changed.
    * The pytd printer needs to handle the case when it is passed a partially
      resolved ast in which modules are still represented as NamedType, not Module.
    * Also in the pytd printer, we were accidentally outputting "from x import y as
      y" when we meant to just output "from x import y".
    * serialize_ast needs to undo the pytd printer's application of module aliases.
      (It would be better if serialize_ast could just use the existing ast rather
      than printing and reparsing it, but fixing that is a much bigger endeavor.)
    
    PiperOrigin-RevId: 406413484

[33mcommit 6d19c17f5d0e3cf8f3d189184336c185f1dc7167[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 29 09:04:37 2021 -0700

    Remove a couple of `# pytype: skip-file` directives.
    
    The skip in overlays/typing_overlay.py was only needed until the
    typed_ast-based pyi parser went live, which happened months ago.
    
    Once a type annotation is added to the long list in pytd/slots.py, pytype
    analysis completes in a negligible amount of time.
    
    PiperOrigin-RevId: 406371373

[33mcommit 19075051fb97899113649ff186531665ba75fa68[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 28 19:52:19 2021 -0700

    Fix a bug where Errorlog.copy_from() duplicated error details.
    
    Error.message contains Error._message, _details, and _traceback combined.
    So copy_from() passing in one error's message attribute as another's _message
    attribute caused a lot of information to be duplicated.
    
    PiperOrigin-RevId: 406272568

[33mcommit 9bc3b77c1cf5e961d66af16d3916935edf3b2e4a[m
Author: mdemello <mdemello@google.com>
Date:   Thu Oct 28 17:35:02 2021 -0700

    Add test base support for multi-file tests.
    
    Allows setting up a dependency tree before checking a file. Python files in the
    dependency tree are analysed in order, and the corresponding pyi files
    generated. The pythonpath for all files is set to the root of the dependency tree.
    
    Also converts one test file as a more extended test of the new functionality.
    
    PiperOrigin-RevId: 406256121

[33mcommit 926bdc7410405debd2234baf383002b4bbc62b4f[m
Merge: 60e83464 ab532044
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 28 16:15:07 2021 -0700

    Merge pull request #1038 from google/google_sync
    
    Google sync

[33mcommit ab532044695748c08cf5c70bd3a2c2438305075a[m
Author: mdemello <mdemello@google.com>
Date:   Thu Oct 28 15:19:32 2021 -0700

    Add support for cross-module attr.s wrappers.
    
    PiperOrigin-RevId: 406229682

[33mcommit 643068dd69a9ad4fc0264a3e9f73e27e976821ae[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 27 17:53:05 2021 -0700

    Take advantage of module aliases to print prettier stub files.
    
    PiperOrigin-RevId: 406023275

[33mcommit e39cd295e5ca160106b0a9663af1498c2871e55e[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 27 16:04:08 2021 -0700

    Finish getting rid of --bind-properties.
    
    PiperOrigin-RevId: 406003011

[33mcommit eda77f602887d4ed2a20e17444a1a6587043f761[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 27 13:11:25 2021 -0700

    Make some minor improvements to the pytd printer.
    
    This will make it easier to fix the linked bug.
    
    * Moves pytd_utils.LookupItemRecursive (and pytd_utils.AliasMethod, which
      LookupItemRecursive depends on) into pytd.py so that printer.py can use it.
    * In PrintVisitor.VisitNamedType, replaces the haphazard collection of rules we
      had for checking whether a name is local or imported with a call to
      LookupItemRecursive to see if the name is defined in the current module.
    * Prints aliases of dotted module names as "from x import y as z" rather than
      "import x.y as z" (purely aesthetic change).
    
    PiperOrigin-RevId: 405963702

[33mcommit 063c7128d71f1f46eb27a8ccb1b6515bb6198f0f[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 25 16:18:55 2021 -0700

    Add remove{prefix,suffix} methods for bytes, bytearray.
    
    This is a followup to https://github.com/google/pytype/pull/1033, which added
    these methods for str. The bytes and bytearray methods accept any bytes-like
    type, for which 'bytes' can be used as a shorthand
    (https://docs.python.org/3/library/typing.html#typing.ByteString).
    
    PiperOrigin-RevId: 405515077

[33mcommit fd64915865ff213cfe1a99705bc113f8fa586b77[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 25 15:53:16 2021 -0700

    Remove last few files and delete bind_properties.bzl.
    
    All Rosie CLs have been submitted.
    
    PiperOrigin-RevId: 405510051

[33mcommit 60e834648205240081587ce1b5c4dc60670cd1fd[m[33m ([m[1;33mtag: 2021.10.25[m[33m)[m
Merge: eaaf153b a98fb64b
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 25 13:18:01 2021 -0700

    Merge pull request #1036 from google/google_sync
    
    Google sync

[33mcommit a98fb64bedecda70545f46e824b9417938faed4b[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 25 12:12:11 2021 -0700

    Prepare a PyPI release.
    
    I also added a line to the CHANGELOG entry for last week's release for a change
    that I forgot to mention.
    
    PiperOrigin-RevId: 405460692

[33mcommit ed3a45164dc37f2b72c57a54366cdf62ed3683cc[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Thu Oct 21 14:36:48 2021 -0700

    Update `typing.NamedTuple` to be considered a `typing.Tuple[{field_types...}]`.
    
    Also applies a similar transform to `collection.namedtuple`. No type information of course, but the number of elements is now part of the type like with `typing.Tuple[Any, Any{, ...}]`
    
    This fixes the last piece of `NamedTuple` being considered a type safe `Tuple` too.
    
    As this is a breaking change, this is gaurded behind a `--strict_namedtuple_checks` flag. But this will become the default in the near future.
    
    Before this, this code would erronously pass
    
    ```python
    from typing import NamedTuple, Tuple
    
    class X(NamedTuple):
      a: int
      b: str
    
    x = X(42, "the answer")
    dual_strings: Tuple[str, str] = x  # This should fail type checking, first element of X is an int
    a_str: str = x[0]  # This should fail type checking too
    ```
    
    Now it fails properly.
    
    This also helps with some IDEs who are unaware of the extra context pytype keeps track of and thought `X` was a plain `tuple`, but not a `Tuple[int, str]`, so it wouldn't know the types after accessing them through tuple methods.
    For example, with `X` and `x` as given above, for the construct: `a, b = x`, some IDE's would see the `tuple` "superclass" and assume `a` and `b` were `Any`.
    Now it should treat it the same way as if it was `Tuple[int, str]` and preserve the typing. (Same with indexed element access)
    
    Also, patches one hole in the type enforcement of the classic `collections.namedtuple`, where it would lose track of the size of the `Tuple` and would allow arbitrary sized destructuring assignment.
    
    Before this, this code would erroneously pass
    
    ```python
    import collections
    
    X = collections.namedtuple("X", ["a", "b", "c"])
    
    x = X("Friday", "Night", "Funkin")
    
    a, b, c, d = x  # This should fail type checking, there are only 3 elements
    a, b = x  # This should fail too
    ```
    
    Now it fails properly
    
    PiperOrigin-RevId: 404882510

[33mcommit e890e3d78b57a622f04a21de54816a66b7e705f2[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 21 13:52:44 2021 -0700

    Address some new errors generated by dict() change.
    
    * Fixes a crash caused by an overly specific assert.
    * Puts the new dict() changes behind a feature flag,
      --build-dict-literals-from-kwargs. (Would love suggestions for a less wordy
      name...)
    
    PiperOrigin-RevId: 404872878

[33mcommit eaaf153bc1f37dbbb208e3145101b1c7e7b93ee8[m
Merge: b5a40b8a d5b7488f
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 21 13:49:43 2021 -0700

    Merge pull request #1035 from google/google_sync
    
    Google sync

[33mcommit d5b7488fa6b9c8f49f8d7d6771e65e6cf3124adc[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 21 12:46:32 2021 -0700

    Finish removing --chex-overlay.
    
    PiperOrigin-RevId: 404858258

[33mcommit 9b4732e0f9c0f151f2647714ff23fd1e5788acac[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 21 12:32:41 2021 -0700

    Fix oss lint issues.
    
    See https://github.com/google/pytype/runs/3959170826?check_suite_focus=true.
    
    PiperOrigin-RevId: 404855272

[33mcommit 1b5174b6833356e5986cb4290ff29e91ad62c59b[m
Author: John DiMatteo <jdimatteo@gmail.com>
Date:   Wed Oct 20 19:45:50 2021 -0700

    Support builtin str removeprefix/removesuffix (#1033)
    
    These are new in Python 3.9: https://docs.python.org/3/library/stdtypes.html#str.removeprefix
    
    Resolves #1033
    
    PiperOrigin-RevId: 404695837

[33mcommit 1769e66b200d31e4acdfafa33b09426b7cfb90d6[m
Author: mdemello <mdemello@google.com>
Date:   Wed Oct 20 19:26:40 2021 -0700

    Construct dict literals for `dict(k=v, ...)`.
    
    PiperOrigin-RevId: 404693790

[33mcommit dee755e8a3759df4bb4e98cdd9a58e0f8204112a[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 19 16:27:49 2021 -0700

    Always enable --chex-overlay.
    
    One more blocklist gone!
    
    PiperOrigin-RevId: 404392980

[33mcommit 430ef64afa9da686da69128a585eb0f346b0619c[m
Author: mdemello <mdemello@google.com>
Date:   Tue Oct 19 16:24:06 2021 -0700

    Handle all cases of InvalidParameters in match_all_args.
    
    PiperOrigin-RevId: 404392244

[33mcommit b990241201201c8f1906d1f6d7b82be44f4139d0[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 19 16:23:58 2021 -0700

    Update oss docs.
    
    PiperOrigin-RevId: 404392221

[33mcommit 28799cdfb0953e3ff7a9fe730e76bb48a1aaa5dc[m
Author: tsudol <tsudol@google.com>
Date:   Tue Oct 19 14:35:45 2021 -0700

    Improve how the enum overlay chooses base types.
    
    Try to ignore mixins, i.e. classes that don't define `__new__`.
    This isn't perfect, but it's more accurate.
    
    PiperOrigin-RevId: 404368186

[33mcommit ff8b484eab33658c094631da91495ae8a0c1215b[m
Author: mdemello <mdemello@google.com>
Date:   Tue Oct 19 13:23:17 2021 -0700

    When an `attr.ib()` call has type errors, construct the attrib anyway.
    
    This makes sure that when we continue analysing the code we do not get
    cascading errors from a missing attribute in the class, analogous to the way we
    make sure an `__init__` function always constructs something in
    `abstract.function.call_function()`
    
    PiperOrigin-RevId: 404351536

[33mcommit eb8b4946e9b6b9aac4c6c7bdaca770e781c96cce[m
Author: tsudol <tsudol@google.com>
Date:   Tue Oct 19 13:14:12 2021 -0700

    Fix how the enum overlay calls `base_type.__new__`.
    
    Instead of trying to manually unpack the value, use Args.starargs, because that's what it's there for.
    
    PiperOrigin-RevId: 404348895

[33mcommit fa7dd7428980b94e67742b1c86b60b9530f1571b[m
Author: mdemello <mdemello@google.com>
Date:   Tue Oct 19 13:03:49 2021 -0700

    Extract out a function to get all arg type errors in a function call.
    
    PiperOrigin-RevId: 404345504

[33mcommit 05d00fd9aa2d857c75353c7a1886b171b3f3bcec[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 19 10:52:27 2021 -0700

    Finish removing --preserve-union-macros.
    
    PiperOrigin-RevId: 404307683

[33mcommit 380b34a4c1c5a8bd8ff5c676a533abcf0a543cf0[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Tue Oct 19 06:33:53 2021 -0700

    Expand tests for `NamedTuple` compliance with `tuple` semantics.
    
    PiperOrigin-RevId: 404243181

[33mcommit b5a40b8afb497a2217fc366492b894c027383c83[m[33m ([m[1;33mtag: 2021.10.18[m[33m)[m
Merge: aee09b68 6a584673
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 18 16:47:33 2021 -0700

    Merge pull request #1034 from google/google_sync
    
    Google sync

[33mcommit 6a58467331ab236d4260da5bb6813d284812bbb7[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 18 15:50:49 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 404082724

[33mcommit c5e34b8ed05be713af56ec9f690e100f18fc406f[m
Author: slebedev <slebedev@google.com>
Date:   Mon Oct 18 12:51:43 2021 -0700

    Changed PrintVisitor to group explicit imports with the ones collected from type annotations
    
    PiperOrigin-RevId: 404035359

[33mcommit 990958d6dbfc7f534d055b848fd064573b72264d[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 15 13:47:32 2021 -0700

    Always enable the --preserve-union-macros flag.
    
    PiperOrigin-RevId: 403458084

[33mcommit 9859a48bcaede8a20022fafe19d4e9741161c38d[m
Author: mdemello <mdemello@google.com>
Date:   Fri Oct 15 13:46:59 2021 -0700

    Fix a crash when lazily loading a missing submodule.
    
    PiperOrigin-RevId: 403457989

[33mcommit 5b93b0bce7d72f2f2eadce4e5dd335a9dc37956a[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 15 11:46:11 2021 -0700

    Add an --allow-recursive-types flag.
    
    * Adds a feature flag to hide work on recursive types behind.
    * Moves all the tests that initially fail when the flag is enabled to a new
      recursive types test suite.
    * Fixes tests that were failing only due missing [not-supported-yet] errors.
    
    PiperOrigin-RevId: 403429390

[33mcommit aa67aaa525316ad917c1b07fa0abe4f423bdb898[m
Author: tsudol <tsudol@google.com>
Date:   Thu Oct 14 14:29:10 2021 -0700

    Only use enum output mode when the enum overlay is active.
    
    This wasn't needed before because there was only one branch, which check that the class is an enum and that the member was an instance of the class -- which only happened when the enum overlay was enabled.
    
    PiperOrigin-RevId: 403187184

[33mcommit aee09b68921c26504f27042fc6ee34d5a829c734[m
Merge: 54e6b6e7 c0dd1197
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 14 15:05:32 2021 -0700

    Merge pull request #1031 from google/google_sync
    
    Google sync

[33mcommit c0dd119746560a15dc1c01828983dd1052ecf282[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 14 12:23:58 2021 -0700

    Enable type-checking on files whose type errors have been fixed.

[33mcommit 6f1c05d4f695dfcf51fd0d9d754548acde3d758f[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 14 12:13:35 2021 -0700

    Remove extra newline in pytype/abstract/__init__.py.
    
    Having a newline in this file makes external pylint unhappy.
    
    PiperOrigin-RevId: 403154488

[33mcommit f41dcd402c8ad70f42ed3a19289648d523a2d2c2[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 14 11:54:55 2021 -0700

    Fix some type-checking issues related to pytype.pytd.parse.node.
    
    PiperOrigin-RevId: 403149854

[33mcommit 54e6b6e78d86ac15316b7d413bd2f0b5928da054[m
Merge: 37714709 0b370a89
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 13 20:43:21 2021 -0700

    Merge pull request #1030 from google/google_sync
    
    Google sync

[33mcommit 0b370a8960322233274e90986a12126cf1eb883d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 13 20:20:57 2021 -0700

    Delete extra blank line in pytype/abstract/__init__.py.

[33mcommit 62c86790243715da43397c1af6ee34280807ba88[m
Author: tsudol <tsudol@google.com>
Date:   Wed Oct 13 17:37:18 2021 -0700

    Fix a little typo.
    
    PiperOrigin-RevId: 402962405

[33mcommit 580704b4b44c6ac0152b34690293cd4be5557044[m
Author: tsudol <tsudol@google.com>
Date:   Wed Oct 13 16:52:46 2021 -0700

    Use ClassVar to differentiate enum class attributes.
    
    This prevents the enum overlay from being confused by class attributes and trying to convert them into enum members.
    
    PiperOrigin-RevId: 402954165

[33mcommit 01a193e0a14b2a6d646c1e3eb4ec85321fdc6c04[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 13 11:41:54 2021 -0700

    Finish removing --attribute-variable-annotations.
    
    This flag no longer does anything.
    
    PiperOrigin-RevId: 402883792

[33mcommit 8fb562e0342ddcd8bc41a89d17b8f8c82d2fe177[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 13 08:29:15 2021 -0700

    Trim pytype/pytd:pytd_for_codegen target.
    
    :pytd_for_codegen was being reused in :pytd_for_parser and therefore contained
    some deps that codegen didn't need but parser did.
    
    PiperOrigin-RevId: 402837868

[33mcommit 270243402ba9c83820d6190db9bf08f0eb160a46[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 12 16:28:45 2021 -0700

    Fix a parser bug involving nested class name conflicts.
    
    This bug was exposed by my attempt to output nested proto classes - the parser
    would get confused when the name of an inner class coincides with the name of a
    typing class.
    
    PiperOrigin-RevId: 402684093

[33mcommit 6f5b86a4370a71fcc1e64e3db62729e70a017bc0[m
Author: tsudol <tsudol@google.com>
Date:   Tue Oct 12 15:34:06 2021 -0700

    Fix crash due to loading `__new__` from a PyTDClass.
    
    PiperOrigin-RevId: 402672637

[33mcommit cf6bae6017a6a4d548bd0a346a98742739910b62[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 11 14:28:37 2021 -0700

    Create a new pytype/abstract/ subdirectory.
    
    This new directory contains abstract.py and all the abstract modules that it
    depends on (abstract_utils, class_mixin, function, mixin). This more clearly
    separates the implementation of abstract values from code that uses them, which
    I hope will make things generally easier to reason about. For example, code
    outside of pytype/abstract can freely import abstract.py and does not need to
    worry about the BaseValue.isinstance_* methods or not being able to instantiate
    abstract values.
    
    PiperOrigin-RevId: 402392450

[33mcommit 37714709dd6354b4d277244193917bcf7cfb62c6[m[33m ([m[1;33mtag: 2021.10.11[m[33m)[m
Merge: 29c6571c 76407427
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 11 13:28:30 2021 -0700

    Merge pull request #1027 from google/google_sync
    
    Google sync

[33mcommit 76407427a14a3368b30fe23c02f700d469444f46[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 11 13:21:02 2021 -0700

    Update support.md.
    
    PiperOrigin-RevId: 402376784

[33mcommit caeb91f4ee69c5bcf524ad28d9dcf364401da956[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 11 12:38:40 2021 -0700

    Prepare a PyPI release.
    
    I added an entry about --use-enum-overlay, since the feature is ready for
    release; let me know if I should hold off on that until it's actually released.
    
    PiperOrigin-RevId: 402366566

[33mcommit 53d197b426b77f588d00144819ab1fbbfb500792[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 11 09:44:25 2021 -0700

    Make most of the pytype/typegraph targets private.
    
    I've noticed recently that build_cleaner tends to add typegraph:cfg_py as a
    dependency rather than typegraph:cfg, even if I tag the former as "avoid_dep".
    Locking down all of the typegraph targets except the ones we want to be exposed
    should fix this annoyance.
    
    PiperOrigin-RevId: 402322453

[33mcommit 5c9071a04bac1abd5e42c656703f14f7b708c9f6[m
Author: rechen <rechen@google.com>
Date:   Sat Oct 9 18:58:34 2021 -0700

    Teach convert._load_late_type to handle nested classes.
    
    Turns visitors._LookupItemRecursive into a new public method,
    pytd_utils.LookupItemRecursive, which convert can then use to resolve nested
    classes in late types.
    
    Startblock:
      all comments are resolved
    PiperOrigin-RevId: 402048827

[33mcommit ab289faf1499c87d042abc95f510e62a6380b0be[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 8 17:03:52 2021 -0700

    Improve ignored-abstractmethod error message.
    
    Currently, the errors are things like "Stray abstractmethod on method
    classmethod" (or staticmethod, or property). After this change, they'll
    actually include the method name.
    
    PiperOrigin-RevId: 401887599

[33mcommit f956d84fc5da846ddb32fcc4040567f4a084b43c[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 8 15:57:47 2021 -0700

    Fix a pyi import printing bug.
    
    Fixes a bug where PrintVisitor sometimes mistook classes for modules, leading
    to unnecessary import statements in pyi files. (This bug becomes especially
    noticeable once we add nested classes because the outer class gets mistaken for
    a module, leading to nonsense like "import [].module_pb2.SomeEnum".)
    
    PiperOrigin-RevId: 401875158

[33mcommit 4f4c6d6fd1a4ff282c426d5835e850a4aa048f6a[m
Author: mdemello <mdemello@google.com>
Date:   Fri Oct 8 15:34:52 2021 -0700

    Preserve None in unions containing Any.
    
    This gives us better error messages when it is specifically the `None` in
    `Union[Any, None, ...]` that does not match an expected type. In particular,
    typeshed contains several `Optional[Any]` annotations that we want to report
    proper error messages for.
    
    PiperOrigin-RevId: 401870625

[33mcommit 049bd44e564563709752dc9cedea0496267745d3[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 8 12:54:46 2021 -0700

    Fix a crash in WrongArgTypes.__gt__.
    
    I assumed that the 'other' parameter would also be a WrongArgTypes after a
    certain point without actually doing the proper checks ^^;
    
    PiperOrigin-RevId: 401835902

[33mcommit 5fb555a4c04dc9124a1db9ea416f23b5a495c95e[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 8 12:11:05 2021 -0700

    Improve function.get_signatures() so it can handle ClassMethodInstance.
    
    PiperOrigin-RevId: 401825897

[33mcommit 7cf2eabd73704c95e2d5fbf50889354e14818b29[m
Author: mdemello <mdemello@google.com>
Date:   Thu Oct 7 17:29:43 2021 -0700

    Fix overriding of protected members from an imported attr class.
    
    PiperOrigin-RevId: 401645819

[33mcommit 612f6db03d0f87aceaf8b3ad1674e631e834c114[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 7 17:20:40 2021 -0700

    Fix a couple of map() bugs.
    
    PiperOrigin-RevId: 401644370

[33mcommit 77a32336701173eb28ce82eebc295c882307bebf[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 7 15:47:05 2021 -0700

    Fix infinite recursion in InterpreterClass.get_inner_classes.
    
    PiperOrigin-RevId: 401624133

[33mcommit 999e12210e7758de0f1391f41e93b0f7fc69a597[m
Author: mdemello <mdemello@google.com>
Date:   Thu Oct 7 14:13:58 2021 -0700

    Special case Ellipsis in pyi files.
    
    The following pyi definition
    ```
      def f(x: Ellipsis): ...
    ```
    
    will now match `x` against `ellipsis` when type checking.
    
    One subtle point is we lose the ability to override an unqualified Ellipsis via
    a star import, e.g. in the following pair of pyi files:
    
    foo.pyi:
    ```
    class Ellipsis: pass
    ```
    
    bar.pyi:
    ```
    from foo import *
    
    def f(x: Ellipsis): ...
    ```
    
    `bar.f` will have type `(x: Ellipsis)` rather than `x: foo.Ellipsis`
    
    Note that `Type[Ellipsis]` will not work; it gets rewritten to
    `Type[ellipsis]`, which is not the same thing. It is hard to support both
    `x: Ellipsis` and `x: Type[Ellipsis]` to mean the same thing, so we pick the
    more convenient one, following the precedent of `None`.
    
    PiperOrigin-RevId: 401602073

[33mcommit af829e650a648981804be665fdd9e9a5f73cb9fe[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 7 12:53:05 2021 -0700

    Always enable --attribute-variable-annotations.
    
    Now that the blocklist is empty, we can delete it and always enable the flag.
    
    PiperOrigin-RevId: 401583075

[33mcommit 73c8848e14dc426bc3ebffe4af9bd524995dfdae[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 7 12:14:59 2021 -0700

    Improve map() error messages.
    
    Our first map() overload is one for matching empty iterables. It has to be
    first so that it takes priority over the others, but this causes us to generate
    poor error messages. Fixed by making WrongArgTypes signatures that don't
    contain *args/**kwargs take precedence over ones that do for error messages.
    
    PiperOrigin-RevId: 401573967

[33mcommit a6567172abc50ea13ec1317c54a3023ab8cba3b2[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 6 17:40:14 2021 -0700

    Get rid of unnecesssary uses of BaseValue.isinstance_* methods.
    
    The only modules in which these methods need to be used are abstract_utils,
    class_mixin, mixin, and function, since the abstract module depends on them.
    
    I also changed the PropertyInstance, ClassMethod, and StaticMethod special
    builtins to inherit from abstract.Function so that code that does isinstance
    checks on Function doesn't need to separately check for these builtins.
    
    PiperOrigin-RevId: 401382243

[33mcommit 29c6571cc62d30c08ffed824e817e366a00585ba[m
Merge: f358d4d6 3e4b55e7
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 6 17:37:43 2021 -0700

    Merge pull request #1026 from google/google_sync
    
    Google sync

[33mcommit 3e4b55e76cf94199c44f62cd3068de8c0b328ed8[m
Author: Gerard <jerry.om.95@gmail.com>
Date:   Wed Oct 6 16:53:01 2021 -0700

    Added and tested stubs for the `map` function (#1020)
    
    Closes #449
    
    Resolves #1020
    
    PiperOrigin-RevId: 401373310

[33mcommit 3b5f1ab9774562d742f80294b48283d6368aaa49[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 6 16:06:52 2021 -0700

    Move the vm.join_* methods into the context.
    
    These are typegraph-related methods, so move them to where we've put the rest
    of the typegraph stuff.
    
    I didn't move the convert.merge_* methods and vm.make_native_function after all
    because, on second thought, the context doesn't really seem like the right
    place for helper methods for abstract values.
    
    PiperOrigin-RevId: 401362930

[33mcommit ac59eddab3cb89e92a2b7370ffba5124ba8a50e9[m
Author: mdemello <mdemello@google.com>
Date:   Wed Oct 6 15:20:50 2021 -0700

    Support quoted types as annotations in pyi files.
    
    PiperOrigin-RevId: 401352926

[33mcommit 93ec71adc19ebe75005d31a0273ba61a5f8bbb3e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 6 13:31:34 2021 -0700

    Add some very preliminary 3.10 opcode support. (#1023)
    
    Generated by following the mostly automated steps at the beginning of https://github.com/google/pytype/blob/master/docs/developers/python_version_upgrades.md. With this, we actually get useful test results rather than a bunch of key errors for missing Python 3.10 magic numbers. For https://github.com/google/pytype/issues/1022.
    
    Resolves #1023
    
    PiperOrigin-RevId: 401326143

[33mcommit e61e604ab9997d5792ca98c4a86468ffa45d62d9[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 5 20:13:38 2021 -0700

    Update developer docs following introduction of context module.
    
    PiperOrigin-RevId: 401136085

[33mcommit f358d4d60d184da5352feafb0cc986b9cdf11683[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Oct 5 21:13:38 2021 -0700

    remove no-longer-needed dependencies

[33mcommit 4d859741245faf15d8319a01c12b250a13df1b44[m
Merge: bff37368 04c58966
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 5 20:07:37 2021 -0700

    Merge pull request #1021 from google/google_sync
    
    Google sync

[33mcommit 04c589664fc7c2c903ae66c355758ed7b364706e[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 5 19:41:27 2021 -0700

    Start a context module.
    
    Previously, every abstract value had a pointer to the pytype VM, which
    therefore accumulated a lot of attributes that don't strictly belong in the VM
    but which we wanted to be somewhere easily accessible. This change pulls out
    many of those attributes into a new Context class. There are a few more methods
    I'm thinking of moving into the context (the vm.join_* methods, maybe the
    convert.merge_* methods, perhaps vm.make_native_function just to get it out of
    the VM), but I figured I can do that later.
    
    Now, abstract values have a ctx pointer, and the context holds a reference to
    the VM. Most of the edits in this giant change are just trivial renamings like
    vm->ctx, vm.attr->ctx.attr, self.vm->self.ctx.vm, etc. Most of the interesting
    changes are in context.py and vm.py.
    
    Since I went to all the trouble of going through the VM attributes one by one,
    I also organized them better and type-annotated all the public ones.
    
    I ran pyformat over all the files to avoid having to manually deal with
    line-too-long errors. I don't agree with all its formatting decisions, but I
    left them alone except for one particularly badly formatted type annotation in
    VirtualMachine.__init__, which I manually formatted and surrounded with
    pyformat: disable/enable.
    PiperOrigin-RevId: 401131461

[33mcommit 131066ee4ce73b7a9330ce3bd6752db31e2a2c8b[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 5 17:53:15 2021 -0700

    Split off part of analyze.py into a new tracer_vm.py.
    
    This is necessary because analyze.{check,infer}_types will need to depend on
    the new context module (since it needs to create a context), but the context
    will need to depend on the call tracer (since, again, it needs to create one).
    Smaller modules are better anyway =P
    
    PiperOrigin-RevId: 401115033

[33mcommit bfa7618a7a3f422cb12dbda01c8cfbb18f3176e1[m
Author: tsudol <tsudol@google.com>
Date:   Tue Oct 5 17:38:50 2021 -0700

    Unwrap and merge enum member bindings if there are multiple.
    
    This seems to be rare, but it's a reasonable way to handle this.
    
    PiperOrigin-RevId: 401112693

[33mcommit a8b7f08344b514c7fd679ccd5f35fb3ab5bb3e63[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 5 16:54:10 2021 -0700

    Do a few harmless cleanups.
    
    These are a few simple cleanups spun out of my work on []:
    * Removed convert.next_attr and inlined the value.
    * Make convert.MAX_IMPORT_DEPTH private - it's not used outside convert.
    * Get rid of convert.unicode_type: this was Python 2 cruft.
    * Move vm.merge_values into convert. I could never remember where merge_values
      merge_classes were defined because they were in different modules, for
      whatever reason; putting them in the same place should be an improvement.
    * Make a few vm attributes private.
    
    Note that I'm not making any documentation changes yet; I'll update the
    documentation all in one go once I'm done doing surgery on the code.
    
    PiperOrigin-RevId: 401104315

[33mcommit cb18458d7b94f73e2fa0adf2355e578c7c421378[m
Author: mdemello <mdemello@google.com>
Date:   Tue Oct 5 16:18:51 2021 -0700

    Move call_function from vm.py to function.py.
    
    Part of the ongoing effort to slim down vm.py
    
    PiperOrigin-RevId: 401096343

[33mcommit 1b27d51b504f67a5d4f6f796c505bf34255e0b3d[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Tue Oct 5 13:00:47 2021 -0700

    Update pytype and typing annotation stubs for features added in attrs 21.1.0
    
    These features are:
    
    * attr's [Next Generation APIs](https://www.attrs.org/en/stable/api.html#next-gen) (`@define`, `@field`, etc)
    * Generate an `__attrs_init__` if `init=False` was given to the class decorator.
    
    Note for type annotations added in this CL:
    
    Now that pytype is Python 3.6 and up only, it seems safe to use type annotations now.
    I didn't go full on type annotations, just the ones in or near code I was editing, and that didn't require changing any dependencies among files.
    
    PiperOrigin-RevId: 401056906

[33mcommit bff37368624553c1c972a7d1757f6d4067a084a4[m[33m ([m[1;33mtag: 2021.10.04[m[33m)[m
Merge: 5be9b24f 300a3d30
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 4 12:48:12 2021 -0700

    Merge pull request #1019 from google/google_sync
    
    Google sync

[33mcommit 300a3d30f352107363f9bd26c94ed169e28743d6[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 4 11:54:09 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 400778002

[33mcommit e798285dea29a298372004d294ff0b56aa409b41[m
Author: rechen <rechen@google.com>
Date:   Sat Oct 2 15:34:25 2021 -0700

    Fix a bug in matching callables with TypeVar parameters.
    
    As it turns out, we already have a Matcher._get_param_matcher() method for
    solving the exact problem with bounded TypeVars encountered in the attr stubs;
    we just need to remember to use it when matching a Callable instance against a
    Callable. (Previously, it was only used when matching an actual function
    against a Callable.)
    
    PiperOrigin-RevId: 400457695

[33mcommit d7afc2068a5db8e8cee77e6a0eb320685637a4df[m
Author: rechen <rechen@google.com>
Date:   Sat Oct 2 15:33:27 2021 -0700

    Check Instance.maybe_missing_members earlier during attribute access.
    
    maybe_missing_members needs to be checked before calling __getattr__, since a
    missing member may have a different type from the __getattr__ fallback.
    
    PiperOrigin-RevId: 400457631

[33mcommit bc6881b0592a63e1d2cfb5518c438133b98a1a5e[m
Author: mdemello <mdemello@google.com>
Date:   Fri Oct 1 16:15:01 2021 -0700

    Add a separate logger for debug tracing.
    
    * Adds the trace.* logger hierarchy
    * Adds a context manager to turn on tracing for a block of code
    * Adds a decorator to trace a function's args and return value
    
    PiperOrigin-RevId: 400313706

[33mcommit 32448f83c063f487e2bf49e154f957dd1ad315eb[m
Author: tsudol <tsudol@google.com>
Date:   Fri Oct 1 11:11:02 2021 -0700

    Disable enum equality checks and don't use atomic strings for canonical names.
    
    - Enum equality checks were breaking some targets due to [].
    - Using atomic strings for the names of canonical enum instances leads to very weird error messages where the lookup fails due to the name being `''`. (See the new test for an example.)
    
    PiperOrigin-RevId: 400247284

[33mcommit 2bef63f18b4a9242560983d66d9d33c615f6d3b5[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 1 01:22:17 2021 -0700

    Rename annotations_util to annotation_utils.
    
    Every other utility module we have is named x_utils, so changing the name of
    this one makes it easier to remember.
    
    PiperOrigin-RevId: 400134359

[33mcommit 89d9e32340414989d142bb0d8c74a30135c08467[m
Author: tsudol <tsudol@google.com>
Date:   Thu Sep 30 17:51:59 2021 -0700

    Allow enum members in Literals.
    
    We still allow unsolvables, because enum members will continue to show up as those until the overlay is enabled.
    
    PiperOrigin-RevId: 400070986

[33mcommit e6f525100a2350dae7ee00fca4eacf5fe2129013[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 30 10:59:29 2021 -0700

    Merge BaseValue.cls and BaseValue.get_class().
    
    This simplifies abstract.py by merging the cls attribute and the get_class()
    method into a single cls attribute. Previously, for a class X without an
    explicit metaclass, X.cls == None and x.get_class() == Type[X]. Now,
    X.cls == Type[X]. Other differences:
    * cls can no longer be None. This lets us get rid of a lot of `if cls` checks.
    * For SimpleValue and ParameterizedClass, cls is evaluated lazily using a
      property and a private attribute. This is done because trying to access
      attributes like vm.convert.type_type before they're defined leads to
      problems. I added a vm.convert.minimally_initialized attribute so that the
      cls property can determine when it's safe to access convert attributes.
    
    Also fixes an abstract classmethod bug exposed by this change.
    
    Where possible, I have tried to keep user-visible behavior the same as before,
    even in cases in which I'm not sure the previous behavior was correct (see the
    new TODO in matcher.py), since this is already a pretty complicated change. The
    one thing I did change was that the types of classes are now inferred as `type`
    rather than `Any` more often, since the case in which the type became `Any` due
    to cls being None no longer exists.
    
    PiperOrigin-RevId: 399973506

[33mcommit 5be9b24f256c563cfc6e7323d88a23c660d1135c[m
Merge: 285d8c94 f5b73985
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 30 11:02:26 2021 -0700

    Merge pull request #1017 from google/google_sync
    
    Google sync

[33mcommit f5b739857d2a84915984802632db677d5725aa54[m
Author: tsudol <tsudol@google.com>
Date:   Tue Sep 28 11:21:14 2021 -0700

    Stop differentiating between enum and member attributes.
    
    Two reasons for this:
    - pytype doesn't differentiate between class and instance attributes for PytdClass. This change makes enums behave the same as other PytdClasses.
    - Canonical instances (e.g. created for a function argument) won't have instance attributes if they're deleted from the PytdClass.
    
    PiperOrigin-RevId: 399486408

[33mcommit afaa8297ea2827578d994bd5d91dca4f0e97a8fb[m
Author: mdemello <mdemello@google.com>
Date:   Mon Sep 27 17:59:40 2021 -0700

    Do not raise a parser error for unrecognised decorators.
    
    PiperOrigin-RevId: 399325093

[33mcommit 3505ca2111db459f218833bd4f83043f54cd6cfb[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 27 17:45:59 2021 -0700

    Use the namedtuple 'defaults' argument when generating __new__ signature.
    
    PiperOrigin-RevId: 399323256

[33mcommit fa208caf3abfaacd8d35708e599d7601f8936de0[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 27 15:58:29 2021 -0700

    Call init_class instead of instantiate when adding assertIsInstance bindings.
    
    PiperOrigin-RevId: 399302004

[33mcommit 285d8c94e177bbb5190a470431bb2808f0bdabbf[m[33m ([m[1;33mtag: 2021.09.27[m[33m)[m
Merge: a909d6b2 5c5850ce
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 27 13:04:25 2021 -0700

    Merge pull request #1015 from google/google_sync
    
    Google sync

[33mcommit 5c5850cef07fed9c47e9f837db6d3ed1739df0f3[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 27 11:36:50 2021 -0700

    Prepare a PyPI release.
    
    The Build Failures table looks reasonable, so I'm planning to do a PyPI release
    on Monday.
    
    PiperOrigin-RevId: 399241311

[33mcommit 896fc86c8fd124f00fb0b391709d4ae1bf70cf50[m
Author: tsudol <tsudol@google.com>
Date:   Fri Sep 24 17:14:59 2021 -0700

    Allow EnumBuilder to accept lookup calls instead of just functional API calls.
    
    Sometimes a function will be annotated like:
    ```python
    def something(name: str, cats: Type[enum.Enum], ...):
      best_kitty = cats(name)
    ```
    Previously, the enum overlay would reject this because we thought all calls to `enum.Enum` must be functional API calls. Turns out that's not true, so we'll accept lookup-by-value calls too. This is the second fixable blocker for the enum release.
    
    PiperOrigin-RevId: 398845528

[33mcommit 9e1a704eaac71624da499acd045968c6e798f25c[m
Author: tsudol <tsudol@google.com>
Date:   Fri Sep 24 15:25:32 2021 -0700

    Check the order for an enum's base classes.
    
    Derived from https://docs.python.org/3/library/enum.html#restricted-enum-subclassing
    
    It's not actually documented what a "data-type" is; from what I can glean from the library's source code, it's a class that defines its own `__new__` method. This is annoying, and I don't think it's very valuable to check it.
    
    PiperOrigin-RevId: 398826650

[33mcommit 3f0daf11768292563f37f4261fb826ff020ecd92[m
Author: mdemello <mdemello@google.com>
Date:   Fri Sep 24 13:34:24 2021 -0700

    Add some missing namedtuple args.
    
    PiperOrigin-RevId: 398803667

[33mcommit a909d6b24d7790b9d907623976a34b1a80f5ee34[m
Merge: ca0b13fc 53a7c84c
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 24 12:57:08 2021 -0700

    Merge pull request #1014 from google/google_sync
    
    Google sync

[33mcommit 53a7c84c7988900f7889940f9f294e4b58ffe0cc[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 24 12:23:21 2021 -0700

    Fix a Python 3.9 test failure.
    
    This fixes a test failure
    
    in which pytype was unable to find the expected wrong-arg-types error in the
    following snippet in 3.9:
    
    from typing import Dict
    def f(x, **kwargs: int):
      return kwargs
    def g() -> Dict[str, float]:
      return __any_object__
    f("", **g())  # wrong-arg-types
    
    Before 3.9, when the return value of a function becomes the **kwargs input to
    another function, that return value is used directly. For pytype, this means
    that the ParameterizedClass(dict, {_K: str, _V: float}) object constructed as
    the return type of g gets successfully passed into f.
    
    Starting in 3.9, the return value is instead passed to the DICT_MERGE opcode
    and merged into an empty dict, so the pytype object passed into f ends up being
    an instance of a plain dict, with the instance parameters set to Instance(str)
    and Instance(float). When this case is detected, we now reconstruct a
    parameterized dict class to match the pre-3.9 behavior.
    
    PiperOrigin-RevId: 398787107

[33mcommit e6fa1925612048e18124c839eec9fc97b72a798f[m
Author: tsudol <tsudol@google.com>
Date:   Fri Sep 24 10:55:39 2021 -0700

    Make Class._call_init public.
    
    It's sometimes useful to separate calls to `__new__` and `__init__`, and there's no reason to keep this method private.
    
    PiperOrigin-RevId: 398767127

[33mcommit c2e1f87cb62962fb9019ea69b91aca3a63382780[m
Author: tsudol <tsudol@google.com>
Date:   Fri Sep 24 10:08:45 2021 -0700

    Handle enum instance attributes added by `__init__` and `__new__`.
    
    This fixes one of the false positive cases that was blocking the enum overlay release.
    
    PiperOrigin-RevId: 398756078

[33mcommit f83531096e457a1fc7c7bcb38fac2223725af2bc[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 23 19:50:39 2021 -0700

    Resolve a few code upkeep warnings.
    
    PiperOrigin-RevId: 398634589

[33mcommit 8dfc425c0f2179ff53a4101ec848c336f0728f4a[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 23 13:14:10 2021 -0700

    Attach a line number to function call errors caused by annotating self.
    
    I expect this to almost never occur, so I didn't spend time trying to make the
    error message nice, but it should at least have a line number so the error can
    be silenced.
    
    PiperOrigin-RevId: 398560894

[33mcommit f53d0a563532b9d25b522e390c56090795ef05c5[m
Author: tsudol <tsudol@google.com>
Date:   Thu Sep 23 12:59:06 2021 -0700

    Make pytype understand enum instance attributes using `@property`.
    
    This only handles them on enums loaded from type stubs, though pytype already knows how to handle `@property` in InterpreterClass enums.
    
    Next step is to enable custom `__new__` and `__init__` methods by turning new attributes into properties.
    
    PiperOrigin-RevId: 398557268

[33mcommit 1e1d602c4553edecc38a7aa24658149f0b798774[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 22 11:35:39 2021 -0700

    Fix a crash that occurs when processing attr converters.
    
    * Improves abstract_utils.get_signatures so it can handle Callables and class
      instances with a __call__ method.
    * Moves get_signatures from abstract_utils to function so it can use
      function.Signature.from_callable.
    
    PiperOrigin-RevId: 398289774

[33mcommit 45d3e40753761c7961cc229073bfec7ca50b8c01[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 22 11:23:18 2021 -0700

    Fix a timeout.
    
    For some reason, setting the pyval of an existing starstarargs dict to {}
    causes pytype to timeout on a fairly short file. Creating a new abstract dict
    and copying over the type parameters seems to fix things.
    
    I added a shortened version of the problematic file to test_data/perf/ and also
    took the chance to delete some old test files that aren't referenced anywhere.
    
    PiperOrigin-RevId: 398286654

[33mcommit 24711a13077f7f826ce4eac6edc8a447bac8fa3f[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 17 14:17:57 2021 -0700

    Start a pytype style guide.
    
    I added a few initial bullet points so it wouldn't be empty. The idea is that
    we can fill this in as we write code and think of things to add.
    
    PiperOrigin-RevId: 397397969

[33mcommit ca0b13fc241a0b132cec0a6a9df42c1cdb6b6ea9[m
Merge: c77aed38 0bffcdcf
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 17 13:01:58 2021 -0700

    Merge pull request #1011 from google/google_sync
    
    Google sync

[33mcommit 0bffcdcf1019de2219ce0e2671c6efd0f185cf92[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 16 21:57:05 2021 -0700

    Fix a bug in matching a Union against a TypeVar.
    
    When the first of two values matched against a TypeVar is a Union, the
    matcher's _enforce_common_superclass() check would fail for the second value
    due to the Union being included in the check. Fixed by checking each element of
    the Union individually against the new value. To avoid creating unnecessary
    variables just for these checks, I rewrote _enforce_common_superclass() to
    accept a list of values rather than a variable and then did some slight
    refactoring and renaming to keep everything consistent.
    
    Fixes https://github.com/google/pytype/issues/1004.
    
    PiperOrigin-RevId: 397240292

[33mcommit 832e5e2cafbf44f1d9c32ee545e5ed27d40d057a[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 16 15:59:20 2021 -0700

    Allow assertIsInstance to take a tuple of classes, constructing the Union type.
    
    PiperOrigin-RevId: 397188903

[33mcommit 85ef733532031aadfb967514d5cbb70507315237[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 16 13:22:56 2021 -0700

    Add more extensive type support for attr converters.
    
    * Support class constructors as converters
    * Capture input and return types from converter functions.
    * Check for conflicts between converters and type annotations.
    
    PiperOrigin-RevId: 397154128

[33mcommit c77aed388d6c9d662c1f92b888eb325dd6dcae14[m
Merge: 77312945 1ccd3a39
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 16 13:28:50 2021 -0700

    Merge pull request #1009 from google/google_sync
    
    Google sync

[33mcommit 1ccd3a39802f5134ed33897a54c22a11be9a8b5c[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 16 12:14:39 2021 -0700

    Make a couple changes to keep our open-source tests happy.
    
    * Add a disable in pyi/evaluator.py.
    * Bump the Python 3.7 micro version.
    
    PiperOrigin-RevId: 397137917

[33mcommit c1093c6bed72ecee7d5abb0b34d0fc3e6bebf49c[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 16 12:14:29 2021 -0700

    Internal change
    
    PiperOrigin-RevId: 397137869

[33mcommit 77312945bbe22e835a7aa1a443ed8587aba672b1[m
Merge: 4dd3bbe1 d14c38f9
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 16 11:49:09 2021 -0700

    Merge pull request #1008 from google/google_sync
    
    Google sync

[33mcommit d14c38f98774bb47988a1b8bb009b818e3c40a40[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 16 11:14:20 2021 -0700

    Bump Python 3.7 version.

[33mcommit ce6725e41136a1a3e254e78290c63c07c96411fa[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 16 11:05:52 2021 -0700

    Disable a needlessly disruptive lint warning.

[33mcommit 91dc76598e0df2eb54562a5ef0e4712d29af4d7d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 16 11:01:07 2021 -0700

    Silence a module-attr error.

[33mcommit cc7f1aca57524fc39545577c4f9e70b3aa13420b[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 15 16:05:51 2021 -0700

    Preserve the source of field types for attrs.
    
    This is preliminary work for better support of attr.ib converters, which
    interact with the field type in complicated ways.
    
    PiperOrigin-RevId: 396945453

[33mcommit 2f5d179f21ab11d697f3afa603daeed892ce89f5[m
Author: mdemello <mdemello@google.com>
Date:   Tue Sep 14 15:23:37 2021 -0700

    Support arbitrary python values for typing.Annotated in pyi files.
    
    Support added for python literals and function calls (for type constructors).
    Function calls are converted to dicts, and then all annotations are converted
    to their repr strings to be stored in pytd.Annotated nodes.
    
    Annotations are not yet preserved for round-tripping.
    
    Also moves around some code to fix dependency issues.
    
    PiperOrigin-RevId: 396696017

[33mcommit dde4d2fad6ddc6b380d6dcc82d623289317eb0cd[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 14 15:03:10 2021 -0700

    Fix a crash caused by the matcher assuming a variable has bindings.
    
    PiperOrigin-RevId: 396691381

[33mcommit 2ac774f7537ac4556ed2bc70e1af6e0a88605de3[m
Author: tsudol <tsudol@google.com>
Date:   Tue Sep 14 14:51:33 2021 -0700

    Use only one enum type stub and modify it if needed.
    
    Using two type stubs for enum lead to issues with names. Instead, use the older type stub and remove the unneeded `__getattribute__` defs when the overlay is enabled.
    
    PiperOrigin-RevId: 396688345

[33mcommit bc8b4d8c0b45f1614730623b1409c5e9f7d5dee0[m
Author: mdemello <mdemello@google.com>
Date:   Tue Sep 14 11:41:33 2021 -0700

    When encountering test.assertIsInstance(x, type), simply create a new type.
    
    Previously we were discarding bindings from `x` that did not match `type` but
    not adding any new types. However, in keeping with the analogy to `assert
    isinstance(x, type)`, we should simply discard existing bindings and create a
    new one with the asserted type.
    
    PiperOrigin-RevId: 396645440

[33mcommit 48de3a29232ce08b2cd02e7b81090b7045b09f5c[m
Author: mdemello <mdemello@google.com>
Date:   Mon Sep 13 16:37:50 2021 -0700

    FIX: When converting **args to namedargs, delete them from args.starstarargs.
    
    PiperOrigin-RevId: 396470728

[33mcommit c82e29cf0897cca041281aa5dedff52b1bce83d0[m
Author: tsudol <tsudol@google.com>
Date:   Mon Sep 13 15:04:50 2021 -0700

    Add an older version of the enum type stub.
    
    This makes enabling the enum overlay easier by allowing files that raise errors when analyzed by the overlay completely ignore the changes caused by the overlay.
    
    Also fixes several other issues:
    - enum_overlay: check that `_generate_next_value_` is a callable.
    - test_enums: enable almost all tests by default.
    - enum.pytd: clean up incorrect comments.
    
    PiperOrigin-RevId: 396452142

[33mcommit 243cade5e02547c361a43c8a45a1f3c48a435439[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 13 11:21:45 2021 -0700

    Point the FAQ to the typing FAQ.
    
    This consolidates and avoids repeating some information.
    
    PiperOrigin-RevId: 396401242

[33mcommit a3fe8e83ed73627e7f4556c717afbd7c47f3fb52[m
Author: mdemello <mdemello@google.com>
Date:   Fri Sep 10 11:20:14 2021 -0700

    Preserve 'default' property of attr fields in pyi metadata.
    
    The pyi file just records the default as "True" or "False" depending on whether
    the field has a default or not, in keeping with the general practice around
    variable defaults.
    
    PiperOrigin-RevId: 395968657

[33mcommit 4ba6ded52da9ce2128b99016f36b137ff32def5a[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 9 17:09:31 2021 -0700

    FIX: Preserve named args in a function call when we have **args in the arglist.
    
    PiperOrigin-RevId: 395819489

[33mcommit e5c9beb6586173908a6f0bc4db08f13b429008a0[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 9 15:04:47 2021 -0700

    Remove the last vestiges of --enforce-noniterable-strings.
    
    This flag was already a no-op as of the release earlier today.
    
    PiperOrigin-RevId: 395795803

[33mcommit 853e071303f7f8ca8a99887c9a296daf182d5f59[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 9 14:40:45 2021 -0700

    Drop target Python 3.5 support.
    
    PiperOrigin-RevId: 395790403

[33mcommit 46539a1e1fff9bb7e0bd09339b405fb2c4d08815[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 9 14:32:26 2021 -0700

    Disable an arguments-renamed warning.
    
    See https://github.com/google/pytype/runs/3560609733?check_suite_focus=true.
    
    pylint is complaining because Class._new_instance takes a 'container' argument.
    
    PiperOrigin-RevId: 395788561

[33mcommit cf4bc318796377357a6e06eace66b5bd2f80b899[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 9 14:30:54 2021 -0700

    Make the location of an invalid-annotation error stable.
    
    Whether the error appears on the decorator line or the classdef line changes
    between versions. We should probably change pytype to pick a consistent
    location, but for now, inheriting from object fixes this.
    
    PiperOrigin-RevId: 395788178

[33mcommit e0b1a40e9bf7609f53702d2faf5de73ad035b634[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 9 12:09:15 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 395756826

[33mcommit 4dd3bbe1b8bec3d338e03804058196d3e9c2def0[m
Merge: d5676f1c 995afb3d
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 13 18:06:03 2021 -0700

    Merge pull request #1006 from astroparam/ignore_vscode_workspace_settings
    
    Ignore vscode workspace settings

[33mcommit 995afb3d994be51b51c21f4a0854da64ac18889b[m
Author: Param Patidar <prm.mehul@gmail.com>
Date:   Sun Sep 12 12:23:50 2021 +0530

    Ignore vscode workspace settings

[33mcommit d5676f1cea8bbb0ae526ce82910d3ffe5d9b2625[m
Merge: 14f670c6 9b4f47ba
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 9 14:38:49 2021 -0700

    Merge pull request #1003 from google/google_sync
    
    Google sync

[33mcommit 9b4f47ba197e4ceb3afdd5edc44b11db845c8b0b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 9 14:16:47 2021 -0700

    Make the location of an invalid-annotation error stable.

[33mcommit c369980588a74b2ee6365c3915f135721c7a1366[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 9 14:05:10 2021 -0700

    Disable an arguments-renamed warning.

[33mcommit 8384aab1b1088645ebe95ef365b33a6dabd0c35b[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 8 16:03:06 2021 -0700

    Pass all relevant attributes as annotations for an attr.ib pytd entry.
    
    PiperOrigin-RevId: 395578013

[33mcommit 82a3a57e041160ccf67bee199d43219bb7c454d4[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 8 13:13:46 2021 -0700

    Add a column to our supported features table for the version each feature was
    introduced in.
    
    PiperOrigin-RevId: 395543307

[33mcommit 21ef9d02fc61233f8b46c52dedde01a06eea438a[m
Author: mdemello <mdemello@google.com>
Date:   Tue Sep 7 17:35:44 2021 -0700

    Slight refactoring to highlight the parallel structure of PyTDClass.call and Class.call
    
    PiperOrigin-RevId: 395365915

[33mcommit 261d3da0fc2360c7a9bab6b07e9f4d95fb5e9295[m
Author: mdemello <mdemello@google.com>
Date:   Tue Sep 7 16:35:20 2021 -0700

    Add support for importing attr.ib wrappers from another module.
    
    Exports a return type of `attr.ib(typ)` as
    
    ```
       def wrapper(...) -> Annotated[typ, 'attr.ib', init, kw_only]
    ```
    
    and reconstructs the `AttribInstance` when loading the pyi file.
    
    PiperOrigin-RevId: 395355240

[33mcommit aa171e22d68e6123a413c23de26956e1a78fa099[m[33m ([m[1;33mtag: 2021.09.09[m[33m)[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 9 12:09:15 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 395756826

[33mcommit d204156231eb6f92b7ade7f0ac57c6e4100f7d64[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 7 15:00:17 2021 -0700

    Allow breakpoint() to accept any arguments.
    
    I forgot to double-check the signature of breakpoint
    (https://docs.python.org/3/library/functions.html#breakpoint) before accepting
    PR #997.
    
    PiperOrigin-RevId: 395337303

[33mcommit 14f670c69c3fd70033c2e045e16b8861e0edbc43[m
Merge: d0097c0c caf49f72
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 7 15:40:24 2021 -0700

    Merge pull request #1002 from google/google_sync
    
    Google sync

[33mcommit caf49f72fa71a0b0e4c6f2bc8018f1ae33dfd8cc[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 7 14:46:01 2021 -0700

    Add a few pytype disables.
    
    PiperOrigin-RevId: 395334122

[33mcommit 7e19fdbeb553ed0404b288825055529e4399e4e3[m
Author: Shantanu <12621235+hauntsaninja@users.noreply.github.com>
Date:   Tue Sep 7 14:09:31 2021 -0700

    typeshed: fix version parsing regex (#1001)
    
    Fails for e.g. `binhex: 2.7-3.10`
    
    Resolves #1001
    
    PiperOrigin-RevId: 395326732

[33mcommit 0e249225b5e0facb02eaf6e3a25ecd3625621535[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 7 13:59:54 2021 -0700

    Slightly improve pytype's performance on a trivial file.
    
    I noticed that pytype was taking a long time to analyze a very simple file
    (about 2s for pytype/test_data/simple.py), so I profiled it to see if there
    were any easy performance improvements we could make. I didn't find much, but
    the changes here appear to speed pytype up by 5-10% on a trivial file, and
    they're pretty harmless (we're already using Cython), so we might as well check
    them in.
    
    PiperOrigin-RevId: 395324530

[33mcommit b0e5198c45ee46cc7d5807a942c128b141f11f24[m
Author: tsudol <tsudol@google.com>
Date:   Tue Sep 7 13:34:10 2021 -0700

    Change invalid-type-annotation to bad-yield-annotation error.
    
    This new error is used for functions that have return type annotations that are not compatible with `yield`.
    
    PiperOrigin-RevId: 395319073

[33mcommit d0097c0c604f98d3891dc3eecc2f394ece1ac2eb[m
Merge: b93c0219 50899f8d
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 7 11:34:37 2021 -0700

    Merge pull request #1000 from google/google_sync
    
    Google sync

[33mcommit 50899f8d041929fc093c61065437fbd02da7155e[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 7 11:03:00 2021 -0700

    Fix a Python 3.6 test failure in test_test_code.
    
    In 3.6, CALL_FUNCTION instead of CALL_METHOD is used to call class methods.
    Both use call_function_with_state.
    
    PiperOrigin-RevId: 395286786

[33mcommit 7b9ddf61007841c168839edafb11ba7cd76dbd5f[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 7 10:47:05 2021 -0700

    Enable --enforce-noniterable-strings by default and make the flag a no-op.
    
    PiperOrigin-RevId: 395282830

[33mcommit 426befa31be79babc2115cf742a4573ab0019211[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 7 10:41:56 2021 -0700

    Fix a bug in pytype's handling of late annotations.
    
    We needed to wrap apply_annotation's call to eval_expr() in a
    generate_late_annotations() context to avoid spurious name errors. Once we do
    this, we do not need to explicitly stringify annotations.
    
    'from __future__ import annotations' also does not become the default in 3.8.
    (I'm pretty sure I was the one who incorrectly assumed this when originally
    adding support for this import...oops.) In fact, it's now unclear if it'll ever
    become the default, since it was taken out of 3.10.
    
    PiperOrigin-RevId: 395281518

[33mcommit 561fb0546ec673a467d441bc370281f40e1f0822[m
Author: Gerard <jerry.om.95@gmail.com>
Date:   Tue Sep 7 03:24:16 2021 -0700

    Add `breakpoint` to the supported builtin methods (#997)
    
    Resolves #994
    
    Resolves #997
    
    PiperOrigin-RevId: 395210499

[33mcommit 798b51b064cae70a3f739a0d87430b69fcf26176[m
Author: JP Sugarbroad <taralx@gmail.com>
Date:   Tue Sep 7 03:20:49 2021 -0700

    Add some missing 3.8 methods to typing stubs (#995)
    
    Copied from typeshed.
    
    Resolves #995
    
    PiperOrigin-RevId: 395210000

[33mcommit 60a46350814ebb9e31c29fbf15824cccee7f5021[m
Author: Nikita Sobolev <mail@sobolevn.me>
Date:   Fri Sep 3 19:39:50 2021 -0700

    Import of GitHub PR #996: Updates README.md with `ini` code highlight
    https://github.com/google/pytype/pull/996
    Merge 64d94fa62ee5715b91d8521d65235bb22bd1533f into b93c021925090843e8a9f6746521eaa7c50f64cf
    
    PiperOrigin-RevId: 394799802

[33mcommit 8abff7dc55432853b9bee71f2b1a7bab79552f79[m
Author: mdemello <mdemello@google.com>
Date:   Fri Sep 3 17:15:03 2021 -0700

    Fix our type definition for BaseException.with_traceback()
    
    PiperOrigin-RevId: 394784032

[33mcommit 938ee52a0611f0b45345fff98190fa46dfbfd686[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Sep 1 16:33:08 2021 -0700

    For this example, shouldn't Person subclass LoggerMixin not the LoggerMixinInterface?
    
    PiperOrigin-RevId: 394340236

[33mcommit e271fe49e20a66fa4e6b7acf09b8673315b748d0[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 31 13:44:31 2021 -0700

    Narrow the types of local variables based on test assertions.
    
    Treats `unittest.TestCase` methods `assertIsNotNone` and `assertIsInstance` as
    equivalent to type assertions, so that after e.g. `assertIsInstance(x, Foo)`, `x`
    has its type set to `Foo`.
    
    This narrowing is only done if `x` is a local variable in the current scope;
    globals and closure cells will not be affected.
    
    PiperOrigin-RevId: 394076667

[33mcommit 9799ced3fac99905111510bac77f47b3c3d95171[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 30 14:54:21 2021 -0700

    Add support for postponed evaluation of annotations (PEP 563).
    
    * Add a vm.string_annotations switch to control annotation behaviour
    * Add support for `from __future__ import annotations` in 3.7
    
    PiperOrigin-RevId: 393859626

[33mcommit 07a7162655ef073e617eb04d1f65043f09c4247e[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 26 13:02:26 2021 -0700

    Clean up error message tests a bit.
    
    * Replace regexes with a lot of escaping or .*s with sequences
    * Remove some redundant bad operand tests
    
    PiperOrigin-RevId: 393189032

[33mcommit b103173c76767b52c272accbf02f3ca19d243cf4[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 25 18:59:25 2021 -0700

    Add a substring sequence matcher for error messages.
    
    assertErrorSequences({'e': ('foo', 'bar', 'baz')}) makes sure that error
    message e contains the substrings 'foo', 'bar' and 'baz' in that order.
    
    Also adds one usage example in tests/test_errors1
    
    PiperOrigin-RevId: 393027100

[33mcommit cda3711d8db47832427f1f44c384ed8fb66cb4bf[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 25 15:15:44 2021 -0700

    Better error messages for unsupported_operands
    
    * Track variable names in the VM
    * Show operands as 'name: type' or 'pyval: type' if we can.
    
    Example:
    
      x = 'a'
      x < 10
    
    raises
    
      Primitive types 'x: str' and '10: int' are not comparable.
    
    PiperOrigin-RevId: 392991007

[33mcommit b93c021925090843e8a9f6746521eaa7c50f64cf[m
Merge: 9c969576 afd4ee1e
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 24 12:27:01 2021 -0700

    Merge pull request #993 from google/google_sync
    
    Google sync

[33mcommit afd4ee1e4120b36930fe29b809e9a8dcefcb7070[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 24 11:53:30 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 392713667

[33mcommit cd04e7d7582b070482367baf7eee0a5df9c82fe2[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 24 10:20:07 2021 -0700

    Fix a bug in subclassing flax.linen.Module.
    
    The 'name' and 'parent' fields were being filtered out only for PyTDClass
    bases. I moved the filtering to a different location so it would work for
    InterpreterClass bases as well.
    
    PiperOrigin-RevId: 392692527

[33mcommit 9c969576e98c658db5fa6ce7ba06f7e4287f2290[m[33m ([m[1;33mtag: 2021.08.24[m[33m)[m
Merge: 173d9f01 bf8b234c
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 23 17:12:34 2021 -0700

    Merge pull request #992 from google/google_sync
    
    Google sync

[33mcommit bf8b234c42356a981e45457fe2da71ae5ea72dcc[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 23 16:36:50 2021 -0700

    Remove a pytype: disable by adding some filtering to compare.py.
    
    I noticed when exporting our latest changes to GitHub that we had to add a
    disable for an unsupported-operands error. The error seems to be a false
    positive, caused by some missing filtering in compare.py.
    
    While I was touching the comparison code, I also fixed a lint warning.
    
    PiperOrigin-RevId: 392545719

[33mcommit 8378eeb0e402fecead7e794f005408cc266a2418[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 23 15:57:30 2021 -0700

    Fix bug in typeshed:get_pytd_paths and delete internal dataclasses stub.
    
    I noticed this while grepping for stray Python 2.7 references. The incorrect
    paths here were why the opensource tests were complaining about dataclasses. We
    should actually be able to delete dataclasses.pytd, since dataclasses is in the
    stdlib in 3.7.
    
    I still don't know why test_dataclasses passes in 3.6, but it was passing
    before we opensourced dataclasses.pytd a few days ago and is still passing now
    that I've deleted dataclasses.pytd, so ¯\_(ツ)_/¯
    
    PiperOrigin-RevId: 392537915

[33mcommit de7b8680a15a049afbc268d6899412ceb962bb54[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 23 15:45:34 2021 -0700

    Clean up final references to "2.7" and "(2, 7)" in pytype.
    
    Grepped the source code for any last references to PY2 that we missed and
    cleaned them up.
    
    PiperOrigin-RevId: 392535717

[33mcommit f82fa7776f7c1144bb0d253831d6ab10172a1609[m
Author: mdemello <mdemello@google.com>
Date:   Fri Aug 20 16:42:13 2021 -0700

    Raise an error when comparing incompatible primitive types.
    
    We previously had code like
      a = 1 < '3'
    
    not raise an error for py2 compatibility. In py3 it is always a type error.
    
    PiperOrigin-RevId: 392093672

[33mcommit 173d9f01d4d03dbe69f0888f00cf75c7840edf8d[m
Merge: dea8eada 6d253bd6
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 20 17:02:17 2021 -0700

    Merge pull request #991 from google/google_sync
    
    Fix typeshed _load_third_party_packages().

[33mcommit 6d253bd66d8b59a4462aa3c14a03679271b567b2[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 20 16:28:54 2021 -0700

    Fix some new lint warnings.
    
    Looks like pylint got a new release today.
    
    PiperOrigin-RevId: 392091422

[33mcommit a0e4ef79e409280e49ec49fbf94a0bb5cdbe9747[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 20 15:53:35 2021 -0700

    Disable lint unspecified-encoding.

[33mcommit 1a4d46b73968c21064984171cc8c7482f3ee5b88[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 20 15:45:53 2021 -0700

    Fix typeshed _load_third_party_packages().
    
    typeshed/tests/pytype_test was still broken for third-party stubs. This turned
    out to be because, even ignoring @python2, a package can contain multiple
    modules, and a module name can be provided by multiple packages. I also noticed
    that typeshed seems to have added a @tests directory; accidentally including it
    as a module name doesn't hurt but is technically wrong, so I filtered it out.
    
    PiperOrigin-RevId: 392084509

[33mcommit dea8eada804f8861e5cea76c24d328f873f48a5e[m
Merge: 2fd6ced1 f4b2ad3d
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 20 13:54:58 2021 -0700

    Merge pull request #990 from google/google_sync
    
    Google sync

[33mcommit f4b2ad3d066a005604be43e3e4d3fc1b78db9be9[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 20 12:25:47 2021 -0700

    Remove duplicate entries from stubs/CMakeLists.txt.
    
    PiperOrigin-RevId: 392045166

[33mcommit 43d5079608f46dac198d2dd479edd92c9fc11812[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 20 11:48:25 2021 -0700

    Update stub paths in setup.py.

[33mcommit 0547500afcbe034cd139fc260373a3c54df4291e[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 19 18:54:59 2021 -0700

    Get rid of internal python2 stubs.
    
    * Move all stubs directly under builtins/ and stdlib/
    * Remove all version arguments to pytd.builtins.* functions
    * Fix numpy symlink.
    
    PiperOrigin-RevId: 391893673

[33mcommit 2fd6ced19bd97594fbec2251e3c23d9ab42bf835[m
Merge: fb6e87ca fadac56d
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 19 18:43:15 2021 -0700

    Merge pull request #989 from google/google_sync
    
    Google sync

[33mcommit fadac56dad9e082c35184d8fcbf38fa54d49d681[m
Author: Gregory P. Smith <greg@krypto.org>
Date:   Thu Aug 19 18:10:36 2021 -0700

    Update hyperlink to FAQ on github.
    
    Resolves https://github.com/google/pytype/pull/988
    
    PiperOrigin-RevId: 391887438

[33mcommit 0c6bd389615b3edec9306bd7a60a002339ed88bb[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 19 15:36:01 2021 -0700

    Stop reading python2 typeshed stubs.
    
    Filters out paths containing @python2 as early as possible, and removes checks
    for them in downstream code.
    
    PiperOrigin-RevId: 391859288

[33mcommit fb6e87ca27fc2239799a8ea9e205d6e8efea49d2[m
Merge: 9ecbf44a 4b890b2e
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 19 13:19:24 2021 -0700

    Merge pull request #987 from google/google_sync
    
    Google sync

[33mcommit 4b890b2ead8cdb528fd3c9702cc7183942ab0eec[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 19 10:44:52 2021 -0700

    Disable a puzzling undefined-variable error.
    
    Pylint was complaining that "mixin" is undefined:
    https://github.com/google/pytype/pull/985/checks?check_run_id=3366646291.
    We already have a similar set of disables a few lines above, so I guess this is
    a longstanding issue. (I disabled g-wrong-blank-lines because the linter was
    demanding that I add yet more newlines between the class definition and the
    disable comments.)
    
    PiperOrigin-RevId: 391794043

[33mcommit c956bbe67ecb2f2c61f660c29922a59d4fe224f2[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 18 17:56:47 2021 -0700

    Remove some more checks for unsupported python versions.
    
    PiperOrigin-RevId: 391650892

[33mcommit 07bbf100c5ec2794d399377cad9775d22cde9d94[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 18 17:54:51 2021 -0700

    Remove all support for PY2-only opcodes.
    
    PiperOrigin-RevId: 391650622

[33mcommit 9ecbf44a93124ad49d62359351afe089120191c3[m
Merge: 2d60ebad 6890c27c
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 18 19:18:39 2021 -0700

    Merge pull request #986 from google/cpython
    
    Delete no-longer-needed cpython submodule.

[33mcommit 6890c27cde2ea131536b077ae072ffa4d653cea9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 18 18:01:08 2021 -0700

    Delete no-longer-needed cpython submodule.
    
    I followed https://gist.github.com/myusuf3/7f645819ded92bda6677.

[33mcommit 2d60ebad5fe1e06bbe0d4becef7f788aa0870135[m
Merge: 416370df dadc706a
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 18 17:57:00 2021 -0700

    Merge pull request #984 from google/py27
    
    Remove py2 compatibility code from build_scripts/.

[33mcommit 416370df568f717031a39da313e75dc19cc91c92[m
Merge: 8bf762f5 e28c9dd9
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 18 17:53:57 2021 -0700

    Merge pull request #985 from google/google_sync
    
    Google sync

[33mcommit e28c9dd990215e995aa46b2c7c5c5d4143ab5497[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 18 16:56:04 2021 -0700

    Disable a nonsensical undefined-variable warning.

[33mcommit d2c9127914765d62d48545bdb0e749d84d550a1b[m
Author: tsudol <tsudol@google.com>
Date:   Wed Aug 18 14:38:31 2021 -0700

    Remove Python 2 from xref.
    
    PiperOrigin-RevId: 391612675

[33mcommit fbe77ba253c722029804a97e6859abae2f41832e[m
Author: tsudol <tsudol@google.com>
Date:   Wed Aug 18 14:24:12 2021 -0700

    Removed unneeded "Lint as" line.
    
    PiperOrigin-RevId: 391609527

[33mcommit e377821c823ef96ef5304c100d15cb9293e84441[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 18 14:02:58 2021 -0700

    Remove py2 compatibility code from tools/traces
    
    PiperOrigin-RevId: 391605004

[33mcommit c97f068add7ebbf79102d2a087164325c4927d54[m
Author: tsudol <tsudol@google.com>
Date:   Wed Aug 18 14:00:16 2021 -0700

    Remove Python 2 from annotate_ast.
    
    The biggest change is removing the dependency on `typed_ast.ast27t`.
    
    PiperOrigin-RevId: 391604397

[33mcommit a012a79094073541faf8ef7ed25da93e7f69f070[m
Author: tsudol <tsudol@google.com>
Date:   Wed Aug 18 13:49:01 2021 -0700

    Remove `six` from pytype_runner_test.
    
    PiperOrigin-RevId: 391602021

[33mcommit fa4b56c2b1cf5fcbf0046bd7ff6a18fa78dbb423[m
Author: tsudol <tsudol@google.com>
Date:   Wed Aug 18 13:41:25 2021 -0700

    Remove py2 from pytype/tools.
    
    PiperOrigin-RevId: 391600490

[33mcommit 823a5160e513f55a5b5b0a1ba8388e74eae9a8d6[m
Author: tsudol <tsudol@google.com>
Date:   Wed Aug 18 12:25:24 2021 -0700

    Replace pytd_utils.WrapsDict with a mixin.
    
    A custom base class created by `exec` is messy and impossible to type check. Instead, use a mixin that specializes mixin.PythonConstant to forward dictionary methods.
    
    The `writable` and `implement_len` extensions to WrapsDict were unused and have not been replicated. (If they're needed, we can easily add them.)
    
    PiperOrigin-RevId: 391583944

[33mcommit 036d71d2ee002adf2dbf370824bed5801aa47494[m
Author: tsudol <tsudol@google.com>
Date:   Wed Aug 18 11:35:43 2021 -0700

    Remove Python 2 from pytype/pytd.
    
    PiperOrigin-RevId: 391573227

[33mcommit 595c44d6724056f35843bcf59466cf59a6663a35[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Wed Aug 18 08:34:21 2021 -0700

    Add a space in error log
    
    PiperOrigin-RevId: 391533957

[33mcommit bd3d6a103a7dc3b59c358754ce4e2bb5a845603d[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 17 18:24:12 2021 -0700

    Start removing PY2 opcodes and pyc/* compatibility code.
    
    * Removes the PY2 opcode map
    * Removes compatibility code from pyc/
    * Removes vm.PY2 and vm.PY3
    
    Still to do: removing opcode classes and vm byte_* code for py2-only opcodes.
    
    PiperOrigin-RevId: 391422548

[33mcommit dadc706ac069b137dd8bf89b3856bd87961aa042[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 18 16:39:36 2021 -0700

    Remove py2 compatibility code from build_scripts/.
    
    * Deletes 2.7_patches/
    * Deletes build_scripts/py27.py.
    * Modernizes __future__ imports, six usages, and sys.version_info
      checks.

[33mcommit 8bf762f51279aa39fd2dd9954421af0fde48601a[m
Merge: 3420ed14 e5600b3d
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 17 18:22:09 2021 -0700

    Merge pull request #983 from google/google_sync
    
    Google sync

[33mcommit e5600b3df10b57fc4714fd83e8c52c3a514cf7a9[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 17 15:52:10 2021 -0700

    Finish dropping py2 from test_base.py.
    
    * Deletes BaseTest subclasses.
    * Turns test_base.main into a simple alias for unittest.main.
    * Updates tests/README.
    
    PiperOrigin-RevId: 391395827

[33mcommit e1484bf38e1e09f46da2de813847cda8d4ee2de4[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 17 17:41:19 2021 -0700

    Fix a few line-too-long warnings.
    
    See https://github.com/google/pytype/runs/3356275701?check_suite_focus=true.
    
    PiperOrigin-RevId: 391416530

[33mcommit d48899b2b4366db804c92fce4568d78476ef1cfc[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 17 17:19:24 2021 -0700

    De-sixify pytype/tests/.
    
    And with that, I believe I am completely done with the tests directory.
    
    PiperOrigin-RevId: 391413125

[33mcommit 0b689aaa39b23b6835684dbb30e1754d420e5de2[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 17 17:07:14 2021 -0700

    Remove loader function used purely for py2 support.
    
    PiperOrigin-RevId: 391410817

[33mcommit 48728ec9aaeb80485b80a7a0b96dbea00ff3396b[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 17 17:06:42 2021 -0700

    Merge tests/py3/ into tests/.
    
    Now that we no longer have a tests/py2/ directory, we don't need tests/py3/
    either. This change was generated by:
    1. If there exists no tests/test_foo.py, then tests/py3/test_foo.py is moved to
       tests/test_foo.py.
    2. If there does exist a tests/test_foo.py, then tests/test_foo.py is renamed
       to tests/test_foo1.py and tests/py3/test_foo.py is moved to
       tests/test_foo2.py.
    I also made the corresponding BUILD and CMakeLists.txt changes.
    
    I confirmed that the total number of targets and the number of test targets is
    the same before and after this change.
    
    PiperOrigin-RevId: 391410706

[33mcommit 8797bf27752a592f38909b58c8644901aaa61d86[m
Author: tsudol <tsudol@google.com>
Date:   Tue Aug 17 16:21:08 2021 -0700

    Remove Py2 code from pytype/overlays.
    
    PiperOrigin-RevId: 391401750

[33mcommit 2a5e8b0cebe841ca8cb3ca688c9b47a6f9e8b09e[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 17 15:52:10 2021 -0700

    Finish dropping py2 from test_base.py.
    
    * Deletes BaseTest subclasses.
    * Turns test_base.main into a simple alias for unittest.main.
    * Updates tests/README.
    
    PiperOrigin-RevId: 391395827

[33mcommit 22f1689567f7b8cf2dc3dcdc1015a20ce2ada5b4[m
Author: tsudol <tsudol@google.com>
Date:   Tue Aug 17 15:24:41 2021 -0700

    Remove Py2 from pytype/pyi.
    
    Not much here, just removing `six` from a few files and (trying to) normalize on using f-strings.
    
    PiperOrigin-RevId: 391390851

[33mcommit 0035db10fc5c8b5f2b885ab74b5d8dd1c87bd400[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 17 15:23:05 2021 -0700

    Remove compat and all references to it.
    
    * Move the non-compat classes like AsyncGenerator from compat to convert
    * Get rid of compatibility classes like UnicodePy2
    * Get rid of old-style class support
    * Move native_str to utils, we still need a (bytes|str) -> str utility
    * Move recursive_glob to file_utils; it behaves slightly differently from glob
    
    PiperOrigin-RevId: 391390559

[33mcommit 3420ed142fb36f3026092667096cac1ea6af4af7[m
Merge: 8fc46f40 fd453fc6
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 17 15:11:03 2021 -0700

    Merge pull request #982 from google/google_sync
    
    Google sync

[33mcommit fd453fc6fd7a71f24a2d06f67f9a2e5e6e3adff8[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 17 14:25:35 2021 -0700

    Get rid of test_base's PY_MAJOR_VERSIONS.
    
    PiperOrigin-RevId: 391376622

[33mcommit 68f1eb83dd8ea2343a6c021738d630594cc3f07b[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 17 12:54:15 2021 -0700

    Remove py2 compatibility from some more modules
    
    PiperOrigin-RevId: 391356551

[33mcommit b5dfce19d6b08fffa638a0050598f38c2cf02200[m
Author: tsudol <tsudol@google.com>
Date:   Tue Aug 17 11:07:35 2021 -0700

    Remove Python 2 shims from cfg.cc.
    
    Note the 3.8 and 3.5 version checks are still necessary for now.
    
    PiperOrigin-RevId: 391332777

[33mcommit 223453ee6af40aa66ddab96b89fa399801b86bbe[m
Author: tsudol <tsudol@google.com>
Date:   Tue Aug 17 10:48:59 2021 -0700

    Remove Python 2 for typegraph/*.py files.
    
    Mostly removing `six` and putting in some f-strings.
    
    PiperOrigin-RevId: 391327737

[33mcommit 216f139074879b1b0c067336c86e8859e2dfee35[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 16 17:42:37 2021 -0700

    Remove py2 compatibility code from test_base, test_base_test, and test_utils.
    
    This removes all of the py2 compatibility code from test_base_test and
    test_utils, as well as most of the py2 compatibility code from test_base. I've
    left the python_version bucketing logic for a future change.
    
    Removing test_base.WithAnnotationsImport also required making a few changes in
    other files.
    
    PiperOrigin-RevId: 391176707

[33mcommit 8c2608ce6b94dd6d16bd15cc8da4df466dd44e9b[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 16 17:18:54 2021 -0700

    Remove some mostly trivial py2 compatibility code.
    
    PiperOrigin-RevId: 391173081

[33mcommit 4cd6ccbc4a42fec8986bdf4c049e1f078ce514e6[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 16 16:54:12 2021 -0700

    Delete pytype/tests/py2/.
    
    PiperOrigin-RevId: 391168397

[33mcommit b175a3fd18e0a82156b6157f87e423c491f4602b[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 16 16:52:08 2021 -0700

    Unskip a test and move it out of the py2/ directory.
    
    This test was failing because of some speculative changes we made for
    non-iterable Python strings that can be reverted now. I have no clue why we put
    this test in the py2-only bucket.
    
    PiperOrigin-RevId: 391167994

[33mcommit 8fc46f402cdbee410b6ec5bdb216fc44bf666fcc[m
Merge: e1138dd3 d6cd1f38
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 16 14:56:03 2021 -0700

    Merge pull request #981 from google/google_sync
    
    Google sync

[33mcommit d6cd1f385aaf3e0c1a29f38b727433b6ce06c2b9[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 16 13:53:58 2021 -0700

    Fix a type error in merge_pyi.
    
    The new version of typeshed I just updated to includes better types for
    lib2to3. Based on the source code:
    https://github.com/python/cpython/blo[]bab0537ceb6e2ca3597f8f3a3c79733b897434/Lib/lib2to3/refactor.py#L347,
    I believe typeshed is correct and refactor_string is not meant to accept None
    for the 'name' parameter.
    
    PiperOrigin-RevId: 391129180

[33mcommit 80224053678891e1a7c6eb28b8761fc1d7741fbf[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 16 12:27:32 2021 -0700

    Remove py2 compatibility code from abstract and abstract_utils
    
    PiperOrigin-RevId: 391109623

[33mcommit e1138dd3086e9e7eb5064695f891f0975fa74af4[m
Merge: 791d43c6 8e95fa9c
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 16 14:02:50 2021 -0700

    Merge pull request #980 from google/ts
    
    Update typeshed to 8da23e0634120c7168f70bc7059e16002512b7ea.

[33mcommit 8e95fa9cc23ce01536ffbff0bf07e5a153630d8f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 16 13:35:56 2021 -0700

    Fix a type error.

[33mcommit d88c9fce621e3359044377e4485b3f23c79d84d7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 16 12:36:32 2021 -0700

    Update typeshed to 8da23e0634120c7168f70bc7059e16002512b7ea.

[33mcommit 791d43c6f693da8686598607b65db02fca1037dc[m
Merge: 3fdc4c3f c63d4ef3
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 16 12:27:19 2021 -0700

    Merge pull request #979 from google/google_sync
    
    Google sync

[33mcommit c63d4ef369413365d8e3ae1abaef52c0ce60ec64[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 16 11:54:12 2021 -0700

    Update docs/faq.
    
    PiperOrigin-RevId: 391102077

[33mcommit c54ed59c9ac30bdc626936ad684bff028b3b4a4d[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 16 11:34:32 2021 -0700

    Rename a couple parameters in merge_pyi.annotate_source to fix a lint warning.
    
    Apparently these parameters are called 'original_node', not 'node', so we were
    getting [arguments-renamed] lint warnings.
    
    PiperOrigin-RevId: 391097454

[33mcommit e4e8e5e95a8fb14ac42808d23d6789e5d33e6726[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 16 10:52:49 2021 -0700

    Minor tweak to developers/frames.md
    
    PiperOrigin-RevId: 391085753

[33mcommit fddcac97423828af31c8000688a72008d9603b7b[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Mon Aug 16 10:23:53 2021 -0700

    Included an extra check to forbid matching Mapping too broadly
    
    The Mapping ABC only requires `__getitem__`, `__iter__`, `__len__`, but this matches too broadly. For example, `range` matches but doesn't have key-value pairs. So we add an additional check for `__contains__`, `keys`, `items`, `values`, `get`, `__eq__`, `__ne__`.
    
    `Mapping` Reference: https://docs.python.org/3/library/collections.abc.html#collections-abstract-base-classes
    
    PiperOrigin-RevId: 391077916

[33mcommit 40dc71d5388a12f2fe71e54d730c68196002f524[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 13 17:23:14 2021 -0700

    Emit a pyi-error for an invalid annotation in a pyi file instead of crashing.
    
    PiperOrigin-RevId: 390725363

[33mcommit 64de390ab1257088ad0b75216a7cceaf6dd9d564[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 13 15:44:39 2021 -0700

    Fix a bug where typing_extensions.Protocol was treated as Any.
    
    I'm not sure why, but in some cases typing_extensions.Protocol was being
    resolved to Any. Fixed by rewriting it to typing.Protocol in the parser.
    
    PiperOrigin-RevId: 390708689

[33mcommit 6cb84f7d06d485aaab39f0ad89d7e14e5bd0161f[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 12 17:55:30 2021 -0700

    Print method signatures in the error message for a protocol type mismatch.
    
    Sample error:
    
    File "foo.py", line 13, in <module>: Function f was called with the wrong arguments [wrong-arg-types]
             Expected: (x: Sequence[int])
      Actually passed: (x: Foo)
    
      Method __getitem__ of protocol Sequence[int] has the wrong signature in Foo:
    
      >> Sequence[int] expects:
      @abstractmethod
      @overload
      def __getitem__(self: Sequence[_T], i: int) -> _T: ...
      @abstractmethod
      @overload
      def __getitem__(self: Sequence[_T], s: slice) -> Sequence[_T]: ...
    
      >> Foo defines:
      def __getitem__(self, x: int) -> int: ...
    
    PiperOrigin-RevId: 390502485

[33mcommit eaa2db51f3954aebd95e00102844b7f4c996accd[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 11 18:47:45 2021 -0700

    Always call build_str when folding FORMAT_VALUE.
    
    build_str has a lot of logic to ensure the correct stack effects for various
    combinations of constants and variables, which we were duplicating incompletely
    in the handler for FORMAT_VALUE.
    
    PiperOrigin-RevId: 390267587

[33mcommit b1e7e1297bb3a65ded8b0f798b51c2b476437c18[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 11 15:52:10 2021 -0700

    FIX: Only fold a format string if the formatted value is also folded.
    
    Also added a TODO for dealing with 0-length containers.
    
    PiperOrigin-RevId: 390238033

[33mcommit a46e508f24b6de965dbe82f6527fd6d424492209[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 11 13:31:35 2021 -0700

    FIX: When folding a format string, mark the opcode as folded.
    
    PiperOrigin-RevId: 390207337

[33mcommit 3fdc4c3f5b2ceedd6563a604e4c6d000315da25d[m[33m ([m[1;33mtag: 2021.08.11[m[33m)[m
Merge: c8cbeea9 7a29a69d
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 11 15:08:02 2021 -0700

    Merge pull request #975 from google/google_sync
    
    Google sync

[33mcommit 7a29a69db4b1729b43829b5f9f8d35089ba5279e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 11 13:45:27 2021 -0700

    Fix (arguments-renamed) lint warnings.

[33mcommit d8cee3ee0d2d4d83d5174005c2d4d9761fa89f17[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 11 13:17:08 2021 -0700

    Fix a few failing opensource tests.
    
    The line number of an error on a decorated class with no parents changes
    from one Python version to the next; sometimes the error is on the same line as
    the decorator, and other times it's on the class 'def' line. Making the class
    redundantly inherit from object gets around this.
    
    PiperOrigin-RevId: 390204142

[33mcommit f6e791131731c7b07b91a57089817f8bcdf8889b[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 11 13:16:53 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 390204098

[33mcommit aed770fb61f4000542d38357598a67e240da3bf2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 11 11:52:02 2021 -0700

    Add libcst dependency.

[33mcommit dd083b1549876d9b16f9f5c631fc6e84f704a57d[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 11 10:35:03 2021 -0700

    Add an entry about annotating *args and **kwargs to the pytype FAQ.
    
    This is a confusing case that users often get wrong.
    
    I do worry a bit about how long the FAQ has gotten, but I wasn't sure where
    else we could put this.
    
    PiperOrigin-RevId: 390166792

[33mcommit f117b4787e7cea37e8a6b2b9aeffca24f8cc1edd[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 11 10:34:28 2021 -0700

    Replace ParamSpec.{args,kwargs} with Any.
    
    pytype does not yet support typing.ParamSpec. We were already replacing
    instances of ParamSpec itself with Any, but ParamSpec also has args and kwargs
    attributes that need to be replaced.
    
    Context: https://github.com/python/typeshed/pull/5896
    
    For https://github.com/google/pytype/issues/786
    
    PiperOrigin-RevId: 390166645

[33mcommit 0335c7b3c20432e11fa5b7bbe8c1c71fb81b09e6[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 10 21:25:20 2021 -0700

    Update docs.
    
    PiperOrigin-RevId: 390048262

[33mcommit b7464b569ed9252710ec403f450d00965e5ed051[m
Author: tsudol <tsudol@google.com>
Date:   Tue Aug 10 11:23:10 2021 -0700

    Nit: use `has_dynamic_attributes()` directly instead of reimplementing it.
    
    Also, no need to call it if `maybe_missing_members` is already set.
    
    Tests pass with changes to enum.pytd.
    
    PiperOrigin-RevId: 389933758

[33mcommit 649dfaef77cd311351a2ecc696c67c906a83623e[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 10 10:37:39 2021 -0700

    Flip the constant folding flag and release pytype.
    
    TGP: []
    PiperOrigin-RevId: 389921437

[33mcommit b05aca751a1e06befcf36f29e56607ea4f69029a[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 10 10:07:53 2021 -0700

    Add a basic libcst-based pyi merger adapted from the libcst example code.
    
    PiperOrigin-RevId: 389913696

[33mcommit c0f560ede3657945d83340ac7d54c5cd8fc570a0[m
Author: tsudol <tsudol@google.com>
Date:   Mon Aug 9 17:07:48 2021 -0700

    Make sure dynamic enums are properly propagated to subclasses.
    
    Tests pass with changes to enum.pytd.
    
    PiperOrigin-RevId: 389759353

[33mcommit f1794c62d95f07bc44c1c10959eb93bd35b18668[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Mon Aug 9 12:59:23 2021 -0700

    Updated `errorlog` to anticipate helpful information for --enforce-noniterable-strings
    
    Whenever a `[bad-return-type]` error is raised due to a `NonIterableStringError`, the error log now prints out a detailed help message. Since this logic squeezes into a tuple, I updated any unpacking logic as well to expect a now-larger tuple.
    
    Refactored the creation of `protocol_details` and `nis_details` into `ErrorLog._prepare_errorlog_details()`.
    
    Added a TODO to make a similar change for `[annotation-type-mismatch]`.
    
    PiperOrigin-RevId: 389704729

[33mcommit e7c34737f3bd5f07c10960b87c041b61b6add6f4[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 9 10:44:18 2021 -0700

    Run convert-path-to-py3.sh.
    
    The script mostly turned `class C(object): ...` into `class C: ...` in test
    code.
    
    PiperOrigin-RevId: 389671366

[33mcommit c4901a0390a7f84997bee182df60671732b31a13[m
Author: mdemello <mdemello@google.com>
Date:   Fri Aug 6 19:32:15 2021 -0700

    Improve element tracking when folding large literal lists.
    
    We now track exact values for the first 64 elements, before falling back to the
    overall typevar.
    
    PiperOrigin-RevId: 389311386

[33mcommit 8c98dd910a2d2d439a1d2348664dddc3c043e9ce[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Fri Aug 6 15:47:39 2021 -0700

    Included more precise wording on the FAQ for --enforce-noniterable-strings
    
    Tightened up the wording on the FAQ to help pytype user's better understand the changes regarding noniterable strings and the options they have going forward. Plus updated the markdown permalink URL with a new alias, `#noniterable_strings`
    
    PiperOrigin-RevId: 389278688

[33mcommit c8cbeea997634455b5abcb27c76c58aa0dfc25ae[m
Merge: fc7b623d de1ff274
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 6 14:55:02 2021 -0700

    Merge pull request #973 from google/google_sync
    
    Google sync

[33mcommit de1ff274da963e2b30fa0fb18134ff4c9d8c556b[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 6 14:29:39 2021 -0700

    Use a custom Python 3.7 interpreter in the open-source tests.
    
    Even after 'sudo apt-get install python3.7', using 'python3.7' for the
    python_exe path does not work. Luckily, we already have a mechanism for using
    custom python_exe paths.
    
    Using the full path is fragile, but I couldn't think of an easy alternative.
    I'll figure something else out if it turns out that this path changes often.
    
    PiperOrigin-RevId: 389261441

[33mcommit 12ed3e29c284456b29c23a635e932ec39dddb5e6[m
Author: mdemello <mdemello@google.com>
Date:   Fri Aug 6 13:07:06 2021 -0700

    When folding constant, preserve pyvals at all levels for nested literals.
    
    PiperOrigin-RevId: 389243483

[33mcommit 00a38bbc93e153166e9d87892d6eb1b687883e36[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 6 11:33:31 2021 -0700

    Install python3.7 instead of python2-minimal.

[33mcommit 80a279df6527ab872cf4cb2c529e112dbc8cbc98[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 5 17:31:59 2021 -0700

    Update docs.
    
    PiperOrigin-RevId: 389063061

[33mcommit f2849b6c4f4e0e3580aa310e436107522de9245e[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 5 13:24:21 2021 -0700

    Make the minimal changes to stop supporting target Python 2.
    
    This updates utils.py's python version validation to reject Python 2 and fixes
    up the tests that fail as a result.
    
    I have not attempted to do a thorough cleanup of all our py2-handling code.
    
    PiperOrigin-RevId: 389009580

[33mcommit c4594e4adf10c36aa19d087b02eb6c5db416dfab[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 5 13:18:27 2021 -0700

    Skip a flaky test.
    
    PiperOrigin-RevId: 389007974

[33mcommit 95ad607cc86f91e724267e1aaedfbaf46a7c2b4d[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 5 10:52:58 2021 -0700

    Test Python 3.7 instead of Python 2 in a few tests.
    
    blocks_test, opcodes_test, and vm_test were primarily or exclusively Python 2.
    This change updates them to use Python 3.7 instead. (Since they test bytecode,
    we can't make them use the host version like our other tests.)
    
    PiperOrigin-RevId: 388972879

[33mcommit fc7b623db90eec453bb2d776f5b066cd742e5f77[m
Merge: 4c2bfb5c 2abb12df
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 4 20:57:05 2021 -0700

    Merge pull request #972 from google/google_sync
    
    Google sync

[33mcommit 2abb12dfc2157da371fef331d21dbd7260212e0b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 4 15:22:23 2021 -0700

    Tweak pylintrc to allow long URLs in strings.

[33mcommit 5200affe9b87c77091cf0fdf0d34f43f61d1fa2f[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Wed Aug 4 13:28:27 2021 -0700

    Added a helpful FAQ blurb for non-iterable strings justification
    
    PiperOrigin-RevId: 388770881

[33mcommit f54426cfa2cdc97a5958246384bb291f13740b20[m
Author: tsudol <tsudol@google.com>
Date:   Wed Aug 4 12:33:39 2021 -0700

    Support using IntEnum with the functional API.
    
    PiperOrigin-RevId: 388758524

[33mcommit a566d66b0748acbcdc54d6f3af5dd180410349ad[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 3 13:25:30 2021 -0700

    Add missing leading zero.
    
    PiperOrigin-RevId: 388530319

[33mcommit d442306cbc7deb13abfa47825ce150917e718e40[m
Author: tsudol <tsudol@google.com>
Date:   Tue Aug 3 13:22:02 2021 -0700

    Mark enums with custom `__init__` as dynamic.
    
    Also improves handling of base type.
    
    All tests pass with pytd changes.
    
    PiperOrigin-RevId: 388529565

[33mcommit 4c2bfb5cbef274b723f11f83be2911b17ea1d972[m[33m ([m[1;33mtag: 2021.08.03[m[33m)[m
Merge: a2b229d3 3f465bf1
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 3 13:54:29 2021 -0700

    Merge pull request #970 from google/google_sync
    
    Google sync

[33mcommit 3f465bf19981647829e40f9c912a139155772ec6[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 3 13:20:42 2021 -0700

    Prepare a PyPI release.
    
    We've made Python 2.7 analysis a no-op internally, so we can start removing 2.7
    support from pytype itself. Before that, cut a final PyPI release for 2.7.
    
    PiperOrigin-RevId: 388529260

[33mcommit 4c591572a02f4f32a5c50b91e073932d7443ff7b[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 2 22:17:28 2021 -0700

    Make some updates to the pytype user guide and FAQ.
    
    * Clean up some Python 2 stuff.
    * Add an FAQ entry about how open source pytype treats pip-installed libraries.
    
    PiperOrigin-RevId: 388377240

[33mcommit a2b229d3a169b90e8bd0f045567df35273618476[m
Merge: 851bebe1 34c1440c
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 2 22:04:28 2021 -0700

    Merge pull request #969 from google/google_sync
    
    Google sync

[33mcommit 34c1440c5697f9f8398284940f94fc771b64583e[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 2 21:11:42 2021 -0700

    Fix a bug in pytype's import resolution for relative imports.
    
    We made the (erroneous) assumption that "from . import X" can only import a
    module, which was causing trouble for typeshed. See
    https://github.com/python/typeshed/pull/5762#issuecomment-887203993 for
    context. Fixing this exposed another bug where load_pytd.Module.is_package
    didn't work correctly for stubs that ship with pytype, which I also fixed.
    
    PiperOrigin-RevId: 388369899

[33mcommit c1042601025a505f163aeb1135cbda4147b8c31a[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Mon Aug 2 17:03:04 2021 -0700

    Added helpful error message for non-iterable strings feature
    
    Upon a wrong-arg-types error caused by "accidental" string iteration, present to the user a help message to convert `str` to an iterable type (in pytype) by passing the variable into `iter()` or `list()` if applicable.
    
    PiperOrigin-RevId: 388337744

[33mcommit 5bee3d8231c25f96f468da5a469700448ae0695c[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 2 14:19:19 2021 -0700

    Rollback of changelist 388284575.
    
    *** Reason for rollback ***
    
    broke some builds
    
    *** Original change description ***
    
    Flip the flag on constant folding.
    
    TGP: []
    
    ***
    
    PiperOrigin-RevId: 388302735

[33mcommit 765416d969b6d70b164346f12a5c312962d53bc5[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 2 12:56:35 2021 -0700

    Flip the flag on constant folding.
    
    TGP: []
    PiperOrigin-RevId: 388284575

[33mcommit 1b9f164f19b3669fafdf76c5772c8e77eb45d570[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Mon Aug 2 11:43:51 2021 -0700

    Allow `str` to match against `Iterable` (or `Iterable[Any]`) and related containers
    
    Updated the matcher to accept the new behavior of matching `str` to `Iterable` but prevent matching against `Iterable[str]`.
    
    Removed test skips now that the change is implemented.
    
    Refreshed the expectations of a NamedTuple test.
    
    Allow `str.join` to accept `Union[str, Iterable[str]]`.
    
    PiperOrigin-RevId: 388268461

[33mcommit 2906c818610b2e1a0bf108f255b8df676a5c9cac[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 30 18:22:09 2021 -0700

    Protocol attribute matching fix #4.
    
    Who knew there were so many different ways to arrange three for loops?
    
    PiperOrigin-RevId: 387919695

[33mcommit 5bc9c3be9b69da9044a5111a86dce2c5f3d493a1[m
Author: tsudol <tsudol@google.com>
Date:   Fri Jul 30 13:46:14 2021 -0700

    Disable specific member equality checks for enums.
    
    With more precise equality checks, pytype thinks there is no path through if statements that check an enum member against all the members of the enum, which causes name-errors.
    
    PiperOrigin-RevId: 387875079

[33mcommit 556844749b4ee4a739a23e3e47f737445a56317c[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Fri Jul 30 12:56:34 2021 -0700

    Updated test expectations to allow for `str` to match `Iterable[Any]`
    
    Re-implemented test behavior to allow for `str` to match `Iterable`/`Iterable[Any]` (and similar), but not match `str` to `Iterable[str]` (and similar). Also updated a failing `NamedTuple.__init__()` test to match the new behavior.
    
    PiperOrigin-RevId: 387865495

[33mcommit 851bebe119e79b98e999eec706b237243cdd2305[m
Merge: 65b636e5 abf837aa
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jul 30 12:08:20 2021 -0700

    Merge pull request #968 from google/google_sync
    
    Google sync

[33mcommit abf837aaec6c93726555f783e4c9dffd865590c2[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Thu Jul 29 13:10:45 2021 -0700

    Add __dataclass_fields__ member to dataclass overlay and Dataclass protocol.
    
    This can be used to write type annotations that match any dataclass/instance of a dataclass, but not other classes/instances of other classes. Also supports a generic argument so that, for example, a dataclass whose keys are all strs can be matched. See the docstring of pytype_extensions.Dataclass for more details.
    
    Also fix a bug in abstract_utils.get_signatures.
    
    rechen: thank you very much for your help with this cl.
    PiperOrigin-RevId: 387652898

[33mcommit cbf4f68ce209c8b3e470a42b271c289cfca1e8b7[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 9 09:13:39 2021 -0700

    pytype_extensions: modernize a super() call.
    
    PiperOrigin-RevId: 378420868

[33mcommit 33f34c27050ce220feb31268a8e3ea465cc4e03e[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 29 16:51:01 2021 -0700

    Fix a bug in the pytd printer.
    
    We sometimes spawn a new printer inside the printer, and the new printer didn't
    always have the same settings as the old one. This led to a bug where, when
    there existed a class called Union in a file, we sometimes mistakenly printed
    Union instead of typing.Union when we meant the latter.
    
    PiperOrigin-RevId: 387698183

[33mcommit d2831975898dc3dba625f3ce3ff44d5447cf05d2[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Thu Jul 29 15:21:11 2021 -0700

    Internal change
    
    PiperOrigin-RevId: 387680530

[33mcommit b455ebe860f8c5b63483d242499333004b4e10de[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Thu Jul 29 14:33:07 2021 -0700

    Final adjustments to `Protocol` and `NamedTuple` tests
    
    * Fixed a dictionary iteration typo in `Protocol`
    * Updated error message expectation in `NamedTuple`
    * Updated builtins.pytd to allow `iter(some_string)`
    * Globally enabled `--enforce-noniterable-strings` for tests
    
    PiperOrigin-RevId: 387670285

[33mcommit b0f01f0190f46c55dd2e708cd82c2fa7f5986237[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jul 29 13:40:47 2021 -0700

    Fixes for constant folding:
    - Handle stack underflow when a literal constructor spans several blocks
    - Fix handling of f strings
    
    PiperOrigin-RevId: 387659056

[33mcommit 5db6f723e0c5aee06efda5c77cf556ad33a46605[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Thu Jul 29 13:10:45 2021 -0700

    Add __dataclass_fields__ member to dataclass overlay and Dataclass protocol.
    
    This can be used to write type annotations that match any dataclass/instance of a dataclass, but not other classes/instances of other classes. Also supports a generic argument so that, for example, a dataclass whose keys are all strs can be matched. See the docstring of pytype_extensions.Dataclass for more details.
    
    Also fix a bug in abstract_utils.get_signatures.
    
    rechen: thank you very much for your help with this cl.
    PiperOrigin-RevId: 387652898

[33mcommit 436d5281fe4be8b173b42c55588aae8e213870d2[m
Author: tsudol <tsudol@google.com>
Date:   Thu Jul 29 11:58:06 2021 -0700

    Lookup by value works when you pass in an enum member, too.
    
    Also updates enum.pytd to modern syntax.
    
    PiperOrigin-RevId: 387636624

[33mcommit fe2d75cdd49c7f876481fa204825f9e1d160e69f[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jul 28 19:30:40 2021 -0700

    Fix a bug where partially constructed constants weren't getting cleaned up
    correctly.
    
    If we find a non-constant in the middle of a literal we want to add it to the
    stack anyway, so that the BUILD operation has the right number of arguments
    available to pop off.
    
    PiperOrigin-RevId: 387491392

[33mcommit 774aa2cfcdd442ca4b1fa1d91f4b61c8589f21f5[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 27 18:57:11 2021 -0700

    Fix yet another protocol matching bug.
    
    We were sometimes dropping a generic type's parameterized values and therefore
    not catching some mismatches.
    
    As a side note, I also spent a long time trying to find an easier way to
    construct a complex abstract value, but this was the best I could do...
    
    PiperOrigin-RevId: 387247202

[33mcommit 7d1a8bf260b87d825b71a66c2d1468adc406760f[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 27 18:33:15 2021 -0700

    Add a TOC for typing_faq.md and restore a deleted paragraph to faq.md.
    
    PiperOrigin-RevId: 387243902

[33mcommit fbb972322a5ff16c63e01a1550621ae215688e5f[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jul 27 17:59:42 2021 -0700

    Add a typing FAQ
    
    PiperOrigin-RevId: 387238981

[33mcommit 08bab668d3c7ab286fcfd3781dd226159d369230[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 27 14:18:12 2021 -0700

    Switch some [not-supported-yet] errors to [invalid-annotation].
    
    PiperOrigin-RevId: 387194451

[33mcommit fcee95e32837b9c808e55fdc4b1d4d00c05d7a87[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jul 27 12:34:47 2021 -0700

    Add `name` and `value` to enum type stubs, and bitwise ops for auto
    
    Originally, I removed `__getattribute__`, `name` and `value` from the enum type stub because they were bypassing the enum overlay. However, it turns out that `__getattribute__` was the only problem here, and using `name` and `value` in the enum type stub greatly simplifies several usages of enums.
    
    Additionally, Flag enum members can be defined using bitwise ops, which pytype attempts to resolve earlier than Python does, leading to unsupported-operand issues. The simplest fix is to define these for enum.auto().
    
    There is a major trade off here: auto() can be set to create, say, strings instead of ints, which pytype will not detect even though Python will complain.
    
    All tests were ran with the usual pytd changes.
    
    PiperOrigin-RevId: 387171130

[33mcommit 65b636e5f166aa1f2eb193b46075ae744b5e53cd[m[33m ([m[1;33mtag: 2021.07.27[m[33m)[m
Merge: 6a2e47b4 3d883fd7
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 27 12:11:27 2021 -0700

    Merge pull request #967 from google/google_sync
    
    Google sync

[33mcommit 3d883fd7daeccac56572a993cdc1325b91aba282[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 27 11:41:38 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 387159439

[33mcommit 334af221f2a590d5be9fcc50c4bae2d7476f4638[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 27 11:29:41 2021 -0700

    Fix a bad test base class: TargetIndependentTest -> TargetPython3BasicTest
    
    PiperOrigin-RevId: 387156618

[33mcommit 730b29f1ebd79e8e27bcd5f63aafc906253bde98[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 26 21:02:22 2021 -0700

    Skip a failing Python 3.8 test.
    
    This test passes in 3.6, 3.7, and 3.9 but fails in 3.8. I can't even reproduce
    the failure locally because my Python 3.8 install broke when python3 was
    changed to point to 3.9 a few months ago. At this point, I'm inclined to just
    skip the test.
    
    PiperOrigin-RevId: 387022361

[33mcommit 6859e088999ee3dadf6577d0741616412cd512f2[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 26 20:41:39 2021 -0700

    Output more detailed [name-error] messages.
    
    When a name error is reported, we loop through all the outer frames to see if
    we can find a definition for the name. If so, the error has one of three
    causes:
    
    * UnboundLocalError: The name is defined both in the outer frame and later in
      the current frame. In this case, we output a hint to use `global` or
      `nonlocal` to access the outer name.
    * The error is for a class attribute, e.g.:
      class C:
        x = 0
        def f(self):
          print(x)  # name-error
      In this case, we output a hint to use 'C.x' to access the attribute.
    * The error is for an attribute of a class that has not yet been defined at the
      time of the attribute access, e.g.:
      class C:
        x = 0
        class D:
          print(x)  # name-error
      As far as I can tell, there's no easy fix in this case, so we just output a
      short explanation for why this fails.
    
    PiperOrigin-RevId: 387019978

[33mcommit 92bb49b4ed0bbc3f880f60723e5c2c6f316d7f21[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jul 26 20:34:15 2021 -0700

    Add support for attr converters.
    
    For this code:
    
      def fn(x: A) -> B: ...
    
      @attr.s
      class Foo:
        a = attr.ib(converter=fn)
    
    we generate the signature:
    
      class Foo:
        a: B
        def __init__(self, a: A)
    
    PiperOrigin-RevId: 387019120

[33mcommit 7e14957dcd35810e6344f8eb6cf5a972675e68f5[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 26 18:32:50 2021 -0700

    Fix a Python 3.8+ SETUP_FINALLY bug.
    
    SETUP_EXCEPT is removed in 3.8, so we have to instead figure out when
    SETUP_FINALLY is being used to set up an except.
    
    PiperOrigin-RevId: 387005435

[33mcommit d3ee7c32a15f1371f77bbe65d309e0fdab37fb5e[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Mon Jul 26 14:50:52 2021 -0700

    Adjustments to py2/test_builtins for non-iterable string behavior
    
    Removed tests that don't match the new behavior of not allowing "accidental" string iteration for builtin functions `iter`, `zip`, `dict.from_keys`, `sorted`, and `filter`. Also raised the `--enforce-noniterable-strings` flag to `True` for the adjusted tests.
    
    PiperOrigin-RevId: 386964849

[33mcommit a15d3ab45f036986b51f45046fa4d65ef56dead8[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Mon Jul 26 13:43:06 2021 -0700

    Adjustments to test_builtins2 for non-iterable string behavior.
    
    Updated tests to match the new behavior of not allowing "accidental" string iteration for builtins `reduce`, `tuple`, `frozenset`, and `iter`. Also raised the `--enforce-noniterable-strings` flag to `True` for the adjusted tests.
    
    PiperOrigin-RevId: 386949903

[33mcommit c4a2426d880f9eab9698dc3824ee70cd3215ec88[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Mon Jul 26 11:29:56 2021 -0700

    Adjustments to test_builtins for non-iterable string behavior
    
    Updated tests to match the new behavior of not allowing "accidental" string iteration for builtin functions `iter`, `zip`, `dict.from_keys`, `sorted`, and `filter`.
    
    PiperOrigin-RevId: 386920735

[33mcommit 151a48fc0a440f6577e1d51ca49e5e7ecb1de1bc[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 26 11:03:40 2021 -0700

    Fix a bug in attribute matching for generic protocols.
    
    Matching a class (rather than an instance of a class) against a generic
    protocol was broken. When the generic protocol is defined in the same file as
    the class being matched against it, this is fixed by updating
    abstract_utils.get_type_parameter_substitutions so it can get type parameter
    values from classes as well as instances. When the classes are in different
    files, load_lazy_attribute() needs to take type parameter values into account
    when converting the protocol to an abstract value.
    
    PiperOrigin-RevId: 386914661

[33mcommit 67e10338deb3f6921566e193a75bc0d10500b97b[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 26 10:55:29 2021 -0700

    Fix a TypeVar substitution bug.
    
    PiperOrigin-RevId: 386912435

[33mcommit a93c0d639edfd07643175baeeb896d4865f577cc[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 26 10:48:10 2021 -0700

    Fix another try/except/finally bug.
    
    Also rebuckets a test that I realized was in the wrong place when running the
    opensource tests to make sure this works in 3.9.
    
    PiperOrigin-RevId: 386910555

[33mcommit e6bdd134e2447677a8ac8e6127f2e17cd909203c[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 23 23:53:29 2021 -0700

    Fix a bug in how pytype handles 'with' blocks.
    
    This fixes some ~2000 breakages that appeared in today's Build Failures table.
    
    PiperOrigin-RevId: 386597832

[33mcommit fe93c9fd8e75014e18393b03d077225c208443b4[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Fri Jul 23 14:35:23 2021 -0700

    Support star unpacking behavior for strings
    
    Star (`*`) unpacking is acceptable behavior for strings in Python. However, we should error this out if the value being unpacked is a `str`, since this is a prime example of "accidental string iteration".
    
    PiperOrigin-RevId: 386533484

[33mcommit 581f2c62ca700c5629dded0732911247b7b196c3[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Fri Jul 23 14:24:58 2021 -0700

    Implementation for non-iterable python strings
    
    Added new checks to prevent accidental string iteration within the matching process.
    
    PiperOrigin-RevId: 386531344

[33mcommit 953e6ba7a3c9e008c78ddb3a8d8298b42f9138c8[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Fri Jul 23 14:12:23 2021 -0700

    Included new feature flag for non-iterable strings
    
    Integrated a new feature flag `--enforce-noniterable-strings` with default
    value `False` into the pytype config to prevent any breaking changes
    
    PiperOrigin-RevId: 386528856

[33mcommit 6a2e47b4da4c52dea798d391866a895b49b700a9[m
Merge: 58ec39f0 37f098cb
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 22 22:22:08 2021 -0700

    Merge pull request #965 from google/google_sync
    
    Google sync

[33mcommit 37f098cb9f2fc4ba9ed1c86ac62d31a997d71bff[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 22 20:34:46 2021 -0700

    Allow typing import lines > 80 chars.

[33mcommit 497752995a92cda9e2146ef87a2303013fb33c0a[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 22 17:57:59 2021 -0700

    Avoid an infinite recursion bug.
    
    This adds a check to matcher.py so that a TypeParameterInstance can't refer to
    itself. I'm not sure how we got into this state in the first place, but this at
    least prevents pytype from crashing.
    
    PiperOrigin-RevId: 386361554

[33mcommit 0869b494a700693636bc285be2d49cfc6f8bea51[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 22 16:09:52 2021 -0700

    Fix a recursion error in PythonConstant.__repr__.
    
    PiperOrigin-RevId: 386343502

[33mcommit c331398ddfc124ed63f2373a3f733dbc1c4e615b[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Thu Jul 22 13:27:24 2021 -0700

    Feature Tests for non-iterable python strings
    
    These tests cover newly added behavior enforcing "accidental" string iteration.
    
    PiperOrigin-RevId: 386310074

[33mcommit 9b97daf1fb45fae31ea25ea095e84330e6761d6f[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 22 12:58:21 2021 -0700

    Fix another protocol matching bug.
    
    Hopefully I finally got this right.
    
    PiperOrigin-RevId: 386303677

[33mcommit 71fbb6e4f88142870eafdda57f03e8f833662bd3[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jul 22 11:22:22 2021 -0700

    Track the frame state within try/except/finally blocks.
    
    If we exit the frame within a SETUP...END_FINALLY block, we need to propagate
    the exit condition (e.g. 'exception' or 'return') to the END_FINALLY opcode so
    that we don't continue executing the next block.
    
    PiperOrigin-RevId: 386282843

[33mcommit 0dd2a61eb82691c917eff3a1e1a7732458a3ab08[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 22 10:21:14 2021 -0700

    Make pytype:main_test a little faster.
    
    When this test is run locally, using subprocess.poll() makes
    test_builtins_determinism3, the slowest test, about twice as fast.
    
    PiperOrigin-RevId: 386268586

[33mcommit 53fa6b208e483cbe5c5aef0728931761b712b913[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 21 19:45:37 2021 -0700

    Fix a protocol matching bug.
    
    PiperOrigin-RevId: 386147935

[33mcommit 2cc35d9f3aa86a7169fe4fadbafcab39b5a74285[m
Author: tsudol <tsudol@google.com>
Date:   Wed Jul 21 15:07:18 2021 -0700

    Subclasses of EnumMeta make dynamic enums.
    
    The typical reason for subclassing EnumMeta is to dynamically add more members to enums. The easiest way for pytype to handle this case is by treating those enums as dynamic, i.e. as if they had `_HAS_DYNAMIC_ATTRIBUTES` set.
    
    PiperOrigin-RevId: 386104813

[33mcommit e62dc430984a9d3f2fc203f9415b3344ccd3745a[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 21 13:41:42 2021 -0700

    Get rid of a spurious 'appear only once in signature' TypeVar error.
    
    Note that this fix depends on the 'closure' attribute of InterpreterFunction
    holding an instance of 'self' for functions nested inside instance methods.
    This should always be the case when the nested function's annotations reference
    the class's type parameters, since you can't get the value of a type parameter
    without accessing 'self'.
    
    PiperOrigin-RevId: 386086421

[33mcommit 76160103d2e16e02c5d107b9639606cc40009d86[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Wed Jul 21 12:29:54 2021 -0700

    Regression Tests for non-iterable python strings
    
    Newly written tests to ensure old iterable string behavior doesn't
    backslide. Covers intended string iteration with `Union[str, Iterable[str]]`
    (and similar) and covers unintended string iteration as well. Removed tests have been moved into `NonIterableStringsTests` with the old (failing) behavior and the new (corrected) behavior being analyzed.
    
    PiperOrigin-RevId: 386070561

[33mcommit 4577d7402701cc22b9226aef378b16423c8be3bc[m
Author: tsudol <tsudol@google.com>
Date:   Wed Jul 21 11:43:57 2021 -0700

    Small bugfixes for enums.
    
    - When analyzing `__getitem__`, ensure the error message makes sense when using `instantiate`.
    - Add `_name_` and `_value_` to enum members.
    
    PiperOrigin-RevId: 386059967

[33mcommit f3d044d1c80aaecb0c7852a8ece4afb520381625[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 21 11:30:52 2021 -0700

    Silence a module-attr finding in debug.py.
    
    For some reason, opensource pytype complains about this line. (I used the block
    disable to avoid triggering a line-too-long lint warning.)
    
    PiperOrigin-RevId: 386056841

[33mcommit eeb5900e3449021308a55fa3476a53e141669b25[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 21 08:46:55 2021 -0700

    Fix a crash in metaclass.py.
    
    I happened to notice this while working on something else.
    
    PiperOrigin-RevId: 386020757

[33mcommit 58ec39f0b440891a69008b9b9c4ef144da9a53a0[m
Merge: 4c154fbd c4c63d4f
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 20 20:25:40 2021 -0700

    Merge pull request #964 from google/google_sync
    
    Google sync

[33mcommit c4c63d4f6a18babf70d0afbe6394c9f28df9f759[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 20 19:05:28 2021 -0700

    Disable a pytype error in debug.

[33mcommit 10038df2a4fba142fccc66e5b34b8276353fc205[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 20 18:38:05 2021 -0700

    Add dependency on tabulate.

[33mcommit 9226f1e5913b12d1e01471e3ca286b77796f6029[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jul 20 15:21:37 2021 -0700

    Handle type stubs that use the enum as the enum member value type.
    
    See the test for an example of an enum like this.
    
    PiperOrigin-RevId: 385882840

[33mcommit f0257e49db71454c5a2301b61a8831096fff418a[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jul 20 14:41:47 2021 -0700

    Handle subclasses of EnumMeta better.
    
    Also takes care of six.with_metaclass by making abstract.py able to detect when a WithMetaclassInstance is an enum.
    
    PiperOrigin-RevId: 385874461

[33mcommit 8b1b3b5aba8967bae347aa3b6dd201ce547a479f[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 19 22:06:31 2021 -0700

    Support generic namedtuples.
    
    * Adds the ability to generate mutations from __new__ methods, since NamedTuple
      uses __new__ rather than __init__.
    * Passes the list of bases to NamedTuple.make_class() so that the Generic base
      is detected.
    * Ensures the class's __annotations__ dict is initialized properly (somewhat
      tricky when the NamedTuple is constructed via a function call) - once that's
      done, our existing code for handling generic classes kicks in and takes care
      of the rest.
    
    As a side note, using generic namedtuples seems rather inadvisable, since
    whether they work at runtime changes from version to version. This fails in
    Python 3.6:
    
    >>> from typing import Generic, NamedTuple, TypeVar
    >>> T = TypeVar('T')
    >>> class Foo(NamedTuple, Generic[T]):
    ...   x: T
    ...
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    TypeError: metaclass conflict: the metaclass of a derived class must be a (non-strict) subclass of the metaclasses of all its bases
    
    succeeds in 3.7, and is broken again in 3.9:
    
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
      File "/usr/lib/python3.9/typing.py", line 1881, in _namedtuple_mro_entries
        raise TypeError("Multiple inheritance with NamedTuple is not supported")
    TypeError: Multiple inheritance with NamedTuple is not supported
    
    But that's outside of our control, and if someone is really determined to
    create a generic namedtuple, they can do it in a TYPE_CHECKING block.
    
    PiperOrigin-RevId: 385710726

[33mcommit c6754997ca47161fa453bab5f466c214043d7572[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jul 19 18:03:30 2021 -0700

    Add a pretty printer for blocks.OrderedCode.
    
    Sample output:
    
    ```
    ╒════════════════════════════════════════════════════════════════════╕
    │  ix │ op                │ arg          │ tgt │ btgt │ next │ extra │
    ├────────────────────────────────────────────────────────────────────┤
    │ block: 0 -> [3]                                                    │
    ├────────────────────────────────────────────────────────────────────┤
    │   0 │ SETUP_EXCEPT      │ 3            │   3 │      │ T    │       │
    │   1 │ LOAD_CONST        │ 'hello'      │     │      │ T    │       │
    │   2 │ RETURN_VALUE      │              │     │      │ F    │       │
    ├────────────────────────────────────────────────────────────────────┤
    │ block: 3 -> [7, 32]                                                │
    ├────────────────────────────────────────────────────────────────────┤
    │   3 │ DUP_TOP           │              │     │      │ T    │       │
    │   4 │ LOAD_GLOBAL       │ Exception    │     │      │ T    │       │
    │   5 │ COMPARE_OP        │ 10           │     │      │ T    │       │
    ```
    
    PiperOrigin-RevId: 385682167

[33mcommit 72089b4fc7591d59f21703c178a353ce79ae5b03[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 19 15:38:34 2021 -0700

    Finish removing --check-parameter-types.
    
    PiperOrigin-RevId: 385656504

[33mcommit 2b27bab6ec5251582d162d49f59a054d20708a42[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 19 13:07:29 2021 -0700

    Improve [name-error] message and add skipped tests for future work.
    
    When a local variable name shadows a global one, adds an explanation to the
    [name-error] message explaining why the name cannot be referenced before being
    locally defined.
    
    Also adds some skipped tests for other cases in which we do not yet add this
    explanation, since I haven't yet figured out how to look up a name in outer
    class and function scopes.
    
    PiperOrigin-RevId: 385624371

[33mcommit 4c154fbd350fbdf208f4f2b020fa82b952deb38d[m
Merge: 1f5f8f5d c9b2e3b2
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 19 13:09:27 2021 -0700

    Merge pull request #963 from google/google_sync
    
    Google sync

[33mcommit c9b2e3b2d86a50e0e023d692819324e37c917904[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jul 19 11:41:02 2021 -0700

    Resolve errors for IntEnum and IntFlag.
    
    I was not able to trace exactly why, but creating an IntEnum/IntFlag class caused pytype to complain about wrong args passed to `__new__` -- despite `__new__` never being directly called.
    
    PiperOrigin-RevId: 385604689

[33mcommit 10902d4c57d505da4d27f3eacf568962de212680[m[33m ([m[1;33mtag: 2021.07.19[m[33m)[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 19 12:37:35 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 385617218

[33mcommit f8954515f08a0985bf4b88b08df732a7f5611bd5[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 19 11:23:48 2021 -0700

    Fix a pytype crash.
    
    This fixes the following crash:
    
    Traceback (most recent call last):
      [...]
      File "/.../pytype/matcher.py", line 454, in _match_type_against_type
        elif other_type.has_protocol_parent():
    AttributeError: 'Empty' object has no attribute 'has_protocol_parent'
    PiperOrigin-RevId: 385600564

[33mcommit 130d69a86d4618f2892c171ffc8a51a133e0466f[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 19 08:22:37 2021 -0700

    Fix Enum.__new__ signature.
    
    This fixes about ~450 build failures along the lines of:
    
    import enum
    
    class SomeEnum(enum.Enum):
      x = 1
    
    def f() -> SomeEnum:
      return SomeEnum(1)  # line 7
    
    File "xxx", line 7 in f: bad return type [bad-return-type]
               Expected: SomeEnumType
      Actually returned: Type[enum.Enum]
    
    PiperOrigin-RevId: 385558878

[33mcommit fe193c930d504f640f2f44e9e0b685133d75d37a[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 16 14:02:45 2021 -0700

    Slightly reword ninja MacOS installation note.
    
    Reworded to make clear that checking the cmake installation is a
    troubleshooting suggestion that only needs to be paid attention to if the
    installation fails.
    
    PiperOrigin-RevId: 385219409

[33mcommit 1f5f8f5ddb967306e86e74282eb3c52b05612134[m
Merge: a9fcb666 681de071
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jul 16 15:16:37 2021 -0700

    Merge pull request #962 from google/google_sync
    
    Google sync

[33mcommit 681de0716bfc52f68264c77fc3f44958ea3b5410[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 16 13:28:35 2021 -0700

    Add a note to the README about a MacOS installation issue.
    
    PiperOrigin-RevId: 385212776

[33mcommit 45f018a3ffedf487af7646b24b8acf84792ee0b2[m
Author: tsudol <tsudol@google.com>
Date:   Fri Jul 16 11:11:06 2021 -0700

    Fix return type of value-lookup `Enum.__new__`
    
    PiperOrigin-RevId: 385184917

[33mcommit a0099e83ef55dd83d2e6c02efb9c165f9eec9073[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 15 18:53:24 2021 -0700

    Fix a goofy-looking error message.
    
    _print_protocol_error would print the same line over and over again.
    
    PiperOrigin-RevId: 385054619

[33mcommit a9fcb666b2df527c8df65b07979acc6fdade4f91[m
Merge: 6cab813c 6a61266f
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 15 15:35:23 2021 -0700

    Merge pull request #961 from google/google_sync
    
    Google sync

[33mcommit 6a61266f651c78434b8a4bfc3c392ea6cb3d2758[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 15 15:07:55 2021 -0700

    Rebucket a test that uses type annotations.
    
    PiperOrigin-RevId: 385018670

[33mcommit 2d150133882ae7df8634d76bc9a969ccce105607[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 14 19:33:23 2021 -0700

    Handle unions correctly when dealing with exception types.
    
    PiperOrigin-RevId: 384836149

[33mcommit 40da92f2d4a8e4768184eb0bade63c4dec6a4be0[m
Author: tsudol <tsudol@google.com>
Date:   Wed Jul 14 15:56:17 2021 -0700

    Add support for data base types for enums.
    
    This is useful for supporting IntEnum and IntFlag, along with other uses out in the wild.
    
    Tests pass with changes to enum.pytd.
    
    PiperOrigin-RevId: 384804301

[33mcommit 415bb7779b2cc95e786b7541c7e7b168955cf7aa[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jul 13 14:11:38 2021 -0700

    Fix block target pruning for blocks nested in 'finally' blocks.
    
    PiperOrigin-RevId: 384548845

[33mcommit 4d818bd9fcb0606f31c2c07500848fc373b33439[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jul 12 18:48:46 2021 -0700

    Fix a false positive in block target pruning.
    
    Note that there are still issues with the heuristic; I've added a skipped test
    where we should be pruning a block target and do not.
    
    PiperOrigin-RevId: 384364444

[33mcommit f5ab973abd981e37f76eb1b2e0610bacfc570305[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jul 12 11:57:59 2021 -0700

    Enum does in fact have two `__new__` signatures.
    
    - enum_overlay no longer assumes Enum has only one `__new__` signature.
    - enum_overlay functional API now uses specifically the functional API `__new__` signature for type checking.
    - fixed a bug where function.Signature objects were being created with sets for `kwonly_params` instead of tuples.
    
    All test_enum tests were ran.
    
    PiperOrigin-RevId: 384284721

[33mcommit 6cab813c22c9f031ef4561bf2118b7a96dca6516[m
Merge: 054e8479 2b9da9ac
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Jul 10 00:14:25 2021 -0700

    Merge pull request #959 from google/google_sync
    
    Google sync

[33mcommit 2b9da9ac588b88aa96043482d00b98306dbdbfa6[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 9 22:27:18 2021 -0700

    Bring back annotations_util.deformalize().
    
    This fixes the "No attribute foo on TypeVar" errors we've been seeing.
    
    I realized that there's a better way to implementation deformalize(), but it'll
    generate more type errors, so I'm going to wait until we've cleared out the
    release backlog.
    
    PiperOrigin-RevId: 383978671

[33mcommit 3609e881a2f25afa7744e3de6ffaa334d4e229f4[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 9 14:47:19 2021 -0700

    Update some docs.
    
    * Mark as fresh.
    * Remove some 2and3 references.
    
    PiperOrigin-RevId: 383927594

[33mcommit 98e78a31daa9618213efdfb30fb016b83a8276d1[m
Author: tsudol <tsudol@google.com>
Date:   Fri Jul 9 14:35:25 2021 -0700

    Enable basic subclassing of enums.
    
    This doesn't perform any of the validation needed -- e.g. enums can only be subclassed if they don't define any members.
    
    Tests were run with enum.pytd changes.
    
    PiperOrigin-RevId: 383925189

[33mcommit 3f4fc28ef31efac1b72d32deea1e049b66c1726b[m
Author: tsudol <tsudol@google.com>
Date:   Fri Jul 9 10:28:51 2021 -0700

    Add a couple tests to prove name/value are treated as enum members.
    
    Tested with enum.pytd changes.
    
    PiperOrigin-RevId: 383874428

[33mcommit f99ff5186a0142e0b5704ebebc58541fa89a550a[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 9 00:15:50 2021 -0700

    Allow TypeVars to be passed to functions.
    
    Gets rid of the 'cannot pass a TypeVar to a function' error in favor of
    replacing TypeVars with 'object' in the matcher. This lets us handle TypeVars
    with minimal changes to the matching code.
    
    This lets us delete some code that was put in to work around the TypeVar error.
    
    Getting rid of annotations_util.deformalize() also exposed a bug where we
    didn't allow annotations like Sequence[object] to be instantiated, which I
    fixed by improving ParameterizedClass._is_callable().
    
    For https://github.com/google/pytype/issues/717: This fixes the
    "invalid-typevar" error reported in that issue but not the "not-callable" one.
    
    PiperOrigin-RevId: 383791092

[33mcommit 46af2999367b3368c2e53cf2c0d9aa0ce30ee361[m
Author: tsudol <tsudol@google.com>
Date:   Thu Jul 8 15:32:49 2021 -0700

    Add `name` and `value` to all PyTDClass enum members.
    
    This ensures that canonical members will behave like real members, though with slightly less type accuracy.
    
    Tested with all required changes to enum.pytd.
    
    PiperOrigin-RevId: 383728402

[33mcommit 211820f4866e59e53d84b8797126de4390be3835[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 8 15:14:34 2021 -0700

    Fix a Python 3.7 test failure.
    
    PiperOrigin-RevId: 383725158

[33mcommit f97d2b4f3fc8d3f2551b3845779d05935d249b3f[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 8 12:55:14 2021 -0700

    Allow attr.ib's 'type' argument to contain TypeVars.
    
    PiperOrigin-RevId: 383695930

[33mcommit 6fc61ca95d2ec9b2ceb489cf9329293732fef999[m
Author: tsudol <tsudol@google.com>
Date:   Wed Jul 7 16:21:24 2021 -0700

    Add support for `_generate_next_value_` in enums.
    
    This method is used by `enum.auto()` to generate the next enum value. We can assume that this will be used for relatively simple cases, so simply using the inferred return type is adequate.
    
    Tests pass with changes to enum.pytd.
    
    PiperOrigin-RevId: 383515747

[33mcommit d2c900f2404053faef4bf7d3c50b1f785123b476[m
Author: tsudol <tsudol@google.com>
Date:   Wed Jul 7 14:40:17 2021 -0700

    Fix and document a crash in pytd enums.
    
    Turns out convert doesn't handle empty pytd types too well.
    
    This was tested with the required changes to enum.pytd.
    
    PiperOrigin-RevId: 383496301

[33mcommit a8fd5741ffba558e58b078bcb47cb5154b89f90f[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jul 7 13:05:07 2021 -0700

    Fix for adding typing.Mapping as a chex.dataclass base class.
    
    If the class already has a parent of Mapping in its base list, insert Mapping
    before said parent, otherwise the MRO will be inconsistent.
    
    PiperOrigin-RevId: 383476772

[33mcommit 054e84796a778f5f2ac2402f1a4aa1f1f12fa1be[m
Merge: 6d465e1b 2c596bcf
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 7 13:09:34 2021 -0700

    Merge pull request #956 from google/google_sync
    
    Google sync

[33mcommit 2c596bcf682b284a8c4e4e39f087412a1ccf2737[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 7 12:15:13 2021 -0700

    Get rid of incorrect 'appears only once in signature' TypeVar errors.
    
    When a TypeVar in a function signature also appears in the signature of a
    nested function or in a variable annotation in the function body, pytype should
    not complain about the TypeVar appearing only once in the signature.
    
    Resolves #379, #511.
    
    PiperOrigin-RevId: 383466181

[33mcommit 939749b149cc5f44e9156b0a7d5476cd0fbe2305[m
Author: tsudol <tsudol@google.com>
Date:   Fri Jul 2 14:58:48 2021 -0700

    Add basic support for enum.auto.
    
    Full support requires calling `_generate_next_value_`, which is a bit complex and deserves its own CL.
    
    Tests were run with changes to enum.pytd.
    
    PiperOrigin-RevId: 382819444

[33mcommit 6d465e1bc7e37f66cf30a998a17749831fc89c6e[m
Merge: 2e2fcbff 3db160f3
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jul 2 13:51:39 2021 -0700

    Merge pull request #955 from google/google_sync
    
    Google sync

[33mcommit 3db160f3e6fead76ec1816b81a4010e0a5be1e92[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 2 13:20:05 2021 -0700

    Fix a bug where frame.substs was ignored in instance methods.
    
    PiperOrigin-RevId: 382801341

[33mcommit 8bc4ceafd00f07ad131b38a6a694891a737c3399[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 2 13:04:22 2021 -0700

    Fix a pyi error caused by _PropertyToConstant not recognizing imported TypeVars
    
    Resolves https://github.com/google/pytype/issues/952.
    
    PiperOrigin-RevId: 382798437

[33mcommit 2e2fcbff990d64409af5437894e2cea5013dae59[m
Merge: 688b5005 6e78db35
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 1 16:59:54 2021 -0700

    Merge pull request #953 from google/google_sync
    
    Google sync

[33mcommit 6e78db35d1a79f9a6eb3c7d47a15a8fad172e921[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 1 16:31:04 2021 -0700

    Allow passing TypeVars to typing.cast.
    
    Pulls out part of apply_annotation into a new extract_and_init_annotation
    method that typing.cast can use to handle TypeVars properly.
    
    I added a rather ugly temporary argument to extract_annotation so that cast can
    go ahead and use the correct error class ([invalid-annotation]) for reporting
    errors related to invalid TypeVars in annotations, while variable annotations
    continue to use [not-supported-yet] for now.
    
    Resolves https://github.com/google/pytype/issues/932.
    
    PiperOrigin-RevId: 382628995

[33mcommit 6f9aba857446edc46d5940461e8de33c25f1c589[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 1 16:26:25 2021 -0700

    Use assertFalse instead of assertEmpty and skip two failing 3.9 tests.
    
    assertEmpty appears to be an internal addition to unittest. I considered
    instead rewriting assertEmpty to assertFalse in copy.bara.sky, but the issue is
    that the transformation wouldn't be easily reversible - it would be wrong to
    rewrite all assertFalse calls to assertEmpty when importing a PR.
    
    PiperOrigin-RevId: 382628192

[33mcommit 51f24c922faac5190ff51ef95f124ef42f571ae3[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 1 16:17:59 2021 -0700

    Allow more cases of valid typevars in variable annotations.
    
    With this change, pytype allows TypeVars to appear in variable annotations in
    the following cases:
    
    * When the TypeVar appears in a Callable, e.g.:
      x: Callable[[T], T]
    * When the variable is in the body of a function, and the TypeVar appears in
      the function signature:
      def f(x: T, y: T):
        z: T = ...
    
    PiperOrigin-RevId: 382626727

[33mcommit e5978607306f74d116a3f7d9e0498d13a54f0889[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 1 15:37:42 2021 -0700

    Make a couple improvements to our handling of generic variable annotations.
    
    This makes it easier to fix the linked bugs.
    
    * Instead of storing allowed type parameters in VM frames, store substs
      (type parameter name -> cfg.Variable mappings). The previous type_params
      field can be reconstructed from substs, and storing substitution information
      will make it considerably easier to support using type parameters from
      function signatures in variable annotations.
    * Instead of setting generic attribute values to 'empty' when we don't yet know
      the value, instantiate them anyway and replace the instantiated value with a
      more precise one in attribute.py. This is so that we don't accidentally
      replace annotations like 'Callable[[T], T]' with 'empty'.
    
    PiperOrigin-RevId: 382619427

[33mcommit 89de9c9e9e0fd4f6c1a20fb02ecc64f273eb5cc7[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 1 15:24:50 2021 -0700

    Fix lint errors.
    
    The latest oss pylint version seems to have gained a few new checks
    (https://github.com/google/pytype/runs/2966874086?check_suite_focus=true).
    
    The biggest change is that it now complains when you change the parameter names
    in an overridden method.
    
    PiperOrigin-RevId: 382616917

[33mcommit a11e49d46d9d5527f2a643fa443949534f8962fe[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Thu Jul 1 13:58:31 2021 -0700

    Extra check to match bound class methods to `object`
    
    Bound class methods, like `MyClass().my_method`, previously angered pytype when attempting to match against an `Object`. This doesn't make sense, since anything should match to `Object`
    
    PiperOrigin-RevId: 382598970

[33mcommit c2eb9409946a3442d7e9db7f7de6af8591e46321[m
Author: tsudol <tsudol@google.com>
Date:   Thu Jul 1 12:04:09 2021 -0700

    Use `Enum.__new__` instead of `__init__` for functional API.
    
    `__init__` returns None, so some functional calls seemed to miss the `EnumMeta` metaclass. I'm not entirely sure what was going wrong here.
    
    `auto` needed to be simplified, unfortunately, but that'll be covered by the overlay soon enough.
    
    This was tested with all `test_enum` tests enabled.
    
    PiperOrigin-RevId: 382574899

[33mcommit 082854c6e7de04bfac055b8bfc45266048f2a5ec[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jun 30 12:59:29 2021 -0700

    Fix for reraising exceptions via a function call.
    
    If a SETUP_FINALLY block exits early, mark its target block as unreachable.
    
    PiperOrigin-RevId: 382367343

[33mcommit 39bf306935c12b6bddbfc376bcb8f7e93327a21f[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Mon Jun 28 16:12:19 2021 -0700

    Fixed typo that showed the wrong bucket count for tests.
    
    The list shows 4 logical buckets, but the preceding text promises 3 buckets
    
    PiperOrigin-RevId: 381966964

[33mcommit fd22ee4866a6b151db59c59ac18b327fd49d0972[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 28 14:44:07 2021 -0700

    Default --check-parameter-types to True.
    
    PiperOrigin-RevId: 381950075

[33mcommit 1ca05e3e255fb0ad7719971edf168f1f7f2ddf62[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jun 28 13:00:44 2021 -0700

    Track and construct python values for lists and dicts.
    
    * Tracks per-element types for lists and dicts.
    * Calls the converter functions for concrete abstract.List and abstract.Dict
      construction when building vm types
    * Fixes some block rewriting bugs:
      - an opcode's target could refer to a folded-away opcode
      - a folded constant at the end of a block would get lost
    
    All existing unit tests now pass with constant folding enabled, except for one
    error message changing.
    
    PiperOrigin-RevId: 381928673

[33mcommit 688b500520f25b448859e2d7ff64f32315bc0877[m
Merge: 4bbc5650 5ee9df8b
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 1 15:01:37 2021 -0700

    Merge pull request #954 from google/pylintrc
    
    Disable deprecated-module warning.

[33mcommit 5ee9df8bd4b8c4ec4503d13b37662ecf3d2026cf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 1 14:57:19 2021 -0700

    Disable deprecated-module warning.

[33mcommit 4bbc5650898433753075bda9dc6638d33d2ea340[m
Merge: ea9fc9a3 f02baa9a
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 24 16:12:08 2021 -0700

    Merge pull request #951 from google/google_sync
    
    Take advantage of submodule version information in typeshed/stdlib/VE…

[33mcommit f02baa9a5eb5a2e937466636cca0521739042d64[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 24 15:42:31 2021 -0700

    Take advantage of submodule version information in typeshed/stdlib/VERSIONS.
    
    Previously, if VERSIONS contained two entries like:
      importlib: 3.6
      importlib.resources: 3.7
    pytype would use the importlib entry for both importlib and
    importlib.resources. With this change, pytype recognizes that
    importlib.resources is not available in 3.6.
    
    I tested this change manually, since our copy of typeshed does not yet have any
    submodule versions.
    
    Fixes https://github.com/google/pytype/issues/923.
    
    PiperOrigin-RevId: 381352853

[33mcommit ea9fc9a307d4bfdea952364e1268be6401951601[m
Merge: d1f5b426 44fb53d1
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 24 13:22:18 2021 -0700

    Merge pull request #950 from google/google_sync
    
    Google sync

[33mcommit 44fb53d1ae22d8f8ca947ca8cdc0890fb50eb02b[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 24 12:53:54 2021 -0700

    Add Protocol support for modules.
    
    Also rebuckets a protocol test that I realized I added to the wrong file. And
    finally, we can declare our protocol support complete!
    
    Fixes https://github.com/google/pytype/issues/789.
    
    PiperOrigin-RevId: 381318276

[33mcommit da5893f3fcba802c69d01955b259d1e6b993fc9c[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 24 11:54:47 2021 -0700

    Allow anything to match an empty Protocol.
    
    This corner case should be very rare now that pytype takes all Protocol
    attributes into account, but strictly speaking, everything should be allowed to
    match an empty Protocol.
    
    Fixes https://github.com/google/pytype/issues/523.
    
    PiperOrigin-RevId: 381304801

[33mcommit 4ed936dcffaf2385d7f9dc78de2732c0301ed4f7[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 24 11:25:42 2021 -0700

    Update Protocol section in support.md.
    
    PiperOrigin-RevId: 381298442

[33mcommit 02fd983655318fcac84b62834fd8e5dffbc231d9[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 24 11:23:21 2021 -0700

    Fix Protocol matching for properties.
    
    pytype was allowing properties to always match other properties (regardless of
    what they returned) and to never match anything else. The latter behavior also
    meant that matching behavior changed once a property was written out as a
    constant in a pyi file.
    
    PiperOrigin-RevId: 381297952

[33mcommit 455f57b9d6b67a48cdad0f8f4a602e91604d06f7[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 23 20:32:16 2021 -0700

    Print details of Protocol mismatches in error messages.
    
    In errors that involve protocols, this adds a new line at the end of the
    message. For missing attributes:
      Attributes of protocol Foo are not implemented on Bar: x
    For wrongly typed attributes:
      Attribute x of protocol Foo has wrong type in Bar: expected int, got str
    
    PiperOrigin-RevId: 381170791

[33mcommit d1f5b4262eafcc41b7cfc9223873876485e4e12c[m
Merge: 9d770064 8c4cc414
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 23 15:49:07 2021 -0700

    Merge pull request #949 from google/google_sync
    
    Google sync

[33mcommit 8c4cc4147fd4af8417ef3fe306525943d27777f4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 23 15:18:35 2021 -0700

    Disable lint warning too-many-boolean-expressions.

[33mcommit 386c4d3dee8955c0138cd4053db5ba2c47be9ea7[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 23 14:59:18 2021 -0700

    Simplify matcher by storing the current node as an instance attribute.
    
    PiperOrigin-RevId: 381122083

[33mcommit 4e6151ada6cbfdc8faebaa89cf7c703547996482[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 23 14:39:41 2021 -0700

    Support non-method attributes in typing.Protocol.
    
    With this change, pytype detects and enforces non-method attributes in
    protocols. There's one remaining piece of work, which is to add more details to
    error messages to make it more obvious why something didn't match a protocol.
    
    Somewhat surprisingly, this change appears to cause only one new finding, so it
    doesn't need a feature flag.
    
    PiperOrigin-RevId: 381117986

[33mcommit def9860a9e38b48368783bff65dd50d71c3c8cd8[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 23 13:16:47 2021 -0700

    Get rid of unnecessary matcher._match_class_and_instance_against_type method.
    
    This simplifies the matcher code slightly, by passing around a left instance
    and calling get_class() whenever we need its class, rather than passing
    around both the instance and the class.
    
    The one tricky point is making sure we handle both super_obj and super_cls for
    special_builtins.SuperInstance.
    
    PiperOrigin-RevId: 381101047

[33mcommit 0a711824041db096654759d2afb19d0440a2e74a[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 22 21:00:02 2021 -0700

    Remove --create-pyi-dataclasses completely.
    
    PiperOrigin-RevId: 380951115

[33mcommit 621813cb1b8a766ccf0ad0170ccb68c808cbcb7a[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 22 16:45:50 2021 -0700

    Rename all 'method' references in protocol matching to 'attribute'.
    
    I'm adding matching logic for non-method attributes, and it seems easiest to
    just rename everything in one go.
    
    PiperOrigin-RevId: 380920022

[33mcommit e5394c6cd802ced64551f7c7055f4dbc6d3c0941[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 22 16:20:08 2021 -0700

    Clean up the protocol matching code to make it easier to extend.
    
    * Gets rid of ParameterizedClass.get_method, which mostly duplicated logic
      already present in attribute.py. I updated abstract_utils.get_signatures
      and is_callable to account for the ways in which get_method differed slightly
      from normal attribute fetching.
    * Reuses abstract_utils.is_callable in InterpreterClass.get_own_methods,
      instead of partially reimplementing it.
    * Reworks matcher._get_methods_dict so it can use Class.get_own_methods +
      attribute_handler.get_attribute, rather than doing its own method lookup.
    * Adds a TODO for a bug exposed by this change: protocol matching correctly
      rejects a non-method being matched against a method but erroneously accepts
      methods with mismatched signatures.
    
    PiperOrigin-RevId: 380915256

[33mcommit 2a7499381412f8727b4de84ef709c2104340593f[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jun 22 16:11:13 2021 -0700

    Add support for the enum functional API.
    
    This is basically an indirect overlay for enum.Enum.__new__, though we call it __init__.
    
    Note this is only basic support: we don't do full verification of the input, and we don't yet handle the `type` parameter.
    
    PiperOrigin-RevId: 380913609

[33mcommit e7130ca2de014e534f5fa5aa0f5071583c8adb27[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 22 11:29:00 2021 -0700

    Do not try doing dead block elimination within try/except blocks.
    
    In the block ordering code we were setting the outgoing edge of a try block
    based purely on whether its last opcode connected to the next block, which
    ignored the fact that SETUP_EXCEPT had a target pointing to the except block.
    
    PiperOrigin-RevId: 380853665

[33mcommit bbcc1174605e3eab3e9aa4d5c133868daaef0038[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 21 15:58:12 2021 -0700

    Move output.{TOP,CLASS}_LEVEL_IGNORE into abstract_utils.
    
    This allows CLASS_LEVEL_IGNORE to be used in a couple places that were
    previously (incompletely) redefining it. (_ignored_locals in enum_overlay
    doesn't seem to be used anywhere yet.)
    
    PiperOrigin-RevId: 380683438

[33mcommit ffd38ef6d2435a076aea58719c605701183a43d8[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 21 11:02:00 2021 -0700

    Default --create-pyi-dataclasses to True.
    
    PiperOrigin-RevId: 380618264

[33mcommit 19a04b721b499728349710d487c41496975cdd70[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 21 09:53:54 2021 -0700

    bytearray.__contains__ should accept bytes.
    
    PiperOrigin-RevId: 380601121

[33mcommit d1c562859946e8682b2c81e7648c2f93945b9916[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 21 08:15:01 2021 -0700

    Remove now-obsolete key-error disables.
    
    PiperOrigin-RevId: 380581037

[33mcommit 8559b0c7a95e9f7476ecef4dbe6f76864a4653e4[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jun 18 17:46:43 2021 -0700

    Keep the original bytecode around in an ordered code object.
    
    Temporary workaround for a bug in the block collection algorithm.
    
    PiperOrigin-RevId: 380296348

[33mcommit 9cde48ae56d6ebfdfb81416f7cbf4898339fcdb3[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 18 17:39:40 2021 -0700

    Fix a pytype crash in Python 3.7.
    
    This fixes:
    
    Traceback:
      [...]
      File "[...]/pytype/overlays/dataclass_overlay.py", line 108, in decorate
        if "__init__" not in cls.members and self.args[cls]["init"]:
    TypeError: 'NoneType' object is not subscriptable
    PiperOrigin-RevId: 380295659

[33mcommit 9d77006492d4af5753e88b73870207702f07f524[m
Merge: a99dcc0e 8e414ef3
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 23 15:07:45 2021 -0700

    Merge pull request #948 from google/google_sync
    
    Google sync

[33mcommit 8e414ef392d3bcc74669b704cb930a521a1b153b[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 18 16:42:46 2021 -0700

    Take _HAS_DYNAMIC_ATTRIBUTES into account in protocol matching.
    
    Fixes https://github.com/google/pytype/issues/754.
    
    PiperOrigin-RevId: 380288225

[33mcommit e1edb22fc8f3ce85e88c3645ff02adbf77013f6f[m
Author: tsudol <tsudol@google.com>
Date:   Fri Jun 18 16:21:54 2021 -0700

    Make `EnumMeta.__contains__` more strict.
    
    PiperOrigin-RevId: 380285045

[33mcommit 94bafc70435fa0d55004b29dc01693e2cb3c1254[m
Author: tsudol <tsudol@google.com>
Date:   Fri Jun 18 16:05:20 2021 -0700

    Fix `__contains__` handling when errors occur.
    
    For `x in y`, Python will check `y.__contains__`, but if that doesn't exist, it falls back to `y.__iter__` and `y.__getitem__`. Pytype was instead falling back whenever `__contains__` raised an error.
    
    Also renames `cmp_in()`'s args to be easier to follow.
    
    PiperOrigin-RevId: 380282457

[33mcommit 8818a139c2fbe30dc5cdbebe90d5775e5aa19d42[m
Author: tsudol <tsudol@google.com>
Date:   Fri Jun 18 14:12:33 2021 -0700

    Add tests for enum.EnumMeta features.
    
    Note that `__contains__` does not work entirely correctly due to [].
    
    PiperOrigin-RevId: 380261796

[33mcommit 633d77d7bb8002ff0169e56ef3922b93f1d2ca37[m
Author: tsudol <tsudol@google.com>
Date:   Fri Jun 18 13:10:43 2021 -0700

    Add support for equality checks for enums.
    
    We can't support "is" checks, but we don't fail on them, either. This is because "is" isn't defined like "==" is (i.e. no `__eq__` method to analyze).
    
    Tests pass with changes to enum.pytd. Includes a fix to a test that passes now that we track enum member types.
    
    PiperOrigin-RevId: 380249842

[33mcommit 8e5adff2b9dc61f15e88bc73bb234d67fa2f5bb5[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jun 17 15:34:43 2021 -0700

    Replace OrderedCode.co_code with OrderedCode.code_iter.
    
    Once we have reordered code.co_code into blocks, we should keep those blocks as
    the single source of opcodes, and iterate over them in block order to
    reconstruct the flat list in co_code if needed.
    
    PiperOrigin-RevId: 380060277

[33mcommit a99dcc0ef668c5a6d0d22963b885e2420c28bc9b[m[33m ([m[1;33mtag: 2021.06.17[m[33m)[m
Merge: 4d6fe04f 9dc584d5
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 17 14:07:08 2021 -0700

    Merge pull request #947 from google/google_sync
    
    Google sync

[33mcommit 9dc584d52e6fbbe2a05a4dff4f94d7a4ff4e1033[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 17 13:33:26 2021 -0700

    Prepare a PyPI release.
    
    I didn't include enums or constant folding in the CHANGELOG entry, since as I
    understand it, neither feature is ready for use yet.
    
    PiperOrigin-RevId: 380033505

[33mcommit 6b325b7b17b073641280a38811f54a781c324750[m
Author: tsudol <tsudol@google.com>
Date:   Wed Jun 16 16:47:44 2021 -0700

    Add support for looking up enum members by value.
    
    More complex support that checks for exact matches is possible, but it's really quite complex and will only work well if the enum member values are basic types like int and str. We can explore adding this full support later, if desired.
    
    Tests pass with enum.pytd changes.
    
    PiperOrigin-RevId: 379839862

[33mcommit 664ed392c63df892f37cb6a07e22de302b602073[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 16 13:40:20 2021 -0700

    Remove key_error.
    
    It doesn't catch many useful errors and generates many false positives.
    
    PiperOrigin-RevId: 379801114

[33mcommit cba138300cde4290b01f16600ed88071bd46569d[m
Author: Sebastian Rittau <srittau@rittau.biz>
Date:   Wed Jun 16 13:15:41 2021 -0700

    Work with new typeshed structure (#944)
    
    It's now possible that third-party packages have a `@python2` directory and no stubs at top-level. This means they are Python 2-only, even if the corresponding `METADATA.toml` keys are not set.
    
    Resolves #944
    
    PiperOrigin-RevId: 379795409

[33mcommit 4d6fe04f20b390fbd675ec654ca6ac3b63379ebf[m
Merge: e5d059e4 a90144f9
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 15 21:02:28 2021 -0700

    Merge pull request #946 from google/google_sync
    
    Google sync

[33mcommit a90144f936ab970edee37183a0e9c661fda618fe[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 15 20:02:50 2021 -0700

    Support the 'Protocol[T, ...]' shorthand for generic protocols.
    
    In a class's parents, PEP 544 allows writing:
    
    class Foo(Protocol[T]): ...
    
    to mean:
    
    class Foo(Protocol, Generic[T]): ...
    
    Resolves #792.
    
    PiperOrigin-RevId: 379630156

[33mcommit af5b395926a5a70b259ccadc5850fb1a7a4fb447[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 15 17:35:57 2021 -0700

    Preserve the python values of folded constants.
    
    The value is written into the LOAD_FOLDED_CONSTANT opcode, but not yet used by
    the vm when constructing the abstract type.
    
    PiperOrigin-RevId: 379613108

[33mcommit 7e21b623bceae696110db2701a4011ddf174ac0f[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jun 15 15:41:17 2021 -0700

    Add support for enum __getitem__.
    
    The tests pass with changes to enum.pytd.
    
    PiperOrigin-RevId: 379590020

[33mcommit e5d059e426ac404a6c7343958c553550942dad6f[m
Merge: a33fff17 34c7af17
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 15 14:10:19 2021 -0700

    Merge pull request #945 from google/google_sync
    
    Google sync

[33mcommit 34c7af17f6df3cc5da741016ac9558778e136a89[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 15 11:40:13 2021 -0700

    Rebucket a test that uses type annotations.
    
    PiperOrigin-RevId: 379537765

[33mcommit cf9dcd380298f791be860cd29ae518a72a1b1449[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 14 20:30:03 2021 -0700

    Fix constant_folding_test failure in 3.8.
    
    We're now 3/3 on test failures in versions that pytype supports but which
    aren't tested by default internally, which is...something?
    
    PiperOrigin-RevId: 379404879

[33mcommit 30ca00f85af97a7cc408fbdb7cef12fcac56bc0e[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jun 14 19:18:52 2021 -0700

    Disable some constant folding tests in 3.9
    
    The python compiler changed to optimise creation of constant lists.
    
    PiperOrigin-RevId: 379397880

[33mcommit 73c7d41db2e0f6ed1ca90a57a83089160f4c8623[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 14 19:00:21 2021 -0700

    Fix two bugs triggered when accessing a @property on a class.
    
    We were calling the property's __get__ method, which (1) set 'self' to the
    wrong type, and (2) returned the result of calling the property, rather than
    the property object itself.
    
    PiperOrigin-RevId: 379395561

[33mcommit ed8b2338451a8c56d757853695460710feccd8b4[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jun 14 17:27:59 2021 -0700

    Add support for multiple and chained assignments in pyi files.
    
    Fixes https://github.com/google/pytype/issues/321
    
    PiperOrigin-RevId: 379382674

[33mcommit f8bb6ce0f848374ca9629912d309bd3576561691[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 14 15:52:36 2021 -0700

    Fixes bugs related to empty starstarargs dicts.
    
    Pytype didn't properly treat empty starstarargs dicts as actually empty. Doing
    so lets it more accurately typecheck function calls, and also stops attr.ib
    calls from swallowing the other default args. (Along with simplify, of course.)
    
    PiperOrigin-RevId: 379365436

[33mcommit b7e9eee1087a1c6c12261264356a3cc5b8fc1e9b[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 14 13:03:40 2021 -0700

    Rollback changes to enum type stub.
    
    PiperOrigin-RevId: 379336558

[33mcommit b6c3d768d4a2ce681db70aab7e89432876837b68[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jun 10 20:18:29 2021 -0700

    FIX: In python 3.7+ nested tuples are loaded as a single constant.
    
    PiperOrigin-RevId: 378791674

[33mcommit 4f2a3794cff8758db3cd37ed6078f96390e90b55[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 10 18:01:22 2021 -0700

    Add internal bug links to support.md.
    
    PiperOrigin-RevId: 378776086

[33mcommit def6af297104ff96f1ea0860ccf5a2a201c53958[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jun 10 15:50:10 2021 -0700

    Add a constant folding optimisation before running the bytecode.
    
    This optimisation collapses the bytecode to construct a literal constant into a
    single LOAD_FOLDED_CONST opcode, with the type of the literal attached to it.
    There is corresponding code in the vm to convert the literal into a vm type and
    put it on the stack.
    
    This is a work in progress; the major missing feature is preserving the actual
    python value of the constant.
    
    PiperOrigin-RevId: 378752757

[33mcommit 0ab638e8f4e02cb126d39391cab0b966c1404243[m
Author: tsudol <tsudol@google.com>
Date:   Thu Jun 10 11:54:53 2021 -0700

    Add basic support for enums.
    
    Since this may break targets that use enums, it's locked behind the --use-enum-overlay feature flag.
    
    PiperOrigin-RevId: 378702063

[33mcommit a33fff17ffe435c9bd0730fed6a715fcace3640c[m
Merge: df9f5724 5ff04747
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 9 15:11:40 2021 -0700

    Merge pull request #943 from google/google_sync
    
    Removed sorted() call since we're on py3

[33mcommit 5ff04747886b3f713c4e447fb173fb1ddb1e72e0[m
Author: rpalaguachi <rpalaguachi@google.com>
Date:   Wed Jun 9 14:32:08 2021 -0700

    Removed sorted() call since we're on py3
    
    PiperOrigin-RevId: 378500623

[33mcommit df9f5724056b160d90c321e512218cbb563c9484[m
Merge: 6f73a671 74093757
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 9 12:25:30 2021 -0700

    Merge pull request #942 from google/google_sync
    
    Google sync

[33mcommit 7409375752f361c5cff587c40b0aba8b67f89bb8[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 8 20:04:44 2021 -0700

    Make sure a precise type stub is inferred for pytype_extensions.
    
    I noticed while playing around with assert_type that
    pytype_extensions.assert_type didn't work with open source pytype. This change
    fixes that.
    
    PiperOrigin-RevId: 378306254

[33mcommit f51bf7285753ef6c88ded02a0cf58389713ce860[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 8 15:43:58 2021 -0700

    Document both forms of assert_type() matching.
    
    PiperOrigin-RevId: 378263593

[33mcommit 6f73a67179922fde21ee101d0208a3bbf707cbc5[m
Merge: b209a96e 425f118f
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 8 16:57:42 2021 -0700

    Merge pull request #941 from google/extensions
    
    Add linting, testing, type-checking for pytype_extensions.

[33mcommit 425f118ffd0a7711c6717acb7092412a41c11427[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 8 16:22:52 2021 -0700

    Add linting, testing, type-checking for pytype_extensions.

[33mcommit b209a96e2b85a342a06c882df330025d9e378686[m
Merge: 0841af95 070c36d5
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 8 16:09:55 2021 -0700

    Merge pull request #940 from google/google_sync
    
    Google sync

[33mcommit 070c36d5d8525cd0b64c9e471fda6683bcb14d80[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 8 15:07:16 2021 -0700

    Modify test_pytype_extensions for running in our open source test suite.
    
    * Check for the presence of `from __future__ import google_type_annotations`
      before stripping it.
    * Make the test code py3-only to satisfy the open source linter. While we can't
      make pytype_extensions/__init__.py py3-only yet, the test is already using
      `python_version = "PY3"`.
    * Have the test class subclass TargetPython3BasicTest, since the tests use type
      annotations.
    
    PiperOrigin-RevId: 378255488

[33mcommit bb957cefebf8ae9b7edfd64f302eda8b6867ebd0[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 8 14:29:36 2021 -0700

    Move assert_type to pytype_extensions.
    
    At type checking time, assert_type can be called either as a builtin or as
    pytype_extensions.assert_type (this supports the use of a temporary assert_type
    while debugging, without having to pull in pytype_extensions). This required
    the following changes:
    
    * Make special_builtins.AssertType a BuiltinFunction ("builtins.assert_type")
    * Add assert_type to the builtins stubs
    * Add a pytype extensions overlay
    * Add the ability for special builtins to be aliased from other modules
    
    PiperOrigin-RevId: 378246069

[33mcommit 5da88fd3c7236e4c1c58dda432c3c8b5ad564ce7[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 8 14:42:33 2021 -0700

    Fix a bug that caused 'self' to be typed as 'Any' in @property bodies.
    
    Resolves https://github.com/google/pytype/issues/516.
    
    PiperOrigin-RevId: 378249380

[33mcommit 75b44867dbc04d00b7ca7710654d5e41d83e141c[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 8 14:29:36 2021 -0700

    Move assert_type to pytype_extensions.
    
    At type checking time, assert_type can be called either as a builtin or as
    pytype_extensions.assert_type (this supports the use of a temporary assert_type
    while debugging, without having to pull in pytype_extensions). This required
    the following changes:
    
    * Make special_builtins.AssertType a BuiltinFunction ("builtins.assert_type")
    * Add assert_type to the builtins stubs
    * Add a pytype extensions overlay
    * Add the ability for special builtins to be aliased from other modules
    
    PiperOrigin-RevId: 378246069

[33mcommit 36ea0a3a69f3513f131feb0bafad2885a1c4699e[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 7 11:49:49 2021 -0700

    Allow subclasses of InterpreterClass in make_class.
    
    This is intended to be used by overlays that need to define their own InterpreterClass behaviors.
    
    PiperOrigin-RevId: 377969349

[33mcommit 5916b3a40ff654e3635e6fa8060325947968534f[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jun 4 14:41:55 2021 -0700

    If a non-string type is passed to assert_type, instantiate it before matching.
    
    PiperOrigin-RevId: 377593278

[33mcommit 0841af95d67c9b066f922a54822385be7b85a855[m
Merge: 7901c8bb f59a1c9d
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 8 14:47:01 2021 -0700

    Merge pull request #939 from google/extensions
    
    Make `pip install` also install pytype_extensions.

[33mcommit f59a1c9d5d5b193a02c63356f9b3b4f6fb8e85f2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 8 14:23:27 2021 -0700

    Make `pip install` also install pytype_extensions.

[33mcommit 7901c8bb79628ad858d1be0f399bd7250846fe42[m
Merge: 67a3c050 b7262f08
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 4 14:53:09 2021 -0700

    Merge pull request #937 from google/google_sync
    
    pytype_extensions: remove 'from __future__ import google_type_annotat…

[33mcommit b7262f082e8b647c59f41fef0fa5078df2d46db8[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 4 13:49:56 2021 -0700

    pytype_extensions: remove 'from __future__ import google_type_annotations'.
    
    Seems like there are still a few stragglers using pytype_extensions in py2, so
    we can't delete these lines altogether. Instead, I've modified the copybara
    config to remove them during export.
    
    PiperOrigin-RevId: 377582188

[33mcommit 67a3c050cdbf6c1caeb6f83c82bef67d56327678[m
Merge: 849d64df ccc48647
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 4 14:31:34 2021 -0700

    Merge pull request #936 from google/google_sync
    
    Google sync

[33mcommit ccc486472e86bc36b0138c00992477473f6a9b27[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 4 14:06:23 2021 -0700

    Rename google_overlay_dict for CMakeLists.txt.
    
    PiperOrigin-RevId: 377584748

[33mcommit 51a504e0d556cd7bdd5d1ee1bec0afc98b4a4be0[m
Author: Sematre <Sematre@gmx.de>
Date:   Fri Jun 4 13:46:48 2021 -0700

    Fix dead link to importlab in README (#935)
    
    [Importlab](https://github.com/google/importlab) seems to have moved from Travis CI to GitHub Actions ([Source](https://github.com/google/importlab/commit/8d406f18dc76d5c40e045aeb1231880abffe3c39)) but the link in the ``README`` is still pointing to the wrong address.
    
    Resolves #935
    
    PiperOrigin-RevId: 377581530

[33mcommit 0fd27627f082b72856a0f2b4c175bba3db73839b[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 4 11:49:23 2021 -0700

    Make inheriting from a subclass of flax.linen.Module work properly.
    
    I tried out the ideas we discussed in our last meeting (having init_subclass
    loop over the entire mro, looking up all overlay objects rather than just
    already-loaded ones), and somewhat to my surprise, this works! The one annoying
    thing is that we have to filter out the 'name' and 'parent' attributes
    auto-added by Module. I couldn't think of a better way to do this, so I added a
    rather ugly IMPLICIT_FIELDS check in abstract.py.
    
    PiperOrigin-RevId: 377557208

[33mcommit 51a55214bd82157e2ed4570c0973ec0809a9d11a[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 3 22:38:31 2021 -0700

    load_pytd: tweak when log_module_not_found is called.
    
    log_module_not_found logs a warning when a module is not found, which causes
    test failures when I try to import the latest version of typeshed because
    single_test expects stderr to be clean.
    
    I don't want to remove log_module_not_found altogether because I've sometimes
    found its output useful in the past, but it shouldn't log anything in cases in
    which not finding a module is fine and expected.
    
    PiperOrigin-RevId: 377444785

[33mcommit 849d64dfe3ea52e3a8f97e99536d43aaa8b10f2f[m
Merge: 0c280988 007ea5fa
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 3 12:21:16 2021 -0700

    Merge pull request #934 from google/google_sync
    
    Google sync

[33mcommit 007ea5fa76e32a95d66d88669d434c09d9a09d4f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 3 11:46:28 2021 -0700

    Rebucket a test that uses type annotations.
    
    Fixes test failure in https://github.com/google/pytype/runs/2739710376?check_suite_focus=true
    
    PiperOrigin-RevId: 377337700

[33mcommit bb795c4616af1f12b693ed9273aeafa63e95a1b3[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 3 11:08:03 2021 -0700

    Address (unnecessary-pass) lint warning.
    
    From https://github.com/google/pytype/runs/2739568438?check_suite_focus=true
    
    PiperOrigin-RevId: 377329362

[33mcommit 693a13d7fb66c1abaff042b713934e40bd92c9e4[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 1 14:19:06 2021 -0700

    Add an assert_type statement to assert pytype's view of an expression type.
    
    There are two forms of assertion:
    
      assert_type(x, 'type')  # test that the type of `x` is 'type'
      assert_type(x)  # test that `x` has not been inferred as `Any`
    
    Assertions match against the string representation of x's type (roughly, what
    pytype would write into a .pyi file)
    
    PiperOrigin-RevId: 376917137

[33mcommit cd45bc455e72b2212ac3f3168c7a0741c26e39ce[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 1 14:15:58 2021 -0700

    Make dict.copy() work with subclasses.
    
    PiperOrigin-RevId: 376916497

[33mcommit cfd14c4ea24a1a60dd42f86e514666f603134bdf[m
Author: rechen <rechen@google.com>
Date:   Tue May 25 14:41:55 2021 -0700

    Fix a descriptor __get__ bug.
    
    PiperOrigin-RevId: 375799084

[33mcommit 0c2809888ac18367377c84b9bdf5133a59d18514[m
Merge: 5a00cf4f ff2d3427
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 3 10:40:13 2021 -0700

    Merge pull request #933 from google/google_sync
    
    Add an initial copybara config for pytype_extensions.

[33mcommit ff2d34278d5725e50179b462fb2f6ac97918f968[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 3 10:04:22 2021 -0700

    Add an initial copybara config for pytype_extensions.
    
    This exports pytype_extensions as a new directory in the pytype GitHub repo.
    
    The config is branched from pytype/copy.bara.sky.
    
    PiperOrigin-RevId: 377313194

[33mcommit 5a00cf4f5e05b0411ea3feb6ebd2dbcba72c09cd[m[33m ([m[1;33mtag: 2021.05.25[m[33m)[m
Merge: c3ee9dc1 6fb016d2
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 25 12:10:25 2021 -0700

    Merge pull request #929 from google/google_sync
    
    Prepare a PyPI release.

[33mcommit 6fb016d249802942a09e5e0194a012dd495e54d7[m
Author: rechen <rechen@google.com>
Date:   Tue May 25 11:21:54 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 375751835

[33mcommit c3ee9dc1da346f697333e4551622da46bebf3635[m
Merge: b6f84329 1345c36e
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 25 11:01:00 2021 -0700

    Merge pull request #928 from google/google_sync
    
    Google sync

[33mcommit 1345c36e9a8416dd652b799de5e0a072fdd9c110[m
Author: rechen <rechen@google.com>
Date:   Mon May 24 16:29:20 2021 -0700

    Add an explanatory comment to annotations_util.py.
    
    PiperOrigin-RevId: 375582785

[33mcommit 6ba494cdd40753c9eea8f593a3d9765ee59216b2[m
Author: rechen <rechen@google.com>
Date:   Mon May 24 15:26:23 2021 -0700

    Add support for generic dataclasses and attrs.
    
    With this, pytype supports:
    * Generic dataclasses, e.g.:
        @dataclasses.dataclass
        class Foo(Generic[T]):
          x: T
    * Generic attrs *that use type comments or PEP 526-style annotations*, e.g.:
        @attr.s
        class Foo(Generic[T]):
          x: T = attr.ib()
      or
        @attr.s
        class Foo(Generic[T]):
          x = attr.ib()  # type: T
      That means the following does *not* work:
        # not supported yet!
        @attr.s
        class Foo(Generic[T]):
          x = attr.ib(type=T)
    
    This does *not* add support for generic NamedTuples:
      # not supported yet!
      class Foo(NamedTuple, Generic[T]):
        x: T
    
    PiperOrigin-RevId: 375570822

[33mcommit 3de3ff71f91b551c6ec61c8754cd4cb3bc22ed3d[m
Author: rechen <rechen@google.com>
Date:   Mon May 24 14:29:24 2021 -0700

    Add support for referencing class-scoped TypeVars in variable annotations.
    
    This adds support for code like:
      class Foo(Generic[T]):
        x: T
    
    PiperOrigin-RevId: 375558168

[33mcommit 58135f2bddb5fd007714f32b05174e4aab3a9360[m
Author: rechen <rechen@google.com>
Date:   Mon May 24 13:22:45 2021 -0700

    Add some type annotations to abstract_utils.Local.
    
    I realized while working on a different change that it's somewhat difficult to
    figure out what arguments Local.__init__ takes, so I added some annotations.
    
    PiperOrigin-RevId: 375543658

[33mcommit 0c8529ba6bb4cc590ebd37bc2ddafa1fe7a4b864[m
Author: rechen <rechen@google.com>
Date:   Sun May 23 22:31:00 2021 -0700

    Export change to user guide.
    
    PiperOrigin-RevId: 375415121

[33mcommit b6f843294948f4031adb4fd5fb2f66db7d5a7e2e[m
Merge: c515174e 15ca0e6c
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 20 15:08:01 2021 -0700

    Merge pull request #927 from google/google_sync
    
    Google sync

[33mcommit 15ca0e6ced34a9befc437550c61a8f30cd1eedd2[m
Author: rechen <rechen@google.com>
Date:   Thu May 20 14:16:38 2021 -0700

    Internal change
    
    PiperOrigin-RevId: 374948330

[33mcommit dbed64f2c01d2af153afa2f80e2636bf289ebe79[m
Author: rechen <rechen@google.com>
Date:   Thu May 20 13:04:10 2021 -0700

    Generate mutations from __init__ parameter annotations in stubs.
    
    This fixes a longstanding bug where type parameters were filled in with
    `nothing` rather than values passed in via __init__.
    
    PiperOrigin-RevId: 374934200

[33mcommit 103e55b9ea68e4e562ed546680d392dfea33750a[m
Author: rechen <rechen@google.com>
Date:   Thu May 20 12:37:11 2021 -0700

    Fix a performance regression in pytype/pytd/typeshed.py.
    
    Fixes a performance regression caused by
    https://github.com/google/pytype/pull/906 calling self._file_exists()
    repeatedly, which is quite slow in .par files. This wasn't caught before
    release because (1) the issue only appears when pytype is run from a .par file,
    and (2) we usually load typeshed once, pickle it, and never load it again, so
    the increase in the time needed to do the pickling was barely noticeable.
    However, when pytype.par is run on its own, it takes more than 3x longer to
    analyze a simple file due to this issue.
    
    Fixes the test timeout in the attached bug.
    
    PiperOrigin-RevId: 374928257

[33mcommit e0fd90e2a00f5a0beb54115dd1494a84632001dc[m
Author: rechen <rechen@google.com>
Date:   Wed May 19 15:26:56 2021 -0700

    Add an assertFlags method to pytype_runner_test.
    
    This makes it easier to default temporary flags to True before removing them,
    by providing an easy way to filter them out of pytype_runner_test.
    
    PiperOrigin-RevId: 374742264

[33mcommit c515174e999af3187c105ae388bf362fb784915a[m[33m ([m[1;33mtag: 2021.05.19[m[33m)[m
Merge: 378d019e b493d303
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 19 15:30:30 2021 -0700

    Merge pull request #926 from google/google_sync
    
    Google sync

[33mcommit b493d30377e5b62a5f87c7f4f86c3bfbf40fbaae[m
Author: rechen <rechen@google.com>
Date:   Wed May 19 14:47:23 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 374734140

[33mcommit f9c0b5f7bf9f928d210cd70c4e150bfee6c8b14a[m
Author: rechen <rechen@google.com>
Date:   Tue May 18 16:20:37 2021 -0700

    Fix circular import issues in the pytd loader.
    
    Fixes issues that came up in a typeshed PR that touched the os module (which is
    involved in a bunch of import cycles). The PR was later modified to avoid
    triggering the pytype bug, but fixing it is still valuable.
    
    See https://github.com/python/typeshed/pull/5382
    
    PiperOrigin-RevId: 374528422

[33mcommit c6d671fc00d80023c80404c660810d897b689d8c[m
Author: rechen <rechen@google.com>
Date:   Mon May 17 14:59:02 2021 -0700

    Get rid of special_builtins.Filter.
    
    I noticed that this special builtin is no longer needed now that pytype
    supports filtering out None in type annotations via the Optional[_T] -> _T
    trick. This lets filter() support more iterable types than the ones enumerated
    in special_builtins.
    
    This change exposed a weird bug where a ClassType(None) reference generated by
    pytd/codegen crashes convert.py if a previous ClassType(None) that has its cls
    pointer filled in is not in _convert_cache. Fixed by manually looking up cls.
    
    PiperOrigin-RevId: 374287388

[33mcommit 378d019e1c6bd89e29465d01a618624f39e8e3e6[m
Merge: 7c16e7e3 505e14b2
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 17 14:28:27 2021 -0700

    Merge pull request #925 from google/google_sync
    
    Add support for PEP 604 (Union |) in stub files (#924)

[33mcommit 505e14b2364b463374d4a535609054000b8d1750[m
Author: Jelle Zijlstra <jelle.zijlstra@gmail.com>
Date:   Mon May 17 13:35:42 2021 -0700

    Add support for PEP 604 (Union |) in stub files (#924)
    
    Part of #785, though not a complete fix because this doesn't allow the `|` syntax at runtime (I think).
    
    Resolves #924
    
    PiperOrigin-RevId: 374269437

[33mcommit 7c16e7e389032c81bef22e79f28728b5c0b6cb64[m
Merge: aa31696c e74ff5a5
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 14 18:43:29 2021 -0700

    Merge pull request #922 from google/google_sync
    
    Do some cleanup/refactoring to prepare for a generics bug fix.

[33mcommit e74ff5a5847a68c9a418345f250d478534e22c15[m
Author: rechen <rechen@google.com>
Date:   Fri May 14 17:04:45 2021 -0700

    Do some cleanup/refactoring to prepare for a generics bug fix.
    
    I'm trying to add support to pytype for annotating a class's attributes with
    TypeVars that the class is generic in, which should also partially fix the
    generic containers bug. As usual, the change got much too large, so this is the
    part of it that shouldn't have any user-visible effect.
    
    * Pulls out various pieces of code in abstract.py into their own methods, so
      they can be later extended and/or reused.
    * Moves InterpreterFunction._mutations_generator into the SignedFunction base
      class, so it can also be used in SimpleFunction. (Amazingly,
      _mutations_generator works with no changes on SimpleFunctions!)
    * Replaces the is_var argument to extract_annotation() with
      allowed_type_params, which tells pytype what type parameters are in scope and
      are allowed to be used in annotations. allowed_type_params come from two
      sources: apply_annotation() (which currently just passes in ()) and a new
      type_params field in VM frames (which is also currently always empty).
    * Gets rid of an unused @property in abstract_utils.
    * Replaces classgen.instantiate() with classgen.add_member(), which takes and
      manipulates the class rather than returning a member that the calling code
      adds to the class. This is so I can add special logic for type parameters.
    
    PiperOrigin-RevId: 373893819

[33mcommit aa31696c0d2689f4351f94465f5960666fa0c903[m
Merge: f603f937 1318ea25
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 14 15:56:51 2021 -0700

    Merge pull request #921 from google/google_sync
    
    Google sync

[33mcommit 1318ea257d126d9f330ab3429b14edd62b6ec207[m
Author: tsudol <tsudol@google.com>
Date:   Fri May 14 11:20:24 2021 -0700

    Add support for calling metaclasses from overlays.
    
    This is needed for #pytype_enums. It may not be entirely necessary to pass in the name, because that should be on the class object that's passed in as the first argument. The full list of bases is absolutely needed, because e.g. enums process the list of bases and use it when constructing the enum. It's still not clear if the last argument is needed.
    
    PiperOrigin-RevId: 373828024

[33mcommit a8e33fb5fd06ca4d4691d903b8c75afe83ce0af9[m[33m ([m[1;33mtag: 2021.05.14[m[33m)[m
Author: rechen <rechen@google.com>
Date:   Fri May 14 13:56:13 2021 -0700

    Prepare a PyPI release.
    
    Doing a release to get out the TypeGuard and __path__ changes.
    
    PiperOrigin-RevId: 373860248

[33mcommit f603f93781cd683695e7ab9dabb9d7cdaea69185[m
Merge: 9383df5f 7c9ad9ae
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 13 19:59:17 2021 -0700

    Merge pull request #920 from google/google_sync
    
    Google sync

[33mcommit 7c9ad9ae00aa504d3c08d95f720c6092fd5eb2aa[m
Author: mdemello <mdemello@google.com>
Date:   Thu May 13 18:37:16 2021 -0700

    Add a replace() method to flax dataclasses.
    
    PiperOrigin-RevId: 373700643

[33mcommit d2b61edfc24d245a2d241118bc50fee6b34ac301[m
Author: rechen <rechen@google.com>
Date:   Thu May 13 17:45:48 2021 -0700

    Change the type of __path__ from Iterable to List.
    
    This is technically wrong; __path__ is a "custom iterable" for namespace
    packages (https://docs.python.org/3/reference/import.html#namespace-packages).
    But typeshed changed pkgutil.extend_path() to claim it only accepts a list
    (https://github.com/python/typeshed/commit/3d8bffae80db67d04a101b5a648458d959ba1fda),
    so we need this change to avoid pytype erroring on basic path manipulation.
    
    Fixes https://github.com/google/pytype/issues/918
    
    PiperOrigin-RevId: 373694139

[33mcommit 9383df5f0e4c65d268a1ec2feac942774bc9c0b2[m
Merge: 82fb52e8 b684d034
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 13 16:47:57 2021 -0700

    Merge pull request #919 from google/google_sync
    
    Google sync

[33mcommit b684d0342334cb3110621ad37cbfea9a0e137fbb[m
Author: rechen <rechen@google.com>
Date:   Thu May 13 16:16:59 2021 -0700

    Allow typing.TypeGuard to be used in type stubs.
    
    For https://github.com/google/pytype/issues/916.
    
    PiperOrigin-RevId: 373679585

[33mcommit cea2616c4bf8f6041ed26df244ab11ed9f377736[m
Author: rechen <rechen@google.com>
Date:   Thu May 13 15:17:24 2021 -0700

    Add a GitHub issue link for Type Guards.
    
    PiperOrigin-RevId: 373668728

[33mcommit ac837b1c31e44be9c69428f424854b2880912939[m
Author: mdemello <mdemello@google.com>
Date:   Thu May 13 12:41:07 2021 -0700

    Fix the order of inherited attributes for dataclasses.
    
    Dataclasses and attrs follow different schemes when collecting mro attributes, and we had taken the attrs behaviour as the default.
    
    PiperOrigin-RevId: 373636215

[33mcommit 834428630b0db9fb0a29ce79de31fcc57464b2f7[m
Author: rechen <rechen@google.com>
Date:   Wed May 12 13:04:08 2021 -0700

    Remove now-unnecessary pytype disable in test_base.py.
    
    =D
    
    PiperOrigin-RevId: 373433996

[33mcommit 82fb52e8487402ffa4fb7cc970b21f53ab84758a[m[33m ([m[1;33mtag: 2021.05.11[m[33m)[m
Merge: 540b461b e609fd1b
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 11 13:42:53 2021 -0700

    Merge pull request #917 from google/google_sync
    
    Google sync

[33mcommit e609fd1b0484197cb70256fdeef480281b277dd0[m
Author: rechen <rechen@google.com>
Date:   Tue May 11 13:16:14 2021 -0700

    Rebucket a pytype test that uses type annotations.
    
    PiperOrigin-RevId: 373218681

[33mcommit 1e8adfc2585c800db9e5b451df99a4f4c97ed330[m
Author: rechen <rechen@google.com>
Date:   Tue May 11 12:56:17 2021 -0700

    Prepare a PyPI release.
    
    I also updated the CHANGELOG entry for the previous release to include a
    typeshed update I forgot about.
    
    PiperOrigin-RevId: 373214411

[33mcommit e4dceda4273ae7cc690ed6f0e8db79c3e881d3d2[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Tue May 11 06:22:47 2021 -0700

    Internal change
    
    PiperOrigin-RevId: 373136481

[33mcommit 540b461b987896aee8fa53b1190db5fb8073ce5a[m
Merge: 9bc3db8f 3cde1c4e
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 10 16:31:31 2021 -0700

    Merge pull request #915 from google/google_sync
    
    Google sync

[33mcommit 3cde1c4e8c86d780dde83784bdfcfc6be42b29cf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 10 16:03:31 2021 -0700

    Fix pytype error in output.py.
    
    I introduced this type error in a previous change, and it wasn't caught until I
    attempted a GitHub export thanks to pytd/ not being fully analyzed internally.
    
    Note that this issue can't be resolved by adding @overloads for
    value_to_pytd_def because pytype skips abstract.py, so it'll incorrectly match
    any overload that references an abstract.py type.
    
    PiperOrigin-RevId: 373031044

[33mcommit a2c025b96b6c51e32624c3d61a3957df44152f85[m
Author: rechen <rechen@google.com>
Date:   Mon May 10 14:27:45 2021 -0700

    Make importing TypedDict a [not-supported-yet] error instead of [import-error].
    
    Adds typing.TypedDict to our typing stub so that typeshed references to it do
    not fail. Also happens to fix an error where pytype gave a weird error message
    for TypedDict imports.
    
    Resolves https://github.com/google/pytype/issues/832.
    
    PiperOrigin-RevId: 373012582

[33mcommit 92d89b306ed522178814c596876ac72c6e7f303c[m
Author: rechen <rechen@google.com>
Date:   Mon May 10 12:34:33 2021 -0700

    Fix a bug in attribute lookup.
    
    We need to check base classes. This will let us get rid of a disable in
    pytype's own code:
    https://github.com/google/pytype/blob/f5fb43a589e64f1d52988fa123aa8b927316a854/pytype/tests/test_base.py#L165.
    
    PiperOrigin-RevId: 372988488

[33mcommit 2f6e834776a00980d4039a7a51c357e8f973ebae[m
Author: rechen <rechen@google.com>
Date:   Mon May 10 12:02:21 2021 -0700

    Fix a generics bug.
    
    Pytype was inferring a weird type for `self` in a generic class when (1) the
    TypeVar has constraints, *and* (2) the class has a subclass defined in the same
    file. Fixed by filtering out the call record that introduces the bad type. I
    had to do this rather than not recording the call in the first place because
    pytype sometimes does and sometimes doesn't want to record method calls from
    subclasses - we can't tell until we've collected all of the call records.
    
    Also fixed a small bug where the pytd printer was sometimes adding unnecessary
    imports, which was triggered by the new test I added in this change.
    
    PiperOrigin-RevId: 372981555

[33mcommit 5f083e75a8a86927ab5bb66a1f81a2018ef0b210[m
Author: rechen <rechen@google.com>
Date:   Mon May 10 11:40:38 2021 -0700

    Cleanup: Remove unnecessary pytype disables.
    
    PiperOrigin-RevId: 372976550

[33mcommit 9bc3db8f5291d8c63a5563c29e75742b7418d83e[m
Merge: f5fb43a5 613ee091
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 10 11:50:04 2021 -0700

    Merge pull request #913 from google/google_sync
    
    Google sync

[33mcommit 613ee0911344a22bf99f4ddd9679b7f7c8aa6a2e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 10 11:19:17 2021 -0700

    Fix (raise-missing-from) lint warning.
    
    Seen in
    https://github.com/google/pytype/runs/2532612035?check_suite_focus=true.
    
    PiperOrigin-RevId: 372966143

[33mcommit ee1b1cd8f7c557922fb17aa5900869afb61063c1[m
Author: rechen <rechen@google.com>
Date:   Fri May 7 17:30:02 2021 -0700

    Update docs.
    
    * Update support level for generic type aliases.
    * Refresh everything because we haven't in a while.
    
    PiperOrigin-RevId: 372658154

[33mcommit a03fb262c1e5c2fdef7de9aa2b14263d501fb745[m
Author: rechen <rechen@google.com>
Date:   Fri May 7 16:28:26 2021 -0700

    Fix a Python 3.7 failure in typeshed/tests/pytype_test.py.
    
    The failure is triggered when concurrent.futures.process loads
    multiprocessing.context which loads multiprocessing, which isn't able to
    resolve multiprocessing.context references yet. Instead, we directly look up
    the references in the multiprocessing.context AST.
    
    I unfortunately wasn't able to construct a local test case for this error
    because it seems to depend on pytype_test loading files in a specific order,
    but this code path will be exercised by the test once it is enabled in 3.7.
    
    PiperOrigin-RevId: 372649664

[33mcommit 5d65762a9c63d01dded424c33d05c6f948c3fbb4[m
Author: rechen <rechen@google.com>
Date:   Fri May 7 14:44:24 2021 -0700

    pytd: populated mutated_type from annotated `self` parameters.
    
    The most recent typeshed update changes tempfile.TemporaryDirectory to fill in
    a type parameter via an annotation on `self`:
    
    class TemporaryDirectory(Generic[AnyStr]):
      def __init__(self: TemporaryDirectory[str], ...) -> None: ...
    
    This adds support in pytype for this pattern.
    * Changes pytype/pyi/function.py to add an extra Mutator when `self` is
      detected to have a generic annotation.
    * Fixes a test case in pytype/pytd/optimize_test.py that did not expect `self`
      annotations to be copied into mutated_type.
    * Improves mutation generation in pytype/function.py to handle more types.
    
    PiperOrigin-RevId: 372631910

[33mcommit b7d6a6732321ba42970665e20efb1540135d3242[m
Author: mdemello <mdemello@google.com>
Date:   Fri May 7 12:22:34 2021 -0700

    Preserve kw_only attribute when inheriting attrs from a different module.
    
    PiperOrigin-RevId: 372605266

[33mcommit 5a850af6a141a99c2077d308cc088bdd1fcdf781[m
Author: mdemello <mdemello@google.com>
Date:   Thu May 6 15:46:18 2021 -0700

    Add a vm state to allow recursive construction of pytd values.
    
    This is needed for the single use case of dataclass code generation in an
    imported PyTDClass, but it is hard to handle recursive field annotations in any
    other way.
    
    Also removes the class-to-any visitor, which was an earlier attempt to handle
    recursion, but which did not cover all the corner cases.
    
    PiperOrigin-RevId: 372440646

[33mcommit f5fb43a589e64f1d52988fa123aa8b927316a854[m
Merge: 507ddf76 3ed28836
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 7 16:13:58 2021 -0700

    Merge pull request #912 from google/attrs
    
    Require attrs>=21.2.0.

[33mcommit 3ed288364fefbace4683eccde4ce87e44cf44b92[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 7 14:24:15 2021 -0700

    Require attrs>=21.2.0.
    
    See https://github.com/google/pytype/issues/909.

[33mcommit 507ddf763e4a33a9c466c4016c5e81b81ef0cb92[m[33m ([m[1;33mtag: 2021.05.06[m[33m)[m
Merge: d980a7df b554faeb
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 6 14:33:06 2021 -0700

    Merge pull request #911 from google/google_sync
    
    Google sync

[33mcommit b554faeb158e7e0f0e44efbb6a1b3de0e48708eb[m
Author: rechen <rechen@google.com>
Date:   Thu May 6 11:19:11 2021 -0700

    Do another PyPI release to push out a couple bug fixes.
    
    PiperOrigin-RevId: 372384526

[33mcommit 00c5dc840e39479c28a53c96d61c89c086546965[m
Author: rechen <rechen@google.com>
Date:   Wed May 5 16:00:30 2021 -0700

    Add typing._Alias, which is used by typeshed.
    
    See https://github.com/python/typeshed/pull/5345.
    
    PiperOrigin-RevId: 372226096

[33mcommit d980a7df2d919e936fea70bfd825798f6aff14be[m
Merge: b578f123 733f63e7
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 6 10:50:54 2021 -0700

    Merge pull request #910 from google/attrs
    
    Pin attrs to 20.3.0.

[33mcommit 733f63e7e49a3e5954d4ea3b76da0ff3e62bb2cf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 6 09:48:25 2021 -0700

    Pin attrs to 20.3.0.
    
    For https://github.com/google/pytype/issues/909.

[33mcommit b578f1230630ead785c05c69bc6e30af1442d932[m
Merge: 93c778f8 cac8b943
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 5 11:30:00 2021 -0700

    Merge pull request #908 from google/ts
    
    Update typeshed to 2c8cb605961bf76a88f9c21624893e4368ac3638.

[33mcommit cac8b943b49f664a427c86fedfe1b9eef095a834[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 5 11:01:25 2021 -0700

    Update typeshed to 2c8cb605961bf76a88f9c21624893e4368ac3638.

[33mcommit 93c778f867155e032a517b3f5a8228b12ac3c966[m[33m ([m[1;33mtag: 2021.05.04[m[33m)[m
Merge: 3ebb3978 b4993030
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 4 15:25:18 2021 -0700

    Merge pull request #907 from google/google_sync
    
    Google sync

[33mcommit b4993030668e9bd609a389cbcc442777b559e3a7[m
Author: rechen <rechen@google.com>
Date:   Tue May 4 14:43:06 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 371998798

[33mcommit 277b881b8eb737b62a85da903f1bc0fc338763fc[m
Author: Jelle Zijlstra <jelle.zijlstra@gmail.com>
Date:   Tue May 4 14:35:13 2021 -0700

    fix handling of stdlib/@python2 (#906)
    
    Related to python/typeshed#5329: we will now set 2.7 as the minimum version in VERSIONS for libraries that existed in 2.7. I tested this by running pytype_test.py in typeshed.
    
    Resolves #906
    
    PiperOrigin-RevId: 371997182

[33mcommit bd35b346dfd6df06f00192b9fa9aa52cd41ed930[m
Author: mdemello <mdemello@google.com>
Date:   Mon May 3 17:19:38 2021 -0700

    Add typing.GenericMeta stub
    
    PiperOrigin-RevId: 371811591

[33mcommit 3ebb39781a86638d40338f80aed427dcef8c8cf3[m
Merge: 3e3d8a30 d70ae7a7
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 3 15:18:39 2021 -0700

    Merge pull request #905 from google/google_sync
    
    Google sync

[33mcommit d70ae7a77f215648f0b13d97dd08295588495480[m
Author: Sebastian Rittau <srittau@rittau.biz>
Date:   Mon May 3 14:42:50 2021 -0700

    Support max versions in typeshed VERSIONS file (#903)
    
    As discussed in python/typeshed#5304. Please note that this PR is mostly untested, but I hope CI passes.
    
    Resolves #903
    
    PiperOrigin-RevId: 371781551

[33mcommit 66514ee82f3c8b86152232efbed08399c8e3a603[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 30 23:49:02 2021 -0700

    Internal change
    
    PiperOrigin-RevId: 371461419

[33mcommit db842fa85f161393e952c2c128a92b812f99f453[m
Author: mdemello <mdemello@google.com>
Date:   Fri Apr 30 15:41:26 2021 -0700

    Output ClassVars in pyi files.
    
    Also handle inherited classvars in dataclasses correctly.
    
    PiperOrigin-RevId: 371418465

[33mcommit 3e3d8a3095d4bb8096aa44dd1c0c9ad8c5016dea[m
Merge: d4f97e1f 658b48e8
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 29 18:21:47 2021 -0700

    Merge pull request #902 from google/google_sync
    
    Google sync

[33mcommit 658b48e833644baa1ae66e05829f543113648b75[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 29 17:16:08 2021 -0700

    Fix accidental TypeVar name reuse in chex_overlay.
    
    PiperOrigin-RevId: 371237148

[33mcommit 5267d02bedd0c22c0a116d59c407a5eb3a01d09e[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 28 20:24:27 2021 -0700

    Add an overlay for the third-party @chex.dataclass decorator.
    
    See linked bug.
    
    BEGIN_INTERAL
    In a sample of 40k targets, this change caused breakages in 21 files:
    []/OCL:369786366:BASE:370826609:1619585495126:6d6b446b
    That's enough to warrant a feature flag.
    END_INTERNAL
    
    PiperOrigin-RevId: 371040126

[33mcommit 82ceff46544ad7b26e6ac5bfa96d0bee205d6e4c[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 28 12:19:04 2021 -0700

    Remove pytype flags that are now enabled by default.
    
    PiperOrigin-RevId: 370958672

[33mcommit d4f97e1f75232c21bee88e73e3362cc7405bef78[m
Merge: 8fc23b83 842f7a27
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 27 17:09:28 2021 -0700

    Merge pull request #901 from google/google_sync
    
    Google sync

[33mcommit 842f7a273c4a38fb5c6784e2dd237e32d25e31cf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 27 16:34:01 2021 -0700

    Renable consider-using-with lint check.

[33mcommit 55c27090253335b757031c274b341735ac8d6918[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 27 16:25:43 2021 -0700

    Switch to using with statements for resource-allocating operations.
    
    Updates pytype's code to satisfy a new oss lint check (consider-using-with). I
    disabled the check in a few places where it wasn't immediately obvious how to
    update the code.
    
    PiperOrigin-RevId: 370786571

[33mcommit 8fc23b83eadaa83bd325656570beb3f8bac69dbb[m[33m ([m[1;33mtag: 2021.04.26[m[33m)[m
Merge: 27786b0d 80f1a117
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 26 17:24:38 2021 -0700

    Merge pull request #900 from google/google_sync
    
    Google sync

[33mcommit 80f1a117b922d3d1ab8d96a54471c8919020c6dd[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 26 16:38:43 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 370568391

[33mcommit e4522a258b57dd2cd71a2025351b2c91552780ba[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 26 15:58:45 2021 -0700

    Support nested type parameters in generic type aliases.
    
    With this, pytype will support aliases like `List[Dict[K, V]]`, where
    previously `Dict[K, V]` would be mistakenly treated as a single type parameter.
    
    PiperOrigin-RevId: 370560643

[33mcommit 1a5d4d9655ffb1308a244eef7558af3981f85959[m
Author: mdemello <mdemello@google.com>
Date:   Fri Apr 23 17:11:33 2021 -0700

    Use the __init__ function as the source of truth for pyi dataclass fields.
    
    When inheriting from a pyi dataclass, the __init__ signature will contain the
    fields we want to inherit for the subclass __init__. The full list of class
    attributes might contain ClassVars and non-dataclass attributes generated from
    a source file.
    
    PiperOrigin-RevId: 370185847

[33mcommit 27786b0db113342aff6d34be99d4e021026ab67f[m
Merge: 951a1434 129cc7ff
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 26 16:57:56 2021 -0700

    Merge pull request #899 from google/lint
    
    Disable lint warning consider-using-with.

[33mcommit 129cc7ffc5ab34a93cc12ba19e841b327e15891a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 26 16:20:00 2021 -0700

    Disable lint warning consider-using-with.
    
    This warning seems useful, so I may reenable it later, but the changes
    needed to satisfy it are not obviously safe, so disabling for now.

[33mcommit 951a14344fed1f73fc807b29fc46a80b192cfccd[m
Merge: 8a18a1dc 57213404
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 23 19:56:43 2021 -0700

    Merge pull request #898 from google/google_sync
    
    Google sync

[33mcommit 57213404ea5d7cf2d708b85cb1fdb7fd5ea4ea91[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 23 17:10:49 2021 -0700

    Fix trailing newlines error in GitHub export.
    
    https://github.com/google/pytype/runs/2424143159?check_suite_focus=true
    
    PiperOrigin-RevId: 370185478

[33mcommit 6ae87b2d81d8d6c844a156ef5f07dc01f86170c5[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 23 15:22:51 2021 -0700

    Fix a bug in nested typing.NamedTuple support.
    
    Due to the fully qualified name not matching the class name in vm.local_ops, we
    weren't detecting namedtuple fields.
    
    PiperOrigin-RevId: 370169068

[33mcommit 7a25418d16f86461f80baa1de4f4d8e4481c62f3[m
Author: mdemello <mdemello@google.com>
Date:   Fri Apr 23 14:52:50 2021 -0700

    Remove recursive type definitions when constructing pyi dataclasses.
    
    Also moves some PyTDClass specific code out of class_mixin.
    
    PiperOrigin-RevId: 370163419

[33mcommit c478573a198c7a7ff6dafd078b363254d2427f98[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 23 14:44:46 2021 -0700

    For method aliasing in pyi files, consider base classes when doing lookup.
    
    See https://github.com/python/typeshed/pull/5231 for context.
    
    PiperOrigin-RevId: 370161921

[33mcommit 362c3a2b25e582b2f2490b7b356b7255ee19650e[m
Author: mdemello <mdemello@google.com>
Date:   Thu Apr 22 19:53:20 2021 -0700

    Put pyi dataclass creation behind a feature flag.
    
    We will continue to output decorators into pyi files when the flag is false,
    but reading them back in will not construct the dataclass.
    
    PiperOrigin-RevId: 370001616

[33mcommit 18f8d913da346700f3723600cec822302ba4ecf4[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 22 19:22:34 2021 -0700

    Set --check-variable-types default to True.
    
    PiperOrigin-RevId: 369998884

[33mcommit 31009ab9b8cd43bdd81441c93ba8ae3bd93a44bb[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 22 16:34:31 2021 -0700

    Fix a pytype crash on a generic protocol.
    
    PiperOrigin-RevId: 369975384

[33mcommit 8a18a1dc24d8eea7419e7fcb9182a65a77c11646[m
Merge: 75f83c5d fb4423fa
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 22 01:54:16 2021 -0700

    Merge pull request #897 from google/google_sync
    
    Google sync

[33mcommit fb4423fa49291db91a8f8a894f0b0d703936714b[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 21 19:18:31 2021 -0700

    Add Callable support, better error handling for generic type aliases.
    
    * Adds support for using typing.Callable in generic type aliases, including a
      use case involving the same TypeVar repated multiple times reported in a
      recent issue.
    * Improves error reporting for missing or extra parameters.
    
    PiperOrigin-RevId: 369783775

[33mcommit ca91ddb05bab3cc448fc0c887b46a28422d3ad94[m
Author: mdemello <mdemello@google.com>
Date:   Wed Apr 21 19:17:46 2021 -0700

    FIX: Set recursive type annotations in pyi dataclass __init__ args to Any
    
    We cannot yet fully handle recursive types like
    
      @dataclass
      class A:
        x: Optional[A]
    
    in pyi files. This is a hack to set a recursive type annotation to Any when
    setting metadata for an imported dataclass, which will affect any dataclasses
    inheriting from the imported class.
    
    PiperOrigin-RevId: 369783683

[33mcommit c8d8de81373fe2b90342a889fccca83b9d5460f9[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 21 11:42:48 2021 -0700

    Detect and apply PEP 526-style variable annotations on attributes.
    
    Somewhat embarrassingly, we were silently ignoring these. This change needs to
    go through the feature rollout process.
    
    PiperOrigin-RevId: 369700373

[33mcommit 75f83c5d589ff87a58577828c82341b165eaa068[m
Merge: fb07ba26 c515db93
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 21 12:05:35 2021 -0700

    Merge pull request #896 from google/google_sync
    
    Google sync

[33mcommit c515db93d99d26e808d40a61a5675af75594a3a9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 21 11:27:37 2021 -0700

    Fix an unnecessary-comprehension lint warning.
    
    Seen in
    https://github.com/google/pytype/runs/2395958856?check_suite_focus=true.
    Reasoning behind this check seems to be
    https://github.com/PyCQA/pylint/issues/2905. I'm not entirely convinced that
    the comprehension is less readable, but this is easy enough to change.
    
    PiperOrigin-RevId: 369695810

[33mcommit df886df995d2c355543dc73836acbbd830e381a8[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 20 17:24:02 2021 -0700

    Add more support for unions in generic type aliases.
    
    Gets
      X = Union[T, int]
      def f(x: X[T2]) -> T2: ...
    working. I also deleted the Literal test because I realized that TypeVars in
    Literals are illegal:
    https://www.python.org/dev/peps/pep-0586/#illegal-parameters-for-literal-at-type-check-time.
    
    PiperOrigin-RevId: 369554166

[33mcommit c9ef3b8cae2176ab5ef08e13e0f7e3b2af8a5d5a[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 20 17:07:51 2021 -0700

    Add a fix suggestion for [annotation-type-mismatch] with a None value.
    
    With this, for code like:
    
    def f(x: int = None): ...
    
    pytype will report:
    
    File "foo.py", line 1, in <module>: Type annotation for x does not match type of assignment [annotation-type-mismatch]
      Annotation: int (Did you mean 'typing.Optional[int]'?)
      Assignment: None
    
    PiperOrigin-RevId: 369551536

[33mcommit 6f98aee8da8f8a4e98fc8b46df08583510a0d9a9[m
Author: mdemello <mdemello@google.com>
Date:   Tue Apr 20 14:07:18 2021 -0700

    Output class decorators in pyi files.
    
    Allows inheritance of dataclasses and attrs across module boundaries.
    
    * Preserve class decorators when writing pyi output
    * Preserve class attribute order for dataclasses and attrs (do not sort)
    * Record InitVars as x: InitVar[typ] rather than x: typ
    * Do not override explicit __init__ methods in pyi dataclasses
    
    PiperOrigin-RevId: 369516540

[33mcommit 465b056b299555db0f20d76113c474df79241fbe[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 20 13:41:51 2021 -0700

    Fix an [invalid-namedtuple-arg] error.
    
    Resolves https://github.com/google/pytype/issues/894.
    
    PiperOrigin-RevId: 369511371

[33mcommit fb07ba26d33aee1a2336a9203ed9358098f73861[m
Merge: d928a897 6e9862c9
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 20 13:50:03 2021 -0700

    Merge pull request #895 from google/google_sync
    
    Google sync

[33mcommit 6e9862c97fbd224982c24f28fa9a78a641069fd3[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 20 00:19:55 2021 -0700

    Move an incorrectly bucketed pytype test.
    
    Oops.
    
    PiperOrigin-RevId: 369357812

[33mcommit de083502ee26961119d21b48a02fd7a2db494301[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 19 19:25:12 2021 -0700

    Don't lose track of attributes when @typing.final is used.
    
    Previously, decorating __init__ with @typing(_extensions).final would both
    generate a [not-supported-yet] error and cause pytype to be unable to find all
    attribute defined in the decorated __init__. With this change, pytype reports
    [not-supported-yet] and treats final as an identity function.
    
    PiperOrigin-RevId: 369352587

[33mcommit a7d6df9b14cea066fe7bff016097a1c23ec8b611[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 19 18:33:04 2021 -0700

    Clear out more of the temporary blocklists and flip associated flag defaults.
    
    Two of the blocklists are empty now and can be deleted, and the third has only
    one file left on it.
    
    PiperOrigin-RevId: 369346594

[33mcommit 562a0973470892ff1ccb08a98f4dec6ea9887d3a[m
Author: mdemello <mdemello@google.com>
Date:   Fri Apr 16 12:42:24 2021 -0700

    If a dataclass.InitVar has a default, leave it annotated as an InitVar.
    
    This does not change any existing behaviour other than the annotated type in
    the output pyi, but it will be required for round-tripping and cross-module
    inheritance of dataclasses with InitVars.
    
    PiperOrigin-RevId: 368900418

[33mcommit 6779582d8e41e7d592964b5a82d030246441500b[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 15 22:35:51 2021 -0700

    Substitute in the right typevar values in children of generic classes.
    
    When a non-generic class inherits from a generic one, the child does not have a
    (non-empty) template but one of its parents does. The logic to substitute in
    the right TypeVar values in method calls works by temporarily setting a `self`
    annotation when a template is present, so we need to walk up the class's MRO
    looking for the generic parent.
    
    PiperOrigin-RevId: 368782058

[33mcommit d928a89749964a0ef5b12977c384a37e4102bdc3[m[33m ([m[1;33mtag: 2021.04.15[m[33m)[m
Merge: 5daee9dc 3faf7b0c
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 15 17:58:47 2021 -0700

    Merge pull request #892 from google/versions
    
    Bundle up typeshed metadata files in setup.py.

[33mcommit 3faf7b0cd174daa030a314c1774e17d46d74792a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 15 17:29:16 2021 -0700

    Bundle up typeshed metadata files in setup.py.

[33mcommit 5daee9dc12fb0bee78c9a0d92e79accdbbf43306[m
Merge: b2678200 ed192c8a
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 15 16:48:33 2021 -0700

    Merge pull request #891 from google/google_sync
    
    Google sync

[33mcommit ed192c8aad1dd77a61f1b5ee0f3652dad8e7b19f[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 15 15:54:24 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 368734644

[33mcommit 28af06f62e67ae840e5db516288df4d9eef73450[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 15 13:32:46 2021 -0700

    Add some more support for generic type aliases.
    
    With this change, generic type aliases should be working for most container
    types (Dict, List, Tuple, etc.). They still don't work with a few special
    containers in typing_overlay (Callable, Literal, Union); I've added skipped
    tests for those.
    
    TESTED=Rebuilt the pytype pars and ran a TGP:
    []/OCL:368552652:BASE:368554562:1618479527787:c523ed86
    PiperOrigin-RevId: 368707443

[33mcommit b5811e8e430dcd95f15370c37b5d50556f3d5328[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 15 12:01:50 2021 -0700

    Drop support for the old typeshed directory structure.
    
    PiperOrigin-RevId: 368688457

[33mcommit 51611f0c9368d256ea1c0324c660b53634d986fd[m
Author: mdemello <mdemello@google.com>
Date:   Wed Apr 14 16:16:17 2021 -0700

    Add a link to the 'Tale of Two Type Systems' paper.
    
    PiperOrigin-RevId: 368529046

[33mcommit 92e6f130098f51b218760be576152ea298c7206d[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 14 11:47:39 2021 -0700

    Fix a bug in using a generic type alias involving typing.Tuple.
    
    PiperOrigin-RevId: 368475359

[33mcommit 55e2f82a5431e9c0a2337691033f1645c477ab8f[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 14 10:19:32 2021 -0700

    Add object.__delattr__ to our builtins stubs.
    
    PiperOrigin-RevId: 368455832

[33mcommit b26782003b4262e34b50cd1f265c34a7f2266ad8[m
Merge: d9dcbc87 ef933455
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 14 16:59:04 2021 -0700

    Merge pull request #888 from google/py310
    
    Grab a typed_ast fix for Python 3.10.

[33mcommit ef9334558d32c56c5b126c23c43c176c87b487bf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 13 18:17:34 2021 -0700

    Grab a typed_ast fix for Python 3.10.

[33mcommit d9dcbc8786895b7f4ee6104c2405474c21557013[m
Merge: ff30c6bb a31957c8
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 13 13:43:43 2021 -0700

    Merge pull request #887 from google/google_sync
    
    Google sync

[33mcommit a31957c8d30119286bb2f3d08644d3c49599b55f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 13 13:19:20 2021 -0700

    Fix setup.py typeshed content check.

[33mcommit 8c2cbaac8608c5fd35769ed32d2183005b5290d3[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 13 13:09:55 2021 -0700

    Update typeshed to ce24720a1a774cd1dc73c66c52be71221e77a93d.

[33mcommit c7b396c12e77a1250e0624c27488193c36af84f6[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 13 01:04:36 2021 -0700

    Update typeshed to ce24720a1a774cd1dc73c66c52be71221e77a93d.
    
    Updates typeshed to the commit at which its directory structure was completely
    overhauled. There are no changes to type information.
    
    PiperOrigin-RevId: 368166631

[33mcommit ff30c6bbd76493979b98efc1ccc5aeb9e9be4ddf[m
Merge: 6314ee9b 2ab24922
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 12 17:48:10 2021 -0700

    Merge pull request #886 from google/google_sync
    
    Google sync

[33mcommit 2ab2492210ba9b066314a4f742e2d050b5c40d48[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 12 16:54:59 2021 -0700

    Add "from typing import overload" statement when using @overload.
    
    Fixes https://github.com/google/pytype/issues/884.
    
    PiperOrigin-RevId: 368112558

[33mcommit 973352af9bc4f45885ad1eee20b790210be341e2[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 12 15:08:11 2021 -0700

    Delete the --check-nonnull-parameter-types flag.
    
    PiperOrigin-RevId: 368093518

[33mcommit acc07dd891e531b29cea38722f1af90d8aa4a9c3[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 12 11:21:59 2021 -0700

    Fix typeshed handling for .par pytype installations.
    
    When pytype is packaged as a .par, os.path.exists and os.listdir don't work,
    breaking our handling of the new typeshed structure. After this change, I
    believe everything is (finally!) working for both par and non-par
    installations; I ran the tests, confirmed that the right number of typeshed
    modules is loaded, and built some pytype targets both in dev mode and with
    rebuilt pars.
    
    * Adds _file_exists and _list_files methods that work for both par and non-par
      pytype installations.
    * Reworks _load_third_party_packages to do a single recursive walk of all files
      in stubs/. For a par installation, we can't (efficiently) listdir directories
      to get only the names immediately in a directory.
    * Tweaks get_all_module_names to remove the complexity of calling a
      _build_lister wrapper to build a lister function; instead, the internal
      lister function can now be used directly.
    * In get_all_module_names, handle typeshed and pytype/stubs/ paths separately.
      This makes the file handling code simpler because it only has to deal with
      typeshed paths.
    
    PiperOrigin-RevId: 368044952

[33mcommit 5f1c3cf25f518baa682666bc36c514aa68123572[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 12 11:19:35 2021 -0700

    Add PEP 647 -- User-Defined Type Guards to support.md.
    
    PiperOrigin-RevId: 368044464

[33mcommit 17c374dbecd00adbad32ed112791aeafc87e455b[m
Author: tsudol <tsudol@google.com>
Date:   Fri Apr 9 15:24:23 2021 -0700

    Simplify pytype's bool definition.
    
    We only need to add special definitions for dunder methods that differ from int, which are mostly the boolean methods.
    
    PiperOrigin-RevId: 367714860

[33mcommit 6314ee9b1069067455f54d8d32f3ece0fe48f3f0[m[33m ([m[1;33mtag: 2021.04.09[m[33m)[m
Merge: f169fd5f 8ef2fd1b
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 9 15:04:06 2021 -0700

    Merge pull request #885 from google/google_sync
    
    Google sync

[33mcommit 8ef2fd1b55d8fd446414ec5314ab25439b303100[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 9 14:01:01 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 367699491

[33mcommit d5a77f444d07dba0fea4fad3a24a860b8442ef69[m
Author: tsudol <tsudol@google.com>
Date:   Fri Apr 9 12:33:54 2021 -0700

    Add gi_* fields to Generators.
    
    Ideally, gi_code and gi_frame would have more specific types, but it's impossible to import `types` in `typing` or `builtins`. Fortunately, these fields aren't widely used.
    
    PiperOrigin-RevId: 367683134

[33mcommit f169fd5fd4b02b1253675627aeeea073953caf4f[m
Merge: ca6d249f a6570e9d
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 8 18:02:43 2021 -0700

    Merge pull request #883 from google/google_sync
    
    Google sync

[33mcommit a6570e9d9552355cbf9b5509af95063c73b37bf8[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 8 17:35:28 2021 -0700

    Fix an error message in pyi/classdef.py.
    
    When p was not a string, pytype would unhelpfully report
    'ParseError: must be str, not <type of p>' rather than the real error.
    
    PiperOrigin-RevId: 367540826

[33mcommit febc0c1e4531d7b5705a74aedfb8ce7ee004c09f[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 8 16:51:55 2021 -0700

    Support using typing.Annotated inside a class named Annotated.
    
    This fixes a type-checking failure on pytype.pytd.pytd.Annotated:
    https://github.com/google/pytype/runs/2293903496?check_suite_focus=true.
    
    This was surprisingly difficult!
    
    * Adds labels ("class", "alias", etc.) to PrintVisitor._local_names so we can
      distinguish between a typing_extensions import and a redefinition of a typing
      name in the current module.
    * Inlines PrintVisitor._RequireTypingImport. While working on this, I realized
      that having both _RequireTypingImport and _FromTyping was confusing.
    * Fixes a bug where "import typing" would sometimes be unnecessarily added.
    * Makes PrintVisitor._NameCollision work properly when module members are
      prefixed with the module name.
    
    PiperOrigin-RevId: 367534170

[33mcommit bc1d8b41afe474e1df837825616c3177271c928a[m
Author: mdemello <mdemello@google.com>
Date:   Wed Apr 7 20:03:45 2021 -0700

    Output InterpreterClass properties as Annotated[x, 'property'] in pytd files.
    
    Properties are still treated as constants, but tagged with 'property' so that
    round-tripping does not lose the fact that they are properties.
    
    PiperOrigin-RevId: 367348049

[33mcommit cff3ad27b92a3707886f9b218e720722d23c1919[m
Author: mdemello <mdemello@google.com>
Date:   Wed Apr 7 19:11:23 2021 -0700

    Filter out properties from class attributes when constructing dataclasses.
    
    * Convert pyi @property to Annotated[type, 'property'] at parse time
    * Add a method to get a filtered list of class attributes
    * Filter properties out from dataclass init fields.
    
    PiperOrigin-RevId: 367343353

[33mcommit d0e3f0d205188023bedb338b69a7f8691f1fc530[m
Author: mdemello <mdemello@google.com>
Date:   Wed Apr 7 19:00:18 2021 -0700

    Add support for typing.Annotated in pyi files
    
    Currently the only supported form is
      x: Annotated[type, 'string']
    
    and as with Annotated in py files, the annotation string is dropped. (This
    brings pyi file behaviour on par with py files; support for using the
    annotation and possibly round-tripping will be added later.)
    
    PiperOrigin-RevId: 367341965

[33mcommit 16410c54a2a883a40d546fe3f33c94d34eb1c2cb[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 7 13:34:34 2021 -0700

    Remove check_nonnull_parameter_types.bzl and set the flag default to True.
    
    The last three entries on there are for files that I can't view or modify.
    (They're accidentally listed twice...probably did a bad merge at some point.) I
    moved them to error_blocklist so we can get rid of
    check_nonnull_parameter_types.bzl. Once a pytype release with the flag default
    change goes out, I'll be able to remove --check-nonnull-parameter-types from
    features.bzl, then remove the flag altogether.
    
    PiperOrigin-RevId: 367287464

[33mcommit af3861f9d2b5ec54b19d57c326ff3c67dfb6a380[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 7 12:25:09 2021 -0700

    Make a few more fixes to pytype's typeshed-handling code.
    
    With this, all the tests pass when using the new directory structure.
    
    * Improves the check for whether a file path should be treated as a module for
      a given Python version. In particular, we need to check stdlib/VERSIONS.
    * In target Python 2, always add stdlib/@python2 to the list of paths to
      search, in case a top-level module is present in both stdlib/ and
      stdlib/@python2. This happens for cgi.FieldStorage.
    * Don't add missing modules to the search path unless they are confirmed to be
      in missing.txt; otherwise, we accidentally grab modules that don't support
      the specified Python version.
    * Fix the logic for computing module names from missing.txt entries.
    * Fix typeshed_test to use tuples instead of lists for Python versions and to
      test for 3.6 rather than 3.5. The 3.5 test was technically wrong because
      some of the modules it checked for are supported by typeshed only in 3.6+.
    
    PiperOrigin-RevId: 367273220

[33mcommit df142875b9f55b005217ffc25b5f9010a5d75c0a[m
Author: mdemello <mdemello@google.com>
Date:   Tue Apr 6 14:49:18 2021 -0700

    Stop using visitors.CollectTypeParameters() directly.
    
    PiperOrigin-RevId: 367090295

[33mcommit ca6d249f36dca047f6e915cabff907b2d000894f[m
Merge: 9a62359b ecad51ed
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 6 12:46:48 2021 -0700

    Merge pull request #881 from google/google_sync
    
    Google sync

[33mcommit ecad51ed52069841acd242be72dda92b2f3aefb7[m
Author: tsudol <tsudol@google.com>
Date:   Tue Apr 6 11:41:46 2021 -0700

    Make sure `collections.defaultdict.__init__` always accepts kwargs.
    
    PiperOrigin-RevId: 367050678

[33mcommit af0afbc8cce03ec8b0e03915aab8f55d404d31cb[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 6 11:25:46 2021 -0700

    Fix some bugs in typeshed.Typeshed.
    
    Now that I'm actually trying to update third_party/py/typeshed to use the new
    directory structure that typeshed switched to in January, I've found a few bugs
    in how we handle the new structure.
    
    PiperOrigin-RevId: 367047298

[33mcommit 02e69f562be873ce0acd03c28347cef6f1139421[m
Author: tsudol <tsudol@google.com>
Date:   Tue Apr 6 11:13:25 2021 -0700

    Check starargs and starstarargs when gathering TypeVars in function sigs.
    
    When gathering mutations, we also have to make sure every TypeVar has a Variable, otherwise mutations will cause crashes.
    
    PiperOrigin-RevId: 367044624

[33mcommit 9a62359b55c78c4493a74f17f2b5b9b69791b33d[m
Merge: 69f02ef1 402bd168
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 2 16:15:24 2021 -0700

    Merge pull request #880 from google/google_sync
    
    Google sync

[33mcommit 402bd168e208affaecdf3f2f2facf93b6f5d7c01[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 2 01:43:31 2021 -0700

    Fix a minor bug in pytype's expansion of Protocol[T].
    
    Inheriting from Protocol[T] is a shorthand for inheriting from both Protocol
    and Generic[T]. We were handling this case properly for typing.Protocol but not
    for typing_extensions.Protocol.
    
    Context: https://github.com/python/typeshed/pull/5172
    PiperOrigin-RevId: 366414389

[33mcommit cadff0cbaf1a7e31b7f05810a4a2aea18c4d34c8[m
Author: mdemello <mdemello@google.com>
Date:   Thu Apr 1 20:17:41 2021 -0700

    Fix a crash when analysed code accessed an undefined closure cell.
    
    When a variable from an outer scope was used as a function keyword argument,
    and had not been defined yet, pytype would raise an exception. We now correctly
    return a name-error for the undefined variable.
    
    PiperOrigin-RevId: 366383653

[33mcommit 69f02ef191d3c06c695fe7e76b9d95dfa7d44fcd[m
Merge: 22150dd5 0f1033ef
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 1 18:08:06 2021 -0700

    Merge pull request #879 from google/google_sync
    
    Add some minimal support for PEP 612 in type stubs.

[33mcommit 0f1033eff27c208307e9f70a8cf070574b38fefe[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 1 15:25:33 2021 -0700

    Add some minimal support for PEP 612 in type stubs.
    
    pytype will gracefully fall back to Any when typing.ParamSpec or
    typing.Concatenate is used as the first argument to a Callable in a type stub,
    allowing typeshed to start using most of PEP 612. Custom generic classes
    parameterized with a ParamSpec are still not supported.
    
    pytype was reporting weird [bad-unpacking] errors in parser.py, so I kept
    adding ast3.AST annotations until they went away.
    
    I also fixed a bug in PrintVisitor that caused it to print typing_extensions
    imports as aliases rather than imports.
    
    For https://github.com/google/pytype/issues/786.
    
    PiperOrigin-RevId: 366342708

[33mcommit 22150dd56c2a11f3d385a1cbb28eed985df31d72[m[33m ([m[1;33mtag: 2021.04.01[m[33m)[m
Merge: a5943856 cd24214c
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 1 16:31:24 2021 -0700

    Merge pull request #878 from google/google_sync
    
    Prepare a 2021-04-01 PyPI release (not a joke, really!).

[33mcommit cd24214c74fb8a1eefb404be93aad9a356b6e33d[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 1 13:36:57 2021 -0700

    Prepare a 2021-04-01 PyPI release (not a joke, really!).
    
    PiperOrigin-RevId: 366320741

[33mcommit a5943856bd357de40b3e15bd6108ff460b8531ce[m
Merge: 34e15729 90a4ac1d
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 31 15:46:15 2021 -0700

    Merge pull request #877 from google/google_sync
    
    Google sync

[33mcommit 90a4ac1dae7bf86726dc29006b98dbb91b7e30ec[m
Author: mdemello <mdemello@google.com>
Date:   Wed Mar 31 14:38:16 2021 -0700

    Minor pytd visitor code cleanups.
    
    * Move PrintVisitor to its own module
    * Delete unused InventStarArgParams visitor
    
    PiperOrigin-RevId: 366118732

[33mcommit 026ccfbd7eac409311b2259f04d17754f9d6180f[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 30 16:02:25 2021 -0700

    Update docs to indicate Python 3.9 support.
    
    PiperOrigin-RevId: 365916973

[33mcommit 34e157299e990d833a0ba17aa7d0924b9378ace8[m
Merge: b8278703 283415bd
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 30 19:17:36 2021 -0700

    Merge pull request #876 from google/google_sync
    
    Google sync

[33mcommit 283415bdc3f737083d334c78517cfb40767691c2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 30 16:34:17 2021 -0700

    Work around a typed_ast installation failure in Python 3.10.

[33mcommit e91a1b4b5aa0b82efd1803796e4cd940aae39670[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 30 15:25:57 2021 -0700

    Move Python 3.9 tests out of experimental and add 3.9 wheels.

[33mcommit 763443af37e2fe9c15ad68ecf8f8e000dc0aa7bd[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 30 14:42:44 2021 -0700

    Finish adding basic Python 3.9 support.
    
    With this, all the 3.9 tests pass!
    
    * Adds 3.9 to the supported versions in utils.py.
    * Fixes JUMP_IF_NOT_EXC_MATCH: As it turns out, this opcode is a replacement
      for the COMPARE_OP(CMP_EXC_MATCH), JUMP sequence in older versions, so it
      needs to copy COMPARE_OP's behavior of fixing the top of the stack and then
      pushing on an indefinite bool.
    * Updates LIST_EXTEND to take advantage of existing splat-handling code. One
      tricky point is that we no longer have the convenient distinction between
      function and non-function splats that BUILD_TUPLE_UNPACK_WITH_CALL and
      BUILD_TUPLE_UNPACK provided, so we have to look ahead a few opcodes to
      determine how splats should be handled.
    
    For https://github.com/google/pytype/issues/749.
    
    PiperOrigin-RevId: 365900445

[33mcommit 85b6e907801117b9c29fb56a38416541d5c2a1dc[m
Author: mdemello <mdemello@google.com>
Date:   Tue Mar 30 14:22:45 2021 -0700

    Rollback of changelist 365646551.
    
    *** Reason for rollback ***
    
    too many new breakages ([])
    
    *** Original change description ***
    
    Do not convert properties to constants.
    
    * Write properties to pyi files as decorated methods
    * Parse property decorators in pyi files
    
    Tested that calling a property in an imported class still works.
    
    ***
    
    PiperOrigin-RevId: 365895863

[33mcommit fa69eba8d711925af7090bda391d8592e02b7460[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 29 17:38:48 2021 -0700

    Add is_concrete(), is_concrete_dict(), and is_concrete_list() methods.
    
    We often have to check .could_contain_anything to determine if a PythonConstant
    is truly a concrete value or an abstract value that was previously concrete;
    these helper methods make this easier.
    
    PiperOrigin-RevId: 365703609

[33mcommit b8278703e33a3e63e841e924dc9a9a1fdb65589c[m
Merge: 1c85afaa 18382caa
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 30 00:03:38 2021 -0700

    Merge pull request #875 from google/pylint
    
    Ignore pylint warning.

[33mcommit 18382caad99ac0320cb0ea708cb18e508308dc08[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Mar 29 23:27:00 2021 -0700

    Ignore pylint warning.
    
    This warning (new in the 3.9 tests) does not seem useful.

[33mcommit 1c85afaa18f8bb39ad10b088c480bfa0cf9688c9[m
Merge: 6a2d018e a4ac046d
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Mar 29 18:04:37 2021 -0700

    Merge pull request #874 from google/google_sync
    
    Google sync

[33mcommit a4ac046dae01d434b6540d1f5b31c431cdd66b38[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 29 16:45:34 2021 -0700

    Improve pytype's implementations of the new Python 3.9 opcodes.
    
    This brings the number of failing tests down to just 4.
    
    A note on LIST_EXTEND and DICT_UPDATE: I realize that these two implementations
    look extremely similar; I didn't try to reduce code duplication because one of
    the remaining test failures has to do with list unpacking, so I expect that
    I'll have to change LIST_EXTEND quite a bit anyway.
    
    For https://github.com/google/pytype/issues/749.
    
    PiperOrigin-RevId: 365693907

[33mcommit 327bb96247add4521ff6f5bb854d3385caed5e2d[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 29 16:25:53 2021 -0700

    Improve pytype's handling of sets.
    
    * Removes frozenset from pytype's list of primitives so we can create frozenset
      instances properly parameterized with element types. This is necessary
      because in Python 3.9, some constant sets of primitives are treated as
      frozensets under the hood.
    * Adds more precise set.update overloads. This is needed to properly implement
      the new SET_UPDATE opcode in 3.9.
    
    For https://github.com/google/pytype/issues/749.
    
    PiperOrigin-RevId: 365689956

[33mcommit 615621a90e9891fabaccbf1f79d9670a1c1364f4[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 29 15:08:23 2021 -0700

    Do some Python 3.9-related cleanup.
    
    This change makes a number of small improvements that came up in the course of
    adding py3.9 support. None of these should have user-visible effects.
    
    * Fixes a typo in tests.py3.test_super.
    * Changes util_test's test case for an unsupported Python version from 3.9 to
      3.42, so we don't have to keep updating this test for new versions.
    * Factors out a common pattern in vm.py (load_attr followed by
      call_function_with_state) into a _call() helper method.
    * Replaces a reference to collections.Iterable (deprecated) with
      collections.abc.Iterable.
    
    For https://github.com/google/pytype/issues/749.
    
    PiperOrigin-RevId: 365673783

[33mcommit 4ca41d8fd82e7ddbea4e5ab668bd7baaf222559a[m
Author: mdemello <mdemello@google.com>
Date:   Mon Mar 29 13:07:01 2021 -0700

    Do not convert properties to constants.
    
    * Write properties to pyi files as decorated methods
    * Parse property decorators in pyi files
    
    Tested that calling a property in an imported class still works.
    
    PiperOrigin-RevId: 365646551

[33mcommit fc73441edb60c35dea0e378e8c7c084ef79e2de1[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 25 17:51:52 2021 -0700

    Add a temporary flag to help with the --check-parameter-types rollout.
    
    Adds a --check-nonnull-parameter-types flag that, when enabled, type-checks
    non-None function parameter defaults against their annotations. This lets me
    split the --check-parameter-types rollout into two parts.
    
    A note on the name: I went with nonnull because nonnone looked a little too
    funny to me.
    
    PiperOrigin-RevId: 365162161

[33mcommit 6a2d018e1c0626f93bd319a22b59a949fdb68f94[m
Merge: 3a30b815 1cdb71c7
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 25 17:47:14 2021 -0700

    Merge pull request #872 from google/google_sync
    
    Google sync

[33mcommit 1cdb71c7c1ed02de4a6a3c62233cfacdcc86ab8e[m
Author: mdemello <mdemello@google.com>
Date:   Thu Mar 25 12:44:29 2021 -0700

    Rework method signature merging for pyi files
    
    * Clean up merge_method_signatures
    * Don't allow overloaded @property decorators
    * Remove @name.getter (mistakenly added to the list of property decorators)
    
    PiperOrigin-RevId: 365102494

[33mcommit 93cf33625c14f091a64cbc6886d839248b39c904[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 25 11:58:41 2021 -0700

    Implement the new Python 3.9 opcodes.
    
    Adds a first-pass implementation for the new opcodes introduced in Python 3.9.
    This brings the number of 3.9 test failures down from ~50 to ~20.
    I based the implementation on
    https://github.com/python/cpython/blo[].9/Python/ceval.c.
    
    For https://github.com/google/pytype/issues/749.
    
    PiperOrigin-RevId: 365092342

[33mcommit 1b4526797e593bea36519f49486e046fb8e12e4f[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 24 19:35:10 2021 -0700

    Cleanup: use the new TypeDeclUnit.__contains__ method to simplify some code.
    
    PiperOrigin-RevId: 364945175

[33mcommit 3a30b81520223a33eb3a5e898ba862b2d1b9f2a2[m
Merge: 7e32f843 0a50abf9
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 24 17:22:30 2021 -0700

    Merge pull request #871 from google/google_sync
    
    Google sync

[33mcommit 0a50abf95a21b7d9211c5eb4805f5bc544c58b2e[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 24 13:11:02 2021 -0700

    Fully support method aliasing in stub files.
    
    Resolves https://github.com/google/pytype/issues/761.
    
    PiperOrigin-RevId: 364874822

[33mcommit a20a5bbb5ef816da5a14aa8bd781ba7ebc35722a[m
Author: mdemello <mdemello@google.com>
Date:   Tue Mar 23 20:40:10 2021 -0700

    Add namespace classes for pytd method flags and types.
    
    PiperOrigin-RevId: 364711144

[33mcommit 315f6845f6037b468b58906b2184a97f64928b52[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 23 20:28:34 2021 -0700

    Allow reassigning annotated parameter names.
    
    --check-parameter-types contained two kinds of checks:
    (1) checking that a parameter annotation matches its default.
    (2) checking that when an annotated parameter is reassigned, the new value
        still matches the annotation.
    
    (1) is frequently requested and something we definitely want to do. (2) is very
    disruptive and has not actually been asked for by users, so I've removed it. We
    may or may not want to add this check down the road, but I don't think it
    should be part of --check-parameter-types, especially since (1) already causes
    1000+ new findings.
    
    I've kept the behavior that when a parameter is annotated as Any, its type
    stays as Any rather than Union[Any, <new types assigned in the function body>],
    since an explicit Any annotation often indicates that the user wants to
    override inference.
    
    PiperOrigin-RevId: 364709605

[33mcommit 7e32f843ebcb63f6c534b0794885d917f383029c[m[33m ([m[1;33mtag: 2021.03.22[m[33m)[m
Merge: a8c1522b c5e102af
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 23 14:56:38 2021 -0700

    Merge pull request #870 from google/google_sync
    
    Google sync

[33mcommit c5e102afd6f85714f99cbf631bb7bde101913b82[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 22 15:27:55 2021 -0700

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 364422203

[33mcommit 6285b0c379f6972891c3d13fe3137de399970bb5[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 22 10:33:18 2021 -0700

    Fix two more TypeParameterInstance bugs.
    
    PiperOrigin-RevId: 364352006

[33mcommit 874b02097314558e13c2394deda409af11507265[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 19 15:04:47 2021 -0700

    Expand type parameter instances when unpacking tuples.
    
    Before my matcher fix for TypeParameterInstance, unpacking a
    TypeParameterInstance produced Any. After that change, we unpacked to
    Union[<all tuple element types>], causing new errors. Fixed by using
    abstract_utils.expand_type_parameter_instances() to get at the tuple value
    inside the TypeParameterInstance. We only want to do this if the parameter
    value is non-empty (otherwise we'll end up with the wrong number of values on
    the data stack).
    
    PiperOrigin-RevId: 363978769

[33mcommit a8c1522b7f44245ce38e9ac4ed7da84455fb5ba0[m
Merge: a7e558c1 bcc3ba0a
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 19 17:42:48 2021 -0700

    Merge pull request #868 from google/google_sync
    
    Google sync

[33mcommit bcc3ba0ab641a713580b6d161f89731ea389501b[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 19 14:32:30 2021 -0700

    Fix a Python 3.8 test failure caused by an opcode line number change.
    
    See https://github.com/google/pytype/runs/2145268308?check_suite_focus=true
    
    PiperOrigin-RevId: 363971919

[33mcommit 9f1f870be795b060bf923984d46d1969bdb12d6b[m
Author: mdemello <mdemello@google.com>
Date:   Fri Mar 19 11:44:22 2021 -0700

    Allow visitors to skip specific children in a node.
    
    Adds an additional return type to EnterNode. Return types are now:
    | False -> Don't visit node or subtree
    | {key,...} -> Visit node, but don't descend into node.key if key in skip set
    | None -> Visit node and all children
    
    PiperOrigin-RevId: 363937121

[33mcommit 2e06642430ffa21e169c8af1ffa4246736b930fe[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 18 19:28:51 2021 -0700

    Pass ninja relative paths instead of absolute ones.
    
    Fixes https://github.com/google/pytype/issues/863.
    
    Whatever path is passed to ninja is printed out in an "Entering directory ..."
    message. The linked issue points out that users may not want their username,
    etc., to appear in log files.
    
    PiperOrigin-RevId: 363800779

[33mcommit 9160ef4cffb2a6e59224480cbba4ccda59c9dd12[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 18 18:09:36 2021 -0700

    Allow annotation-type-mismatch directives to be put on more sensible lines.
    
    I've been cleaning up --check-parameter-types findings, to try to bring the
    number of findings down to something manageable before release. An issue that
    has come up several times is that it's confusing when the disable directive
    appears in the middle of a function signature, since it misleads the reader
    into thinking the directive applies only to the parameter(s) on that line.
    
    This change allows the directive to be put on any of the lines between the line
    of the MAKE_FUNCTION opcode (inclusive) and the line of the next opcode
    (exclusive).
    
    PiperOrigin-RevId: 363790579

[33mcommit df121d387bfed587afa7f2b6dd48992b370ba0cb[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 18 16:58:47 2021 -0700

    Fix a bug in matching TypeParameterInstance against a PyTDClass.
    
    PiperOrigin-RevId: 363778803

[33mcommit a7e558c17456d109478bbd02fef1e50a410c60ca[m
Merge: 5d24ebdb 808074a2
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 17 22:46:22 2021 -0700

    Merge pull request #864 from google/google_sync
    
    Google sync

[33mcommit 808074a22f057701c5d91084e9fcf7ce2d62a420[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 17 16:08:26 2021 -0700

    Fix pylint trailing-newlines error.
    
    See https://github.com/google/pytype/runs/2135247887?check_suite_focus=true
    
    PiperOrigin-RevId: 363529887

[33mcommit 4387788012ee6cd800f32ae400fb1a908810bb3a[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 17 15:56:51 2021 -0700

    Manual import of https://github.com/google/pytype/pull/862.
    
    PiperOrigin-RevId: 363527471

[33mcommit 4e4e0ff1aee80eaa88d66f3ea6499e549c285682[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 17 15:27:56 2021 -0700

    Fix the pyi type of attributes annotated with class type parameters.
    
    Previously, in a case like:
      class Foo(Generic[T]):
        def __init__(self, x: T):
          self.x = x
    the type of attribute x in the emitted type stub was Any when it should be T.
    This change:
    * Ensures that x is instantiated to TypeParameterInstance(<instance of Foo>)
      rather than being immediately evaluated to Any by passing the Foo instance as
      a container when instantiating x.
    * Adds a _scopes attribute in output.py to track conversion of
      InterpreterClasses so we can convert TypeParameterInstance to TypeParameter
      when the parameter is in the template of class being converted.
    * Fixes a bug where isinstance() checks did not work on TypeParameterInstances.
    
    PiperOrigin-RevId: 363521328

[33mcommit ba3373a3fbd5d0dc58b7bc5b7f80ea0c324c0bf5[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 17 15:08:24 2021 -0700

    Do some non-user-facing TypeVar fixes/cleanups.
    
    * Adds a 'container' input to abstract_utils.parse_formal_type_parameters.
      Usually, type parameters that are aliased to other type parameters are
      ignored by parse_formal_type_parameters, but in a case like:
        class Foo(Generic[T]):
          def __init__(self, x: List[T]): ...
      when List[T] is instantiated, we want T to be instantiated to a
      TypeParameterInstance. To do this, we pass in Instance(Foo) as a container,
      so parse_formal_type_parameters can check Foo's template.
    * When a TypeParameter bound to a generic class is instantiated to Unknown,
      mutates the value to the TypeParameter's bound/constraints. Previously, we
      mutated to Unknown, which led to the value basically being treated as Any.
    * In InterpreterFunction.call, moves the apply_mutations() call earlier, so
      that mutations are taken into account when analyzing the current method.
    * Improves reveal_type() to descend into TypeParameterInstances rather than
      outputting Any.
    * In attribute.py, skips TypeParameterInstance values that aren't visible at
      the current node.
    
    PiperOrigin-RevId: 363517195

[33mcommit 2827f3bf99ecd54358ac3c88d00650020846db18[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 17 11:38:34 2021 -0700

    Don't discard the 'container' argument when creating an Instance.
    
    To create a TypeParameterInstance, pytype needs a container object to bind the
    instance to. We were often throwing away the container in instantiate().
    
    PiperOrigin-RevId: 363468073

[33mcommit ac65c7f855662418b89c03583d330b4358244fd8[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 17 11:29:05 2021 -0700

    Track which instances of a class were created in analyze.py.
    
    For custom generic classes, if an attribute is annotated with a class type
    parameter, then when analyzing like this:
    
    class Foo(Generic[T]:
      def __init__(self, x: T):
        self.x = x
    
    def f():
      foo = Foo(0)
      return foo.x
    
    We want to ignore the instance of Foo created in f() when inferring the type of
    x; otherwise we'll end up with an incorrect type of Union[T, int].
    
    PiperOrigin-RevId: 363465617

[33mcommit 9d06b1373bbb43f10ae8e0e16d39bb8a98e2c1c8[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 17 09:53:16 2021 -0700

    Add a missing array.array.frombytes method.
    
    PiperOrigin-RevId: 363442063

[33mcommit 482ac4f18f70de706c7b538468b2a7b4a54fbcaf[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 17 09:52:33 2021 -0700

    Add a test case for a module and a package sharing a name.
    
    pytype does the right thing in this case, but it's not obvious, so I added a
    test case to make the intended behavior clear.
    
    PiperOrigin-RevId: 363441886

[33mcommit 5ae371ebee4a34b7098b865161b2b800d59d1f08[m
Author: mdemello <mdemello@google.com>
Date:   Mon Mar 15 15:32:04 2021 -0700

    Extend dataclass code generation to support attrs as well.
    
    Attrs in pyi files have an implicit `auto_attribs=True`.
    
    PiperOrigin-RevId: 363044985

[33mcommit c1e90c79bd00108a50a269ea6d836e1d8ec65fde[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 15 15:21:56 2021 -0700

    Save the first arg to InterpreterFunction.call even if non-positional.
    
    I'm doing this mostly to unify the first_posarg and self_var variables in this
    method. It also fixes a rather obscure/contrived bug.
    
    PiperOrigin-RevId: 363042829

[33mcommit ab6edb872c6d5bcf7819eed8678a341251de14ad[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 15 11:05:56 2021 -0700

    Fix a crash caused by instantiating a value to a TypeParameter.
    
    When a value is annotated as Type[T], where T is a TypeVar, it gets
    instantiated to an abstract.TypeParameter. This causes the abstract matcher to
    crash.
    
    PiperOrigin-RevId: 362982552

[33mcommit 7e22dcfa713f0b3dd0f149b42b4360f3475dcd47[m
Author: mdemello <mdemello@google.com>
Date:   Fri Mar 12 15:27:23 2021 -0800

    Move dataclass code generation to PyTDClass.__init__ to support inheritance.
    
    * Moves pytd code generation directly into pytd/codegen/decorate, since we only
      want this for dataclass-like decorators right now, and attrs will use the
      same code.
    * Adds support for one pyi dataclass inheriting from another
    * Validates pyi dataclasses in the parser.
    
    This code is pretty specific to the dataclass use case (generating an __init__
    function from fields collected from all parent dataclasses), and can be
    generalised if we ever want to support other pyi decorators that need inherited
    attributes. (Code generation that does not need inherited attributes can
    continue to be done in the parser, e.g. namedtuples).
    
    Some of the code is pretty hacky due to the difficulty of generating "final"
    pytd subtrees without going through the loader.
    
    PiperOrigin-RevId: 362612365

[33mcommit acccb78f0034314fd2756e674c923ae67fb8d09f[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 11 16:25:07 2021 -0800

    Don't check attribute values against types from pyi files.
    
    After trying out --check-attribute-types on some real code, I think checking
    against pyi types is too aggressive, since we end up enforcing inferred types,
    which are often too narrow.
    
    PiperOrigin-RevId: 362402433

[33mcommit 0eb9b55fbcf8fbfb77231577db79c172ca175bde[m
Author: mdemello <mdemello@google.com>
Date:   Thu Mar 11 13:29:28 2021 -0800

    Add STORE_DEREF to the list of class definition opcodes.
    
    PiperOrigin-RevId: 362364847

[33mcommit 824b22e0e8d493faa470c61bdaf715786a0c9442[m
Author: mdemello <mdemello@google.com>
Date:   Wed Mar 10 11:46:01 2021 -0800

    Support inheritance from dataclasses defined in pyi files.
    
    * Moves all metadata key computations to class_mixin
    * Adds a method to init attribute metadata from pytd constants
    * Initializes attribute metadata when constructing a PyTDClass
    
    PiperOrigin-RevId: 362104624

[33mcommit 5d24ebdbbc6a1f109b7bc1fbfd987db7db497e57[m
Merge: 315773df 0937673a
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 17 15:53:44 2021 -0700

    Merge pull request #862 from xiaoxiae/master
    
    Fix dead pyi-examples link in user_guide.md

[33mcommit 0937673aa6f3ff70d07e42a9000fd17d99c21a33[m
Author: xiaoxiae <tomas.slama.131@gmail.com>
Date:   Wed Mar 17 12:56:58 2021 +0100

    Fix dead pyi-examples link in user_guide.md

[33mcommit 315773df0148480d824b5ebda5a4732496c5308d[m
Merge: 9109328c 930277f7
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 11 10:56:31 2021 -0800

    Merge pull request #858 from sethvargo/patch-1
    
    Improve Actions hygiene

[33mcommit 930277f7476cea5d0e842e8407d95a74c440016e[m
Author: Seth Vargo <seth@sethvargo.com>
Date:   Wed Mar 10 17:24:54 2021 -0500

    Improve Actions hygiene
    
    👋 hello there! I'm a fellow Googler who works on projects that leverage GitHub Actions for CI/CD. Recently I noticed a large increase in our queue time, and I've tracked it down to the [limit of 180 concurrent jobs](https://docs.github.com/en/actions/reference/usage-limits-billing-and-administration) for an organization. To help be better citizens, I'm proposing changes across a few repositories that will reduce GitHub Actions hours and consumption. I hope these changes are reasonable and I'm happy to talk through them in more detail.
    
    - **(you were already doing this, thank you!)** Only run GitHub Actions for pushes and PRs against the main branch of the repository. If your team uses a forking model, this change will not affect you. If your team pushes branches to the repository directly, this changes actions to only run against the primary branches or if you open a Pull Request against a primary branch.
    
    - For long-running jobs (especially tests), I added the "Cancel previous" workflow. This is very helpful to prevent a large queue backlog when you are doing rapid development and pushing multiple commits. Without this, GitHub Actions' default behavior is to run all actions on all commits.
    
    There are other changes you could make, depending on your project (but I'm not an expert):
    
    - If you have tests that should only run when a subset of code changes, consider gating your workflow to particular file paths. For example, we have some jobs that do Terraform linting, but [they only run when Terraform files are changed](https://github.com/google/exposure-notifications-verification-server/blob/c4f59fee71042cf668747e599e7c769fca736554/.github/workflows/terraform.yml#L3-L11).
    
    Hopefully these changes are not too controversial and also hopefully you can see how this would reduce actions consumption to be good citizens to fellow Googlers. If you have any questions, feel free to respond here or ping me on chat. Thank you!

[33mcommit 9109328c841fc216b5fb97ae80778be8d358c815[m[33m ([m[1;33mtag: 2021.03.10[m[33m)[m
Merge: 3e13f9e1 673703d8
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 10 13:49:38 2021 -0800

    Merge pull request #857 from google/google_sync
    
    Prepare a PyPI release.

[33mcommit 673703d83ed6669a4fe12331517994418b3271aa[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 10 11:37:06 2021 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 362102388

[33mcommit 3e13f9e10ce9030ca6d4e283edf0c6eebee374bd[m
Merge: c32cb48e c8de59e0
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 9 19:39:59 2021 -0800

    Merge pull request #856 from google/google_sync
    
    Google sync

[33mcommit c8de59e0e62c0024b5275d5b86d8b0128fc73984[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 9 16:21:47 2021 -0800

    Remove the legacy parser extension.

[33mcommit 68fe604f4ecf5d2b71c0cb425b779b4b4c5e4d0b[m
Author: mdemello <mdemello@google.com>
Date:   Tue Mar 9 15:49:46 2021 -0800

    Get rid of the legacy pyi parser.
    
    * Deletes all old parser code under pyi/
    * Moves pyi/typed_ast/* upwards into pyi/
    * Renames ast_parser -> parser
    * Copies ast_parser_test into parser_test
    * Deletes the typeshed parsing diff test
    * Updates some documentation that referred to the old parser
    
    PiperOrigin-RevId: 361915877

[33mcommit c32cb48e473ad026f374483e2d667ffa69425db4[m
Merge: 0e99bad1 d2e4dc6f
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 9 16:17:14 2021 -0800

    Merge pull request #855 from google/google_sync
    
    Google sync

[33mcommit d2e4dc6fcd62c738e7c437d27064826c0114a98f[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 9 14:42:40 2021 -0800

    Enable more of --check-attribute-types.
    
    PiperOrigin-RevId: 361901535

[33mcommit ffe0d11431d9cf3bb524bb0d42c58b8195f9c738[m
Author: rigge <rigge@google.com>
Date:   Tue Mar 9 14:12:36 2021 -0800

    Remove the trailing period when printing documentation link.
    
    The trailing period in the URL makes copy-paste more difficult because you cannot select the entire line without picking up the period, which breaks the anchor link.
    
    PiperOrigin-RevId: 361894925

[33mcommit 5e91be8bf589249785e4dd307103f972d4d6b879[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 9 13:33:04 2021 -0800

    Fix a caching bug that caused incorrect function parameter defaults.
    
    PiperOrigin-RevId: 361885519

[33mcommit 1e88e14ae3dc75147ac2fef5e7b45d075ee76e81[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 8 15:57:16 2021 -0800

    Make NotImplementedType inherit from bool.
    
    This is a white lie that lets comparison methods return NotImplemented and
    prevents propagation of a problematic inferred type (Union[NotImplementedType,
    bool]).
    
    PiperOrigin-RevId: 361677968

[33mcommit 5284070075ea30b8119045855f06fa822be7dc19[m
Author: mdemello <mdemello@google.com>
Date:   Mon Mar 8 12:20:29 2021 -0800

    Move class metadata code from overlays/ to class_mixin.
    
    PiperOrigin-RevId: 361627376

[33mcommit 0e99bad17389a428d6a49868506e403416e28cde[m
Merge: dbfa996c 211d8cb0
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Mar 6 00:25:03 2021 -0800

    Merge pull request #852 from google/google_sync
    
    Google sync

[33mcommit 211d8cb0be21a0a84828c8050a76ddc1d1ac06bb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Mar 6 00:01:27 2021 -0800

    Fix a type error in pytype/pytd/codegen/.
    
    PiperOrigin-RevId: 361236353

[33mcommit 4efe3c1560c47c47157cad7600a1efc0e70e9eb9[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 5 14:29:39 2021 -0800

    Fix a circular import error.
    
    Fixes an import error in pyi files caused by deleting entries from the import
    map.
    
    Instead of deleting pyis, this change checks specifically for the case of an
    __init__ file looking up submodules and ignores the __init__ file's own
    incomplete pyi in this case.
    
    Resolves https://github.com/google/pytype/issues/760.
    
    Tested:
      Built the pytype pars and ran a TGP:
      []
      There are two new findings, both legitimate.
    PiperOrigin-RevId: 361225796

[33mcommit fff79250cc59b154f17cd65e5299b3a73db2baae[m
Author: mdemello <mdemello@google.com>
Date:   Thu Mar 4 18:08:48 2021 -0800

    Move mixin.Class to its own module.
    
    PiperOrigin-RevId: 361046070

[33mcommit bef12292094f616f1c927acb059a60ff93164f3d[m
Author: mdemello <mdemello@google.com>
Date:   Thu Mar 4 03:08:13 2021 -0800

    update doc freshness
    
    PiperOrigin-RevId: 360872705

[33mcommit ffa4da794bfdfcb711144e756c8ec33f244fb088[m
Author: mdemello <mdemello@google.com>
Date:   Wed Mar 3 14:14:05 2021 -0800

    Basic support for defining dataclasses in pyi files.
    
    Lets a dataclass be defined by class variable annotations and a dataclass
    decorator.
    
    Inheritance is not supported yet.
    
    PiperOrigin-RevId: 360754606

[33mcommit dbfa996c83302239d3a2161d4ea1b924d3c3206a[m[33m ([m[1;33mtag: 2021.03.03[m[33m)[m
Merge: 02cf301b b36674f2
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 3 16:07:39 2021 -0800

    Merge pull request #851 from google/google_sync
    
    Prepare a PyPI release.

[33mcommit b36674f2a60736207d39c12d305a5b877315df1c[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 3 14:06:19 2021 -0800

    Prepare a PyPI release.
    
    I also modified the CHANGELOG entry from 2021.02.23 because I realized I forgot
    to include the typeshed update ^^;
    
    PiperOrigin-RevId: 360752807

[33mcommit 02cf301b8de7a02ebe49ef738ae22a3ccb2ad4ed[m
Merge: 41092250 8c22d195
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 2 14:16:07 2021 -0800

    Merge pull request #850 from google/google_sync
    
    Google sync

[33mcommit 8c22d1953877193e4f61404c6a3ae2b1b70e7b90[m
Author: mdemello <mdemello@google.com>
Date:   Tue Mar 2 11:34:25 2021 -0800

    Fix initialization of Union types in forward references.
    
    If a LateAnnotation is an alias to a Union type, and has been initialized
    before being resolved, set instance.cls to abstract.Unsolvable so as not to
    crash the attribute system, and let the resolved annotation match in a later
    code path.
    
    PiperOrigin-RevId: 360476268

[33mcommit cc241b380fb06af2e68c6059d286d78f15bccc83[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 1 17:58:46 2021 -0800

    Update the pytype FAQ:
    
    * --check-variable-types and --check-container-types have been enabled by
      default internally.
    * To silence spurious errors on heterogeneous dicts, users should add a local
      variable annotation.
    
    PiperOrigin-RevId: 360319490

[33mcommit f80ed0017d2182cabd458c0b237a7524d4cde4cb[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 1 17:51:13 2021 -0800

    Enable part of --check-attribute-types.
    
    With this change, pytype will not replace user-annotated attribute types with
    its own inferred types. I already ran a TGP and patched everything that turned
    up.
    
    PiperOrigin-RevId: 360318328

[33mcommit 4109225011ddde177ee32af7da5832babaa52220[m
Merge: d92ce824 1445d68d
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 26 16:26:39 2021 -0800

    Merge pull request #849 from google/google_sync
    
    Google sync

[33mcommit 1445d68d1636bab5e10b4ded3072c379f460cc73[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 26 15:06:58 2021 -0800

    Fix a caching bug in check_container_types.
    
    I'm surprised this code worked as well as it did...
    
    PiperOrigin-RevId: 359847379

[33mcommit cbc3c5f1cf99172a1eac6db8e0c66b6fc22bf188[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 26 14:56:37 2021 -0800

    Fix a bug where multiple definitions of a TypeVar could end up in a stub.
    
    We were using a set to avoid adding multiple copies of the same TypeVar to an
    inferred stub. However, we were still ending up with two copies of AnyStr
    because they were slightly different:
      TypeParameter('AnyStr', constraints=(ClassType(str), ClassType(bytes))), vs
      TypeParameter('AnyStr', constraints=(NamedType(str), NamedType(bytes)))
    Fixed by using the TypeVar name to check for duplicates, rather than the entire
    TypeVar object.
    
    Fixes https://github.com/google/pytype/issues/847.
    
    PiperOrigin-RevId: 359845246

[33mcommit a54591e6eef1af2c3663b0f130545b3cf6183d7e[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 26 14:21:11 2021 -0800

    Use typeshed stubs in preference to empty stubs.
    
    load_pytd has some logic to only use default stubs
    (def __getattr__(name) -> Any) if a better stub is not found in typeshed.
    However, this logic did not take into account empty stubs created when
    imports_info contains an entry for a submodule but not its parent module.
    
    Fixes https://github.com/google/pytype/issues/846.
    
    PiperOrigin-RevId: 359837989

[33mcommit d92ce82414af6362828767fa9c775954b23b3305[m
Merge: 7b033a84 24b05886
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 25 15:37:13 2021 -0800

    Merge pull request #848 from google/google_sync
    
    Google sync

[33mcommit 24b0588661f356d792c97a07fa757ec0042a7ac9[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 25 14:17:29 2021 -0800

    Take a TypeVar's bound into account when instantiating it in attribute.py.
    
    I noticed while working on something else that we were accidentally ignoring
    TypeParameter.bound in _filter_var in attribute.py.
    
    PiperOrigin-RevId: 359611226

[33mcommit b85c5d6fed81604525061b42915610819038e9cc[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 25 12:02:37 2021 -0800

    Don't report [not-instantiable] when instantiating an abstract annotation.
    
    pytype helpfully reports [not-instantiable] if you try to create an instance of
    an abstract class. However, this error is not helpful if the abstract class
    comes from a `Type[AbstractClass]` annotation, as it's a common pattern to
    annotate a function as accepting a `Type[AbstractClass]` and pass in
    non-abstract subclasses. It suddenly occurred to me today that fixing this bug
    is trivial now that we have a BaseValue.from_annotation attribute =)
    
    PiperOrigin-RevId: 359580391

[33mcommit a5cf1a003e5481bcfa9491817a5349721f96890a[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 24 15:36:15 2021 -0800

    Add a pytd_utils.MatchesFullName method.
    
    pyi/typed_ast/definitions.py has a helpful _matches_full_name method. This
    change pulls it out into pytd_utils so it can be used elsewhere. I also add the
    capability to handle a tuple of names, since it's common to check whether a
    node's name matches typing.X or typing_extensions.X.
    
    PiperOrigin-RevId: 359385571

[33mcommit 128524fba433159c6e95f3438c999824dbf7a5ea[m
Author: mdemello <mdemello@google.com>
Date:   Wed Feb 24 14:42:34 2021 -0800

    Add a 'value' field to pytd.Constant, with a default of None
    
    Also fixes the AncestorMap optimisation in pytd.base_visitor, which was still
    assuming node types could be strings.
    
    PiperOrigin-RevId: 359373986

[33mcommit 7b033a8484661e61f94643a2fe34fcd5c8380498[m
Merge: 4a75f92e ba6f25be
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 23 22:48:54 2021 -0800

    Merge pull request #844 from google/google_sync
    
    Allow builtins.tuple to be used for a heterogeneous tuple annotation.

[33mcommit ba6f25be3823bca5efc2b678134b8b58e5406d98[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 23 22:23:21 2021 -0800

    Allow builtins.tuple to be used for a heterogeneous tuple annotation.
    
    Fixes https://github.com/google/pytype/issues/839.
    
    PiperOrigin-RevId: 359212099

[33mcommit 4a75f92ec20b73329e15daa14d91e1d73aec3c71[m
Merge: 8704a6ee 1fd7b5d3
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 23 19:15:48 2021 -0800

    Merge pull request #843 from google/google_sync
    
    Allow callable constants to match protocol methods.

[33mcommit 1fd7b5d33ceeed8a9bf7ced304c3d73b065a080e[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 23 18:29:16 2021 -0800

    Allow callable constants to match protocol methods.
    
    Previously, pytype only took methods into account for protocol matching. But if
    a class has a constant whose type has a __call__ method, that constant should
    be allowed to satisfy a method in a protocol.
    
    Fixes https://github.com/google/pytype/issues/753.
    
    PiperOrigin-RevId: 359181707

[33mcommit 8704a6eeb61dbb28640716c22fc956877efb9fa2[m[33m ([m[1;33mtag: 2021.02.23[m[33m)[m
Merge: 9cd78449 c4ed0173
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 23 12:26:03 2021 -0800

    Merge pull request #842 from google/google_sync
    
    Google sync

[33mcommit c4ed01739761995620697ad6f995995ac57fe6f1[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 23 11:56:57 2021 -0800

    Prepare a PyPI release.
    
    I'd like to get the collections.abc.Callable fix out.
    
    PiperOrigin-RevId: 359099307

[33mcommit bc9ccb5c87ebbc0034d999ba70486f1bce4698e3[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 23 11:44:12 2021 -0800

    Support using collections.abc.Callable in type stubs.
    
    See https://github.com/python/typeshed/pull/5055.
    
    typeshed is moving toward using types from builtins and collections.abc rather
    than typing (PEP 585). Mostly, this should just work with pytype, since we
    rewrite typing.X to builtins.x anyway, and the collections.abc types are
    represented as aliases of the typing ones.
    
    However, typing.Callable has its own pytd node type, so we need to special-case
    collections.abc.Callable in the parser. Since Tuple also has a special node
    type, I added a test for Tuple as well - that appears to already be working.
    
    PiperOrigin-RevId: 359096397

[33mcommit 52f3332dc79393755b5213e9d97d3f7773ab4ce6[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 22 17:19:50 2021 -0800

    Don't apply discard_concrete_values to TYPE_CHECKING.
    
    This fixes a bug where typing.TYPE_CHECKING could be used in function and class
    bodies but TYPE_CHECKING could not.
    
    PiperOrigin-RevId: 358938622

[33mcommit 1271985199fe62a3fe95361a8e16b0d66d23524e[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 22 16:18:00 2021 -0800

    Mark pytype as able to run under Python 3.9.
    
    PiperOrigin-RevId: 358928183

[33mcommit 9cd7844923872a988458b95968849dbe5f4c6b6c[m
Merge: 1429e9b6 30bba407
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Feb 22 17:48:18 2021 -0800

    Merge pull request #840 from google/py39
    
    Allow pytype to be installed in Python 3.9.

[33mcommit 30bba407c58f6347d32fad29acae2754f14e1c58[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Feb 22 14:24:56 2021 -0800

    Allow pytype to be installed in Python 3.9.
    
    For https://github.com/google/pytype/issues/749.
    
    I manually ran the pytype tests with host version = 3.9 and target = 3.8
    to confirm that, while pytype cannot yet analyze 3.9 code, it has no
    trouble running under 3.9.
    
    This change
    (1) Ensures that users attempting to install pytype in 3.9 get the
    latest version. Currently, they get version 2020.2.6, which is old and a
    little broken (see, e.g., https://github.com/google/pytype/issues/834).
    (2) Allows users to run pytype in 3.9 and analyze 3.5-3.8 code by
    specifying --python_version. This is arguably not very useful, since
    pytype won't be able to resolve pip-installed dependencies, but it may
    be good enough for small, self-contained projects.

[33mcommit 1429e9b65304d95ad8a061331fde1bb6949fa499[m
Merge: 8257781c 186c1231
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Feb 22 16:16:49 2021 -0800

    Merge pull request #841 from google/google_sync
    
    Google sync

[33mcommit 186c12312e1e8d72bf3258d604b1411d0655fea8[m
Author: mdemello <mdemello@google.com>
Date:   Mon Feb 22 15:16:32 2021 -0800

    Replace generic terminology in load_pytd with more precise names.
    
    PiperOrigin-RevId: 358914822

[33mcommit 5876a33bdadfdfd5235269d3c828d15191f4fc56[m
Author: mdemello <mdemello@google.com>
Date:   Mon Feb 22 15:11:32 2021 -0800

    Microoptimisation - don't use a stack when an int will do.
    
    PiperOrigin-RevId: 358913680

[33mcommit 8510c8697e87d7d792343610a53f84e1de779b2f[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 22 14:57:53 2021 -0800

    Fix opensource lint errors in pytype/pyi/typed_ast/.
    
    pylint started reporting consider-using-generator findings with a new release
    yesterday (https://pypi.org/project/pylint/#history). This showed up as a CI
    failure on a PR: https://github.com/google/pytype/pull/840.
    
    PiperOrigin-RevId: 358910501

[33mcommit e2536c3ff12fd502897d1fe0d9824ea04ad731a6[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 22 14:27:13 2021 -0800

    Fix a bug in pytype/pyc/pyc_test.
    
    A while ago, I changed the python_exe argument to be a List[str] instead of a
    str, but I missed updating this test. This issue went unnoticed for a long time
    because python_exe is unused when host version == target version.
    
    I also fixed a lint error.
    
    PiperOrigin-RevId: 358903954

[33mcommit d8cabf86dedbde4a1b6b8f1355c11752d7f39a28[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 22 11:50:50 2021 -0800

    Fix a couple more crashes in --check-container-types.
    
    I ran another TGP, and it looks like this fixes the last of the crashes caused
    by my match_var_against_type change.
    
    PiperOrigin-RevId: 358869886

[33mcommit b578f7aafaaeebc380f21589b1dc1a08e8061140[m
Author: mdemello <mdemello@google.com>
Date:   Fri Feb 19 20:44:51 2021 -0800

    Move AST resolution out of the main Loader class.
    
    * Add a _Resolver class to hold AST resolution and verification methods that do
    not access Loader state. The main motivation is to make the loader code easier
    to follow, and ultimately to add better tracking of the life cycle of a loaded
    module.
    
    * Use more consistent names for various ASTs being passed around:
    - mod_ast: The current module AST, being constructed/resolved/verified
    - lookup_ast: A supplementary AST to look up symbols in mod_ast
    - dep_ast: An AST of a dependency in mod_ast
    
    Likewise, lookup_ast_name and mod_name for AST name overrides
    
    * Also move builtin pytd file loading out of the Loader, and do some minor code
    cleanups.
    
    PiperOrigin-RevId: 358533893

[33mcommit 0f47a044be299d42c92c7af11a2f5eb7bccf4490[m
Author: mdemello <mdemello@google.com>
Date:   Fri Feb 19 20:43:47 2021 -0800

    Cache all import_name calls.
    
    PiperOrigin-RevId: 358533840

[33mcommit 8257781ced108f1e081a360f3af6edc6dbe80252[m
Merge: b2e49d23 70c2dc84
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 19 20:27:34 2021 -0800

    Merge pull request #838 from google/ts
    
    Update typeshed to 869238e587ce2bb2e1b990026d5a038f6eb0f1a3.

[33mcommit 70c2dc840a53a7658192715bd3fe1aa01d076bf6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 19 17:35:07 2021 -0800

    Update typeshed to 869238e587ce2bb2e1b990026d5a038f6eb0f1a3.

[33mcommit b2e49d23571226d5c3a5bcb2de6107e2c70bf019[m
Merge: 1e9b3650 df7efc20
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 19 17:34:06 2021 -0800

    Merge pull request #837 from google/google_sync
    
    Use node.HasCombination() to check visibility of container_type_misma…

[33mcommit df7efc206251d7044585913ee61f9722f3702aed[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 19 15:35:56 2021 -0800

    Use node.HasCombination() to check visibility of container_type_mismatch errors
    
    Fixes https://github.com/google/pytype/issues/835.
    
    PiperOrigin-RevId: 358496262

[33mcommit 1e9b36506c6b0753e6b3333fd0a64d01ea8c63f5[m[33m ([m[1;33mtag: 2021.02.19[m[33m)[m
Merge: 962a1ac1 318bb252
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 19 13:57:46 2021 -0800

    Merge pull request #836 from google/google_sync
    
    Google sync

[33mcommit 318bb2527c0503b20670066669801dd87dd1d5f7[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 19 11:59:13 2021 -0800

    Prepare a PyPI release.
    
    The Build Failures table is empty except for a couple py2/py3 issues, so it's a
    good time to do a PyPI release.
    
    PiperOrigin-RevId: 358453668

[33mcommit 81545918e012e1888a725145fbb215647ebbedf7[m
Author: mdemello <mdemello@google.com>
Date:   Thu Feb 18 23:14:58 2021 -0800

    Start refactoring the loader.
    
    * Split (module -> filepath) lookup into a PathFinder class
    * Split {module_name : Module} cache into a ModuleMap class
    * Factor out some common code in the top level import_* methods
    
    PiperOrigin-RevId: 358343857

[33mcommit cd7406fd4bcd85a98918f29b535db492cc58cbe5[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 18 12:04:01 2021 -0800

    Fix a crash caused by passing match_var_against_type an incomplete view.
    
    While debugging this crash, I also noticed that my previous change had caused
    check_container_types to do extra work in cases in which two different views
    produce the same mutation, so I fixed that as well.
    
    PiperOrigin-RevId: 358232746

[33mcommit 6512407c1f3ad62445c81f8dfebb35a7fbc5c3bb[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 18 11:25:05 2021 -0800

    Fix a bug in how pytype detects nested generic classes.
    
    Previously, pytype was checking a function's locals and treating any
    InterpreterClass found there as a definition of a nested class. This meant that
    any reference to a generic InterpreterClass was incorrectly treated as a
    definition whose template needed to be checked. Instead, we should only check a
    local if it is a class that is stored under its own name.
    
    PiperOrigin-RevId: 358223202

[33mcommit c9257a25b660287864ab6c54edf16ee67954b317[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 17 11:28:07 2021 -0800

    Use match_var_against_type instead of match_from_mro for check_container_types.
    
    This fixes a bug I noticed in a TGP - container mutation checks weren't taking
    protocols into account.
    
    PiperOrigin-RevId: 357993867

[33mcommit 962a1ac118a4daa660170a54cad5ce3ad86a1c1f[m
Merge: 3e77b70c 39caf35a
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 16 20:28:20 2021 -0800

    Merge pull request #833 from google/google_sync
    
    Google sync

[33mcommit 39caf35a11e06d1fff1727a10362c2b2364a3b35[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 16 11:46:17 2021 -0800

    Fix some type annotations in pytype/pytd/codegen/.
    
    I realized that pytype isn't analyzing pytype.pytd.parse.node internally
    because it's using pyx_extension. But when we export to GitHub, node does get
    analyzed, so we get new type errors =/
    
    PiperOrigin-RevId: 357770063

[33mcommit 33bfb9b634d3563a0c81fa3f28665d46e51eb8f1[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 16 09:39:10 2021 -0800

    Fix an if-splitting bug by (mostly) ignoring cycles in the CFG.
    
    When an element is added to a container, followed by more elements added in a
    loop, pytype would forget a None check done on the first element. The reason
    for this is that, when the additional elements are added, the None option for
    the first element is copied to one of the nodes in the loop, and then the
    binding in the loop is considered always solvable because it's treated as its
    own origin. This can be fixed by ignoring cycles except when there are no other
    possible origins.
    
    This fixes 6 (!!!) user-reported issues.
    
    PiperOrigin-RevId: 357738294

[33mcommit f2fea9cc506bc2a7cb00bce886a046ce6deb4a58[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 12 18:25:23 2021 -0800

    Fix several cases of class type parameters being instantiated incorrectly:
    
    * When analyzing a method of a generic class, pytype temporarily annotates
      'self' to make sure the class type parameters are taken into account.
      Instances of generic classes are sometimes represented as
      Instance(ParameterizedClass(X)) and sometimes as Instance(X), and pytype was
      failing to annotate 'self' in the second case.
    * annotations_util.add_scope wasn't adding scopes to most of the type
      parameters in a TupleClass, causing class type parameters to not be
      substituted in properly.
    * When ambiguous arguments were passed to the constructor of a generic class,
      but the class type parameters were unambiguously declared by the user, pytype
      was merging the declared types and the ambiguous arguments in the matcher,
      losing the more precise type information.
    
    PiperOrigin-RevId: 357304507

[33mcommit 8e96542ddc8c2121082b318d4bb0a673093f93c8[m
Author: mdemello <mdemello@google.com>
Date:   Fri Feb 12 13:05:52 2021 -0800

    Move pytd namedtuple code generation to the pytd/ tree
    
    * Create pytd/codegen
    * Copy pytd generation code from pyi/typed_ast to pytd/codegen
    * Refactor pyi/typed_ast/* to use the new code location.
    * Modify the parser error handling to wrap all exceptions in ParseError
    
    PiperOrigin-RevId: 357252743

[33mcommit 0b34dbe88b9143ba418f8107fd1a032db250bf4c[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 10 18:05:17 2021 -0800

    Fix 'nothing' parameter inference for self arguments in custom generic classes.
    
    The logic in PrintVisitor to drop the type of 'self' when it matches the class
    name was broken for generics.
    
    PiperOrigin-RevId: 356872128

[33mcommit acaa04a6006d94782dac98548623af64f0c6153e[m
Author: tsudol <tsudol@google.com>
Date:   Wed Feb 10 15:19:40 2021 -0800

    When outputting cfg or typegraph, wait for DOT to complete.
    
    Instead of writing directly to proc.stdin, use proc.communicate() to send the dot file over stdin and wait for proc to complete.
    
    PiperOrigin-RevId: 356838356

[33mcommit eb09d3b575351e445b16dfe35a6394f960b3443a[m
Author: tsudol <tsudol@google.com>
Date:   Tue Feb 9 15:54:12 2021 -0800

    Use text mode for subprocess in debug.py:program_to_do.
    
    Since pytype no longer supports host Python 2, there's no need for six here. Instead, explicitly use StringIO and, in analyze.py, use universal_newlines to force text mode for subprocesses.
    
    PiperOrigin-RevId: 356611608

[33mcommit 3e77b70c305def258b0917babc72d3bb1e081c69[m[33m ([m[1;33mtag: 2021.02.09[m[33m)[m
Merge: 86581191 8b8508c5
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 9 14:51:21 2021 -0800

    Merge pull request #830 from google/google_sync
    
    Google sync

[33mcommit 8b8508c5ae452e2aa852517efe62795e9d4f60a1[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 9 14:17:44 2021 -0800

    Prepare a PyPI release.
    
    PiperOrigin-RevId: 356589503

[33mcommit 4746358f4e501bb9c4f9b050a76c398fbe7829ba[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 9 12:01:08 2021 -0800

    Resolve pytype findings in pytype source code.
    
    I tried a local export of the pytd namedtuple->attrs change. Opensource pytype
    reported a number of new findings. (I don't know why these weren't caught
    internally.) There were two incorrect annotations in pytd.py - they were
    incorrect all along, but the switch to attrs allowed pytype to catch them.
    There were also two places where pytype didn't understand a check that
    restricted an object's type.
    
    PiperOrigin-RevId: 356558085

[33mcommit 10e22d67099affd1ac1846d1b4b4de0850cbb851[m
Author: mdemello <mdemello@google.com>
Date:   Tue Feb 9 00:46:34 2021 -0800

    Replace namedtuples with attrs in our pytd representation.
    
    This is a fairly straightforward translation to minimise diffs. Attrs were
    chosen over dataclasses because they support features like slots, converters
    and hash caching.
    
    * Convert all pytd classes to attrs
    * Rewrite the node and base visitor classes to work with attrs
    * Remove code that worked with the old namedtuple and precondition system.
    
    PiperOrigin-RevId: 356445164

[33mcommit 86581191f9411cae12c3792f9240688b6811cbc9[m
Merge: fc96224f 21ea32ec
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Feb 8 21:57:58 2021 -0800

    Merge pull request #829 from google/google_sync
    
    Google sync

[33mcommit 21ea32ec7427bbc819c04903cfb915888bba021f[m
Author: mdemello <mdemello@google.com>
Date:   Mon Feb 8 18:48:47 2021 -0800

    Add a note when using AnyStr in an annotation.
    
      x: <expr involving Anystr>
    
    now adds
    
      Note: AnyStr is a TypeVar; use Union[str, bytes] or typing.Text for string
      types.
    
    PiperOrigin-RevId: 356403618

[33mcommit 7661b7c47a5f061d11103a73f5115fd1896abebc[m
Author: tsudol <tsudol@google.com>
Date:   Mon Feb 8 18:19:47 2021 -0800

    Fully qualify `std::size_t` to avoid platform incompatibilities.
    
    The C++11 standard requires that `cstddef` puts `size_t` in the `std` namespace. However, some implementations also put `size_t` in the global namespace for backwards compatibility. Since this isn't guaranteed, we should always be using `std::size_t`.
    
    Also fixes `int64_t` not being qualified in some files.
    
    PiperOrigin-RevId: 356399686

[33mcommit 8c4481cea029698ba8190f8c03a71473c6056e3b[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 8 18:12:29 2021 -0800

    Fix a test that was using Python 3-only syntax (ellipses).
    
    PiperOrigin-RevId: 356398594

[33mcommit bb4995a9affc8cd8b7cf6b9cc4aa80f4d5eede16[m
Author: Satyabhama-Reddy <satyabhamareddy@gmail.com>
Date:   Mon Feb 8 15:13:26 2021 -0800

    Adding isascii attribute to str,bytes and bytearray (#825)
    
    Pull Request for Issue "False positive str.isascii missing attribute #493"
    
    Resolves #825
    
    PiperOrigin-RevId: 356363565

[33mcommit 304685ddbafe4f1248ce5303e82e82baafa92871[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 8 14:29:02 2021 -0800

    Fix isinstance() bug by moving AnnotationClass check into _flatten().
    
    pytype wasn't recognizing isinstance(..., (Sequence,)) because the check that
    turned AnnotationClass(Sequence) into Sequence needs to happen after we flatten
    tuples, not before.
    
    PiperOrigin-RevId: 356354044

[33mcommit 0318e97d2003dba41984f4cd9a1d9615a9cc6209[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 3 21:00:28 2021 -0800

    Partially support wrapping attr.s.
    
    With this change, pytype will recognize wrappers for attr.s as long as they're
    used in the same file in which they're defined.
    
    I checked our other uses of Args.simplify() and realized that we typically
    simplify the arguments before matching, not after as I did in my previous
    dataclasses change, so I fixed that as well.
    
    PiperOrigin-RevId: 355544594

[33mcommit edd2b0fbeca7d773d4397a506567eb34dc232ef2[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 2 14:40:27 2021 -0800

    Internal change
    
    PiperOrigin-RevId: 355255836

[33mcommit 851586750e57b83a6e07821a0221421bc57d11cd[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 2 10:59:19 2021 -0800

    Internal change
    
    PiperOrigin-RevId: 355205803

[33mcommit fc96224fd3923433bdfca63592d57406abb792a3[m
Merge: 2b87d922 92da0fc1
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Feb 1 14:42:45 2021 -0800

    Merge pull request #827 from google/google_sync
    
    Google sync

[33mcommit 92da0fc1f5b4d039daae0aaecd5c4a5a515678d0[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 1 14:04:52 2021 -0800

    Call args.simplify() in dataclasses.field() so that kwargs forwarding works.
    
    Resolves https://github.com/google/pytype/issues/822.
    
    PiperOrigin-RevId: 355022035

[33mcommit bb4c64aca5489364d4feb6a4fa8b64b176386838[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 1 12:36:03 2021 -0800

    Define get_special_attribute on Deleted to always return Any.
    
    We'll still report an error on the attribute access (a name-error on the
    deleted name) but won't report follow-up errors where the attribute is used.
    
    PiperOrigin-RevId: 355001984

[33mcommit 1789a8a733937c3219dd47c7f1a9e842da1dba59[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 29 13:57:08 2021 -0800

    Don't allow typing.AnyStr to be used without being imported first.
    
    visitors.AdjustTypeParameters redefines imported TypeVars, so builtins
    importing AnyStr led to pytype thinking that AnyStr was defined in builtins.
    
    PiperOrigin-RevId: 354604929

[33mcommit 2b87d9222d6547b2fdc916c49dedafcfd29ae34d[m[33m ([m[1;33mtag: 2021.01.28[m[33m)[m
Merge: f2d0adf6 41d4b6c5
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 28 13:42:00 2021 -0800

    Merge pull request #824 from google/google_sync
    
    Google sync

[33mcommit 41d4b6c5e94e5967543fa6c6468f8a7271d1aba7[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 28 13:13:55 2021 -0800

    Update __version__ and CHANGELOG for a PyPI release.
    
    I double-checked that all the new failures are due to the attr change.
    
    I split the CHANGELOG entry into "New Features" and "Bug Fixes"; let me know if
    you think the old format is better.
    
    PiperOrigin-RevId: 354378386

[33mcommit 7776c9c9a32e50f813693855e796b1dafa758c72[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 27 13:55:51 2021 -0800

    Mark PEP 593 as supported.
    
    PiperOrigin-RevId: 354166162

[33mcommit f2d0adf65497641c61726e17ef25d69ba3775420[m
Merge: e72b21d1 207dbde5
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 27 12:41:18 2021 -0800

    Merge pull request #821 from google/typeshed
    
    Add toml as a dependency.

[33mcommit 207dbde5cf1dbc6bd92d8ec803d90f9995662ef3[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 27 01:44:36 2021 -0800

    Add toml as a dependency.
    
    For https://github.com/google/pytype/issues/820.

[33mcommit e72b21d11d1fae1c57e4ab7f6f181ae09c138afe[m
Merge: 7056acd7 4a40c69b
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 27 12:18:26 2021 -0800

    Merge pull request #823 from google/google_sync
    
    Google sync

[33mcommit 4a40c69bcdc7ccad3d071ba8b332cc34815f82eb[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 27 11:52:17 2021 -0800

    Support typeshed's new directory structure.
    
    See https://github.com/google/pytype/pull/821 and its linked issue for context.
    The typeshed directory structure is changing significantly, so we need to
    update pytype accordingly.
    https://github.com/python/typeshed/issues/2491#issuecomment-758772838 contains
    a nice diagram of the new structure.
    
    Note that I first developed this change on GitHub, then imported the PR. I'm
    asking for a review on the import (rather than the PR) because the import
    contains additional BUILD file changes (especially to third_party/py/toml - see
    the diffbase).
    
    PiperOrigin-RevId: 354138398

[33mcommit 8137bd1dd3e58da0b5dd6190b81d2e41e73d007a[m
Author: mlevesquedion <mlevesquedion@google.com>
Date:   Wed Jan 27 11:42:19 2021 -0800

    Implement basic support for PEP-593 (#819)
    
    This PR implements basic support for PEP-593 (relevant issue: #791).
    
    Resolves #819
    
    PiperOrigin-RevId: 354136230

[33mcommit 8835a01ef45a8aff629d06e19fc093716c9994b5[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 26 19:52:17 2021 -0800

    Tweak the error message for [container-type-mismatch].
    
    The [container-type-mismatch] errors we report on actual code seem rather
    verbose to me. For example, here's a line that does an illegal mutation:
    
    decoded_data['ordering'] = []
    
    The error message that pytype produces:
    
    New container type for decoded_data does not match type annotation [container-type-mismatch]
      Annotation: MutableMapping[str, Union[int, MutableMapping]] (type parameters MutableMapping[_K, _V])
      Contained types:
        _V: Union[Any, Dict[nothing, nothing], MutableMapping, MutableMapping[str, Union[Sequence[str], str]], int]
      New contained types:
        _V: Union[Dict[nothing, nothing], List[nothing]]
    
    With this change, the message becomes:
    
    New container type for decoded_data does not match type annotation [container-type-mismatch]
      Container: MutableMapping[_K, _V]
      Allowed contained types (from annotation MutableMapping[str, Union[int, MutableMapping]]):
        _V: Union[int, MutableMapping]
      New contained types:
        _V: List[nothing]
    
    Differences:
    (1) The first detail line shows only the typevars. The contained types have been
        moved to a parenthetical at the end of the next line.
    (2) "Allowed contained types" prints the types from the annotation rather than
        the actual values from the mutation.
    (3) "New contained types" prints only the new mutation values.
    
    I'm not sure if this is *too* terse now. In particular, omitting the contained
    types in (1) and not showing the entire mutated value in (3) were decisions
    that I went back and forth on. What do you think?
    
    PiperOrigin-RevId: 354007003

[33mcommit a01d2b3b103b53c01fa2d3e318e6390ea76cf8a9[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 26 16:02:37 2021 -0800

    Make --check-variable-types compatible with attr.attrib.
    
    This bug turned up when I ran a TGP for --check-variable-types: attr.ib() and
    --check-variable-types work together just fine, but attr.attrib() was
    triggering [annotation-type-mismatch] errors.
    
    While I was at it, I also added attr.attrs as an alias for attr.s.
    
    PiperOrigin-RevId: 353971666

[33mcommit 5eb5a2de2b2474017d394d14134dfa0c6a8bbc41[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 26 15:39:49 2021 -0800

    Fix a crash by not checking container types when cls=None.
    
    I wasn't able to isolate this down to a test case, but I ran into a crash due
    to this issue while running a TGP for --check-container-types.
    
    PiperOrigin-RevId: 353966698

[33mcommit 7056acd733ea88eef084c90b6bb8c56d74c7096d[m
Merge: f0dca432 7277354e
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 21 20:06:50 2021 -0800

    Merge pull request #817 from google/typeshed
    
    Update typeshed to 8c20938ba1118a9214265d7b5ae4ce1db4e322a5.

[33mcommit 7277354e36438692d29895ace47c2070b1a5e588[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 21 19:14:41 2021 -0800

    Update typeshed to 8c20938ba1118a9214265d7b5ae4ce1db4e322a5.

[33mcommit f0dca43207ed8e5bcaa7c9249c1f1d8e64970ecc[m[33m ([m[1;33mtag: 2021.01.21[m[33m)[m
Merge: 9a436bde 3b6d3ea5
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 21 13:03:59 2021 -0800

    Merge pull request #815 from google/google_sync
    
    Do a PyPI release of the new pyi parser.

[33mcommit 3b6d3ea546b35b210c49af246fa6cfbe4cb39789[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 21 11:58:47 2021 -0800

    Do a PyPI release of the new pyi parser.
    
    The Build Failures table looks good, so here we go...
    
    PiperOrigin-RevId: 353069312

[33mcommit 9a436bdefc93c38a86bcee616033fb0b99924056[m
Merge: 644f04dc c7675be8
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 20 22:21:06 2021 -0800

    Merge pull request #814 from google/google_sync
    
    Google sync

[33mcommit c7675be8823b4bbe4cefb5202a2a9c3cb11eb403[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 20 21:50:27 2021 -0800

    Depend on the dataclasses backport in Python 3.6.

[33mcommit 18c8097fb536d34a61d54b7fc08252d4cf1dfd28[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 20 20:37:18 2021 -0800

    Prepare the new pyi parser for a PyPI release.
    
    * Add its CMakeLists.txt file to test_cmake_contents and regenerate the file
    * Fix a typo and a missing add_subdirectory() in pytype/pyi/CMakeLists.txt
    * Add pyi/typed_ast/__init__.py so setup.py recognizes it as a subpackage
    * Fix parsing of typeshed/stdli[].9/zoneinfo/__init__.pyi. While we don't
      support 3.9 yet, this was a simple fix.
    
    PiperOrigin-RevId: 352933251

[33mcommit 00ed29e7b0abb43c7d94b6a913aaf5f61aee76df[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jan 20 17:00:02 2021 -0800

    super() in a list comprehension needs to look at the enclosing frame.
    
    PiperOrigin-RevId: 352906072

[33mcommit 63fd5e59a0d3fbe86c218f747de769288c369a40[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jan 20 14:07:43 2021 -0800

    Merge in the typed ast parser.
    
    * Replace the main entry point in the existing parser with a call to the typed
      ast parser, leaving the old parser code around to run regression tests if
      needed.
    * Add a CMakeLists file for pyi/typed_ast
    
    Fixes a bunch of tests to conform to valid pyi syntax, and comments out some
    tests in parser_test that no longer describe the behaviour of the new parser.
    
    PiperOrigin-RevId: 352871829

[33mcommit 644f04dc7cdd3ccb836e5758f175b12028fbb888[m
Merge: eaaf385f 1c4540c1
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 20 11:33:36 2021 -0800

    Merge pull request #813 from google/google_sync
    
    Export the typed_ast pyi parser to github.

[33mcommit 1c4540c1a751e85bbd4a70ede945f8f7477b0477[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 19 19:54:46 2021 -0800

    Exclude pytype/pyi/typed_ast/ from type-checking.
    
    Trying to type-check this directory produces all sorts of errors.

[33mcommit e1277ab60198af010354889cc66c45c04ebd0732[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 19 15:39:24 2021 -0800

    Export the typed_ast pyi parser to github.
    
    This parser is intended as a drop-in replacement for the current yacc-based
    parser. Rather than maintaining our own grammar, it uses the standard typed-ast
    library to parse pyi files as python3 code, before converting them to pytype's
    internal data structures. This fixes several issues with pytype not parsing
    some constructs in typeshed, and should help us track future python syntax
    changes a lot more easily.
    
    Since this has several conflicts with the existing parser, it has been
    developed internally in a separate branch, and is being merged in as a unit. We
    will add detailed documentation of its internals to our developer docs.
    
    PiperOrigin-RevId: 352670366

[33mcommit eaaf385f020a5c385a97b8936e060ef618888ef2[m
Merge: 237bcd23 02baf16b
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 19 13:34:39 2021 -0800

    Merge pull request #812 from google/google_sync
    
    Google sync

[33mcommit 02baf16beca54766a11508c63cfd5f876f0d02aa[m
Author: Param Patidar <parmeshpatidar888@gmail.com>
Date:   Tue Jan 19 12:47:42 2021 -0800

    Get the line number of first line in function body (#811)
    
    Resolves #783
    
    Resolves #811
    
    PiperOrigin-RevId: 352632205

[33mcommit 0e5a6f7d07332ea9e712052e651b412360d4fac6[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 15 16:07:01 2021 -0800

    Add a short paragraph about the issue tracker and how to claim and close bugs.
    
    PiperOrigin-RevId: 352102308

[33mcommit 237bcd23569ef2ab4815248b8bbd3e207017b75b[m
Merge: 4dcf88f8 05ab56a3
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 14 18:45:49 2021 -0800

    Merge pull request #806 from google/import
    
    Bump required importlab version to pick up a bug fix.

[33mcommit 4dcf88f8b55b39641e4860b5fb1e6f278662e693[m
Merge: 6d16d4ca d8c43e2e
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 14 18:45:16 2021 -0800

    Merge pull request #807 from google/google_sync
    
    AssertionError: Don't know how to match <class 'pytype.pytd.pytd.Name…

[33mcommit d8c43e2e3d15e81ab778252b7afe7c2b58610060[m
Author: Malinda Dilhara <malinda.dilhara@gmail.com>
Date:   Thu Jan 14 15:32:01 2021 -0800

    AssertionError: Don't know how to match <class 'pytype.pytd.pytd.Name… (#803)
    
    …dType'> against <class 'pytype.pytd.pytd.Literal'>
    
    Resolves #803
    
    PiperOrigin-RevId: 351889719

[33mcommit 05ab56a3672b38cb5f938b7d913df1450fd249fe[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 14 18:05:30 2021 -0800

    Bump required importlab version to pick up a bug fix.
    
    Resolves https://github.com/google/pytype/issues/794.

[33mcommit 6d16d4ca80c8fe351ddc02d88cd57465d1c6fe81[m[33m ([m[1;33mtag: 2021.01.14[m[33m)[m
Merge: bac47da7 8486a9e9
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 14 16:20:11 2021 -0800

    Merge pull request #804 from google/google_sync
    
    Google sync

[33mcommit 8486a9e99bd0ccb4a910675dfe3564727ea6b66a[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 14 14:04:18 2021 -0800

    Support redefining NamedTuple in the old pyi parser.
    
    This change is *almost* pointless, given that the new parser handles this just
    fine and is about to be merged in, but it's a trivial fix and will unbreak a
    Google opensource project that I just noticed no longer type-checks after the
    removal of backticks. Plus the test is good to have.
    
    PiperOrigin-RevId: 351872790

[33mcommit c8733b806dc8d76e540efa36181f99f2b582929e[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 14 13:57:13 2021 -0800

    Do a PyPI release.
    
    PiperOrigin-RevId: 351871206

[33mcommit d8ef658ba6e945cb0e1de2e0f7e5e66f2b53d8bc[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 14 02:45:52 2021 -0800

    Minor update to overlays.md following build file restructuring.
    
    PiperOrigin-RevId: 351761078

[33mcommit 54f27762a5156db420b9f1f6a9a4af17f39314f6[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 13 19:10:45 2021 -0800

    Add an empty pytype/ast/__init__.py file.
    
    The ast directory doesn't seem to get packaged up into the released version of
    pytype otherwise.
    
    Fixes https://github.com/google/pytype/issues/801.
    
    PiperOrigin-RevId: 351712251

[33mcommit bac47da726b409f75299990cc84e7fb514ce6eb1[m
Merge: 18d28bab 672b0e3c
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 14 15:41:29 2021 -0800

    Merge pull request #805 from google/macos
    
    Fix MacOS wheel builds.

[33mcommit 672b0e3cf8442694f89b2038ae50f2e04824a08a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 14 14:48:08 2021 -0800

    Fix MacOS wheel builds.
    
    Homebrew was recently updated
    (https://github.com/actions/virtual-environments/issues/2415),
    introducing a bug related to 2to3:
    https://github.com/actions/virtual-environments/issues/2428. I applid
    the workaround recommended in the issue.

[33mcommit 18d28bab9e61ee38b30f8b04df599a77e1d68154[m
Merge: 1b13a04b 35f3aeac
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 13 15:18:26 2021 -0800

    Merge pull request #800 from google/google_sync
    
    Google sync

[33mcommit 35f3aeac768917202c2215e2f16d53b363a53a30[m
Author: Param Patidar <parmeshpatidar888@gmail.com>
Date:   Wed Jan 13 14:46:53 2021 -0800

    Add ImportError attributes name, path for Python 3.3+ (#771)
    
    Fixes #769
    
    Resolves #771
    
    PiperOrigin-RevId: 351669571

[33mcommit 460722b5d3e2510ea91c1bc2221981a054b8e1e3[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jan 11 16:49:14 2021 -0800

    Fix some corner cases with unpacking and function args.
    
    * We need implicit unpacking of function args in some opcodes.
      - Add a marker to Tuple to tell when it has been constructed via function arg
        unpacking.
      - Unpack starargs in CALL_FUNCTION_EX, CALL_FUNCTION_VAR if they haven't been
    * When unpacking a variable with several definite tuple bindings, merge them
      into a definite tuple with union typed fields.
    * If the function sig has no *args, fill in any remaining required posargs from
      a final splat, then set starargs to None
      - Also fill in types when expanding splats in both f(*xs, y) and f(x, *ys)
    * Pass a function signature to args.simplify when calling a Callable
    
    PiperOrigin-RevId: 351263995

[33mcommit 1b13a04b9f982bc4d4fb538b96902c8a0a4dbeea[m
Merge: c1207c6b 9afb2b40
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jan 11 12:43:34 2021 -0800

    Merge pull request #799 from google/google_sync
    
    Google sync

[33mcommit 9afb2b4041361e702fecf56016712621b17c5214[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jan 11 12:02:28 2021 -0800

    pylintrc: allow multiple spaces after `#` before a URL.

[33mcommit 344e1dd9a5ad7a8d41cacd79081cb934b58a5313[m
Author: rechen <rechen@google.com>
Date:   Mon Jan 11 11:21:33 2021 -0800

    Ensure all pytd nodes have a 'name' attribute.
    
    This lets us access the name without using isinstance() or getattr().
    
    I made GenericType's name property return the name of the base type, since
    we access .base_type.name quite often.
    
    This change exposed a small bug in PrintVisitor (we needlessly imported
    typing.Any when Callable[..., X] was present), which I fixed.
    
    PiperOrigin-RevId: 351196205

[33mcommit 78e87f61ec9cadd47492105fb97d8c3bdd28e3d4[m
Author: rechen <rechen@google.com>
Date:   Mon Jan 11 10:19:08 2021 -0800

    Internal change
    
    PiperOrigin-RevId: 351181399

[33mcommit c1207c6bb7fcd6360dfcffea39929068f187d094[m[33m ([m[1;33mtag: 2021.01.08[m[33m)[m
Merge: dd7c5af6 4225f7b3
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 8 15:51:44 2021 -0800

    Merge pull request #797 from google/google_sync
    
    Google sync

[33mcommit 4225f7b31d0ceba500d1e761180289543526f7d6[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 8 15:06:33 2021 -0800

    Do a PyPI release.
    
    PiperOrigin-RevId: 350843919

[33mcommit 80983b960a96dd3d5babd2ca9ea55aa48250e1f7[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 8 13:25:16 2021 -0800

    Add support.md to the sitemap.
    
    Forgot to do this in my previous change.
    
    PiperOrigin-RevId: 350824993

[33mcommit dd7c5af683271cb51c1d8e7e8eb7cbab8868ca62[m
Merge: 6e0ceedf bfc1dee4
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 8 13:38:04 2021 -0800

    Merge pull request #796 from google/google_sync
    
    Google sync

[33mcommit bfc1dee450bfd51513b6f8c1b5f90a88fbee591c[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 8 13:12:52 2021 -0800

    Some minor improvements to support.md.
    
    * Add a freshness stanza
    * Add links to PEPs
    
    PiperOrigin-RevId: 350822829

[33mcommit 0a5f4223db5661254cb0d514b25b8bf93054c2fc[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 8 12:58:37 2021 -0800

    Add a Support page showing what typing features pytype supports.
    
    For features we don't support or partially support, includes links to the
    relevant GitHub/Buganizer issues.
    
    It's a little painful to see how far behind we are on supporting new PEPs...
    
    While I was at it, I also:
    * Replaced the 2020 roadmap in README.md with a summary of what we promised in
      the pytype charter to do in 2021.
    * Updated some language in index.md that had diverged from README.md over time.
    
    PiperOrigin-RevId: 350820183

[33mcommit 31f898c3ae405a3f43a1632c9147dd0ca5affecc[m
Author: tsudol <tsudol@google.com>
Date:   Thu Jan 7 11:46:14 2021 -0800

    Add __init__ and __contains__ to dict view classes.
    
    Adapted from https://github.com/python/typeshed/blob/master/stdli[]/typing.pyi#L249-L262
    
    PiperOrigin-RevId: 350607376

[33mcommit 663153f4beab244cdb0d66328e0e5a21412a3d55[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jan 6 23:39:00 2021 -0800

    Do not allow python keywords in pytd files.
    
    The parser_constants.RESERVED_PYTHON list has been left in place for now, but
    the printer will no longer surround keywords with backticks. pyi files using a
    keyword as a name will generate a parser error when the new parser is deployed.
    
    PiperOrigin-RevId: 350498330

[33mcommit 6e0ceedf9f181df15214afc722caa2b1e17361b5[m
Merge: 10febcd2 d2687bca
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 6 14:59:46 2021 -0800

    Merge pull request #784 from google/google_sync
    
    Google sync

[33mcommit d2687bca6742f144eb9ece9732d587ba03216b3d[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 6 14:03:50 2021 -0800

    Represent empty tuples as TupleType(()).
    
    Previously, we represented them as GenericType(tuple, (nothing,)), which led to
    subtle bugs such as the one in the linked issue, when empty tuples weren't
    detected as such.
    
    Resolves https://github.com/google/pytype/issues/767.
    
    PiperOrigin-RevId: 350423620

[33mcommit dec00261a26c1c3975dea35e857fcee5a0690148[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 6 11:49:07 2021 -0800

    Reorganize the last few pytype BUILD files.
    
    Reorganizes pytype/, pytype/pytd/, pytype/pytd/parse/, and pytype/tools/xref/
    by breaking up all multi-file library targets into private single-file targets
    and providing the following non-private targets:
    
    Public:
    * pytype:api
    * pytype/pytd:api
    * pytype/tools/xref:indexer
    
    Visible to all pytype code:
    * pytype:libvm
    * pytype:utils
    * pytype/pytd:pytd
    * pytype/pytd/parse:parse
    * pytype/pytd/parse:parser_test_base
    
    Visible to some pytype code outside of the target's immediate directory:
    * pytype/pytd:pytd_for_parser is visible to pytype/pyi/... because the latter
      cannot depend on pytype/pytd:pytd (circular dep).
    * All targets in pytype/BUILD are visible to pytype/overlays/, since the two
      directories are tightly coupled.
    
    I renamed the pytd command-line tool to pytd-tool to avoid conflicting with the
    new pytype/pytd:pytd target.
    
    PiperOrigin-RevId: 350397951

[33mcommit d8e04dc3100ffd3613a7b87c1323dad39305c8e4[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 5 19:20:39 2021 -0800

    Don't infer Callable parameters when there are kwonly params.
    
    Previously, we were ignoring kwonly parameters and generating Callables with
    the wrong number of parameters. Since kwonly params don't have a fixed order,
    the best we can do is Callable[..., RET] when they're present.
    
    PiperOrigin-RevId: 350266497

[33mcommit 10febcd2402a05cfda6f00bcd1cb7a7f80a29233[m
Merge: 8f6701a8 ca5fb57b
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 5 17:03:00 2021 -0800

    Merge pull request #782 from google/google_sync
    
    Google sync

[33mcommit ca5fb57b2498ae3a79bc5c22823c0a041d587fcf[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 5 12:42:41 2021 -0800

    Cleanup: move pytd/parse/builtins to pytd/builtins.
    
    It makes more sense for builtins.py to be in pytd/ because it depends on a
    bunch of stuff in pytd/.
    
    PiperOrigin-RevId: 350198684

[33mcommit 5a47fd51c39e50684237899a094c5b4feca9ef53[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 5 12:28:30 2021 -0800

    Internal change
    
    PiperOrigin-RevId: 350195888

[33mcommit 8f6701a857d343cc1695c6238738c72b658941ce[m
Merge: ff8856ec ec5ddbd7
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jan 4 18:00:40 2021 -0800

    Merge pull request #780 from google/google_sync
    
    Google sync

[33mcommit ec5ddbd7471be80e25763def8a970f39410b88e0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jan 4 17:07:25 2021 -0800

    Increase type-checking coverage.

[33mcommit 083e9eac87cd0f358e3097500b49a88019d08eb5[m
Author: rechen <rechen@google.com>
Date:   Mon Jan 4 15:32:35 2021 -0800

    Cleanup: restructure the BUILD files in most of pytype's subdirectories.
    
    PiperOrigin-RevId: 350050078

[33mcommit 864b22a8aa5634e90c4f4e3d856780348f5900cc[m
Author: rechen <rechen@google.com>
Date:   Mon Jan 4 15:20:13 2021 -0800

    Enable strictdeps and type-checking on all of pytype.
    
    * Changes all py_tests to py_strict_tests.
    * Creates two macros, pytype_internal_binary and pytype_internal_library, to
      run pytype and strictdeps on the pytype source code. Naively turning pytype's
      py targets into pytype_strict targets leads to circular import issues, so
      these macros create both a vanilla py target and a shadow
      pytype_strict_target whose name has an _internal suffix.
    * Runs build_cleaner to fix up imports to make strictdeps happy. Runs gen_cmake
      to update CMakeLists.txt files. The cmake files in pyi/ and typegraph/ were
      manually updated.
    
    PiperOrigin-RevId: 350049225

[33mcommit e5138b7258a5402d44df8fded1fc77d3c951b937[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 29 14:23:30 2020 -0800

    Resolve type errors in the pytype code.
    
    Resolves various errors that pytype flags in its own source code so we can run
    pytype over all of itself. (This change is just the error cleanup; a follow-up
    will enable type-checking.)
    
    PiperOrigin-RevId: 349469894

[33mcommit ff8856ec73d6480078375aa48f67a651e0ec031d[m
Merge: 02fed1d8 d556b4dd
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 28 17:22:30 2020 -0800

    Merge pull request #778 from google/google_sync
    
    Google sync

[33mcommit d556b4ddd468f1501f023d39f59c2355a21c527d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 28 16:07:35 2020 -0800

    Add more type-checking.

[33mcommit 718e6c2c17f897812f0f76f05aa8e839696216b1[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 28 15:57:11 2020 -0800

    Update a few more pytype BUILD files.
    
    Updates:
    * pytype/stubs
    * pytype/tools/analyze_project
    * pytype/tools/annotate_ast
    * pytype/tools/traces
    to consistently use pytype and strictdeps, tighten visibility, clean up deps
    with build_cleaner, and split multi-file library targets.
    PiperOrigin-RevId: 349342636

[33mcommit 02fed1d8b3e1c0939116bde199ee9e1403658dac[m
Merge: 307f97cb e39ffa53
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 28 15:27:46 2020 -0800

    Merge pull request #776 from google/typecheck
    
    Type-check some files that are already type-checked internally.

[33mcommit 307f97cb14f2f5ff0e5fd093c4499eb1ebd5b540[m
Merge: 2f1d1a35 0af0b239
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 28 15:27:23 2020 -0800

    Merge pull request #777 from google/google_sync
    
    Google sync

[33mcommit 0af0b23940f181f20822dbd282cc5bfef3abe2df[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 28 14:16:55 2020 -0800

    Update some pytype BUILD rules to reflect current best practices.
    
    PiperOrigin-RevId: 349330545

[33mcommit 59b05b79e0e4152d038f5f35c3f349111e81ece0[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 28 11:03:16 2020 -0800

    Shorten the names of some commonly used things.
    
    Fixes something that has mildly annoyed me for a long time, which is that some
    pytype objects have really unwieldy names. I renamed things using sed and then
    ran [] fix to reformat the files. I used CodeSearch to verify that there were
    no references to the names outside of third_party/py/pytype.
    
    Renames:
    * vm.root_cfg_node -> vm.root_node
    * AtomicAbstractValue -> BaseValue
    * SimpleAbstractValue -> SimpleValue
    * AbstractOrConcreteValue -> ConcreteValue
    
    For BaseValue and ConcreteValue, I also changed articles from "an" to "a"
    wherever I noticed the wrong one being used.
    
    PiperOrigin-RevId: 349306008

[33mcommit e39ffa53ff757e5d662aae1301c78c946bd7bbf1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 28 14:45:31 2020 -0800

    Type-check some files that are already type-checked internally.

[33mcommit 2f1d1a357bada38e8969782a2f9bc59c20a79bc8[m
Merge: dd36558b 9423cf56
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 23 20:31:29 2020 -0800

    Merge pull request #773 from google/google_sync
    
    Automatically added git ignore file to sub directory (#770)

[33mcommit 9423cf566772d919e4ad52e67086030c9ac13ab5[m
Author: Uriel Martinez <57372467+UrielMaD@users.noreply.github.com>
Date:   Wed Dec 23 16:01:17 2020 -0800

    Automatically added git ignore file to sub directory (#770)
    
    This PR automatically creates a .gitignore file to the output directory of pytype/tools/analyze_project/main.py
    
    Resolves #770
    
    PiperOrigin-RevId: 348859523

[33mcommit dd36558be056a901ef563072975a9cc7f79891c2[m[33m ([m[1;33mtag: 2020.12.23[m[33m)[m
Merge: b3bc4080 be2cabe1
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 23 14:16:55 2020 -0800

    Merge pull request #772 from google/google_sync
    
    Google sync

[33mcommit be2cabe132b1587a2abab0507d3304aa43ad2e51[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 23 13:38:14 2020 -0800

    Do a PyPI release.
    
    The latest pytype change had a clean TGP, so we should be in a good place to do
    one last PyPI release for 2020.
    
    PiperOrigin-RevId: 348841360

[33mcommit 73686cd4f60edbfbac79ae7417119fb594ce4c2c[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 23 12:13:23 2020 -0800

    Fix the attribute type obtained from `attr.ib(default=())`.
    
    The type is currently `Tuple[()]` but should be `Tuple[Any, ...]`.
    
    PiperOrigin-RevId: 348830040

[33mcommit b3bc4080dab60de625b2de31b0d73de1c46bc5b7[m
Merge: 51e930ca 29971aad
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 21 16:31:48 2020 -0800

    Merge pull request #768 from google/google_sync
    
    Google sync

[33mcommit 29971aad62bb032d8667d85eb0a26ab2eba332cf[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 21 16:06:20 2020 -0800

    Support using a union to filter types out of a type parameter.
    
    For a function signature like:
      def f(x: Optional[T]) -> T: ...
    you'd expect that if you pass f a value that can be None, None will be filtered
    out of the possible return values.
    
    Instead, pytype was allowing None to match both None and T in the annotation.
    Fixed by not allowing a value to match both a type parameter and a non-type
    parameter.
    
    Resolves https://github.com/google/pytype/issues/752.
    
    PiperOrigin-RevId: 348543825

[33mcommit c1646cc7dfa2da13e02a088a48404fefd84a69d6[m
Author: mdemello <mdemello@google.com>
Date:   Mon Dec 21 13:43:25 2020 -0800

    FIX: merge_variables() should always create a new variable.
    
    If we merge a list of one variable, we should still return a copy of it,
    otherwise modifications to the merged variable will modify the original.
    
    PiperOrigin-RevId: 348521183

[33mcommit f69780a95f6bc8cb3a3e04cef63eaa8b139cede2[m
Author: mdemello <mdemello@google.com>
Date:   Fri Dec 18 00:19:59 2020 -0800

    Minor refactoring of variable unpacking code.
    
    Separating this out so that subsequent CLs editing the code have nicer diffs.
    
    PiperOrigin-RevId: 348157532

[33mcommit 51e930ca7d29a73ede531129111fb600e761c8cc[m[33m ([m[1;33mtag: 2020.12.16[m[33m)[m
Merge: 7531e1f2 2a15a802
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 16 15:05:29 2020 -0800

    Merge pull request #766 from google/google_sync
    
    Do a PyPI release.

[33mcommit 2a15a802de711f1512969938cd540abb7f16b4a9[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 16 13:43:15 2020 -0800

    Do a PyPI release.
    
    PiperOrigin-RevId: 347889139

[33mcommit 7531e1f2172107def1e4a674dafe6ea4a7d099d9[m
Merge: 25eb59fb 173fdb63
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 15 23:17:40 2020 -0800

    Merge pull request #765 from google/google_sync
    
    Google sync

[33mcommit 173fdb63f18e1ba4f935e96e80f43df3c50df9c9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 15 22:16:10 2020 -0800

    Remove 'brew untap' workaround.
    
    The workflow is now reporting 'No available tap local/openssl', which I
    assume means the bad taps have been removed.

[33mcommit f8ac8aae81fc4f744ed17ac214fc81ed97a809b0[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 15 18:56:29 2020 -0800

    Fix crash caused by trying to unpack a namedtuple.
    
    This is what was causing the last "Closure lookup failed" error. At first
    glance, it looks like a namedtuple bug - the instance type parameter ought to
    be populated. But I think adding an Any binding to it is the approach least
    likely to break anything while we're trying to get a release out the door.
    
    PiperOrigin-RevId: 347736406

[33mcommit ac06ec9ae80733999a25c8c87ea07fea2db5110f[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 15 18:07:55 2020 -0800

    Support aliases to methods of classes in the same module in the pyi parser.
    
    For https://github.com/google/pytype/issues/761.
    
    PiperOrigin-RevId: 347731418

[33mcommit 61ec0e56559050e63bde5ea55b0e6113f251bc4a[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 15 14:21:09 2020 -0800

    FIX: Convert splats to Any whenever they are matched against a single param.
    
    PiperOrigin-RevId: 347691950

[33mcommit a0a50cb4f4ad32fa9ec239c8234b815372f19d35[m
Author: mdemello <mdemello@google.com>
Date:   Mon Dec 14 23:20:30 2020 -0800

    Add an abstract.Splat class to keep explicit track of unpacked iterables.
    
    TGP: []
    PiperOrigin-RevId: 347548197

[33mcommit 3ad145cd11325a7218122b5add31c16ff556ad34[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 14 15:10:06 2020 -0800

    Support using an AnnotationClass in an isinstance check.
    
    For https://github.com/google/pytype/issues/533#issuecomment-744656935.
    
    PiperOrigin-RevId: 347478634

[33mcommit 25eb59fb5414849636c49700b8e22d3cece752ab[m
Merge: 22545931 eecd9407
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 14 15:33:07 2020 -0800

    Merge pull request #762 from google/google_sync
    
    Google sync

[33mcommit eecd9407ba973a7bd424d7166549cc0feb4b399d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 14 14:16:31 2020 -0800

    Fix opensource pytype.pytd.typeshed_test.
    
    The opensource tests always set the TYPESHED_HOME environment variable, which
    populates Typeshed._env_home, so we need to unset _env_home to test
    Typeshed._root.
    
    PiperOrigin-RevId: 347460650

[33mcommit 260f93bd175e53baeb6789794fdc78eea503eb13[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 14 12:20:44 2020 -0800

    Strip carriage returns from files read as bytes.
    
    Our pyi parser doesn't like \r. When Python reads a file in text mode, it
    automatically converts \r and \r\n to \n. But pytype_source_utils uses the
    loader protocol to directly get the underlying data, which is bytes, so I used
    re.sub to achieve the same effect.
    
    I also changed pytype.pytd.typeshed to return pyi contents as text; it was the
    lone holdout that was still returning bytes.
    
    The top-level file loading methods in pytype_source_utils are now
    load_text_file and load_binary_file, to try to reduce confusion about what
    string types we're passing around.
    
    Resolves https://github.com/google/pytype/issues/751.
    
    PiperOrigin-RevId: 347442138

[33mcommit e319bfa8db42896a4bdf8114a119025116621c0a[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 14 11:54:01 2020 -0800

    Fix an unpacking bug exposed by opensource/gen_cmake.py.
    
    Also fixes a typo in vm.py.
    
    PiperOrigin-RevId: 347436296

[33mcommit 3d30c66f6dc309c14746600459ff7802576c8c7f[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 14 10:23:55 2020 -0800

    Fix a [name-error] caused by a bad regex check.
    
    We were expecting the name of a list comprehension to be '<listcomp>'. In
    Python 3, the name has the scope prefixed, so the name of a list comprehension
    inside a module-level function foo is 'foo.<locals>.<listcomp>'. Due to us not
    recognizing the list comprehension, we analyze it as a stand-alone function,
    which means that in the linked issue, it gets analyzed after `del num` has run,
    leading to a [name-error].
    
    Fixed by using re.search instead of re.match, so we check that the name ends
    with '<listcomp>' rather than that the entire name is '<listcomp>'.
    
    Fixes https://github.com/google/pytype/issues/750.
    
    PiperOrigin-RevId: 347414681

[33mcommit 971bff4aa99c0ddb63d4fda6e064a1001740570f[m
Author: rechen <rechen@google.com>
Date:   Sun Dec 13 19:35:14 2020 -0800

    Add a test to enforce freshness of CMakeLists.txt files (gen-cmake part 2/3).
    
    PiperOrigin-RevId: 347304465

[33mcommit 381a36418e5dcc73cd073f35195e6d3b64d8ad73[m
Author: mdemello <mdemello@google.com>
Date:   Fri Dec 11 16:17:07 2020 -0800

    Rework unpacking and function arg matching.
    
    * Add indefinite_list, indefinite_set and indefinite_tuple builders
    * Add typing.Iterable to the list of indefinite sequences
    * Remove __builtin__.str from the list of indefinite sequences
    * Separate BUILD_TUPLE_UNPACK from BUILD_TUPLE_UNPACK_WITH_CALL
      When building for a function call, allow *xs in a concrete tuple
    * Add function arg matching with splats in the middle of the invocation list
    * Match a final *args in f(x, y, *args) even if f is overloaded
    
    PiperOrigin-RevId: 347096245

[33mcommit 22545931decb6e14a63e1ed66c81899c9277203b[m
Merge: 49a61d38 b67e60d8
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 10 19:43:08 2020 -0800

    Merge pull request #758 from google/google_sync
    
    Google sync

[33mcommit b67e60d8874ea841f1aaae28840ba9efe6df5e9a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 10 18:56:20 2020 -0800

    Fix a pytype error.
    
    Now that the circular import between pytd_visitors and pep484 has been
    untangled, the pytype check in the opensource tests is failing because it
    doesn't know that visitors have an old_node attribute.
    
    PiperOrigin-RevId: 346910260

[33mcommit 482cab4232a315c6535449b603feac9e7c76c5fb[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 10 17:22:48 2020 -0800

    Copy over changes to CONTRIBUTING.md.
    
    I thought this file was tracked on GitHub, but it's actually tracked
    internally. Oops.
    
    PiperOrigin-RevId: 346898992

[33mcommit cde1e48b1c9ad12c928c5231aaad942600e06016[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Dec 9 21:41:31 2020 -0800

    Enable precompile_python=all for Python type checking to reduce execution time.
    
    PiperOrigin-RevId: 346704945

[33mcommit 52b2894d58787b2763147760848bf122eaa85856[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 9 10:58:01 2020 -0800

    Clean up some g-import-not-at-top lint warnings.
    
    * Removes a disable that was needed to handle Python 2 runtimes that did not
      have tracemalloc available. (pytype no longer runs under py2.)
    * Splits out the pytd visitor into its own module to get rid of a circular
      import, allowing pytype.pytd.pep484 to be imported normally in pytd_visitors
      and visitors.
    
    PiperOrigin-RevId: 346589356

[33mcommit 2738f3e3c811c9f26f5cc1328ff003f4e30032e7[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 9 10:55:15 2020 -0800

    Finish my outstanding dev guide TODOs.
    
    * Updates the sitemap to group most of the dev docs into "Workflow", "Program
      Analysis", and "Data Representation" categories.
    * Adds a METADATA entry to enforce that all docs need freshness bylines and
      should be reviewed once a year.
    * Moves typegraph-specific sections from index.md into typegraph.md and adds
      a "basic concepts" overview.
    * Tweaks process.md to better coordinate with CONTRIBUTING.md. See
      https://github.com/google/pytype/pull/756.
    
    Resolves https://github.com/google/pytype/issues/570.
    
    PiperOrigin-RevId: 346588735

[33mcommit b851210e35d3a6d0fa78dc33ea20d3d76e4eed15[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 8 18:17:57 2020 -0800

    Forgot to update docs/, grr.
    
    PiperOrigin-RevId: 346453201

[33mcommit 12547344a297e90e22d8543047ffbd173dca66fc[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 8 17:08:34 2020 -0800

    Automatically promote __init_subclass__ to a classmethod.
    
    PiperOrigin-RevId: 346442595

[33mcommit 49a61d38fbf3ddd2dc5c5fa95559dff979d85f3b[m
Merge: 9794ec25 e4125e45
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 8 20:38:02 2020 -0800

    Merge pull request #756 from google/contributing
    
    Add more information to CONTRIBUTING.md.

[33mcommit e4125e45c9b32dfa631f90ae0ea2da0a1bd85fbb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 8 19:22:41 2020 -0800

    Add more information to CONTRIBUTING.md.
    
    Adds:
    * A command for pip-installing from source.
    * A link to the dev guide.
    * A command for also running pylint and pytype over the pytype source,
      in addition to the tests.
    
    For https://github.com/google/pytype/issues/570.

[33mcommit 9794ec259342fd96fd92629b195caa50acce5ff0[m
Merge: 0790b3f0 8bea1cdc
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 8 14:46:03 2020 -0800

    Merge pull request #755 from google/google_sync
    
    Google sync

[33mcommit 8bea1cdc8307dfc4c3732e09aad8fecffc10fca4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 8 13:59:22 2020 -0800

    Fix setup.py to look in pytype/stubs/.

[33mcommit b4a2fc73869b5025ed222e9aec4693bcfc5c20ed[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 7 20:57:33 2020 -0800

    Fix a typo, remove a completed TODO.
    
    PiperOrigin-RevId: 346241925

[33mcommit 134cb221357f0045faa58838b3e05b30ae23173b[m
Author: mdemello <mdemello@google.com>
Date:   Mon Dec 7 17:09:34 2020 -0800

    Document the config system.
    
    PiperOrigin-RevId: 346212542

[33mcommit 36d5b874c48175498f368d381c44a2e07f7b22f7[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 4 17:13:03 2020 -0800

    Tie up a few loose ends in the dev docs.
    
    * Add an example of what an imports map should look like.
    * Add a link to the pytype bzl code.
    * Add a link to Teddy's excellent copybara documentation.
    
    PiperOrigin-RevId: 345787383

[33mcommit 5a9e3158ec399bcc7ae7f9e814161041433600b1[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 4 15:23:16 2020 -0800

    Fix an outdated flag description.
    
    --pickle-output used to accept a value, which would be the destination for the
    pickled file. It is now a boolean flag, with --output being used to specify the
    destination.
    
    PiperOrigin-RevId: 345768177

[33mcommit 178f8a141ece4d9f752b6684799da5ff26695383[m
Author: mdemello <mdemello@google.com>
Date:   Thu Dec 3 15:43:10 2020 -0800

    Add a list of modules to always load from typeshed, ignoring the imports map.
    
    Add typing_extensions to the list; even if the typing_extensions source tree is
    in our dependencies we want to use the typeshed pyi rather than generating one.
    
    PiperOrigin-RevId: 345551461

[33mcommit 6b8fb334c2ce9faaa81095ae4a20834bc9dc3116[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 3 13:46:45 2020 -0800

    Recognize non-tuple sequences as indefinite *args.
    
    PiperOrigin-RevId: 345526461

[33mcommit 6305569fd2bb131b88e27135010c0cceafb5be14[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 3 11:36:04 2020 -0800

    Attempt #2 to move pytype's .pytd files to a stubs/ directory.
    
    This is the original CL, plus these changes:
    * Updated the third_party/py/numpy/__init__.pyi symlink.
    * Updated the symlinks in devtools/python/blaze/pytype/.
    * Started a [] train run: []
    
    PiperOrigin-RevId: 345497968

[33mcommit 1d72cd63fb1fcb187f1a094074a648a4fe0a5292[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 3 11:00:20 2020 -0800

    Treat classes whose metaclass inherits from type(Protocol) as abstract.
    
    See linked bug for motivation. I first tried changing the definition of
    Protocol in typing.pytd to include a new _ProtocolMeta metaclass, but this
    broke a lot of tests because Protocol is a base class for so many typing
    objects, and a custom metaclass screwed up attribute handling in some corner
    cases. Special-casing Protocol when accessing type() and __class__ is a less
    invasive change.
    
    PiperOrigin-RevId: 345489232

[33mcommit 13cd909cd4eeda56d0f0d53191279b1c191ecbe5[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 2 19:48:12 2020 -0800

    Support NewType in stubs.
    
    This started as an attempt to support the stubs added to the pytype exclude list in https://github.com/python/typeshed/pull/4785. Those stubs turned out to be a bit of a hairball, but supporting NewType seems useful anyway.
    
    Resolves https://github.com/google/pytype/issues/597.
    
    PiperOrigin-RevId: 345364292

[33mcommit 866f1a0cdcc27899adc71312507199b6def08a7d[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 2 14:17:30 2020 -0800

    Rollback of changelist 345305285.
    
    *** Reason for rollback ***
    
    Broke numpy/__init__.pyi symlink
    
    *** Original change description ***
    
    Move pytype's .pytd files to a stubs/ directory.
    
    ***
    
    PiperOrigin-RevId: 345311117

[33mcommit 797b10a0a02545dc86a9998b4862de4f45ee211c[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 2 13:50:52 2020 -0800

    Move pytype's .pytd files to a stubs/ directory.
    
    PiperOrigin-RevId: 345305285

[33mcommit c3ac859fad40a3fac03317189eaa137cbf9469ed[m
Author: mdemello <mdemello@google.com>
Date:   Wed Dec 2 12:24:17 2020 -0800

    If a PyTDFunction is not overloaded, use its signature in args.simplify()
    
    Also fix arg unpacking and matching so that an indefinite tuple as the final
    arg in a function call always gets assigned to *args.
    
    PiperOrigin-RevId: 345287750

[33mcommit 0790b3f0c1600d21a7d7a917eb408e29d772c365[m[33m ([m[1;33mtag: 2020.12.02[m[33m)[m
Merge: 9ec841f9 df189686
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 2 13:02:25 2020 -0800

    Merge pull request #748 from google/google_sync
    
    Do a PyPI release.

[33mcommit df189686d5c1912311c15b86296b5128c975c176[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 2 11:42:41 2020 -0800

    Do a PyPI release.
    
    PiperOrigin-RevId: 345278241

[33mcommit 9ec841f9d7dadd389aa4c6f47b36ac3725c89fbc[m
Merge: 010b32c0 def7044f
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 1 19:55:04 2020 -0800

    Merge pull request #747 from google/google_sync
    
    Google sync

[33mcommit def7044f216077b999b434d649f6f4869aca20c0[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 1 14:36:47 2020 -0800

    Flatten nested Literals when parsing pyi files.
    
    Handles arbitrarily nested literals (the current parser raises an error for
    Literal[1, Literal[2, Literal[3]]] but there seemed no reason not to allow it).
    
    Also raise an error on unrecognised Literal types, in line with the old parser.
    
    PiperOrigin-RevId: 345102440

[33mcommit 01fe4b0d2f7531f5b5f4ad6f07208588356f57be[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 1 13:21:51 2020 -0800

    Move pytype/typegraph targets into their own directory.
    
    PiperOrigin-RevId: 345086109

[33mcommit 7c131acf6583363744d6be5390c2edcfee99ed16[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 1 11:35:46 2020 -0800

    Copy relevant parts of PR #743 internally.
    
    * .travis.yml was deleted.
    * The "Tests" README badge has been renamed to "CI" and shows results from the
      new GitHub Actions CI workflow rather than the old Travis tests.
    
    PiperOrigin-RevId: 345064511

[33mcommit d693e4bf41504cb697fd2beb543ae25cd4112add[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 1 10:18:51 2020 -0800

    Update version upgrade doc after switch to GitHub Actions.
    
    PiperOrigin-RevId: 345047056

[33mcommit 40b3afbf59c0ab63f8345954b973301d577651bc[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 30 20:47:02 2020 -0800

    Improve the [bad-return-type] error message.
    
    Previous message, if the return annotation was 'Foo' and the returned value had
    type 'Union[Foo, Bar]':
    
    bad option in return type [bad-return-type]
               Expected: Foo
      Actually returned: Bar
    
    New message:
    
    bad option 'Bar' in return type [bad-return-type]
               Expected: Foo
      Actually returned: Union[Foo, Bar]
    
    Previous message, if the return annotation was 'Foo' and the returned value had
    type 'Bar':
    
    bad option in return type [bad-return-type]
               Expected: Foo
      Actually returned: Bar
    
    New message:
    
    bad return type [bad-return-type]
               Expected: Foo
      Actually returned: Bar
    
    PiperOrigin-RevId: 344943186

[33mcommit d09c020572342f0b5214c72ee93b3cc3e74a77cb[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 30 20:44:11 2020 -0800

    Move targets in pytype/tools/ into their own directories.
    
    Moves targets containing src files in pytype/tools,
    pytype/tools/analyze_project, and pytype/tools/merge_pyi into
    BUILD/CMakeLists.txt files in their respective directories.
    
    After this, we'll only have one more directory (pytype/typegraph) plus a rename
    (pytype/stubs) to deal with.
    
    PiperOrigin-RevId: 344942930

[33mcommit 0ebf7b5c6779136f362023e293dddf4000dd2985[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 30 15:50:33 2020 -0800

    Allow classes to register additional initializers.
    
    * Adds "setup" as an init method for flax dataclasses
    * Modifies the unittest.TestCase special-casing to reguister "setUp" instead.
    
    PiperOrigin-RevId: 344904956

[33mcommit 010b32c0c78087eb624c13dab4ead42324e3e97f[m
Merge: a2ce16ed fe57d4bc
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 1 14:54:57 2020 -0800

    Merge pull request #746 from google/travis
    
    Improve GitHub Actions workflows.

[33mcommit fe57d4bc0a450924d7614ca3b80990d5df04be15[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 1 10:23:29 2020 -0800

    Tweak when workflows run.
    
    They will run for pushes and PRs to master, and when manually triggered.

[33mcommit 3112c0b69c012e32a227338e40625e37d870d875[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 1 09:59:59 2020 -0800

    Rename travis_script to ci_script.
    
    Follow-up to https://github.com/google/pytype/pull/743. We're no longer
    using Travis.

[33mcommit a2ce16edc0ee992f97b328ce752b51318a00d513[m
Merge: d895ddac 2f3e0938
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 1 09:49:24 2020 -0800

    Merge pull request #743 from mraarif/github-actions-ci
    
    Added GitHub workflow for CI (use GitHub Actions) to replace travis

[33mcommit 2f3e0938a3a0f599d915d06a16292bb30a5d88d4[m
Author: Aarif <mraarif@outlook.com>
Date:   Sun Nov 29 12:36:47 2020 +0500

    Added github workflow for CI to replace travis

[33mcommit d895ddac8983ed8b2ff0ef8b7eefffa807074935[m
Merge: d18e5dbb f13dfcf9
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 1 08:48:37 2020 -0800

    Merge pull request #745 from google/google_sync
    
    Google sync

[33mcommit f13dfcf979df5944f881f03980d4f4318326218f[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 30 15:48:44 2020 -0800

    Update CMakeLists.txt files following pytype/pytd restructuring.
    
    PiperOrigin-RevId: 344904591

[33mcommit 968b4b872f731e61a31957fa9a2fb45a28e05921[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 30 14:40:15 2020 -0800

    Allow protocols to use @abstractmethod.
    
    Tested:
      I rebuilt tools/python/pytype/*.par and ran a TGP. The only breakages are
      ones that are already in the build failures table:
      []
    PiperOrigin-RevId: 344891703

[33mcommit b16d667927e066c602112c1917187283246bbe05[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 30 11:34:30 2020 -0800

    Use pytype_exclude_list instead of pytype_blacklist from typeshed.
    
    typeshed's blacklists were renamed to exclude_lists. Our update script failed to
    remove the old files, so this change manually deletes them and fixes pytype.
    
    Also gets rid of pytype_blacklist.bzl, which was unused.
    
    PiperOrigin-RevId: 344854155

[33mcommit b87fac64d71b5efdcb579be18d625ad3fbe5bd5f[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 25 13:01:59 2020 -0800

    Move pytype/pytd/parse targets into their own directory.
    
    This is one of a series of CLs to break up the unwieldy
    third_party/py/pytype/BUILD file. It moves all targets whose srcs reference
    files in pytype/pytd/parse out of pytype/BUILD and into a new
    pytype/pytd/parse/BUILD file.
    
    PiperOrigin-RevId: 344303602

[33mcommit 28810410df249c5474f29745b9b607e7f09a56aa[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 25 11:19:29 2020 -0800

    Update typeshed to fae6bda3aeb63140920ff296b8de83a2cf9d0b6d.
    
    Includes a fix to a pytype test that was broken by the update.
    
    Tested:
      I ran two TGPs, one with just the typeshed update and one with
      tools/python/pytype/*.par rebuilt to use the new typeshed.
      * Typeshed update only: []
      * With pytype rebuilt: []
    PiperOrigin-RevId: 344285987

[33mcommit 24c1d33065518be90548cd4557cff2f416f2ad97[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 24 14:29:45 2020 -0800

    Move pyi/ targets into their own directory.
    
    * Moves pyi/ and pyi/typed_ast/ targets into their own directories, renaming
      dependencies as needed.
    * Fixes a test that was broken by the previous pyc/ move.
    * Updates pytype:type_checked_lib: pytd/parse/node.py no longer needs to be
      excluded, and pyi/typed_ast/ should be added, since it will no longer be able
      to use a pytype_library once it replaces the old pyi parser (due to circular
      deps when running with --define=PYTYPE=DEV).
    
    PiperOrigin-RevId: 344132734

[33mcommit de355bd953225066385450d001109824f39efa09[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 24 12:54:36 2020 -0800

    Move pytype:pyc and tests into the pytype/pyc/ directory.
    
    PiperOrigin-RevId: 344115215

[33mcommit d18e5dbb13df0fac10afedd8900fbdb8bf715045[m
Merge: fdc9ea17 79a05510
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 30 14:22:18 2020 -0800

    Merge pull request #744 from google/ts
    
    Update typeshed to fae6bda3aeb63140920ff296b8de83a2cf9d0b6d.

[33mcommit 79a055108e74dba49a98189412040feb60bdc018[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 25 16:18:56 2020 -0800

    Use pytype_exclude_list instead of pytype_blacklist from typeshed.

[33mcommit 3d5f8b081fe60d664465f08674be902e2d14b0e0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 25 15:50:40 2020 -0800

    Fix test broken by the typeshed update.

[33mcommit 51f7a01ed36b086219527254fd3cff747fe93fe8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 25 15:50:04 2020 -0800

    Update typeshed to fae6bda3aeb63140920ff296b8de83a2cf9d0b6d.

[33mcommit fdc9ea17d2f541027f6b4044880b9c166df3d1a9[m
Merge: 95fa5642 f319c5dd
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 24 14:38:03 2020 -0800

    Merge pull request #741 from google/type_check
    
    Stop excluding pytd/parse/node.py from type-checking.

[33mcommit f319c5ddf195c93c6a667c64e03a4627545df29e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 24 14:13:26 2020 -0800

    Stop excluding pytd/parse/node.py from type-checking.

[33mcommit 95fa56429ca323d4770cf8ac56876bc7f53db777[m
Merge: d3960d8d 7ed7b0f1
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 24 13:15:03 2020 -0800

    Merge pull request #740 from google/google_sync
    
    Google sync

[33mcommit 7ed7b0f1548cd9d8231402ca038bf086bac0fd3b[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 24 11:52:15 2020 -0800

    Create pytype/overlays/ targets.
    
    Pulls pytype/overlays/*.py out of the :libvm target and creates one target per
    file in overlays/.
    
    PiperOrigin-RevId: 344103417

[33mcommit 367c82a5b7aca8a9f65b63d43ac90c87cd600709[m
Author: mdemello <mdemello@google.com>
Date:   Tue Nov 24 00:11:29 2020 -0800

    FIX: Make flax.linen.module.Module always have the same full_name.
    
    Since flax.linen.Module reexports flax.linen.module.Module we always want to
    identify it as the latter type.
    
    PiperOrigin-RevId: 344001674

[33mcommit 1b275130c6718b811a1fea9806b07b606c8799cd[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 24 00:10:22 2020 -0800

    Start moving pytype targets into the subdirectories their source files are in.
    
    * Moves pytype/ast/ targets into their own directory.
    * Splits out files that overlays depend on into their own targets, so that a
      future change can move pytype/overlays/*.py out of :libvm. These files are:
      * analyze.py
      * vm.py
      * annotations_util.py
      * convert.py
      * google_overlay_dict.py
      * matcher.py
      * output.py
      * overlay_dict.py
    
    PiperOrigin-RevId: 344001525

[33mcommit 687b83ae2d6c9410a76667e1f4a6b295b3a8033a[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 23 18:32:44 2020 -0800

    FIX: Relative imports of modules in overlay_dict were not working properly.
    
    Handle redirects to overlays for
      from . import bar
      from .bar import Bar
      from ..baz import foo.bar
    
    Also adds a fix for flax.linen.module.Module being reexported as
    flax.linen.Module, and uses the flax_overlay unit tests to test relative
    imports of overlay modules, since we have no independent tests for the overlay
    machinery.
    
    PiperOrigin-RevId: 343968471

[33mcommit 9fa32857fa09762d1f5f929bbf6ddaa3af2cb69a[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 23 18:06:35 2020 -0800

    Respect attribute annotations in instances of pytd classes.
    
    Fixes a bug exposed by updating typeshed: mock.MagicMock.return_value is
    annotated as Any, but pytype was setting the type to whatever value it was last
    set to in test code.
    
    PiperOrigin-RevId: 343965377

[33mcommit 0d8cbf6952f90dded81846c70fb4aa983c51ff53[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 23 14:56:38 2020 -0800

    FIX: Check for local.last_op = None before using it in dataclass_overlay.
    
    PiperOrigin-RevId: 343934724

[33mcommit a86100c037c32c1f9cdf500a9446e8de046b7638[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 23 14:42:59 2020 -0800

    Finish writing features.md.
    
    PiperOrigin-RevId: 343932342

[33mcommit d1d1906730ef96d2af94a7f6ef4eb28d4055979a[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 23 12:20:35 2020 -0800

    Add a flax.linen overlay
    
    Supports inheriting from flax.linen.Module to define dataclasses.
    
    Adds fields `name: str` and `parent: Any` automatically, raising an error if
    those fields are defined explicitly in the subclass.
    
    PiperOrigin-RevId: 343903817

[33mcommit d3960d8d70673aa27878bf24feb55af694fb6a7e[m[33m ([m[1;33mtag: 2020.11.23[m[33m)[m
Merge: ffc6aab6 9738514b
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 23 14:40:06 2020 -0800

    Merge pull request #738 from google/google_sync
    
    Google sync

[33mcommit 9738514b03a7c2fea2d24065a011492755fe45ae[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 23 08:59:07 2020 -0800

    Do a PyPI release.
    
    The Build Failures table shows that there is only one new finding at head (and
    the finding points to a real type error in the code!), so we should be good for
    a PyPI release.
    
    PiperOrigin-RevId: 343861263

[33mcommit b171d87c45f7833f6290eaec658073c1080aad47[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 23 02:17:41 2020 -0800

    Remove code highlights.
    
    Breaks GitHub markdown =(
    
    PiperOrigin-RevId: 343809972

[33mcommit ffc6aab636329075ee2d9cd443e83d0f790a9b4c[m
Merge: a5b6267b 283f2432
Author: Rebecca Chen <rechen@google.com>
Date:   Sun Nov 22 20:14:10 2020 -0800

    Merge pull request #737 from google/google_sync
    
    Google sync

[33mcommit 283f243273a370d3df21ba54aa43ee379f9ab8c7[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 20 16:30:47 2020 -0800

    Remove another finished TODO.
    
    PiperOrigin-RevId: 343586601

[33mcommit bedf0c46bc062d462079bfadd845a0841be431bc[m
Author: tsudol <tsudol@google.com>
Date:   Fri Nov 20 16:23:19 2020 -0800

    Add docs explaining two-pass analysis.
    
    PiperOrigin-RevId: 343585518

[33mcommit 81db44b8efe17a2017510343c5b293884461d56b[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 20 15:45:59 2020 -0800

    Remove fixed TODO.
    
    PiperOrigin-RevId: 343579437

[33mcommit 11fb1a7e1765beff5efe78ef61db37dcf33ad360[m
Author: tsudol <tsudol@google.com>
Date:   Fri Nov 20 11:10:41 2020 -0800

    Remove unnecessary TODO.
    
    PiperOrigin-RevId: 343527166

[33mcommit 74033c2c1d08aa2183e06d3a9fc8e2a33447597c[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 19 22:14:45 2020 -0800

    Fix an if-splitting bug.
    
    In our implementation of COMPARE_OP, we were looping through all possible
    bindings of the left and right side, then calling the comparison magic method
    with all the left bindings that could not be matched definitely, and the
    *entire right variable*. Just as for the left side, we should be filtering out
    the right bindings that were already matched.
    
    PiperOrigin-RevId: 343433846

[33mcommit 747154987ab3665af16f262f7c758cf5bbd7d452[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 19 21:17:51 2020 -0800

    Cleanup: create a LazyMembers mixin.
    
    Most of the logic for lazy attribute loading was defined in the
    SimpleAbstractValue class, but SimpleAbstractValue is not lazy, so the class
    contained a bunch of code irrelevant to its own functionality. I split out the
    lazy loading code into a new LazyMembers mixin, which also allowed me to get
    rid of the is_lazy attribute in favor of an isinstance check.
    
    I also got rid of the usage of six in mixin.py and replaced another attribute,
    CAN_BE_ABSTRACT, with an isinstance check as well.
    
    PiperOrigin-RevId: 343427297

[33mcommit 1302248c52f650b1350c3cfce5a05e29b33a1cc8[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 19 18:25:32 2020 -0800

    Pretty-print Union[Literal["x"], Literal["y"]] as Literal["x", "y"].
    
    PiperOrigin-RevId: 343410131

[33mcommit 2683c5a1f175a9698d11dcc53c609a5e7bf372d8[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 19 15:11:01 2020 -0800

    Some small fixes for Literal.
    
    * Look up the base class in Literal.__init__ so callers don't have to do so.
    * Implement __eq__, __hash__, and instantiate. The __hash__ implementation
      assumes that the same constant will always be represented with the same
      AbstractOrConcreteValue instance, so I made sure no code outside of
      convert.py directly constructs an AbstractOrConcreteValue.
    * Changes the matcher to copy literal parameters directly when matching tuples.
      The ultimate effect of this is that literal values are preserved when
      iterating over a tuple (and over a list literal! I was surprised to discover
      that the list in test_iterate gets turned into a tuple under the hood), so
      they can be passed to a function that expects a literal.
    
    PiperOrigin-RevId: 343379049

[33mcommit 3e02bfeaa13e15acf68dfb1c436e65ccc695ce56[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 19 12:11:13 2020 -0800

    Take classmethods and staticmethods into account in protocols.
    
    An unexpected consequence of supporting typing_extensions.runtime is that we
    suddenly analyze a bunch of code that previously silently passed type-checking
    due to the use of a runtime protocol. This runtime protocol also has a
    classmethod, which caused a bunch of false positives due to pytype
    inconsistently ignoring classmethods some of the time.
    
    PiperOrigin-RevId: 343342498

[33mcommit de5ea5232078f76004d531b3b2ee50aec8b4d52c[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 18 19:43:44 2020 -0800

    Fix: don't rely on the module attribute in analyze._is_typing_member.
    
    The module check broke some user code that was importing a typing member, then
    exporting a parameterized version under the same name.
    
    As a side note, I noticed that pytype infers a type of Any for TypingContainer
    objects. I didn't try to fix this, since I can't think of a good reason to want
    to re-export a typing member from your own module and use that instead of using
    typing directly.
    
    PiperOrigin-RevId: 343207525

[33mcommit a5b6267bf80761c2b3a363856a5f701495ceea2b[m
Merge: 50fa6803 b469d1ca
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 19 21:27:34 2020 -0800

    Merge pull request #735 from google/requirements
    
    Copy version requirements from setup.cfg to requirements.txt.

[33mcommit b469d1ca203c5c5ea78606c95062b79c447d9625[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 19 21:00:55 2020 -0800

    Copy version requirements from setup.cfg to requirements.txt.

[33mcommit 50fa680368b59c5c4ea7add257a6792ecb455d46[m
Merge: 3e643963 ed2b53c4
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 18 19:58:44 2020 -0800

    Merge pull request #734 from google/google_sync
    
    Make testing and supporting upcoming Python versions easier.

[33mcommit ed2b53c40ff50a8da087a88ca5befce2c021f1df[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 18 19:13:32 2020 -0800

    Make testing and supporting upcoming Python versions easier.
    
    Currently, pytype's Python 3.9 Travis test is pretty useless, since all it does
    is repeatedly print out "Python versions > 3.8 are not yet supported". To make
    the test actually useful, I added a hacky _VALIDATE_PYTHON_VERSION_UPPER_BOUND
    attribute to utils.py, which disables the upper bound version check when it
    detects that a pytype test is running.
    
    While I was at it, I added the 3.9 opcodes and magic numbers and wrote a little
    script that diffs the opcode mappings between two versions.
    
    PiperOrigin-RevId: 343204278

[33mcommit 3e643963a3b5ed80ba1ecdf522df274ea16e6425[m
Merge: 3cd13276 287c3e80
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 18 02:40:53 2020 -0800

    Merge pull request #733 from google/google_sync
    
    Google sync

[33mcommit 287c3e80baba51f0972d016fd359d7ae282104ce[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 18 01:34:08 2020 -0800

    Support typing.Literal with bool, int, str, and bytes in source code.
    
    Adds support for typing.Literal, with the one caveat that we can't support
    enums because they still end up as Any =( (I'm going to mark the tracking
    Literal bug as fixed and open one specifically for enum support.)
    
    * Makes a bunch of tweaks to annotation substitution and error printing so
      that errors show up as
        Expected: Literal["X"]
        Actual: Literal["Y"]
      rather than the previous unhelpful
        Expected: Literal[str]
        Actual: str
    * Fixes a bug where pytd functions had their module names prepended twice.
    * Fixes a bug where vm._is_typing_member still did not detect typing_extensions
      aliases of typing members as belonging to typing.
    * Adds logic for converting from abstract.LiteralClass to pytd.Literal.
    * Adds typing_overlay.Literal to construct literals.
    * Fixes a bug where the pyi parser did not flatten nested literals and allowed
      literals with illegal values.
    * Fixes a bug in the pytd printing of boolean literals.
    
    Closes https://github.com/google/pytype/issues/521.
    
    PiperOrigin-RevId: 343034907

[33mcommit 316c2383da105f903d6f2e738de7494a46a2a6fb[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 17 14:27:07 2020 -0800

    Document lazy attribute loading.
    
    Explaining _convert_member in my previous change made me realize we should
    probably document what it does and how it's supposed to be used.
    
    PiperOrigin-RevId: 342946579

[33mcommit 3dfe52c44c1a3d34eeea707ad2bdd1c23cc77af5[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 17 13:45:37 2020 -0800

    Some minor fixes and cleanups for module handling.
    
    * Changes the _convert_member method that creates abstract values for module
      members to take just a VM instance, rather than both a member name and a VM
      instance. This requires making a bunch of small changes to all our overlays
      but overall looks cleaner, IMO.
    * Deletes an unused `node` parameter in PyTDClass._convert_member.
    * Gets rid of vm.trace_module_member, which was used to record data about
      typing module members as they are created. We can just look members up
      using typing_overlay.
    * Fixes a bug where members converted using Overlay.items() were not stored in
      the member map.
    
    PiperOrigin-RevId: 342937335

[33mcommit e1b8090af0b1605d6064a62045482e882646d7d3[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 17 13:29:18 2020 -0800

    Replace typing_extensions.pytd with an overlay.
    
    Deletes our pytd for typing_extensions, which aliased a few members to their
    counterparts in typing and mapped everything else to Any. Instead, uses
    typeshed's typing_extensions.pyi and adds an overlay for it.
    
    Fixes the following issues:
    * typing_extensions.Literal was aliased directly to the pytd value for
      typing.Literal, bypassing the overlay.
    * Unsupported typing_extensions members, like TypedDict, were silently mapped
      to Any.
    
    PiperOrigin-RevId: 342933754

[33mcommit 3cd132764f856ef21e86b5e38c65c5a6e47339eb[m
Merge: 793623e2 249fe166
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 16 20:54:20 2020 -0800

    Merge pull request #732 from google/google_sync
    
    Google sync

[33mcommit 249fe166c31d7f1a121c4a2b84a5f5fefd2951fd[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 16 18:14:24 2020 -0800

    Raise an exception for unexpected function bodies.
    
    We currently strip out bare strings (on the theory that they are docstrings)
    before the function is processed, but I added a redundant check to the function
    body anyway, in case we stop doing that.
    
    PiperOrigin-RevId: 342763706

[33mcommit 0e29f3d5735556fcfac65d66808fab6f9acd06f3[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 16 16:19:14 2020 -0800

    Move the ast visitor from tools/traces to main pytype.
    
    PiperOrigin-RevId: 342745230

[33mcommit 6fef1e517795563f0e87f9579c006f9fe7b24cc2[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 16 15:00:25 2020 -0800

    Fix a bunch of tests to conform to valid pyi syntax
    
    PiperOrigin-RevId: 342728475

[33mcommit 6c2a7ed211281a6de95c98008492d8e9f25f5642[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 16 11:37:25 2020 -0800

    Remove stale TODOs.
    
    PiperOrigin-RevId: 342682992

[33mcommit 0b162ab411be29606ac79b1e55f60ea981673f49[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 16 11:22:55 2020 -0800

    Start a doc on supporting new typing features.
    
    PiperOrigin-RevId: 342679472

[33mcommit 8533af1fe525254957d84f600024b9d81791150e[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 16 10:51:03 2020 -0800

    Forgot to update the opensource docs.
    
    PiperOrigin-RevId: 342671689

[33mcommit 68665a42d8601d1c08fb2cd69a975b8274aa8887[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 16 10:23:21 2020 -0800

    Finish the overview of the typegraph members.
    
    PiperOrigin-RevId: 342665371

[33mcommit a0d4776369b72705bd19f15b90e5683dba26bb13[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 13 17:08:10 2020 -0800

    Add a bit more information to tools/README.
    
    Also remove last TODO from developers/index because, eh, that's a little too
    anal even for me.
    
    PiperOrigin-RevId: 342366524

[33mcommit 074badb0b2a046863daa928359d65bab061d2775[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 13 14:15:54 2020 -0800

    Always treat modules as hashable.
    
    Yet another bug exposed by the typeshed update.
    
    PiperOrigin-RevId: 342336512

[33mcommit 6a7eea95a99b986602786792894f811b92ec0c68[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 13 11:57:52 2020 -0800

    Add one more anal TODO.
    
    PiperOrigin-RevId: 342309279

[33mcommit 3b7fb11829ef193ab016b1e87ccf5086dffef9b7[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 13 11:45:29 2020 -0800

    Update TODOs in index.md.
    
    PiperOrigin-RevId: 342306299

[33mcommit 757f27304ddcc4c952d99ee6f1c020a784ad8ab6[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 13 11:39:16 2020 -0800

    Internal change
    
    PiperOrigin-RevId: 342304809

[33mcommit 793623e2f8db70967b8e35a4411c6c6835a67c03[m[33m ([m[1;33mtag: 2020.11.12[m[33m)[m
Merge: afc1fde2 8a896b5c
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 12 19:33:23 2020 -0800

    Merge pull request #730 from google/google_sync
    
    Do a PyPI release.

[33mcommit 8a896b5c2497a033745d79855342e7b34e216f65[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 12 10:59:37 2020 -0800

    Do a PyPI release.
    
    The Build Failures table is still almost suspiciously empty, so it's a great
    time to do a release.
    
    PiperOrigin-RevId: 342085198

[33mcommit afc1fde2b1254fb48ea9c39f854f39687ade7387[m
Merge: 70215e18 6c37c3c1
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 12 00:11:27 2020 -0800

    Merge pull request #729 from google/google_sync
    
    Google sync

[33mcommit 6c37c3c1a535e00d8aa664700326ad93e6e65e51[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 11 23:46:52 2020 -0800

    Fix collections_overlay_test on Travis.
    
    The opensource tests seem to require the test name to match the path:
    https://travis-ci.org/github/google/pytype/jobs/743119164.
    
    PiperOrigin-RevId: 341988790

[33mcommit 79b728d31812fdeb83135ea38f0d4ad8a621ba6f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 11 23:08:05 2020 -0800

    Fix Travis lint errors.
    
    Seen in https://travis-ci.org/github/google/pytype/jobs/743080653.
    
    PiperOrigin-RevId: 341954573

[33mcommit ce4a913c158f7db1e99deb120fc5f11d354223ab[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 11 23:05:58 2020 -0800

    Add a missing <br /> to docs/_layouts/dev_guide.
    
    PiperOrigin-RevId: 341950433

[33mcommit 07e8a3fb9dda73a028a877da909f55bd1ef0f5ed[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 11 17:48:09 2020 -0800

    Support `# type: ignore[errorcode, ...]` in pyi files.
    
    Came up in https://github.com/python/typeshed/pull/4758 - mypy supports having
    error codes in brackets after a `# type: ignore`. From
    https://github.com/python/mypy/blob/master/mypy/errorcodes.py and
    https://hub.packtpub.com/mypy-0-730-releases-with-more-precise-error-locations-display-error-codes/,
    it seems error codes look like my-error-code, and you can include multiple
    by separating them with commas.
    
    This change will also allow `# type: ignore[]`, but I think that's fine.
    
    PiperOrigin-RevId: 341947562

[33mcommit 666fa2e6f0b5de239bcc60cf04d59bbfced43a0b[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 11 17:19:32 2020 -0800

    Always allow classes to match typing.Hashable.
    
    Fixes another bug exposed by upgrading typeshed.
    
    PiperOrigin-RevId: 341942698

[33mcommit b964b6a94066566bc7e76141e5f12dcb4a598617[m
Author: mdemello <mdemello@google.com>
Date:   Wed Nov 11 16:14:20 2020 -0800

    Allow `x = ...` for `x: Any = ...`
    
    PiperOrigin-RevId: 341931368

[33mcommit ca6a6191237a17fb081f5bb4e436b5886be39b7b[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 11 11:06:43 2020 -0800

    Fix a bug in pytype's handling of Literal[<str>].
    
    When a constant with type Literal[<str>] is imported from a pyi file, pytype
    failed to strip quotation marks and prefixes. On the other hand, these things
    were properly stripped from Literal[<str>] annotations, leading to matching
    failures. With this change, stripping will always happen.
    
    I noticed that part of a test case had been accidentally commented out in the
    test file I was modifying, so I fixed that, too.
    
    PiperOrigin-RevId: 341867333

[33mcommit 79bdd34b4b7a5194530d261b269e48ecf1185234[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 9 13:48:19 2020 -0800

    Fix a typo: implememt -> implement.
    
    PiperOrigin-RevId: 341477728

[33mcommit 34f83d3c46160177549d7e837afa0cd5856d68fd[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 9 13:32:43 2020 -0800

    Add documentation for optimize.py, convert.py.
    
    Also collects all remaining action items (that I'm aware of) into a single TODO
    on the index page and adds a missing newline to the oss sitemap.
    
    PiperOrigin-RevId: 341474335

[33mcommit d206eb858c6c058a9778027a1c08f3cf927aa2b5[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 9 13:06:41 2020 -0800

    Move collections_overlay_test to overlays/ alongside collections_overlay
    
    PiperOrigin-RevId: 341469185

[33mcommit e695e65f9b4ae1b5cc97a6234f709cabaf75fbc3[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 9 12:00:09 2020 -0800

    Add basic documentation for tools/
    
    PiperOrigin-RevId: 341455646

[33mcommit f3a41ba56075d72ebb9cdf41cf11b61fa6b4d9f5[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 9 11:54:55 2020 -0800

    Add notes on the solver algorithm.
    
    PiperOrigin-RevId: 341454439

[33mcommit 392d45a547837f566ebfe891b4b3b97366e93440[m
Author: mdemello <mdemello@google.com>
Date:   Thu Nov 5 16:03:47 2020 -0800

    Move namedtuple name generation to pytd/escape.py
    
    PiperOrigin-RevId: 340946123

[33mcommit c7010e69899b46148e1e358f048e5d39fd5a0f12[m
Author: mdemello <mdemello@google.com>
Date:   Thu Nov 5 12:00:46 2020 -0800

    Fix test definitions to conform to proper syntax in pyi samples.
    
    Mostly makes the following changes:
      def f(x, ...) -> y:
    to
      def f(x, *args) -> y: ...
    
    Tested by temporarily enabling the new parser and running the unit tests.
    
    PiperOrigin-RevId: 340900181

[33mcommit 7d41c8ebda1a605d6cdc153ee4309cda2af65275[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 5 09:30:54 2020 -0800

    Fix a typo in typegraph.md.
    
    PiperOrigin-RevId: 340868319

[33mcommit 26b604f969cd1ac4cf301bdc5d628a10d8f75c8e[m
Author: mdemello <mdemello@google.com>
Date:   Wed Nov 4 10:28:14 2020 -0800

    Replace x or y with Union[x, y] throughout.
    
    Mostly straightforward search/replace; in optimize_test.py I added a wrapper to
    automatically insert the Union import if needed since every pytd needed it.
    
    One test skipped in pytd/visitors_test.py
    
    PiperOrigin-RevId: 340680281

[33mcommit 2f03a3d634d825558226259a1cfedc335145c42a[m
Author: mdemello <mdemello@google.com>
Date:   Tue Nov 3 17:02:56 2020 -0800

    Replace ? with Any in tests and inline pyi fragments.
    
    PiperOrigin-RevId: 340553204

[33mcommit 0dfb73931ce65de4ec304a1d70eb8e19c14a3667[m
Author: mdemello <mdemello@google.com>
Date:   Tue Nov 3 16:41:08 2020 -0800

    Allow the prefix for partials and unknowns to be changed.
    
    Fixes all places where "~" and "~unknown" were hardcoded.
    
    Experimentally, changing escape.PARTIAL leads to no test breakages.
    
    PiperOrigin-RevId: 340550142

[33mcommit 70215e185f17d2611ea4230eb1375c17712560fe[m[33m ([m[1;33mtag: 2020.11.03[m[33m)[m
Merge: a1a6c24a 5dd02dd2
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 4 15:32:04 2020 -0800

    Merge pull request #726 from google/manifest
    
    Fix pip install errors.

[33mcommit 5dd02dd239768595e32549be7cd26d869eb8e568[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 3 20:24:23 2020 -0800

    Use plain setuptools.Extension for the parser extension.
    
    For reasons mysterious to me, using Pybind11Extension leads to the error
    "ImportError: dynamic module does not define module export function
    (PyInit_parser_ext)", even if I set include_pybind11=False.

[33mcommit ffe3c8931384f0866b19d84a766fc6fe6b5d3c81[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 3 19:57:43 2020 -0800

    Add pytype/typegraph/* to MANIFEST.in.
    
    I was getting errors about cfg_logging.h being missing when trying to
    test a new release; this change seems to fix the issue.
    
    I'm still seeing some odd dynamic import failure, but python3.7 on my
    machine also appears to be half-broken right now, so I have no idea if
    the issue is with the pytype code or my environment.

[33mcommit a1a6c24a3dce6f4453b42e0bd2b4d224e6e262b6[m
Merge: 7755e3cf 3b2c5f9e
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 3 14:47:41 2020 -0800

    Merge pull request #725 from google/google_sync
    
    Do a PyPI release.

[33mcommit 3b2c5f9ed194a7a9ee1d907e28b10de1b59964b9[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 3 14:03:58 2020 -0800

    Do a PyPI release.
    
    PiperOrigin-RevId: 340520728

[33mcommit 7755e3cf823e855439b6e297f57be6cd3c321c5d[m
Merge: b3c6da89 9327ad16
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 2 20:26:45 2020 -0700

    Merge pull request #724 from google/google_sync
    
    Google sync

[33mcommit 9327ad1673b2574e9b99b7129790387c6fddfb3b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 2 19:00:39 2020 -0800

    Remove a trailing newline at the end of parser.py.
    
    The extra newline displeases oss pylint:
    https://travis-ci.org/github/google/pytype/jobs/741022897.
    
    PiperOrigin-RevId: 340360158

[33mcommit a51a99f96bdabddd3ddff6ed3940eb5e1f065239[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 2 15:39:28 2020 -0800

    Add docs for reachability.h.
    
    PiperOrigin-RevId: 340330922

[33mcommit 9dbc716bd2d1fecc552ddad7e628dddb5265c5ed[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 2 12:00:48 2020 -0800

    Start collecting partial name mangling (e.g. ~unknown1) into a single place.
    
    We ultimately want to replace the `~` with a legal python character.
    
    PiperOrigin-RevId: 340286094

[33mcommit 8c22d47efffad159809931c40b4aadc0fae52d7b[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 2 11:48:03 2020 -0800

    Use legal characters in generated namedtuple names.
    
    We need to be able to round-trip pyi files with the new parser.
    
    PiperOrigin-RevId: 340283188

[33mcommit 1457a62ca7b50a9fab45b92430e58d7844dfc22a[m
Author: tsudol <tsudol@google.com>
Date:   Fri Oct 30 13:35:53 2020 -0700

    Remove reachability metrics.
    
    Reachability metrics was originally recorded as CacheMetrics. However, the reachability mechanism is not actually a cache, but a dynamically-grown adjacency matrix. The idea of cache hits and misses is not relevant here.
    
    PiperOrigin-RevId: 339931062

[33mcommit b12a7e732bbfbb487f6cf5daf578bfec30364018[m
Author: mdemello <mdemello@google.com>
Date:   Thu Oct 29 12:22:58 2020 -0700

    Fix attrs pytd file to be compatible with the new parser.
    
    PiperOrigin-RevId: 339721735

[33mcommit 2e5a4fef9835974ba4316977dd3dfe945597129e[m
Author: tsudol <tsudol@google.com>
Date:   Wed Oct 28 15:31:37 2020 -0700

    Add metrics for solver queries.
    
    PiperOrigin-RevId: 339551003

[33mcommit 3eae8e35e038bfe48dcb58498772711f96476879[m
Author: mdemello <mdemello@google.com>
Date:   Mon Oct 26 16:33:39 2020 -0700

    FIX: xref crash when a class was declared `global`.
    
    PiperOrigin-RevId: 339143448

[33mcommit 9ed9c4713ed34258ce49a10380512d445b8d39c6[m
Author: mdemello <mdemello@google.com>
Date:   Fri Oct 23 14:40:38 2020 -0700

    Fix the last few pytd issues.
    
    All of pytd/**/*.pytd is parsing now except for the shadowed module in
    attr/__init__.pytd
    
    PiperOrigin-RevId: 338747733

[33mcommit 1a45c250e735d3c0a98e167c1e57022604b56721[m
Author: mdemello <mdemello@google.com>
Date:   Fri Oct 23 14:15:26 2020 -0700

    FIX: _PathLike should be a protocol.
    
    PiperOrigin-RevId: 338742906

[33mcommit 774ec679edbd004186406ec748d4cc75b7ccc7b9[m
Author: mdemello <mdemello@google.com>
Date:   Fri Oct 23 11:27:15 2020 -0700

    Account for *args and **args in BUILD_CLASS
    
    PiperOrigin-RevId: 338711741

[33mcommit 8844048f3d0499cbe04e49cb0459f7ace8a55ef9[m
Author: mdemello <mdemello@google.com>
Date:   Thu Oct 22 12:50:10 2020 -0700

    We cannot parse keyword constants like True with a python parser.
    
    If the module name is "__builtin__", add {True, False, None, __debug__}
    manually to the constant list after parsing the pyi file.
    
    Also adds some minor fixes:
    * convert NamedType("nothing") to NothingType()
    * fix some noncompliant `def`s
    
    PiperOrigin-RevId: 338530575

[33mcommit b3c6da890aa0a32dcc3263e32942c88699eac0e8[m
Merge: fd587469 652f5e4b
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 2 19:19:25 2020 -0700

    Merge pull request #723 from google/google_sync
    
    Google sync

[33mcommit 652f5e4b20d35a2acea9674347062ea0e37d846d[m
Author: Shane Harvey <shane.harvey@mongodb.com>
Date:   Tue Oct 20 13:20:26 2020 -0700

    merge-pyi support for "import collections.abc as abc" style imports (#713)
    
    Fixes https://github.com/google/pytype/issues/706.
    
    Resolves #713
    
    PiperOrigin-RevId: 338124126

[33mcommit 8ad2f951c62e9adff596b7af893054b8f3374fc2[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 15 17:19:06 2020 -0700

    Allow `...` as a default parameter value for empty methods.
    
    @overload methods are basically stubs, so `...` should be a valid default value
    for them. It's hard to identify overloads when type-checking default values, so
    I just allowed `...` whenever the method body is empty.
    
    PiperOrigin-RevId: 337414973

[33mcommit fd587469f88708d23f743075632d26515fcfd227[m
Merge: a4d56ef7 6762f92d
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 2 18:48:01 2020 -0700

    Merge pull request #720 from google/brew
    
    Fix the Build MacOS wheels actions.

[33mcommit 6762f92dd5e43d24a209a58b0ead1c180642ff0f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 20 14:22:05 2020 -0700

    Try to fix Build Wheels.
    
    Failing with the error in
    https://github.com/actions/virtual-environments/issues/1811#issuecomment-708461086.
    Attempting the workaround in
    https://github.com/actions/virtual-environments/issues/1811#issuecomment-708480190.

[33mcommit a4d56ef763eb4a29b5db03a2013c3373f9f46146[m
Merge: 1c4ac1a1 e34b2d19
Author: Teddy Sudol <tsudol@google.com>
Date:   Mon Oct 19 10:10:07 2020 -0700

    Merge pull request #718 from google/google_sync
    
    Google sync

[33mcommit e34b2d19d5ca2ca8c83158560209a4113a4ee7e6[m
Author: tsudol <tsudol@google.com>
Date:   Thu Oct 15 11:10:40 2020 -0700

    Fix bug with arguments to self.fail.
    
    PiperOrigin-RevId: 337345364

[33mcommit 6e332cdc3ac059060473ae597948273a8950790b[m
Author: tsudol <tsudol@google.com>
Date:   Wed Oct 14 13:25:36 2020 -0700

    Disable cfg_py in CMakeLists.
    
    PiperOrigin-RevId: 337159163

[33mcommit 4c402698634114591e481d825fedefa7a7a2c20d[m
Author: tsudol <tsudol@google.com>
Date:   Tue Oct 13 13:55:44 2020 -0700

    Add pybind11 to the top-level CMakeLists.txt.
    
    This enables it to be used by pytype.typegraph.cfg.
    
    PiperOrigin-RevId: 336949158

[33mcommit 1d7771303116df7d84d8685a1fd006e65cdb56aa[m
Author: tsudol <tsudol@google.com>
Date:   Tue Oct 13 12:12:25 2020 -0700

    Fix cfg rule name in CMakeLists.
    
    PiperOrigin-RevId: 336927800

[33mcommit afe8e974a65ac1d7eb6e031cb11da395ed1255b3[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 12 17:48:14 2020 -0700

    Add tests confirming get_attribute's handling of valself.
    
    Shockingly, the docstring appears to be completely accurate.
    
    PiperOrigin-RevId: 336782243

[33mcommit dbb762a91f03392ff7a38695fc4d2925345bbd06[m
Author: mdemello <mdemello@google.com>
Date:   Mon Oct 12 17:24:07 2020 -0700

    Add type annotation handling to the developer docs.
    
    PiperOrigin-RevId: 336778714

[33mcommit 6de3d47c9fe8608ecb7db75d1e8fe1fc8c1d142a[m
Author: tsudol <tsudol@google.com>
Date:   Mon Oct 12 16:00:05 2020 -0700

    Prepare for opensourcing the new pybind11-dependent code.
    
    PiperOrigin-RevId: 336763262

[33mcommit 2b787651a021b57c68750d0bc91c7b66dd77a38e[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 12 11:26:08 2020 -0700

    Fix definition of ByteString and the `bytes` shorthand.
    
    typing.ByteString should represent bytes, bytearray, and memoryview, with
    bytes serving as a shorthand for all three types when it appears as a parameter
    annotation. The simplest way to do this is to cheat slightly and represent
    ByteString as a Union instead of a single type. To make the bytes shorthand
    work properly, I also had to add some logic in the matcher for deduplicating
    compatible builtins when matching typevars.
    
    PiperOrigin-RevId: 336705554

[33mcommit 6c9b3d4b306b7141db877b63aa12ec40da1817b9[m
Author: rechen <rechen@google.com>
Date:   Sat Oct 10 22:09:24 2020 -0700

    Support creating ints out of classes that implement __trunc__ or __index__.
    
    In all Python versions we support, int() can be called on a class that defines
    __trunc__. In 3.8+, it can also be called on a class that defines __index__.
    
    PiperOrigin-RevId: 336506983

[33mcommit 7133b630b83fb2dbb09990f4d89394959df453f7[m
Author: rechen <rechen@google.com>
Date:   Sat Oct 10 22:04:12 2020 -0700

    Allow functions to match Hashable.
    
    Bug found while trying to upgrade typeshed: functions should be treated as
    hashable.
    
    PiperOrigin-RevId: 336506537

[33mcommit 67ea190683a8418d6da77943be579133c9ccef7a[m
Author: tsudol <tsudol@google.com>
Date:   Fri Oct 9 15:08:39 2020 -0700

    Add a missing ).
    
    PiperOrigin-RevId: 336373705

[33mcommit ce2ce21180daa512b67daf93fecdfed3bbb37a3d[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 8 18:38:49 2020 -0700

    Update docs to reflect removal of host 3.5 support.
    
    For https://github.com/google/pytype/issues/677.
    
    PiperOrigin-RevId: 336207143

[33mcommit f850d42827e83c5c712d85c9a82f2d91dd833ed5[m
Author: tsudol <tsudol@google.com>
Date:   Thu Oct 8 17:07:35 2020 -0700

    Add pybind11-based glue code for new typegraph metrics.
    
    PiperOrigin-RevId: 336195189

[33mcommit 1c4ac1a16e98aeacd1a5786b68944a15f7b7468a[m
Author: Henry Schreiner <HenrySchreinerIII@gmail.com>
Date:   Fri Oct 16 20:19:38 2020 -0400

    fix: simplifiy pybind11 usage (#716)
    
    * fix: simplifiy pybind11 usage
    
    * fix: allow overriding pybind11, update to rc3
    
    * fix: review points

[33mcommit 35fb32dc6e4c388bd57f01bfee9625fdca826be0[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue Oct 13 14:54:23 2020 -0700

    Add pybind11 as a submodule. (#708)
    
    This is necessary in order to use pybind11's CMake rules.

[33mcommit 2bf08c79e5148732eed5234fae1703b76b9b267b[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Mon Oct 12 15:43:43 2020 -0700

    Prepare to use pybind11. (#707)

[33mcommit 96ce3cd01b47cf48300d891b5522551c42a1bf6e[m
Merge: 0beea117 238c2799
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 12 11:06:30 2020 -0700

    Merge pull request #705 from mraarif/simplify-travis-file
    
    updated the travis configuration to simplify dependencies

[33mcommit 238c2799cc6a7d084a8535ea3fca97883b56239f[m
Author: Aarif <mraarif@outlook.com>
Date:   Sun Oct 11 12:59:43 2020 +0500

    updated the travis configuration to simplify dependencies intstallation and make it more readable

[33mcommit 0beea117ff7ef7928e446347344363a0deee3ec7[m
Merge: c3358c10 2eae4125
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Oct 9 12:04:48 2020 -0700

    Merge pull request #703 from google/drop35
    
    Drop support for running pytype under Python 3.5.

[33mcommit c3358c100391444c472e0f87bf8042a8a7307270[m
Merge: 5c65f4fd 60480cf2
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 8 18:27:35 2020 -0700

    Merge pull request #702 from google/env
    
    Migrate away from set-env.

[33mcommit 2eae4125707f5f82787bdac903715815b4fcc06d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 8 18:20:07 2020 -0700

    Remove unused CMAKE_VERSION.

[33mcommit 2f9a1a8acb10c4a135b52d420a9f655ac3f805cc[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 8 18:13:50 2020 -0700

    Drop support for running pytype under Python 3.5.
    
    Moving off 3.5 will allow us to write code using f-strings and variable
    annotations. To continue analyzing 3.5 code, users can pin to pytype
    2020.10.08 or run pytype under a 3.6-3.8 interpreter and pass `-V 3.5`
    to it. (For the latter option, they'll need to find some way to tell
    pytype where third party packages are located, or just silence the
    import errors.)
    
    For https://github.com/google/pytype/issues/677.

[33mcommit 60480cf2c601318cafaabe121988dcc65ec03e1b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 8 17:36:58 2020 -0700

    Migrate away from set-env.
    
    Our latest Build Wheels run included a deprecation warning:
    https://github.com/google/pytype/actions/runs/296426515.
    
    The non-deprecated way to set an environment variable is:
    https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-commands-for-github-actions#setting-an-environment-variable.

[33mcommit 5c65f4fd94819259c5c48dc1d8d992e22914cf1a[m[33m ([m[1;33mtag: 2020.10.08[m[33m)[m
Merge: 2ebc1717 c52433c6
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 8 15:27:56 2020 -0700

    Merge pull request #701 from google/google_sync
    
    Do a PyPI release.

[33mcommit c52433c6d0a48b0af9e7412a34f50777cbc6a89a[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 8 14:11:30 2020 -0700

    Do a PyPI release.
    
    PiperOrigin-RevId: 336162067

[33mcommit 2ebc17179b00b16c0fcc1c0f19bc56f7fcb51f89[m
Merge: 85242f88 75d7f80b
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 6 14:40:29 2020 -0700

    Merge pull request #700 from google/google_sync
    
    Google sync

[33mcommit 75d7f80b1d2640cc5bd9c98e75cc91022cdece35[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 6 14:08:14 2020 -0700

    Add runtime_checkable to typing.pytd.
    
    See https://github.com/python/typeshed/pull/4618.
    
    PiperOrigin-RevId: 335717282

[33mcommit 177943d02b42375c43d10ed2b3a9cc5ba479060c[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 5 13:57:11 2020 -0700

    Copy new diagrams to docs/.
    
    PiperOrigin-RevId: 335492778

[33mcommit 85242f88c86434b8069fbd3fde01167926e69968[m
Merge: 3f119a48 ea678384
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 6 14:09:49 2020 -0700

    Merge pull request #699 from google/google_sync
    
    Google sync

[33mcommit ea678384f1585d253a1cb58e1b1ebfb4c74278e7[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 5 13:37:38 2020 -0700

    Update CONTRIBUTING.md.
    
    * Copy PR #695 for weird dance to keep internal and external docs in sync.
    * Do some additional cleanup that PR author spotted.
    
    PiperOrigin-RevId: 335489084

[33mcommit 677e4b234042c12d26dc457442054fa8a5383cf4[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 5 12:43:36 2020 -0700

    Add flowcharts and descriptions of get_attribute and set_attribute.
    
    PiperOrigin-RevId: 335477295

[33mcommit 3f119a48c690175b64f604c154eb538946c7951f[m
Merge: 3482fcc1 e1c96ec0
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 6 12:39:31 2020 -0700

    Merge pull request #698 from google/cmake
    
    Stop manually downloading cmake to fix manylinux wheel build.

[33mcommit e1c96ec0cc86c947c5a9cbbcbff6299a60101423[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 6 12:02:36 2020 -0700

    Stop manually downloading cmake.
    
    manylinux wheel build is failing with
      ln: failed to create symbolic link ‘/usr/local/bin/cmake’: File exists

[33mcommit 3482fcc12268162cc95ce59a6bc5c9b2ac46d359[m
Merge: 919b6d9e 1a2c9bb4
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 5 13:30:47 2020 -0700

    Merge pull request #695 from josalmi/contri-requirements
    
    Mention requirements.txt in CONTRUBUTING guide

[33mcommit 1a2c9bb4e2106f81c85c6f80ac851c69cc6ce7d9[m
Author: Joni Salmi <josalmi@google.com>
Date:   Sat Oct 3 01:24:44 2020 +0200

    Mention requirements.txt in CONTRUBUTING guide

[33mcommit 919b6d9eced13335a46e745743a26297ceb3f151[m
Merge: e760fd4c 641692b8
Author: Rebecca Chen <rechen@google.com>
Date:   Sun Oct 4 20:43:32 2020 -0700

    Merge pull request #696 from josalmi/dockerfile
    
    Add Dockerfile for development

[33mcommit 641692b814fa8135f4c112146138363df1d9d1be[m
Author: Joni Salmi <josalmi@google.com>
Date:   Sat Oct 3 11:07:52 2020 +0200

    Add Dockerfile for development

[33mcommit e760fd4c9f4fbfc2626db0f9a959d556e026b856[m
Merge: 9a128c6f 0167d720
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Oct 2 11:48:31 2020 -0700

    Merge pull request #694 from google/google_sync
    
    Use list comprehensions for flattening (#693)

[33mcommit 0167d720953a0b511378028a9286776fd042c076[m
Author: Lukas Geiger <lukas.geiger94@gmail.com>
Date:   Fri Oct 2 11:12:52 2020 -0700

    Use list comprehensions for flattening (#693)
    
    This PR changes the visitor and typegraph utils to use list comprehensions for flattening nested sequences instead of `sum([...], [])` which can be slow for large inputs. This should improve readability and also slightly improve performance.
    
    Resolves #693
    
    PiperOrigin-RevId: 335062627

[33mcommit 9a128c6f0900e28b7a20d7f35cbd9d1aef898121[m[33m ([m[1;33mtag: 2020.09.29[m[33m)[m
Merge: 00ecaea6 a2baa7fd
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 29 13:31:28 2020 -0700

    Merge pull request #692 from google/google_sync
    
    Do a PyPI release.

[33mcommit a2baa7fddab91fe5e06681b74632728fe2936b97[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 29 11:16:43 2020 -0700

    Do a PyPI release.
    
    PiperOrigin-RevId: 334421091

[33mcommit 00ecaea6afe8f6e813af3ad4925a517785f1e04b[m
Merge: 62b9bd1d 5bad7b68
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 28 20:34:02 2020 -0700

    Merge pull request #691 from google/google_sync
    
    Google sync

[33mcommit 5bad7b68e1e41e258038b3678efca5b166cfcd2c[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 28 17:22:07 2020 -0700

    Use `py -x.y` instead of `pythonx.y` for windows.
    
    Although pytype doesn't support windows, the typeshed pytype_test used
    to work under windows when --python_exe could be used to pass in the
    path to the python interpreter. I broke the test when I removed this
    flag (oops). Attempting to fix it by doing a sys.platform check and
    using the python launcher for windows
    (https://docs.python.org/3/using/windows.html#python-launcher-for-windows).
    
    I tested this out in a 64-bit Windows 10 VM. I wasn't able to get pytype-single
    completely working in Windows (kept running into a parser error that I think
    was caused by either the settings with which the C extension was built or
    Windows doing some weird encoding...something to my test files), but it worked
    well enough that I'm ~80% sure that pytype is able to find the Python
    interpreter after this change.
    
    Closes https://github.com/google/pytype/pull/682.
    
    PiperOrigin-RevId: 334270850

[33mcommit de2b5d7ef9592fd6e1a735599d7829cc138a15ce[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 28 12:50:11 2020 -0700

    Fix a bug in attaching function type comments to opcodes.
    
    When a type comment (or variable annotation) was sandwiched between a one-line
    function and a docstring-only function, pytype mistakenly treated it as a
    function type comment due to thinking the second function's docstring belonged
    to the first function.
    
    Fixes https://github.com/google/pytype/issues/683.
    
    PiperOrigin-RevId: 334218626

[33mcommit 43079afe8d50cbcc12503f2cf6e12fb78f942e97[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 28 11:05:51 2020 -0700

    Start attributes.md.
    
    Checking this in to meet my personal goal of finishing *something* tangible
    every Friday, even though it's still quite drafty.
    
    I also added a tip to abstract_values on how to access the attribute handler
    and others through the vm attribute of abstract values.
    
    PiperOrigin-RevId: 334195995

[33mcommit 75b8e3c316489d9ba5d5567b770eff42491ba8c2[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 25 12:02:27 2020 -0700

    Revert previous super "fix".
    
    The build failures table is actually cleaner without that change, since
    namedtuple subclasses having the same name as their parent is a common pattern,
    so I think we'll just have to live with this obscure bug.
    
    PiperOrigin-RevId: 333779948

[33mcommit 584fdb02b944b3cbf366684412c1e8799b33a5ee[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 24 14:29:24 2020 -0700

    Fix a bug in pytype's handling of classes with the same name.
    
    PiperOrigin-RevId: 333598812

[33mcommit 62b9bd1d636965e695bd2e735244be47168dc5b0[m
Merge: 604c802e bd60b2eb
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 24 17:04:47 2020 -0700

    Merge pull request #690 from google/ninja
    
    Require ninja 1.10.0.post2.

[33mcommit bd60b2ebd07da3fff7474cc7794f56d4152cf8eb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 24 16:18:12 2020 -0700

    Require ninja 1.10.0.post2.
    
    pytype requires this version of ninja as of a couple weeks ago, but I
    forgot to include the version requirement in setup.cfg, with the result
    that users can end up in a broken state if they install pytype in an
    environment that already has an older ninja version installed.
    
    For https://github.com/google/pytype/issues/685.

[33mcommit 604c802eb58c8143091738dc533aaae003e3a217[m[33m ([m[1;33mtag: 2020.09.24[m[33m)[m
Merge: cc202450 75f8d587
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 24 14:20:46 2020 -0700

    Merge pull request #689 from google/google_sync
    
    Do a PyPI release.

[33mcommit 75f8d58753991be3595a0a317a42098a9af5ad27[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 24 11:12:24 2020 -0700

    Do a PyPI release.
    
    Although we still have one obscure super bug, I think this is good enough for a
    release. (Plus, I might break more things while attempting to fix that bug, and
    it's already been more than a week since we last did an oss release.)
    
    PiperOrigin-RevId: 333554732

[33mcommit cc2024501e0b1503e6f02a9fc7c68c6d9719d07d[m
Merge: 4a9e3d2b 17dceb18
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 24 10:41:26 2020 -0700

    Merge pull request #688 from google/google_sync
    
    Google sync

[33mcommit 17dceb18d252b72b4d275f9a04bf59e1cc2c3616[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 23 19:30:59 2020 -0700

    Fix copybara export of attr/setters.pytd.
    
    PiperOrigin-RevId: 333424219

[33mcommit be34e171e7a7426ac0772e6027c41874b2e8ac22[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 23 18:24:56 2020 -0700

    Fix a super bug caused by wrong ordering of conditions.
    
    I found a last (well, hopefully the last!) super bug in the build failures
    table: since Any can be in a class's MRO, we need to do Any checks before MRO
    checks.
    PiperOrigin-RevId: 333415983

[33mcommit 1684a3609895a073d4e43fafd6d14b372bf47cf2[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 23 15:25:24 2020 -0700

    Update attrs pytd files to support version 20.2.0
    
    PiperOrigin-RevId: 333385138

[33mcommit f74547e82a3cc57058d70516e5b75fea41f64974[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 22 17:31:21 2020 -0700

    Fix a few more super() bugs.
    
    * Improve the check for whether super() is being called in a classmethod.
    * Handle ambiguous superclasses better.
    * Fix a broken equality check when calculating classes to skip.
    
    PiperOrigin-RevId: 333194394

[33mcommit 5174cc5bee69c94d145a308a529da307b082f595[m
Author: tsudol <tsudol@google.com>
Date:   Mon Sep 21 18:25:25 2020 -0700

    Create C++ metrics classes.
    
    This is just the classes as discussed in the design doc. Next steps are writing the Python classes that will wrap these and adding them to cfg.cc, then plumbing the metrics gathering code through the solver.
    
    PiperOrigin-RevId: 332980833

[33mcommit 2c7f04100744f87a6214ae21016844cff5185597[m
Author: tsudol <tsudol@google.com>
Date:   Mon Sep 21 15:53:39 2020 -0700

    Fix inconsistencies in typegraph.
    
    - stylistic: reachable.h should use size_t for num_nodes_ and size_.
    - problematic: next_binding_id looks like a getter, but it actually mutates next_binding_id_. This should be two different functions.
    
    PiperOrigin-RevId: 332953498

[33mcommit dc4f93eafc0ef512865d5d4aa5a8ce799bfb743e[m
Author: mdemello <mdemello@google.com>
Date:   Mon Sep 21 14:01:25 2020 -0700

    Document special builtins
    
    PiperOrigin-RevId: 332928299

[33mcommit 54dad9110e3647465d80f70e96b88f7e9ed3eeb9[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 21 13:16:34 2020 -0700

    Fix a super() bug.
    
    PiperOrigin-RevId: 332918205

[33mcommit 906910bd31c427877f40254c3f3e943566cf2dd6[m
Author: rechen <rechen@google.com>
Date:   Sun Sep 20 18:45:33 2020 -0700

    Add a doc on how overlays work and the steps for adding a new one.
    
    Although the special builtins doc doesn't exist yet, I've assumed it's called
    special_builtins.md - I'll update the link if needed.
    
    PiperOrigin-RevId: 332763133

[33mcommit 49951f31f778cd152de83d9a20cbf1a6f6bd5a11[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 18 11:17:24 2020 -0700

    Fix crash caused by trying to use TupleClass._instance when it is None.
    
    PiperOrigin-RevId: 332488538

[33mcommit 2cb2548beb5f2178006c4588766c49165f4a0d4c[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 17 17:26:34 2020 -0700

    Update README to add 3.8 to range of supported versions.
    
    PiperOrigin-RevId: 332351043

[33mcommit 4a9e3d2bd858a7f2f2e876b6407819fb99ae0bad[m
Merge: b47cbe11 1982d50e
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 24 09:58:10 2020 -0700

    Merge pull request #686 from google/focal
    
    Switch the Travis build environment to Focal Fossa.

[33mcommit b47cbe11dc21652f5155fe497b4fa64118b547f7[m
Merge: 5c2836ee cd817e9a
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 24 00:42:22 2020 -0700

    Merge pull request #687 from google/log
    
    Improve the Travis logs for ninja build failures.

[33mcommit cd817e9af399add0dbf9010be5ce47f636c2bdb5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 23 23:36:06 2020 -0700

    Improve the Travis logs for ninja build failures.
    
    We already print out test failures, but build failures that cause a test
    to fail without even generating a log still lead to terse, uninformative
    logs. Remedy this by printing out the relevant lines of ninja.log.

[33mcommit 1982d50e228513e1940f5c7c517b00f813f1daca[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 23 19:56:29 2020 -0700

    Switch the Travis build environment to Focal Fossa.
    
    My previous cmake change worked fine locally but failed on Travis once I
    tried to pull in a no-srcs cc_library. Turns out that the cmake version
    in most of Travis's build environments is quite old, but Focal Fossa is
    nice and modern (so modern that we don't need to separately install
    Python 3.6 and 3.7 but do need to install 2.7!).

[33mcommit 5c2836ee559e7ef17d269dc145d886270adff17e[m
Merge: 2f2a1483 c1a3e3e6
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 23 19:33:01 2020 -0700

    Merge pull request #684 from google/cc
    
    Fix CMake error triggered by a cc_library with no srcs.

[33mcommit c1a3e3e6c3351d74c6b164e08a6d31c5a10ca842[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 23 18:52:24 2020 -0700

    Fix CMake error triggered by a cc_library with no srcs.
    
    typegraph.metrics has no srcs, which made CMake unhappy. Removes the
    requirement that srcs be non-empty, and specify the linker language,
    since CMake can't figure it out automatically when there are no .cc
    files.

[33mcommit 2f2a1483751171421490c352f05955655ea572fa[m
Merge: b2cd0ca9 2d224b2f
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 18 00:55:29 2020 -0700

    Merge pull request #678 from google/py38
    
    Declare Python 3.8 support (whoo!) and add 3.9 to the testing matrix.

[33mcommit 2d224b2f576babf270349325a56d0052409b5365[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 17 16:54:18 2020 -0700

    Declare Python 3.8 support (whoo!) and add 3.9 to the testing matrix.
    
    Python 3.9 is "3.9-dev" on Travis:
    https://travis-ci.community/t/python-3-9-support/6703.
    
    The m flag for manylinux Python tags is dropped in 3.8:
    https://github.com/pypa/manylinux/blob/master/README.rst#manylinux2014.
    
    Since it was trivial to do, I also silenced an incorrect lint error that
    shows up in 3.9:
      "Value 'Union' is unsubscriptable (unsubscriptable-object)"
    (or sometimes 'Optional').
    
    For https://github.com/google/pytype/issues/440.

[33mcommit b2cd0ca9d6396f519dbe4396462f3322e42e9219[m
Merge: 1a03331c 76d8df9d
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 17 16:48:45 2020 -0700

    Merge pull request #676 from google/google_sync
    
    Google sync

[33mcommit 76d8df9dc26e2a973b37c3a96a81fb60e12db1e8[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 17 14:55:31 2020 -0700

    Remove the NO_NEXT flag from the END_ASYNC_FOR opcode.
    
    A few tests were failing due to END_ASYNC_FOR prematurely ending a block.
    Honestly, I've probably made some mistakes in the VM that happen to cancel each
    other out, given that there a few weird things going on, but hey, the tests
    pass now. Weirdnesses:
    
    * END_ASYNC_FOR does not have the NO_NEXT flag, despite the documentation
      saying that it may reraise an exception.
    * END_ASYNC_FOR and CALL_FINALLY have empty implementations.
    * SETUP_FINALLY pushes on two copies of the exception.
    
    For https://github.com/google/pytype/issues/440.
    
    PiperOrigin-RevId: 332322752

[33mcommit 917e9b1e99d96210400cd5b140b208dc6d477a1a[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 17 12:29:55 2020 -0700

    Respect all typing reexports in the pyi parser.
    
    Previously, we respected 'from typing import X as Y' but ignored
    'from typing import X as X', with the effect that a second pyi that tried to
    import the re-exported name wouldn't parse due to a BadDependencyError.
    
    Found while investigating https://github.com/python/typeshed/pull/4000.
    
    PiperOrigin-RevId: 332290196

[33mcommit 9ae9d92c156c267968a1d3313ad98ca7162d96c5[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 17 12:18:31 2020 -0700

    Make two more tests pass in 3.8.
    
    * vm_test: Some opcode line numbers change in 3.8.
    * test_exceptions: A test for dead block detection fails. I believe this is due
      to a bytecode change rather than a pytype bug.
    
    Just four more failures in two test files after this!
    
    For https://github.com/google/pytype/issues/440.
    
    PiperOrigin-RevId: 332287597

[33mcommit 65ac5cc5e3cc127cdf4ecc4157ce107cd4d571cc[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 17 10:05:40 2020 -0700

    Support tuple slicing.
    
    With this, pytype can handle things like `sys.version_info[:2]`.
    
    Fixes https://github.com/google/pytype/issues/473.
    
    Startblock:
      after 2020-09-16 8:00 in Google/MTV
    PiperOrigin-RevId: 332257990

[33mcommit 4b5912cecde2c87b615e8d681305a2b89d596b31[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 17 10:01:13 2020 -0700

    Fix a bug involving multiple super calls.
    
    When analyzing a chain of super calls, pytype would look up the wrong class
    when multiple inheritance is present.
    
    PiperOrigin-RevId: 332256929

[33mcommit 1a03331c43e0820e26b1394946d276c5c481f4c0[m[33m ([m[1;33mtag: 2020.09.16[m[33m)[m
Merge: c33ed27d d5993af7
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 16 17:02:51 2020 -0700

    Merge pull request #675 from google/google_sync
    
    Google sync

[33mcommit d5993af72416a96725174b8d268ce0c223e5d787[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 16 15:44:04 2020 -0700

    Prepare for a PyPI release.
    
    PiperOrigin-RevId: 332105347

[33mcommit 9c5ef731b27df277be3ddb9a4668d7085347a3cd[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 16 14:48:30 2020 -0700

    Port function signature code from parser.py to the typed_ast parser.
    
    Also fixes a bug with updating array nodes in traces/visitor.py and fixes a
    function in xref that was relying on the buggy behaviour.
    
    Right now I'm testing by comparing the output of the two parsers; I'll add unit
    tests once the typed ast parser is more complete and we have a finalised design.
    
    PiperOrigin-RevId: 332093271

[33mcommit 8e6206eb7b66aae127c3f1216a0d7c6356eb8b86[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 16 10:51:30 2020 -0700

    Convert Bindings() to a list in cfg.py.
    
    Currently, Variable.Bindings() returns different types depending on whether
    you're using the C extension or the Python implementation of the typegraph.
    
    Fixes https://github.com/google/pytype/issues/669.
    
    PiperOrigin-RevId: 332040477

[33mcommit c33ed27dd411437167d4be5c9d84c9501b066463[m
Merge: 59ef8a2f f71834cd
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 16 14:28:04 2020 -0700

    Merge pull request #674 from google/google_sync
    
    Google sync

[33mcommit f71834cdb382556bd6062ff0ca18b183ccaea831[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 15 16:52:45 2020 -0700

    Don't crash when processing a pyi containing __all__.
    
    Other type checkers rely on the actual value of __all__, so it is sometimes
    included in pyi files. pytype was crashing due to not knowing how to process an
    alias whose type was a literal list.
    
    Discovered while investigating why pytype failed on
    https://github.com/python/typeshed/pull/4000.
    
    PiperOrigin-RevId: 331886378

[33mcommit 1a6d0b3481c7e5bfa9d53658282fb27081a4a74a[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 15 16:37:21 2020 -0700

    Call `python -m ninja` instead of `ninja`.
    
    See the linked issue: this change allows pytype to be run without activating
    the virtualenv in which it is installed.
    
    For https://github.com/google/pytype/issues/642.
    
    PiperOrigin-RevId: 331883368

[33mcommit 9078692144b3bb195b215d1f6991b405b9678421[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 15 15:02:22 2020 -0700

    Try another fix for the parser's submodule import bug.
    
    Turns out, the previous attempt broke some code that imports collections.abc,
    as that module uses 'from . import X as X' to import objects defined in
    collections.pyi, so it is wrong to assume that all imports of this format are
    of submodules.
    
    PiperOrigin-RevId: 331863613

[33mcommit bc7154887f379825757de127ec398fba8a83876d[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 15 13:08:55 2020 -0700

    Fix vm_test failure in 3.8.
    
    Fixes the most egregious failure in vm_test, which is that
    dis.opmap["SETUP_LOOP"] does not exist.
    
    For https://github.com/google/pytype/issues/440.
    
    PiperOrigin-RevId: 331837381

[33mcommit e2a5a3fc59e95ae35eb6389db7172e564d6a664e[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 15 11:35:32 2020 -0700

    Remove a no-longer-necessary pytype disable.
    
    PiperOrigin-RevId: 331816233

[33mcommit c728b563bc3be775e264738026a0f83d18d8ec95[m
Author: mdemello <mdemello@google.com>
Date:   Mon Sep 14 16:41:39 2020 -0700

    Clean up unused fields in vm.Block
    
    PiperOrigin-RevId: 331655926

[33mcommit 686aa42ad905af14bd03bbb9bcb2afcf4865abd4[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 14 15:08:30 2020 -0700

    Fix a parser bug when importing and re-exporting a submodule.
    
    load_pytd distinguishes between the names defined in a packages's __init__ file
    and submodules based on whether the submodule name is present in __init__. This
    breaks when a submodule is re-exported under the same name because __init__
    contains Alias('module.submodule', NamedType('module.submodule')). The easiest
    fix is to not create the alias in the first place, by treating a re-export
    under the same name as a simple import.
    
    While debugging, I noticed a bug where we handled renamed modules incorrectly,
    so I fixed that as well.
    
    PiperOrigin-RevId: 331637694

[33mcommit 59ef8a2fc18a1ab433af197ce08b5bf24843c450[m
Merge: 1ba0d20b 489270b9
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 16 13:55:53 2020 -0700

    Merge pull request #673 from google/ninja
    
    Switch fully to pip installing ninja.

[33mcommit 489270b9920336bf14d4380d6d094989968f47b8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 15 17:15:50 2020 -0700

    Switch fully to pip installing ninja.
    
    For https://github.com/google/pytype/issues/642.

[33mcommit 1ba0d20b0e7db625502f3d03776647fd91c7847c[m
Merge: 553dd7c1 ee7c2862
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 14 16:54:36 2020 -0700

    Merge pull request #671 from google/linter
    
    Re-enable Python 3-only lint errors.

[33mcommit ee7c28621cebece534814c182ea845dd5c48ef9b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 14 16:07:06 2020 -0700

    Re-enable Python 3-only lint errors.
    
    Fixes https://github.com/google/pytype/issues/656.

[33mcommit 553dd7c1b6308f64bf296b3d2ecacafdd513100d[m[33m ([m[1;33mtag: 2020.09.14[m[33m)[m
Merge: f47c027d e4703a98
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 14 14:02:46 2020 -0700

    Merge pull request #670 from google/google_sync
    
    Google sync

[33mcommit e4703a989ac8c4cbc0510c776f9dd601c2f42bb0[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 14 13:32:06 2020 -0700

    Prepare for a PyPI release.
    
    PiperOrigin-RevId: 331618002

[33mcommit b0fb2b28a3c34292ed9cd41f9670bebc97db1ffd[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 14 13:04:33 2020 -0700

    Fix raise-missing-from pylint errors.
    
    For https://github.com/google/pytype/issues/656.
    
    PiperOrigin-RevId: 331612255

[33mcommit 5f54f3a6965836d57d0e42ad16f5b3e59e0dd1e6[m
Author: mdemello <mdemello@google.com>
Date:   Mon Sep 14 12:38:00 2020 -0700

    Document the block stack
    
    PiperOrigin-RevId: 331606391

[33mcommit eaef425fe13fcd399a13c956f607b987beca35b3[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 14 12:26:55 2020 -0700

    Make sure the oss docs are up-to-date.
    
    PiperOrigin-RevId: 331603980

[33mcommit 3de7c578f0cc120e4288d3c9432caaf505d2840a[m
Author: tsudol <tsudol@google.com>
Date:   Mon Sep 14 11:34:16 2020 -0700

    Ensure GitHub links are used in open-source docs.
    
    Also removes backticks in the "set or unordered set" section. For some reason, these were not correctly copied into <code> tags in the TOC of the open-source version.
    
    PiperOrigin-RevId: 331591845

[33mcommit 07bd652a8a7a337aec96107705d8fd087cbfb7b3[m
Author: tsudol <tsudol@google.com>
Date:   Fri Sep 11 16:52:17 2020 -0700

    Add Program, default data, Sets developer docs.
    
    PiperOrigin-RevId: 331249691

[33mcommit 82560f6cb56f2e970faf30ac013241e0805a9ce8[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 11 16:10:56 2020 -0700

    Add some more hints for implementing bytecode changes.
    
    PiperOrigin-RevId: 331242719

[33mcommit 702b8c99d5151795e623965084e321c9c1c42821[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 11 16:00:25 2020 -0700

    Update the FAQ with more tips about what to do when pytype is slow.
    
    I've repeated these tips a few times now, so might as well put them in the faq.
    
    PiperOrigin-RevId: 331240749

[33mcommit 66d160c7fb153a1b944ab4ccd503690ecb42938e[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 11 15:37:21 2020 -0700

    Support sys.version_info tuple checks that do not use slicing.
    
    With this change, pytype will understand checks like:
      sys.version_info > (3, 6)
    It still will *not* underestand checks like:
      sys.version_info[:2] == (3, 6)
    due to slice values not being recorded.
    
    For https://github.com/google/pytype/issues/473.
    
    PiperOrigin-RevId: 331236869

[33mcommit 20ddebbbcce3ba46c1b211ad45d41daf5fc13df8[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 11 15:26:30 2020 -0700

    Fix bug caused by wrong ordering of SETUP_FINALLY.
    
    In Python versions before 3.8, SETUP_EXCEPT and SETUP_FINALLY should not be
    treated as the same opcode when ordering code blocks.
    
    PiperOrigin-RevId: 331234868

[33mcommit dfb85daf19783e9515b46181ab9d8517f129d6c0[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 11 14:26:09 2020 -0700

    Do some comparison-related code cleanups.
    
    * Slightly refactors compare.py.
    * Adds a convenient alias to compare_test.
    * Modernizes a bit of test code syntax in test_splits.
    
    PiperOrigin-RevId: 331222583

[33mcommit f47c027d5a2f47230435accafcdf4a127b940351[m
Merge: cf969bca 49996d85
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 11 10:58:29 2020 -0700

    Merge pull request #668 from google/google_sync
    
    Google sync

[33mcommit 49996d85670ac0e4a78d3cc4cc32b1ab09b3f8e5[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 10 14:57:48 2020 -0700

    Fix variable annotation tests in Python 3.8.
    
    With this change, tests.py3.test_variable_annotations passes in 3.8.
    
    * Adjusts directors.py to handle an opcode line number change.
    * Flips the order in which MAP_ADD pops from the data stack.
    
    For https://github.com/google/pytype/issues/440.
    
    PiperOrigin-RevId: 331023641

[33mcommit 73ce325ffa11a17b51e4856423c61bc77b641481[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 10 13:49:35 2020 -0700

    Add more Python 3.8 support.
    
    With this change, all of the crashes in pytype's 3.8 tests are gone; there are
    only a handful of normal failures left. I've gone in circles a bit (you may
    notice that I reverted parts of a couple of earlier changes), but given that
    the tests are in a much better state now, I'm hopeful that I've finally got
    things more or less correct.
    
    The one oddity is that SETUP_FINALLY appears to need to push the exception onto
    the value stack twice. A consistent issue I was seeing was the VM crashing due
    to ROT_FOUR only having one value to rotate. I got the idea to push an extra
    three-value exception from seeing that the CPython code does it
    (https://github.com/python/cpython/blo[]b01b58ee1af821611cc436adb20f3e8b879d/Python/ceval.c#L3736),
    but that appears to happen in 3.7 as well, so I could be totally off-base.
    
    For https://github.com/google/pytype/issues/440.
    
    PiperOrigin-RevId: 331009065

[33mcommit cf969bca963c56fabbf9cdc2ed39548c843979dc[m
Merge: 256dfb2b 4521f773
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 9 12:08:39 2020 -0700

    Merge pull request #666 from google/google_sync
    
    Google sync

[33mcommit 4521f773f58e9504ea4ada359f2c91a33dee12ae[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 8 18:26:34 2020 -0700

    Print 'leaving directory' after ninja command.
    
    ninja prints 'entering directory', but the directory does not actually change,
    which causes problems for emacs users. We want to keep the ninja output, since
    it includes status updates for the build, so the easiest way to fix this is to
    print 'leaving directory' ourselves.
    
    Fixes https://github.com/google/pytype/issues/659.
    
    PiperOrigin-RevId: 330629292

[33mcommit e16861749ca8737bbcee06361e26abcd9061ee09[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 3 17:12:45 2020 -0700

    Replace internal iterator classes like dictionary-keyiterator with Iterator.
    
    PiperOrigin-RevId: 330023182

[33mcommit 70046645f05d726e7af252f2f71a30551a548e6a[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 2 19:27:55 2020 -0700

    Replace `x or y or ...` with `Union[x, y, ...]` in pytd files
    
    Also fixes some leftover def() issues.
    
    All pytd files now pass the python parser except for `dictionary-keyiterator`
    and friends.
    
    PiperOrigin-RevId: 329836304

[33mcommit 1976e9891e8c8a4123455bcc32ed35833af41c0c[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 2 17:26:59 2020 -0700

    Fix "no newline at end of file"
    
    PiperOrigin-RevId: 329821518

[33mcommit 326266cb8a30c0ebc13d795001e6a27cbd2e44cb[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 2 16:57:08 2020 -0700

    Fix some python-incompatible syntax in pytd files.
    
    - `?` -> `Any`
    - `def f(x) -> ret` -> `def f(x) -> ret: ...`
    - `...` in signatures -> `*args, **kwargs`
    
    PiperOrigin-RevId: 329816286

[33mcommit ca96d09fa72e0cd2f04d2dc59c8fb85d5bcf3c4f[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 2 14:16:07 2020 -0700

    Strip embedded copyright comments from all files.
    
    Also fixes files with empty lines on top (leftover from a previous cleanup).
    
    PiperOrigin-RevId: 329786062

[33mcommit b0e4285c43acd02cb1e2fb9df730107e714bfcba[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 2 13:49:02 2020 -0700

    Don't require typing to be in the import map in Python 3.5+.
    
    PiperOrigin-RevId: 329780486

[33mcommit 256dfb2bb3dfb189eb328917ba5f5d2982e36d73[m
Merge: 3c7a3a01 ccc74c4e
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 2 14:12:50 2020 -0700

    Merge pull request #663 from google/google_sync
    
    Google sync

[33mcommit ccc74c4e94970778df87b2220c0ac025dda6e0e4[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 2 12:25:20 2020 -0700

    Run py2and3->py3 script and fix any breakages.
    
    Script: []
    
    Reverted all the tests/ and testdata/ paths since the script was converting
    code within strings.
    
    Fixed one buggy conversion in function.py where (six.viewkeys(dict) - set)
    was changed to (dict - set) rather than (dict.keys() - set)
    
    Fixed random lint errors in touched code. Fixed some cases where a file was
    left starting with a blank line then gave up.
    
    PiperOrigin-RevId: 329763944

[33mcommit a5681c2b35e482e8fe7c64f5937f58dedc4cd014[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 2 12:04:26 2020 -0700

    Fix a SETUP_FINALLY bug in Python 3.8.
    
    In 3.8, SETUP_EXCEPT is removed and SETUP_FINALLY does the jobs of both
    SETUP_EXCEPT and the old SETUP_FINALLY. We can figure out which to call based
    on whether the opcode targets an except or finally block. Since the opcode
    refers to blocks by id, OrderedCode now maintains an {id: block} dictionary
    rather than a list of blocks.
    
    For https://github.com/google/pytype/issues/440.
    
    PiperOrigin-RevId: 329759870

[33mcommit 2273e5389b4b15845882ff9e8b3af3e542c7ef7e[m
Author: mdemello <mdemello@google.com>
Date:   Tue Sep 1 14:51:26 2020 -0700

    Fix python syntax errors in typing.pytd
    
    PiperOrigin-RevId: 329586772

[33mcommit ce8b352fa3b5479550742b06fbfaa6c83e4c399d[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 1 11:59:11 2020 -0700

    Add a section in abstract_values about matcher.py.
    
    PiperOrigin-RevId: 329552645

[33mcommit 009cad93690ff69272bd2b862555e3e0611860ab[m
Author: tsudol <tsudol@google.com>
Date:   Mon Aug 31 12:00:23 2020 -0700

    Add in-progress developer docs for typegraph internals.
    
    PiperOrigin-RevId: 329348858

[33mcommit fbbeea14b4d96a59c3ddc797fc564d87c1df6c27[m
Author: rechen <rechen@google.com>
Date:   Sat Aug 29 02:27:48 2020 -0700

    Quick cleanups.
    
    * Fix a typo.
    * Mark code snippets as Python.
    
    PiperOrigin-RevId: 329078363

[33mcommit c17482a5af7bf97c9f2446919729a19345f6d7af[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 28 15:24:06 2020 -0700

    Update load_pytd diagram.
    
    PiperOrigin-RevId: 329019842

[33mcommit 1a4e2d5dacc988b5fea8a5480007874c1f1f5b19[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 28 13:38:08 2020 -0700

    Pass around an options.open_function that is used in place of builtins.open.
    
    Adds a open_function option to config.Options, which can be set to drop-in
    replacement for builtins.open that is used everywhere pytype reads or writes a
    filepath provided by the user.
    
    I added a couple spot tests that open_function is being used in various places
    but did not test exhaustively.
    
    PiperOrigin-RevId: 329000803

[33mcommit 189dede453bd78b81b6fd1b760ac8ecc275dd228[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 28 13:24:08 2020 -0700

    Raise an error when config.Options.create is passed an unrecognized option.
    
    PiperOrigin-RevId: 328998408

[33mcommit 816954e42da3adbd0aac876e012dbbf2a829e5cd[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 28 13:12:34 2020 -0700

    Distinguish more carefully between command-line and library options.
    
    The config.Options object is used to parse and store both command-line and
    library options. This hasn't mattered up to now because these two sets of
    options were the same. But I'd like to add a library-only option (the ability
    to replace builtins.open with a custom open function). With this change,
    command-line utilities will be expected to construct Options objects as
    Options(argv, command_line=True) and libraries will be expected to use
    Options.create(input_filename, **options).
    
    PiperOrigin-RevId: 328996421

[33mcommit 25c27c1e6b83aa91b6594c9462be677e4bfb473d[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 28 13:04:44 2020 -0700

    Have check_py and generate_pyi accept a source string instead of a filename.
    
    This makes them more flexible, since a caller that has a filename can always
    read the file themselves to pass in the source, but it would be inconvenient
    for a caller with a source string to create a file.
    
    PiperOrigin-RevId: 328995003

[33mcommit 9ec2625143a68a87b8c1f6e873dbfe80f4acaca8[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 28 12:53:56 2020 -0700

    Update README's requirements section.
    
    PiperOrigin-RevId: 328992904

[33mcommit 288c973108a9c97c76bd1a8452a5e3f4f9ed065a[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 28 12:49:34 2020 -0700

    Drop the --python_exe option.
    
    I came across an old TODO for this; the bug it references is long closed.
    
    PiperOrigin-RevId: 328992098

[33mcommit e014db05580f051d5f08b6ce8535a1e56f85c3a8[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 28 12:41:21 2020 -0700

    Cleanup: delete datatypes.SimpleNamespace.
    
    All the code that used this class is now Python 3-only and can use
    types.SimpleNamespace from the stdlib.
    
    PiperOrigin-RevId: 328990514

[33mcommit 3c7a3a0142bd5877ac34ec828c740450fb3d7822[m[33m ([m[1;33mtag: 2020.08.28[m[33m)[m
Merge: dcebc4af c8bbde93
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 28 12:33:37 2020 -0700

    Merge pull request #660 from google/google_sync
    
    Google sync

[33mcommit c8bbde93d4248c5b023cfcf940249e7c862b0e5b[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 28 12:04:55 2020 -0700

    Prepare for a PyPI release.
    
    The Build Failures table looks good, so we might as well do a set of releases.
    
    PiperOrigin-RevId: 328983682

[33mcommit 8c85603de83470b2725aeeba068ff7f7f72ca181[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Thu Aug 27 11:35:30 2020 -0700

    Small refactoring to parser.py so we can patch it to read files from CNS.
    
    We want to run pytype, while generating the PYI files tree in CNS. We do it because we work on known historical [] snapshots, so once we generated a PYI file for a snapshot we can keep it forever (or at least until we change our code).
    
    The built in python "open" cannot read from CNS. So we patch the read function to use gfile.open which is a drop-in replacement.
    Like we do here:
    []
    
    PiperOrigin-RevId: 328780052

[33mcommit dcebc4af6875f199c10f390b18edd5ef37c990ec[m
Merge: 80e95781 e63f5119
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 28 11:50:17 2020 -0700

    Merge pull request #658 from google/google_sync
    
    Google sync

[33mcommit e63f511940719be9d4c82181274736e6cefb9b8a[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 26 17:06:48 2020 -0700

    Clean up a bunch of lint errors.
    
    For https://github.com/google/pytype/issues/656.
    
    I had to leave a few due to us still having one py2 rdep (maybe?).
    
    PiperOrigin-RevId: 328639524

[33mcommit 0a40a887c45826f14e4f83efd2d853c3a40b2ecb[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 24 14:17:28 2020 -0700

    Document the data stack
    
    PiperOrigin-RevId: 328208540

[33mcommit 7628a7e9248fd60880722ccbe84fb198f83590b3[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 24 12:07:01 2020 -0700

    Clean up our docs organization a bit and add instructions for adding docs.
    
    I'm not entirely confident that the relative image reference will work on the
    github.io site, but it doesn't hurt to try.
    
    I also added some missing line breaks to dev_guide.html.
    
    I was tempted to call the "Updating the developer guide" section, the
    "Dev guide guide" instead.
    
    PiperOrigin-RevId: 328184996

[33mcommit 8677da878b1b1eecebbdb9f7caf62bf6194d1d86[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 21 17:13:51 2020 -0700

    Check in load_pytd.svg.
    
    PiperOrigin-RevId: 327900098

[33mcommit 53be821c54829f11d66c6104b71f21e3bdb3d3a2[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 21 17:02:59 2020 -0700

    Add a diagram for load_pytd.
    
    It's a png because I tried svg first and none of the text labels rendered - no
    clue if it was an export issue or a rendering issue.
    
    PiperOrigin-RevId: 327898790

[33mcommit 3efc42c584ec3fcc4281b77d6a27ed5d08d81d0c[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 21 12:18:39 2020 -0700

    Allow multiple PyTDFunction signatures to match when *args/**kwargs is present.
    
    I noticed while trying to switch an overlay to Literal overloads that when an
    opaque *args or **kwargs is present, we match the first overload when we should
    be allowing multiple matches.
    
    PiperOrigin-RevId: 327852763

[33mcommit 80e95781dda427e3dd273f6ff948f13466525341[m
Merge: f22ef2b4 af859397
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 26 16:48:57 2020 -0700

    Merge pull request #657 from google/lint
    
    Clean up some lint errors.

[33mcommit af85939703bc07b21acf59c04fe8e2cb62a9e9ee[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 26 16:10:20 2020 -0700

    Clean up some lint errors.
    
    Disable three new errors. c-extension-no-member doesn't seem useful;
    super-with-arguments and raise-missing-from we're not ready for because
    they assume Python 3-only.
    
    build_scripts/ *is* py3-only, so I fixed an instance of
    super-with-arguments there.
    
    For https://github.com/google/pytype/issues/656.

[33mcommit f22ef2b4e535915a2a25d001f7e62a2966cd104e[m
Merge: 6b899bff 381a74c8
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 20 18:12:13 2020 -0700

    Merge pull request #649 from google/google_sync
    
    Google sync

[33mcommit 381a74c8dfebf604cc7e8d44436925d8835e4007[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 20 13:02:08 2020 -0700

    Fix some tests that were broken in Python 3.8.
    
    These tests were broken because opcode line numbers changed in 3.8.
    Additionally, the 3.8+ tests in test_decorators were running in target Python 2
    because the skip* methods check the host version. Since the py2 tests are the
    only ones for which host != target, I simply moved the tests into
    py3.test_decorators rather than attempting to fix the skip logic.
    
    For #440.
    
    PiperOrigin-RevId: 327682525

[33mcommit 2d85858cae13a524f41db28547980355f6ac9429[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 19 13:50:57 2020 -0700

    Convert decorators to NamedTypes so external names get qualified.
    
    PiperOrigin-RevId: 327499977

[33mcommit cc89de3471286ea783fdfb798a65c3fb23d05992[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 18 16:38:04 2020 -0700

    Add a check for some method-only decorators like @property being used on a
    class.
    
    Also fixes some broken tests.
    
    PiperOrigin-RevId: 327332463

[33mcommit 6b899bff28230017368f184494ff836ddcca9897[m[33m ([m[1;33mtag: 2020.08.17[m[33m)[m
Merge: ccaf6f7e 0b036d97
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 17 17:52:05 2020 -0700

    Merge pull request #647 from google/google_sync
    
    Support TypedDict function-based syntax in pyi files.

[33mcommit 0b036d97b963fd0ebca7dc82eacd13518fb811c1[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 17 17:16:32 2020 -0700

    Support TypedDict function-based syntax in pyi files.
    
    Since we don't support TypedDict yet, the parser simply rewrites TypedDict
    to Dict[str, Any].
    
    Fixes https://github.com/google/pytype/issues/637.
    
    PiperOrigin-RevId: 327131566

[33mcommit ccaf6f7e34d6535fc72b524cde4295bffd588ff1[m
Merge: 0206bf70 64bfc2eb
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 17 15:09:16 2020 -0700

    Merge pull request #646 from google/google_sync
    
    Google sync

[33mcommit 64bfc2eb87cceec6c1a93f3bfa938e6561520a08[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 17 14:00:26 2020 -0700

    Use googletest.skip to avoid a duplicate unittest import.
    
    Otherwise, we have `import unittest` twice in parser.py (the second one coming
    from the copybara rewrite of googletest), leading to a lint error.
    
    PiperOrigin-RevId: 327093560

[33mcommit 451657bedf3b8bbf9dc04ca79022a51c3d2aecf6[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 17 13:35:47 2020 -0700

    Start documenting frames and the frame stack.
    
    PiperOrigin-RevId: 327088390

[33mcommit 7eccf5dbb19570c5cc06240905a7c9927447b9df[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 17 13:18:33 2020 -0700

    Prepare for a PyPI release.
    
    Doing a release for the pyi parser fix.
    
    PiperOrigin-RevId: 327084848

[33mcommit 365023a1a4307d5e7a0c06dee663d3a1e3278423[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 17 12:46:53 2020 -0700

    Allow `# type: ignore` in more places in pyi files.
    
    The linked issue is only for aliases, but while I was at it, I also added
    support for `# type: ignore` after a __slots__ definition.
    
    Fixes https://github.com/google/pytype/issues/644.
    
    PiperOrigin-RevId: 327078292

[33mcommit 264012bd1dc08a3fa59cc3910bcb3de6c67eac93[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 14 20:33:56 2020 -0700

    Write remaining sections of type_stubs.
    
    PiperOrigin-RevId: 326775582

[33mcommit 629aa68504a92647639946f80e6a31e25451310b[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 14 12:58:09 2020 -0700

    Copy the CALL_FUNCTION opcode's flags to CALL_METHOD.
    
    I can't find any documentation on what these flags should be, but CALL_FUNCTION
    and CALL_METHOD are similar enough that it seems reasonable they'd have the
    same flags.
    
    This fixes the following 3.7 bug: we have a class whose initializer sets an
    attribute to None, but before the attribute is used, another method is called
    to set it to its true non-None value. If pytype hits maximum call depth and
    skips this method, it thinks that the attribute's value is still None. The vm's
    _has_strict_none_origins check filters out the None value, avoiding spurious
    errors. In 3.7, _has_strict_none_origins fails to filter out the None because
    methods are called via CALL_METHOD rather than CALL_FUNCTION, and CALL_METHOD's
    different flags cause its carry_on_to_next() method to evaluate to False,
    leading to pytype failing to add an extra node to the CFG after the method is
    called, which messes up _has_strict_none_origins' reachability query.
    
    PiperOrigin-RevId: 326713243

[33mcommit aedd9a92996ce7c3ba5cdb5c3a249682aa9bbfdd[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 12 18:31:56 2020 -0700

    Preserve class decorators when reading and writing pyi files.
    
    - Drops @type_check_only to preserve existing behaviour.
    - Silently ignores all other decorators.
    
    PiperOrigin-RevId: 326357555

[33mcommit 60728773a2ec32547bfbbabf8733b768eab87533[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 11 12:34:31 2020 -0700

    Enable yet more of --check-variable-types by default.
    
    I already cleaned up most of the new findings generated by this change.
    
    PiperOrigin-RevId: 326078090

[33mcommit c8153d9f89c815f8656b3620e52d33be5aade2cc[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 10 14:31:44 2020 -0700

    Reorder str.join overloads for better error messages.
    
    pytype gets the expected types for error messages from a function's first
    overload. `Iterable[nothing]` produces a confusing message; `Iterable[str]` is
    much better.
    
    PiperOrigin-RevId: 325888614

[33mcommit e73fb38f0304c5fe843d7e29dc279d23fbf05692[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 10 13:30:32 2020 -0700

    Document the py->bytecode->opcodes pipeline.
    
    PiperOrigin-RevId: 325876145

[33mcommit 0206bf70c0ebc6e2ab3db12e35045aa05ff0ae02[m[33m ([m[1;33mtag: 2020.08.10[m[33m)[m
Merge: 2d8c8960 085b2fb8
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 10 12:39:00 2020 -0700

    Merge pull request #643 from google/google_sync
    
    Google sync

[33mcommit 085b2fb8fdaa45d109358a4a5d409a37ef82302e[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 10 12:02:02 2020 -0700

    Prepare for a PyPI release.
    
    Might as well do a release, since we have a clean version.
    
    PiperOrigin-RevId: 325856623

[33mcommit 329b89fb6add85e55e06fa1ac6f3e442ac72c085[m
Author: rechen <rechen@google.com>
Date:   Sat Aug 8 21:40:02 2020 -0700

    Write the "Imports" and "Parser" sections of the type_stubs doc.
    
    PiperOrigin-RevId: 325647909

[33mcommit 92d2d63f437de7e5e2f4906e1af46b162c8c909b[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 7 13:48:18 2020 -0700

    Start developers/type_stubs.
    
    Adds a type_stubs doc with an outline and a filled-out introduction.
    
    PiperOrigin-RevId: 325501011

[33mcommit 80f9eeaf7744d605b0bcb24622fc0a24b00118bb[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 7 12:40:41 2020 -0700

    Slightly anal cleanup: use consistent capitalization for dev docs.
    
    PiperOrigin-RevId: 325487950

[33mcommit 3f54dc541c6d5ea185d271bafc956f7dc21b4ce9[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 6 12:11:48 2020 -0700

    Support kw_only arg to attr.ib
    
    PiperOrigin-RevId: 325281694

[33mcommit 9a609eb56991f385dc1f23c8e9f52e5a38550e5a[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 5 12:29:08 2020 -0700

    Add developer docs for director.py
    
    PiperOrigin-RevId: 325076471

[33mcommit 2d8c8960ce8621c9c3d883d44eb3fc219355bd2b[m
Merge: e2d73f1e 6401b36b
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 4 15:08:00 2020 -0700

    Merge pull request #639 from google/google_sync
    
    Google sync

[33mcommit 6401b36ba24a8736010a31f444ab755d110d71a0[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 4 14:32:56 2020 -0700

    Entering a CallableType or TupleType should increase the generic level.
    
    PiperOrigin-RevId: 324891454

[33mcommit d0b736a8dafd6e45aa36bba0d104e17f5a106dcd[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 3 14:33:13 2020 -0700

    Fix a weird bug involving calling __getitem__ on unions.
    
    The CL to support Union type macros caused a bizarre bug where
    Union.set_slot('__getitem__') calls getattribute(Union, '__getitem__'),
    creating an extra node, causing convert_class_annotations for a tuple
    annotation containing a forward referenced imported type to be evaluated at the
    wrong node, leading to the generation of an extra late annotation for the
    imported module, finally producing "Invalid type annotation '<instance of
    module>': Not a type" errors all over the place for pb2 enum annotations, since
    those always have to be quoted. I resolved this by special-casing
    Union.__getitem__ in attribute.py, so the extra node is not generated.
    
    I also noticed that the type macro CL produced a corner case where
    Union.getitem_slot is indistinguishable from calling __getitem__ on a Union's
    options when a value is annotated as Type[Union[C1, C2, ...]] (but *not* when
    the annotation is Union[Type[C1], Type[C2], ...]!). The inferred type is still
    correct, if imprecise, so I just documented this behavior in a test rather than
    trying to fix it.
    
    PiperOrigin-RevId: 324684760

[33mcommit c4c06a95b0e98b18a57887575b0b6241197f9117[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 3 11:12:13 2020 -0700

    FIX: Don't crash when a nested NamedTuple subclass hits max depth.
    
    PiperOrigin-RevId: 324641138

[33mcommit 1889ee043e96de1ecd0be677f135acc705fbcedd[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jul 31 15:10:34 2020 -0700

    Support aliases to unions with type parameters
    
    This currently only works within a file; in the following code:
    
      Foo = Union[T, List[T]]
      x: Foo[int]
    
    the generated pyi code will contain
    
      Foo = Any
      x: Union[int, List[int]]
    
    that is, concrete instantiations of the alias will be correctly used and
    exported, but the alias itself will not be exported.
    
    PiperOrigin-RevId: 324293324

[33mcommit e2d73f1e0be6f1c6a22f040e785e5e2e348d0cf5[m[33m ([m[1;33mtag: 2020.07.30[m[33m)[m
Merge: 75e64fb9 15a88d21
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 30 17:08:36 2020 -0700

    Merge pull request #636 from google/google_sync
    
    Do a PyPI release.

[33mcommit 15a88d2177216acc1e09466fb2e3cd660e09b11e[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 30 16:14:58 2020 -0700

    Do a PyPI release.
    
    For yet another pyi parser fix (https://github.com/google/pytype/issues/626).
    
    PiperOrigin-RevId: 324104646

[33mcommit 75e64fb93cbcb19d8e362590fed7a522b0e9c755[m
Merge: 95e5e8fd 7f0b940b
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 30 16:03:52 2020 -0700

    Merge pull request #635 from google/google_sync
    
    When raising not-supported-yet for Alias = Union[T, ...] set the type…

[33mcommit 7f0b940b52047dc9d23fdc6801a27e5a676b2f30[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jul 29 14:01:06 2020 -0700

    When raising not-supported-yet for Alias = Union[T, ...] set the type to Any.
    
    Allows the following:
    
      Alias = Union[T, int]
      x: Alias[float]
    
    to raise an error when Alias is defined but not when it is used.
    
    PiperOrigin-RevId: 323862871

[33mcommit 95e5e8fd2e5799ab1950ab2e5720be0eecf8910a[m
Merge: b5ca3457 d291a250
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 29 15:16:21 2020 -0700

    Merge pull request #633 from google/google_sync
    
    Make imports_map_loader_test work with custom $TMPDIR values.

[33mcommit d291a250fbff67f6ab86fc8d8c20b28be22148ae[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 29 13:23:12 2020 -0700

    Make imports_map_loader_test work with custom $TMPDIR values.
    
    Fixes https://github.com/google/pytype/issues/629.
    
    PiperOrigin-RevId: 323855323

[33mcommit b5ca345770533656b62a3f739091877642c4cb57[m
Merge: b1f27eca c8676809
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 29 12:25:40 2020 -0700

    Merge pull request #632 from google/google_sync
    
    Google sync

[33mcommit c8676809381f156686ada1bab2df9029f266dacb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 29 11:54:32 2020 -0700

    Move a test containing a parameter annotation from tests/ to tests/py3/.
    
    PiperOrigin-RevId: 323835475

[33mcommit e2700f19c5a7aa92cc337d7fc92e8c673a7f1728[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 29 10:45:09 2020 -0700

    Support imported type macros in pyi files.
    
    Previously, pytype crashed if a type macro was used outside the file in which
    it was defined.
    
    For https://github.com/google/pytype/issues/626.
    
    PiperOrigin-RevId: 323819758

[33mcommit ceeb07fa5ef4f19363441a8ebb6da28f6a435825[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jul 28 18:34:36 2020 -0700

    FIX: We were occasionally reusing an exhausted generator in Union constructor.
    
    PiperOrigin-RevId: 323697283

[33mcommit 44479701bcdab87be218d3aea3709ac0ca2d1fd9[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Tue Jul 28 15:14:20 2020 -0700

    Automated g4 rollback of changelist 323639433.
    
    *** Reason for rollback ***
    
    Breaking //abuse/ares/logica/pod_pools/go_lampreys:main_cloud_go_conformance_test
    
    *** Original change description ***
    
    Preserve class decorators when reading and writing pyi files.
    
    - Drops @type_check_only to preserve existing behaviour.
    - Silently ignores all other decorators.
    
    ***
    
    PiperOrigin-RevId: 323663791

[33mcommit d69ee04e612f9d3a3703c00443b0187b4943c2ff[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jul 28 13:18:21 2020 -0700

    Preserve class decorators when reading and writing pyi files.
    
    - Drops @type_check_only to preserve existing behaviour.
    - Silently ignores all other decorators.
    
    PiperOrigin-RevId: 323639433

[33mcommit 09d6e265ced8610c337c228bfde00699027de60c[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 27 17:25:21 2020 -0700

    Fix: allow typing.AnyStr to be used to parameterize custom generic classes.
    
    Previously, trying to do so caused pytype to crash.
    
    PiperOrigin-RevId: 323475858

[33mcommit b1f27ecaa005e2d15f4dec20dd2b5b2d74087218[m[33m ([m[1;33mtag: 2020.07.24[m[33m)[m
Merge: dc1f04d8 35f4e514
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jul 24 15:15:17 2020 -0700

    Merge pull request #627 from google/google_sync
    
    Google sync

[33mcommit 35f4e51475b84bf6921c137b8f3eacf5aca4714f[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 24 14:39:59 2020 -0700

    Do a PyPI release for the pyi parser fix.
    
    PiperOrigin-RevId: 323074844

[33mcommit 52b56781500b56eb2d484093f9ed249090a88a64[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 24 13:25:45 2020 -0700

    pyi parser: allow aliases inside a class to values outside the class.
    
    We can't resolve these properly, but for some reason people have been trying to
    use them a lot in typeshed recently, so let's set these aliases to Any for now.
    
    For #612.
    
    PiperOrigin-RevId: 323060647

[33mcommit b4e6142fdc1eada133938b3dd4f5766631f2c5a2[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 23 19:44:27 2020 -0700

    Fix: copy annotations instead of modifying them when adding a scope.
    
    Fixes a bug where a type alias containing a type parameter that is used in both
    a generic class and a generic function would have its scope changed, messing up
    the type parameter count we use to report the "Appears only once in the
    signature" invalid-annotation error.
    
    PiperOrigin-RevId: 322919782

[33mcommit 4750f7dab082d463df909024211efedfb7b632b4[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 23 09:54:35 2020 -0700

    Fix a typo in pytype: slots, not clots.
    
    PiperOrigin-RevId: 322806644

[33mcommit e3e63776baad9f7568c2d8c16617fb2d593e1103[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Jul 22 10:12:24 2020 -0700

    Add function def to annotate_ast.py
    
    PiperOrigin-RevId: 322599520

[33mcommit b774ae4c4b25e808835c8e2f0681a8b1889e3c8a[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Jul 22 10:11:39 2020 -0700

    Simplify the annotate_ast_test.py assertion logic.
    
    PiperOrigin-RevId: 322599333

[33mcommit 61820fc0e313a7c2890dcff0fd8e1af8ddf554a3[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 21 13:25:26 2020 -0700

    Fix: make self.__class__ return Any in __init__.
    
    We previously made type(self) return Any in __init__ to avoid spurious errors
    about a class being non-instantiable. Copies the workaround to __class__.
    
    PiperOrigin-RevId: 322429519

[33mcommit de46258ff1b9de64ef9804a5aefb67f86061b3aa[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 21 13:24:58 2020 -0700

    Fix: don't change the VM state's node if there are no new nodes.
    
    I managed to cause a lot of crashes with my filtering fix yesterday =/
    
    PiperOrigin-RevId: 322429418

[33mcommit 5b4c21ec22754e7a2cad4c4f4bfd5c65c654af76[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 20 14:19:22 2020 -0700

    Fix: check object visibility before setting attributes.
    
    Also deletes an obsolete test that I happened to notice.
    
    PiperOrigin-RevId: 322223756

[33mcommit dc1f04d836a8feb41458eba84d0d05d1726851ed[m[33m ([m[1;33mtag: 2020.07.20[m[33m)[m
Merge: c0f4fd2a 3ee2cacb
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 20 20:28:12 2020 -0700

    Merge pull request #625 from google/docker
    
    Remove no-longer-necessary docker installation step.

[33mcommit 3ee2cacbe9bb26cad39c22d4996338f349a98636[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 20 18:24:32 2020 -0700

    Remove no-longer-necessary docker installation step.

[33mcommit c0f4fd2a6f45896226d7d4931f69f61d86e5a5ca[m
Merge: 1264ba38 6b463ad7
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 20 14:30:18 2020 -0700

    Merge pull request #624 from google/google_sync
    
    Google sync

[33mcommit 6b463ad7dd7291e7467c37954c04c39515fd62bd[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 20 13:57:44 2020 -0700

    Prepare another PyPI release.
    
    I'd like to release the pyi parser fix in order to remove a file from
    typeshed's pytype exclude list.
    
    PiperOrigin-RevId: 322219322

[33mcommit 38a9ade373dc814d440f9db124f06fe087b3b7bb[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 15 17:10:52 2020 -0700

    Add a trivial README for traces.
    
    PiperOrigin-RevId: 321468598

[33mcommit c59a6a68713552c6c49957468bacd9550808c7ec[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 15 12:14:35 2020 -0700

    pyi parser: allow total=False for typing_extensions.TypedDict.
    
    My previous change did not actually fix the pytype bug I was trying to fix
    because typeshed uses typing_extensions.TypedDict rather than typing.TypedDict.
    
    For #613.
    
    PiperOrigin-RevId: 321412207

[33mcommit 2432f595d07d3a00ed15a49b516883044de0a03c[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 15 09:24:57 2020 -0700

    Remove duplicate dict.update overload.
    
    PiperOrigin-RevId: 321374726

[33mcommit 1264ba38151d99a8b1353b6e9e032eb256ebf0b3[m
Merge: db2fcbc3 db7a605f
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 15 11:50:40 2020 -0700

    Merge pull request #621 from google/travis
    
    Add --jobs=auto to the travis script's pytype run.

[33mcommit db7a605fb87ac51476853ac45d48ddc46e012db9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 14 19:20:09 2020 -0700

    Add --jobs=auto to the travis script's pytype run.
    
    At least locally, this makes the pytype run a lot faster.

[33mcommit db2fcbc3a450156d1780309de48e02caa5bf4411[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 14 18:49:42 2020 -0700

    Add typing.SupportsIndex, new in 3.8.
    
    Needed to use typeshed in 3.8+, as some of the other stubs refer to
    SupportsIndex.
    
    For GitHub #440.
    
    Originally 321253731, manually exported.

[33mcommit 5187e3e90208ff1e415627f79207cec3591d2f43[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 14 18:49:22 2020 -0700

    Add an overload for dict.update() to stop crashing when no args passed.
    
    Also makes annotations on dict.update() overloads more consistent.
    
    Originally 321243130, manually exported.

[33mcommit aceef82d534b49e6cc3f9eb21eef7cc8e4dbf428[m[33m ([m[1;33mtag: 2020.07.14[m[33m)[m
Merge: 9db32fb4 01d3bbb6
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 14 17:58:43 2020 -0700

    Merge pull request #620 from google/google_sync
    
    Google sync

[33mcommit 01d3bbb6187c4f001765ec18beed6acf42c3e981[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 14 17:29:20 2020 -0700

    Fix an xref bug where methods weren't detected as attributes in 3.7.
    
    Exposed by a recent change that added attribute matching to annotate_ast, which
    broke the GitHub export.
    
    PiperOrigin-RevId: 321267019

[33mcommit 11700264a6157185cffb84d449ddaf09e00b1de0[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 14 14:49:05 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 321239884

[33mcommit 13acae0763855940f50118def50ef13df17c6e15[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 14 14:35:13 2020 -0700

    Update pytype __version__ and CHANGELOG for a PyPI release.
    
    I ran a TGP and found ~70 new findings at head. They look reasonable at a
    glance, and there are no timeouts or OOMs.
    
    PiperOrigin-RevId: 321237176

[33mcommit 01c2a5ad27d5a371787c912c5031f90bf3d6b235[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jul 10 14:28:12 2020 -0700

    Start documenting abstract.py and the abstract value system.
    
    PiperOrigin-RevId: 320676553

[33mcommit ce1149cfe4254ad847ff05f49b53cffdd8423af9[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 10 13:38:10 2020 -0700

    Fix: compare unresolved late annotations using their expressions.
    
    Previously, they were compared using their types, which for unresolved
    annotations is always Unsolvable, so checks like `LateAnnotation(expr='Z',
    type=None) in {LateAnnotation(expr='Y', type=None)}` would incorrectly succeed.
    PiperOrigin-RevId: 320666829

[33mcommit 545ae5c1691e93b819192b37f671542e679f9239[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 9 18:42:59 2020 -0700

    Fix a spurious error caused by calling get_class() on a TypeParameterInstance.
    
    Without this fix, pytype reports an invalid-typevar when trying to call
    Foo.foo() because calling .items() on an OrderedDict[str, Foo] produces
    (TypeParameterInstance(_K), TypeParameterInstance(_V)) tuples, so the first
    argument to foo() ends up being TypeParameterInstance(_V).get_class(). Instead,
    we should resolve the TypeParameterInstance immediately.
    
    PiperOrigin-RevId: 320523343

[33mcommit 25f2f18dd17fa87e504be34bc1e7012588546e5a[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 9 18:41:40 2020 -0700

    Hide some new behavior behind --check-attribute-types.
    
    These two changes generate more new findings than expected, so hide them behind
    a flag to clean up pytype head.
    
    PiperOrigin-RevId: 320523068

[33mcommit f5d94cd9987b7ffe05fe93922c43e74c4be57d1c[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 9 18:24:07 2020 -0700

    Add missing file modes to builtins.open.
    
    PiperOrigin-RevId: 320515581

[33mcommit dc445e095f443627894453c67491843d50787ce8[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Thu Jul 9 09:52:39 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 320416259

[33mcommit 9db32fb42014ea47883a22514593eb265163e449[m
Merge: d10c4abf 3a1f73aa
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 8 16:39:18 2020 -0700

    Merge pull request #618 from google/google_sync
    
    Google sync

[33mcommit 3a1f73aa12543f52386bb276b4246672d0917fb6[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 8 16:03:41 2020 -0700

    Add/fix some opcodes for Python 3.8.
    
    Based on https://docs.python.org/3/library/dis.html. I ran the opensource tests
    in 3.8 and fixed a few crashes.
    
    For https://github.com/google/pytype/issues/440.
    
    PiperOrigin-RevId: 320284609

[33mcommit 45f3b6067c22a55351da039629c7406b98c5cf62[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 1 15:12:35 2020 -0700

    Copy in relevant part of https://github.com/google/pytype/pull/593.
    
    PiperOrigin-RevId: 319305380

[33mcommit 255d1166a1c4378d3fd7ff1c5568a60cbf6d024f[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 1 11:12:10 2020 -0700

    Make the behavior of io.open match builtins.open.
    
    io.open is an alias for builtins.open, but pytype was treating them differently
    because builtins.open was implemented using an overlay. In turn, the overlay
    was needed because pytype would incorrectly match constants to both Literal and
    non-Literal annotations. This change improves pytype's Literal matching,
    allowing us to remove the overlay, which fixes the buggy behavior of io.open.
    
    PiperOrigin-RevId: 319260037

[33mcommit 84dfd93bfba8510d4002caab06fdd4fa1ae6a613[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jun 30 14:49:25 2020 -0700

    Make collections.OrderedDict reversible.
    
    Note this adds a bit of weirdness with typing.OrderedDict. In typeshed, the typing members are aliases of the collections members, but pytype takes the opposite approach. So this CL makes collections.OrderedDict reversible, but not typing.OrderedDict. This is fine because typing.OrderedDict was added in 3.7.
    
    PiperOrigin-RevId: 319103569

[33mcommit d10c4abff4be6cc0d5694d1683c3c5c325ea84c1[m
Merge: 5f975acd 5665e272
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 1 15:07:04 2020 -0700

    Merge pull request #593 from bsolomon1124/wheels
    
    Wheels

[33mcommit 5f975acd608e850d0897890267b7b1930a908577[m
Merge: e9ff9433 5786fae5
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 29 17:18:58 2020 -0700

    Merge pull request #614 from google/google_sync
    
    Google sync

[33mcommit 5786fae5565114538bb3c4714819ec2a9726d98e[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 29 16:40:37 2020 -0700

    pyi parser: allow the 'total' keyword for subclasses of TypedDict.
    
    For https://github.com/google/pytype/issues/613.
    
    PiperOrigin-RevId: 318919337

[33mcommit 4acb36448baa17d94c5051be9aff805edfea4c4e[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 29 12:05:10 2020 -0700

    Fix: don't crash when vm.late_annotations is None.
    
    late_annotations is set to None once late annotations are evaluated, so that we
    don't accidentally add more late annotations that will never be evaluated. This
    means that whenever the attribute is accessed, a None check is needed.
    
    PiperOrigin-RevId: 318863903

[33mcommit 18cdaea8fbe9c98ff502e9c9488449eeb9a5e43f[m
Author: slebedev <slebedev@google.com>
Date:   Sat Jun 27 00:07:11 2020 -0700

    Fixed a few edge cases in pytype indexer
    
    PiperOrigin-RevId: 318602067

[33mcommit 9f1af77f9223af3ad5a386f8ae6763b512f7e696[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 26 15:30:29 2020 -0700

    Log [not-supported-yet] as soon as a recursive type alias is defined.
    
    ParameterizedClass and Union objects can only be annotations, not regular
    runtime objects. Thus, we can process them as soon as they are stored, catching
    issues such as recursive aliases at definition time rather than usage time.
    
    PiperOrigin-RevId: 318555214

[33mcommit c477819b23cad3287a0bad4871aa140409e60c73[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 26 15:22:54 2020 -0700

    Add a NestedAnnotation mixin.
    
    While working on an improvement to type aliases, I noticed that
    many annotations_util methods have to iterate over
    ParameterizedClass.formal_type_parameters
    and Union.options, so I added a common interface for doing so.
    
    PiperOrigin-RevId: 318554046

[33mcommit bc068681dba92489e883b926b00618cf348ebfb6[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 26 15:16:22 2020 -0700

    Partial rollback of changelist 318522426.
    
    *** Reason for rollback ***
    
    The PyPI release is out, so revert temporary changes made for the release.
    
    *** Original change description ***
    
    Do a PyPI release for a parser fix.
    
    For https://github.com/google/pytype/issues/608.
    
    I fixed a pyi parser issue about two weeks ago, and we need to do a release so
    that typeshed can use the fix.
    
    I don't feel confident releasing at head (too many findings to click through to
    check if there are any new crashes, obvious bugs, etc.), so what I plan to do
    is to temporarily roll back the change that generates the vast majority of the
    new findings, release on PyPI, and then reapply that change.
    
    ***
    
    PiperOrigin-RevId: 318553012

[33mcommit e9ff94330c567703a6281671607f85c7b35a65ee[m[33m ([m[1;33mtag: 2020.06.26[m[33m)[m
Merge: 7f6df736 f3f5f04d
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 26 13:39:59 2020 -0700

    Merge pull request #609 from google/google_sync
    
    Google sync

[33mcommit f3f5f04df6bdd771c842eb1eaaa2464867ee6d91[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 26 12:50:52 2020 -0700

    Fix CHANGELOG date.
    
    I derped and put June 28 instead of June 26.
    
    PiperOrigin-RevId: 318525801

[33mcommit d477f91cbca6614fad3f8ae12f961df3e92519cb[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 26 12:31:28 2020 -0700

    Do a PyPI release for a parser fix.
    
    For https://github.com/google/pytype/issues/608.
    
    I fixed a pyi parser issue about two weeks ago, and we need to do a release so
    that typeshed can use the fix.
    
    I don't feel confident releasing at head (too many findings to click through to
    check if there are any new crashes, obvious bugs, etc.), so what I plan to do
    is to temporarily roll back the change that generates the vast majority of the
    new findings, release on PyPI, and then reapply that change.
    
    PiperOrigin-RevId: 318522426

[33mcommit a35c05fc5a999f432cd76d02dc52e716531569ce[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 25 18:28:21 2020 -0700

    Fix: don't crash on dataclass.FieldInstance objects without a default.
    
    PiperOrigin-RevId: 318389448

[33mcommit 819c7c10d10f1d6def7be533705b053f9d616c55[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 25 13:05:54 2020 -0700

    Fix: don't choke on instance attributes that are annotated multiple times.
    
    A TGP turned up code that does things like:
    
    class Foo:
      def __init__(self):
        self.x = []  # type: List[X]
    
      def reset(self):
        self.x = []  # type: List[X]
    
    Due to some weirdness around hashing parameterized classes, this stores two
    bindings for x's annotation, leading to spurious "must be constant" errors
    later on. Fixed by ignoring the second annotation.
    
    PiperOrigin-RevId: 318332546

[33mcommit 7f6df736352f84d8648d96127ca227d4ccdc7b64[m
Merge: 284d0f0e a26daae9
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 23 15:25:10 2020 -0700

    Merge pull request #607 from google/google_sync
    
    Google sync

[33mcommit a26daae9400b18d8d6161329777a0bb4089b1df7[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 23 12:58:16 2020 -0700

    Fix Python 3.5 Travis test failures.
    
    PiperOrigin-RevId: 317925038

[33mcommit 274cb2748224dd4a37e4d3ae1c6a18bd06fa3894[m
Author: Lukas Geiger <lgeiger@users.noreply.github.com>
Date:   Tue Jun 23 12:57:07 2020 -0700

    Autodetect number of jobs with --jobs auto (#605)
    
    This adds the possibility to autodetect the number of jobs based on the number of available CPU cores on the host system using `pytype --jobs auto`. This allows for a usage similar to [`pytest-xdist`](https://github.com/pytest-dev/pytest-xdist#speed-up-test-runs-by-sending-tests-to-multiple-cpus) which can be useful when using `pytype` in scripts that might run on different systems.
    
    Resolves #605
    
    PiperOrigin-RevId: 317924811

[33mcommit 28a24270f3756f8586bf9e656e5ddec3c162fbef[m
Author: Lukas Geiger <lgeiger@users.noreply.github.com>
Date:   Mon Jun 22 11:44:38 2020 -0700

    Replace list comprehension with generator expresion when calling any() (#604)
    
    This allows `any()` to return early without needing to iterate over the entire list.
    
    Resolves #604
    
    PiperOrigin-RevId: 317701319

[33mcommit 5e4f3cd35deaa354c2577a9e4f2c5fd4fb6dc2c9[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 18 17:47:02 2020 -0700

    Type-check assignments to annotated function parameter names.
    
    This is a little different from what b/113372317 asks for but in the same
    spirit: if you don't allow `def f(x: int = 0.0): ...`, why would you allow
    `def f(x: int): x = 0.0`? Plus, now that we're enforcing annotations strictly
    everywhere else, it would be confusing to be lenient here.
    PiperOrigin-RevId: 317218197

[33mcommit c03b1c6f1a5c1d5d0011d190840bb94d8a4fcd96[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 18 17:35:16 2020 -0700

    Type-check parameter defaults against annotations.
    
    For now, this feature is hidden behind yet another flag,
    --check-parameter-types.
    
    I also did a bit of cleanup: removed an unnecessary lint version directive and
    extraneous arguments to a super() call, fixed a method signature so it matched
    the superclass signature, and changed a check for the existence of annotations
    to a more precise check for the existence of parameter annotations.
    
    PiperOrigin-RevId: 317216325

[33mcommit 7c6b3e20ee941aefc76529e42de696cd0696747b[m
Author: slebedev <slebedev@google.com>
Date:   Thu Jun 18 12:30:30 2020 -0700

    Allowed from-importing symbols other than modules
    
    For example
    
      from sys import path
    
    will now correctly reference sys.path.
    
    PiperOrigin-RevId: 317157234

[33mcommit 350d2d784b289e1c56fc732507dbc7e70e3c2731[m
Author: slebedev <slebedev@google.com>
Date:   Thu Jun 18 12:29:14 2020 -0700

    First step towards better import support in xref
    
    Imported names now only create a binding if they are aliased. The alias has
    subkind import and is connected to imported name (not its definition!) via
    *aliases* edge. The imported name is connected to the corresponding definition
    via *ref/imports* edge.
    
    See testdata/imports.py for an example.
    
    Note that from-imports are currently restricted to submodules, importing
    anything else e.g.
    
      from sys import version
    
    does not produce a ref.
    
    Another limitation has to do with subpackages, both
    
      import foo.bar.boo
    
    and
    
      from foo.bar import boo
    
    do not produce refs for neither foo nor foo.bar.
    
    PiperOrigin-RevId: 317156912

[33mcommit 91d274c9c903f2c35f07ff5457621ff56a3716f5[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jun 17 19:55:56 2020 -0700

    Display the type of dataclass FieldInstance correctly.
    
    PiperOrigin-RevId: 317018641

[33mcommit e43c0c1f1e98a3610c45b17b1d1b94bf0789443e[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 17 17:48:23 2020 -0700

    Dedup type annotations using their opcodes.
    
    PiperOrigin-RevId: 317002471

[33mcommit c99fe8b816c110ef00b80441157b7d86f450a21b[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 16 16:08:43 2020 -0700

    Finish implementation of --check-attribute-types.
    
    * Makes the annotation always take precedence over any inferred type in stubs.
    * Stores annotations that are declared on instance attributes. This allows
      type-checking against annotations declared in __init__ or __new__.
    
    PiperOrigin-RevId: 316777060

[33mcommit cfb0f73be339c88a5c51361ac4e030a40a3abeda[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 16 13:55:23 2020 -0700

    Clean up TODOs in tests.
    
    PiperOrigin-RevId: 316751830

[33mcommit 9d943a7bc76e2cc229476f59c71706a1aef241cb[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jun 16 13:08:25 2020 -0700

    Change TODOs to point to bug.
    
    PiperOrigin-RevId: 316742617

[33mcommit 64430c2bd6eb5ea44947019b16534512c2fb56be[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jun 16 12:02:50 2020 -0700

    Add Python 3 test for vararg annotations.
    
    PiperOrigin-RevId: 316729481

[33mcommit 93220f05dfbf7b9e21994aae9a6b0cbd93b5479c[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jun 15 19:11:42 2020 -0700

    Convert some tests/* TODOs into bugs
    
    Also added two relatively complex examples under bugs/ and suppressed the warning for the unused "dep" import because it's annoying to have to remember to readd it every time i want to test a bug with a dependency.
    
    PiperOrigin-RevId: 316593129

[33mcommit 02f36ea59963fbf6304cdde1e381c678c95a0c11[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 15 17:20:23 2020 -0700

    Clean up TODOs in typegraph code.
    
    PiperOrigin-RevId: 316578057

[33mcommit 228095bfdd8544f97a78e3593a435288fc040bdc[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 15 17:20:04 2020 -0700

    Clean up TODOs in visitors.py
    
    PiperOrigin-RevId: 316578011

[33mcommit 7f7e314b62c5e4a2c55860e24ece6885b1cb1f40[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 15 16:08:54 2020 -0700

    Add a bug for a TODO.
    
    PiperOrigin-RevId: 316565368

[33mcommit 9c7725b0d3b22033831330f9b177014a242a5eea[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 15 16:08:44 2020 -0700

    Resolve TODOs in pytype/pyi/.
    
    I resolved a TODO to keep only one copy of pytd/typeshed_test and
    pyi/parse_typeshed_test by deleting the latter. Based on the file history,
    pytd/typeshed_test is the one that is actively maintained.
    
    I removed all the other TODOs as likely not worth doing, especially since we
    want to eventually replace this parser.
    
    PiperOrigin-RevId: 316565341

[33mcommit d66ada59705470f5cc2ecb30f907e3f4213070ed[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 15 15:48:45 2020 -0700

    Remove obsolete TODOs.
    
    PiperOrigin-RevId: 316561475

[33mcommit 3a0ea94bec805ef8b89714066ff2abca0718b821[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jun 15 15:35:30 2020 -0700

    Clean up old TODOs in abstract.py
    
    PiperOrigin-RevId: 316559066

[33mcommit fade7ee772f97fc184ec5b97e4159dd103958c41[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 15 15:25:49 2020 -0700

    Remove old TODO.
    
    "pivot" seems like a reasonable name to me.
    
    PiperOrigin-RevId: 316557183

[33mcommit 687c66164dbd8bec34ad99943cb24becbef8737e[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 15 14:47:39 2020 -0700

    Clean up TODOs
    
    PiperOrigin-RevId: 316549161

[33mcommit 8b439917400e4fdf16911e4c1a0f025e4ada469d[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 15 14:38:47 2020 -0700

    Remove old TODOs in convert.py.
    
    PiperOrigin-RevId: 316547257

[33mcommit dad045ecbcc2fa7cc828e56ee762f2976a3923f7[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 15 14:38:09 2020 -0700

    Remove stale TODOs.
    
    PiperOrigin-RevId: 316547125

[33mcommit ed6e9aa49f4c60298bc4bb1a7d867590cf9e7b73[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 15 14:00:00 2020 -0700

    Map all TODOs to a bug.
    
    These are by-and-large small cleanups, so a single bug suffices.
    
    PiperOrigin-RevId: 316539007

[33mcommit 334ffbe6c670a0d7bd5469c964a8568dab947061[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 15 13:50:26 2020 -0700

    Change TODO(kramm) to TODO(bug) in output.py.
    
    PiperOrigin-RevId: 316537199

[33mcommit 57f7b9e78f636501e5732e391fe14cef34626423[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 15 13:41:59 2020 -0700

    Clean up TODOs.
    
    PiperOrigin-RevId: 316535617

[33mcommit 4d1f8f5ffeb40dfd55a68c42c4e1141f0cc3962f[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 15 13:29:24 2020 -0700

    Update TODO about better testing.
    
    Also fixes a linter error.
    
    PiperOrigin-RevId: 316533249

[33mcommit 2357128af6122434bcccf0f08dc9010424527bf0[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 15 13:17:06 2020 -0700

    Remove an old TODO in load_pytd.
    
    PiperOrigin-RevId: 316530837

[33mcommit 08afafe23718af733c4a364bfb127b1ab018594b[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 15 13:05:08 2020 -0700

    Remove old TODOs in analyze.py.
    
    * Implementing the node TODO led to failing tests, so I removed it.
    * I couldn't figure out what "Record these:" meant.
    * Removed the TODO for aliases and instead documented how they're handled.
    
    PiperOrigin-RevId: 316528462

[33mcommit 9c2120f31570a4a8361f462bf3e56845ac204f9a[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jun 15 12:57:48 2020 -0700

    Clean up some old TODOs
    
    Removed several TODOs as being obsolete, or overly complicated for the
    benefit they would provide.
    
    Converted some TODOs to bugs or comments in the code:
    - matcher.py
    - CMakeLists.txt
    - mixin.py
    
    PiperOrigin-RevId: 316526842

[33mcommit b38a4fafab2d2f1058aa16b0a023c2ab8d28652c[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 15 12:18:58 2020 -0700

    Scrub TODOs in function.py.
    
    * Adds a bug for one TODO.
    * Removes another and leaves an informational comment instead.
    
    PiperOrigin-RevId: 316518934

[33mcommit bafa333218c00318508c388685a586e750295c9e[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 15 12:03:43 2020 -0700

    Remove unneeded TODO.
    
    There's no need to raise an error here.
    
    PiperOrigin-RevId: 316515728

[33mcommit f17636fd66bd22a9e6c30de4f0c77c321f6090a9[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 15 12:01:40 2020 -0700

    Scrub TODOs in vm.py.
    
    * Removes obsolete and not directly actionable TODOs.
    * Resolves a TODO for memoizing a method.
    * Converts other TODOs from TODO(person) to TODO(bug).
    
    PiperOrigin-RevId: 316515198

[33mcommit 4ef9c8215178e6a4494e5ea1e603fa1a73e64826[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jun 15 11:59:31 2020 -0700

    Add a test for special_builtins.Next
    
    PiperOrigin-RevId: 316514740

[33mcommit 0b66acaaa5759e0423dd9c3413b28d435587896b[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 15 11:57:01 2020 -0700

    Add bug for investigating MAX_DEPTH.
    
    See b/159041279 for a bit more about this.
    
    PiperOrigin-RevId: 316514137

[33mcommit d6d090b0b65e23c806314ea889a778ee08da2822[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 15 11:33:11 2020 -0700

    Update TODO related to _methodname in csv output.
    
    PiperOrigin-RevId: 316508846

[33mcommit 89cba91d48e3c0cc5e5dbf4e1d8a9264f8b392bb[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 15 11:25:16 2020 -0700

    Change TODO(kramm) to TODO(bug)
    
    PiperOrigin-RevId: 316507034

[33mcommit 52fa28df85360c533fa6346c74b9a00470a3f173[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 15 11:15:44 2020 -0700

    Change TODO(kramm) to TODO(bug).
    
    PiperOrigin-RevId: 316504732

[33mcommit dc08be9570b34fae86af03f9389a4d40bc05887e[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 15 11:07:25 2020 -0700

    Resolve TODO by moving test higher in the file.
    
    PiperOrigin-RevId: 316502772

[33mcommit 83b620fc60bd36b5ad9bfd679f19915f575f7450[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 12 17:34:34 2020 -0700

    Make a couple of quick fixes to --check-container-types.
    
    I was playing around with this new feature and noticed a couple of bugs:
    * An element type that is annotated as Any should stay as Any.
    * from_annotation needed to be set in a couple of additional places.
    
    PiperOrigin-RevId: 316208219

[33mcommit fa17f20b28a3ce69d3707e8e9082952b82d65840[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jun 12 14:26:46 2020 -0700

    Do not check container type mutations if there are multiple bindings to self.
    
    This fixes false positives when we mutate a container with multiple annotated
    types, e.g.
    
      def foo(l1: List[int], l2: List[str], b):
        if b:
          x = l1
          y = 3
        else:
          x = l2
          y = "foo"
        x.append(y)
    
    PiperOrigin-RevId: 316177667

[33mcommit 284d0f0edb3c60cf02367645bf8a8d055ca50fe9[m
Merge: 3610c139 f6af86e0
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 12 16:59:49 2020 -0700

    Merge pull request #600 from google/google_sync
    
    Google sync

[33mcommit f6af86e0a0c388738a2e293fe7386d6d228989d4[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 12 13:55:46 2020 -0700

    Allow # type: ignore after the opening parenthesis in a function def.
    
    For https://github.com/python/typeshed/pull/4224.
    
    We really need a better pyi parser...
    
    PiperOrigin-RevId: 316171517

[33mcommit f8f80789702b9af660a0db8821bc59201bcf7e1d[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 12 13:48:43 2020 -0700

    Enable more of --check-variable-types.
    
    With this change,
      v: int = 0
      v = ''
    will also be an error. I already cleaned up all new findings introduced by this
    change as of about a week ago.
    
    PiperOrigin-RevId: 316170169

[33mcommit c62829d9e158d455395a8d08af84c130f3abfdf4[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jun 12 11:16:12 2020 -0700

    Basic support for flax dataclasses.
    
    PiperOrigin-RevId: 316139475

[33mcommit 4acdac9f997397743a9f90cde1aeab93417c435f[m
Author: slebedev <slebedev@google.com>
Date:   Fri Jun 12 10:24:16 2020 -0700

    Fixed Import/ImportFrom location matching
    
    Prior to this change _get_match_location produced false-positive match
    when the name being matched occurred as a prefix of some other imported
    name, e.g.
    
      import foo as f
    
    PiperOrigin-RevId: 316128150

[33mcommit 03e281f2051dd4a4ef1c0cbbba90d967d97a0582[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jun 11 13:42:23 2020 -0700

    Populate the `cls` arg in classmethods with the class type.
    
    PiperOrigin-RevId: 315968839

[33mcommit 4027dcfeac50498246cf36d2979253001c484244[m
Author: slebedev <slebedev@google.com>
Date:   Thu Jun 11 13:26:22 2020 -0700

    Renamed testdata/import.py->testdata/imports.py
    
    import is a keyword and therefore is not a valid module name in Python.
    
    PiperOrigin-RevId: 315965683

[33mcommit d4263e4b22d5e276805f2c07652b7acea8fb784e[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 9 14:45:47 2020 -0700

    FIX: Test that we are in a function when we add an attr to the callgraph.
    
    PiperOrigin-RevId: 315564137

[33mcommit 44da154d69b8888559131f0330bdd86ae3f12c40[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 9 12:39:16 2020 -0700

    If cls is the class argument of Foo.__new__, treat `cls is Foo` as ambiguous.
    
    Allows for the fact that __new__ might be called from a subclass of Foo, and
    that checking that we are not in the base class is a common idiom.
    
    PiperOrigin-RevId: 315538618

[33mcommit 53d0670dd4fdc53ad39b1fa4dca31a984979976b[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 8 12:15:12 2020 -0700

    Fix: bool(Iterable[X]) can be either True or False.
    
    PiperOrigin-RevId: 315326106

[33mcommit 6456c2f89848da7c07a9ebb0fbdf6d678463a841[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 4 15:22:45 2020 -0700

    Fix a crash caused by overrides_bool not existing on non-class objects.
    
    Showed up when attempting to analyze
    //apps/intelligence/cody/tools/codylab:testit.
    
    PiperOrigin-RevId: 314814112

[33mcommit d4d0252f2e05298fcb247070c0abc761221a77b0[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jun 4 13:21:19 2020 -0700

    Preserve the variable name to which a type annotation was applied.
    
    Used in error messages when reporting container type annotation mismatches.
    
    PiperOrigin-RevId: 314791344

[33mcommit 7c209d107b445638a154e476812727e5c54381e0[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jun 4 11:06:24 2020 -0700

    Check for function signature annotations when mutating an argument.
    
    A corner case where an alias can point to two separate annotated args via
    different code paths has been left as a TODO
    
    PiperOrigin-RevId: 314763912

[33mcommit 770c2b5cdaccbadeed06a5bbc071bbb354a28ac0[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 3 00:38:15 2020 -0700

    Type-check class attributes against their annotations.
    
    Adds a new option, --check-attribute-types, that will make pytype type-check
    attribute assignments against annotations, e.g.,
    
    class Foo:
      x: int
      def foo(self):
        self.x = 'hello, world'  # annotation-type-mismatch
    
    I've left a couple of features for future CLs:
    * Making annotations take precedence over instance attribute values when
      generating pyi files.
    * Handling attribute type comments in __new__ and __init__.
    
    Also puts container mutation checking behind its own flag,
    --check-container-types, rather than reusing --check-variable-types. Having
    this many flags is rather ugly and redundant, but they'll go away as we release
    various things, and they make the release process a bit easier.
    
    PiperOrigin-RevId: 314483072

[33mcommit 52b641d67c531d57d7e05a7e419740d6e7ae2891[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 2 16:03:51 2020 -0700

    Group multiple container type errors for a single object into one error.
    
    New output format example:
    
    File "third_party/py/pytype/bugs/mutation.py", line 19, in <module>: New container type does not match type annotation [container-type-mismatch]
      Annotation: Dict[str, str] (type parameters Dict[_K, _V])
      Contained types:
        _K: str
        _V: str
      New contained types:
        _K: Union[int, str]
        _V: Union[float, str]
    
    PiperOrigin-RevId: 314422487

[33mcommit becf9f89704e5d5d2f63f3374ecc204841375327[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 2 13:12:30 2020 -0700

    Treat objects as True in a boolean context, unless explicitly overridden.
    
    Exceptions (treated as ambiguous) are:
    - booleans
    - numeric types
    - classes overriding __bool__ (__nonzero__ in python2)
    - classes overriding __len__
    
    Provably empty builtin containers continue to be treated as False.
    
    PiperOrigin-RevId: 314390311

[33mcommit 41a828ef6e3881b6590acfb234ae14847fa815cb[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jun 1 17:48:54 2020 -0700

    Check that mutating a container does not violate its annotated type.
    
    If options.check_variable_types is set, the following code should fail:
    
        a: List[int] = []
        a.append("hello")
    
    Also adds some test cases in bugs/mutation.py for TODOs.
    
    PiperOrigin-RevId: 314239043

[33mcommit 9d2a869365a720ab6cbef4d6d71b4dcc91f8a4db[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 1 17:14:17 2020 -0700

    Enable checking of assignments on the same line as a PEP 526-style annotation.
    
    With this change, pytype will report an error for:
      x: str = 0
    by default. Erroring on:
      x = 0  # type: str
    or
      x: str
      x = 0
    will still require the --check-variable-types flag.
    
    PiperOrigin-RevId: 314234094

[33mcommit 5665e272d7ffdd8358c17029babb2862eb17c875[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Tue Jun 2 10:27:00 2020 -0400

    Apply shfmt -i 2 -ci

[33mcommit 7dd6bd164e07d8f888a1cc51717eca0aa7e9948c[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Tue Jun 2 10:16:56 2020 -0400

    Remove comment, delegate to calling yaml config

[33mcommit f0a80bd13cea6887c3640121d8ca6f0b92bfe4bd[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Tue Jun 2 10:15:55 2020 -0400

    Wheel badge: use PyPI metadata

[33mcommit 702a2a6844b6fbe902dd47bb9996ceb5964e5c1f[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Tue Jun 2 10:10:15 2020 -0400

    Fix directory name; drop --verbose flag for wheel

[33mcommit 7e901622fd91f46ffb41a13174402a3bb2777437[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Tue Jun 2 10:01:36 2020 -0400

    Add badge for GitHub Actions - wheels

[33mcommit 1d4e5d6446fed5667e1f8a60f98f82b03f6d17a6[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Tue Jun 2 10:01:15 2020 -0400

    Add back (existing) Travis CI config

[33mcommit b6f13df1edc841321032c94f50fd3490902508e2[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Tue Jun 2 09:55:25 2020 -0400

    Need set-env to set var that other steps can use
    
    Ref:
    https://help.github.com/en/actions/configuring-and-managing-workflows/using-environment-variables

[33mcommit a65bb313f1ea848318b73c9399f884801be52843[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Tue Jun 2 09:46:24 2020 -0400

    Fixups

[33mcommit 0f93b66f81e0d89944f81d3710fdcd4e6d0ced42[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Tue Jun 2 09:45:07 2020 -0400

    Remove pyenv refs

[33mcommit 7c7fbd5f4673158696eeee0ab3f922f40007a9e0[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Tue Jun 2 09:35:04 2020 -0400

    Workflow syntax - matrix sits under 'strategy'

[33mcommit 5fa701aa9826133e3a43847460d435ca5be8ad1a[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Mon Jun 1 23:52:03 2020 -0400

    Remove Travis CI config

[33mcommit c1a60bad901239422ac9c401d460a6a7e89bf4fb[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Mon Jun 1 23:50:40 2020 -0400

    First cut at Travis -> GitHub Actions

[33mcommit 3610c139d522056b0f40c3bee74c4e3369a0bbaf[m[33m ([m[1;33mtag: 2020.06.01[m[33m)[m
Merge: 552fbe06 b290b279
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 1 15:00:27 2020 -0700

    Merge pull request #599 from google/google_sync
    
    Update __version__ and CHANGELOG for a PyPI release.

[33mcommit b290b2797c34b30afeae4c91d8419df652a143eb[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 1 14:16:44 2020 -0700

    Update __version__ and CHANGELOG for a PyPI release.
    
    PiperOrigin-RevId: 314201645

[33mcommit 552fbe0658a8c7215b552530e61673a2e6d8e651[m
Merge: f56f4651 d2208d8b
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 1 13:09:38 2020 -0700

    Merge pull request #598 from google/google_sync
    
    Google sync

[33mcommit d2208d8bd0bfa4b42a7db38166c94584009a5677[m
Author: Ammar Askar <ammar_askar@hotmail.com>
Date:   Thu May 28 15:08:19 2020 -0700

    Add minimum changes required for py3.8 support (#587)
    
    This is a continuation of @pganssle's work on #559
    
    Resolves #587
    
    PiperOrigin-RevId: 313667711

[33mcommit 4800e652b1a1afa6fd7aeaab0e88d09f30acbb9d[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed May 27 18:57:25 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 313506426

[33mcommit 39afb063945fed8afe3d844bbc315d03a0a98034[m
Author: Ammar Askar <ammar_askar@hotmail.com>
Date:   Wed May 27 17:12:19 2020 -0700

    Import of GitHub PR #587: Add minimum changes required for py3.8 support
    https://github.com/google/pytype/pull/587
    Merge 917097e96a1552b8adb734050392bf5da39ddb6d into 549363be84eb85817c201e96d74226e96f3fdce9
    
    GITHUB_PR_BODY=This is a continuation of @pganssle's work on #559
    
    Beyond just making it compile, this also adds some of the newer VM and marshaling stuff such as positional only arguments. It also addresses and adds tests for a 3.6 feature that allows the line number to opcode table (`lnotab`) to be non monotonic. After this the remaining failing tests are:
    
    ```
    ** pytype.vm_test
    ** pytype.tests.py3.test_variable_annotations
    ** pytype.tools.xref.indexer_test
    ** pytype.tests.py3.test_typing_namedtuple
    ** pytype.tests.test_decorators
    ** pytype.tests.test_with
    ** pytype.tests.test_exceptions
    ** pytype.tests.test_flow
    ** pytype.tests.py3.test_coroutine
    ** pytype.tests.py3.test_annotations
    ** pytype.tests.py3.test_stdlib
    ** pytype.tests.test_builtins1
    ** pytype.tests.test_basic
    ```
    
    I'll take a look at them later or someone else can carry through with those. Either way I'd like to land this first to make the reviews manageable.
    
    -----
    
    As @pganssle noted on their PR, there is some weird behavior going on with the tests that causes them to fail but not produce any output in the console or the log files.
    
    Upon further investigation this was caused by a segmentation fault in `cfg.cc`. In Python 3.8, `PyStructSequence_InitType` was changed so that it errors out if a type with a reference count greater than 0 is passed in: https://github.com/python/cpython/blame/3.8/Objects/structseq.c#L396-L400
    
    This error was being silently swallowed because we were just assuming that `PyStructSequence_InitType` was running successfully. The problem was we were using `PyObject_HEAD_INIT` which [initializes the refcount to 1](https://github.com/python/cpython/blob/35b8a4da7494cd51f3edeaa07764dd8f14bac0bf/Include/object.h#L83-L85).
    
    With this fixed there should now be actual output from the test runs so hopefully this work should be easier to continue by others.
    
    ----
    
    ### Notes on the workflow
    
    As Paul mentioned, the workflow on the open-source end of pytype is pretty bespoke and not too friendly. I would recommend using `tox` and separating out the `googletest` based C/C++ tests from the Python ones. The `build_scripts` folder has a lot of magic that masks the details of how the build system works underneath. CMake is currently being used to build the extension, run Python tests and run C++ tests. Building and testing C++ is CMake's forte but there's a lot of code to handle the discovery and running of Python tests. This might have been done to keep symmetry with the `py_test` build rule internally but it is completely alien to most open-source Python developers. Instead, using something like the builtin `unittest` module or `pytest` to drive the Python tests would be a more comfortable experience.
    
    For example, one of the issues I had was figuring out how to make CMake use my locally compiled Python 3.8 build. Passing custom arguments to CMake is nearly impossible due to the build_scripts. I'd recommend this, if you're on a debian based distro, add the deadsnakes ppa or similar and use:
    ```shell
    sudo apt install python3.7 python3.7-dev python3.7-venv
    python3.7 -m venv venv
    . ./venv/bin/activate
    python3.7 build_scripts/build.py
    python3.7 build_scripts/run_tests.py
    ```
    Swap out 3.7 for whatever host Python version you want to test with.
    
    Next, for debugging issues like the mysterious failing tests without output, the most important file is `out/ninja.log`. This actually shows the commands being invoked to run the tests. The exact incantation seems to be:
    
    `TYPESHED_HOME=/home/aaskar/workspace/pytype/typeshed /home/aaskar/workspace/pytype/venv/bin/python3.8 -B /home/aaskar/workspace/pytype/build_scripts/test_module.py pytype.tests.test_basic -o /home/aaskar/workspace/pytype/out/pytype/tests/test_basic.log -P /home/aaskar/workspace/pytype/out -s -p`
    
    Failing tests can also be run with unittest instead of the custom runner for a workflow where you don't have to repeatedly check a log file after making changes like so:
    
    `TYPESHED_HOME=$PWD/typeshed python3.8 -m unittest pytype.tools.traces.traces_test`
    
    PiperOrigin-RevId: 313493580

[33mcommit 61149f70c776683d75cc5e93dfc252edd7bf31fd[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Thu May 28 09:29:06 2020 -0400

    Replace bdist_wheel with PEP-517 build front-end
    
    As suggested by @pganssle
    
    pip wheel currently only invokes bdist_wheel
    (https://pip.pypa.io/en/stable/reference/pip_wheel/),
    but the intent is to separate out the build backend
    and frontend.

[33mcommit f56f46518d191e12ae8b8d1456b3e420fb6debbf[m
Merge: 549363be cfd9b6f0
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 27 16:21:32 2020 -0700

    Merge pull request #596 from google/google_sync
    
    Google sync

[33mcommit cfd9b6f03bbadb451554e15f81709e9bb588f61b[m
Author: rechen <rechen@google.com>
Date:   Wed May 27 14:06:53 2020 -0700

    For global and class members, always prefer to use the annotation in pyi.
    
    Otherwise, for cases like:
    
      x: float
      x = 0
    
    we'll end up generating:
    
      x: int
    
    PiperOrigin-RevId: 313460210

[33mcommit ca0c886ddba57ace4322be1d64f44a520efcb71c[m
Author: rechen <rechen@google.com>
Date:   Wed May 27 12:23:01 2020 -0700

    Replaces values with Any when a variable is annotated as Any.
    
    In general, we can't use annotations to replace values because this messes up
    things like if-splitting. But specifically in the case that a variable is
    annotated as Any, we've gotten bug reports that suggest that it is surprising
    to users when pytype builds a Union[Any, ...] based on further assignments to
    the variable.
    
    PiperOrigin-RevId: 313439881

[33mcommit 616298feed3c3b4066feb50597bdfd3660229e5d[m
Author: rechen <rechen@google.com>
Date:   Tue May 26 15:54:04 2020 -0700

    Update the view when type-checking a dataclass field.
    
    Fixes a crash found while testing rollout of --check-variable-types.
    
    PiperOrigin-RevId: 313283303

[33mcommit c79ff0f8f00369518c8b446c776c01de229a5d57[m
Author: mdemello <mdemello@google.com>
Date:   Thu May 21 16:50:49 2020 -0700

    Document a corner case in disable=bad-return-type.
    
    Also updates docs freshness as a side effect of running update_docs.
    
    #pyfixit
    
    PiperOrigin-RevId: 312766397

[33mcommit 670812ef180a52f69f78cb84af655b0292ad71d4[m
Author: rechen <rechen@google.com>
Date:   Thu May 21 14:03:20 2020 -0700

    Fix: allow NoReturn to match Any.
    
    PiperOrigin-RevId: 312736847

[33mcommit 5747b14ab444a907df912a7a785b65f8963bb58c[m
Author: mdemello <mdemello@google.com>
Date:   Wed May 20 19:10:53 2020 -0700

    Get rid of the RemoveInheritedMethods optimisation.
    
    This optimisation removed methods that had the same signature as the
    corresponding method in a base class, but it had some unfixable corner cases
    with multiple inheritance and abstract classes.
    
    PiperOrigin-RevId: 312600095

[33mcommit 7320fd7bcd75e9e6aa253477559458e4d6bfc95f[m
Author: mdemello <mdemello@google.com>
Date:   Wed May 20 13:53:32 2020 -0700

    FIX: Preserve overridden methods of generic classes.
    
    If a subclass explicitly overrides a method in a generic class, output it in
    the pyi file. Prevents method lookups from falling back to the base class even
    if the signature changed.
    
    #pyfixit
    
    PiperOrigin-RevId: 312548900

[33mcommit 03dc220d5cffd1e0dbef89a54ffc894cccf3031f[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Tue May 19 16:58:04 2020 -0700

    Fix annotations for float.fromhex and bytearray.fromhex.
    
    Before this change, Pytype would not accept calling bytearray.fromhex with a str
    in Python 3, while Python itself accepts it.
    
    Drop support for calling bytearray.fromhex or float.fromhex with bytes or a
    bytearray in Python 3, or with a bytearray in Python 2. Python itself does not
    support this.
    
    PiperOrigin-RevId: 312383190

[33mcommit a855a23ba97dd7eeb9e832a6b4cb029740292c07[m
Author: tsudol <tsudol@google.com>
Date:   Tue May 19 16:37:00 2020 -0700

    Make Unsolvable, Empty, etc. into proper singletons.
    
    #pyfixit
    
    PiperOrigin-RevId: 312379359

[33mcommit d8005c21389a06dee9ca790670ce10f2ae4b0b1d[m
Author: rechen <rechen@google.com>
Date:   Tue May 19 16:29:34 2020 -0700

    Target Python 3 by default instead of Python 2 in pytype's tests.
    
    Creates a test_base.UnitTest class that sets python_version to the host Python
    3 version and uses it everywhere, so that tests target Python 3 unless we have
    a particular reason to use Python 2.
    
    #pyfixit
    
    PiperOrigin-RevId: 312377825

[33mcommit bf33b1ae4b29e5b6bd2d3e4a1b599380b3c0c020[m
Author: tsudol <tsudol@google.com>
Date:   Tue May 19 14:37:48 2020 -0700

    Treat NoReturn as a singleton.
    
    This was preventing several checks in vm.py from returning true due to
    comparing NoReturn to Instance<NoReturn> when NoReturn was returned from a
    function call.
    
    #pyfixit
    
    PiperOrigin-RevId: 312355551

[33mcommit e00af14034db34ffde685a65092a379dd13a2df6[m
Author: mdemello <mdemello@google.com>
Date:   Tue May 19 13:47:54 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 312345571

[33mcommit d2821ea623194a9abd24278a3eca610d445939cb[m
Author: rechen <rechen@google.com>
Date:   Tue May 19 11:42:05 2020 -0700

    Fix a bug in the type of MutableSet.__sub__(Set).
    
    Found while trying to run a TGP for --check-variable-types.
    
    PiperOrigin-RevId: 312320921

[33mcommit c88a3f023c510301e9f8e79614fd33a185679780[m
Author: rechen <rechen@google.com>
Date:   Tue May 19 10:01:57 2020 -0700

    Fix: don't crash when trying to match a function against a non-class.
    
    While the test example is quite contrived, I found user code that does somehow
    end up matching a function against Empty and therefore crashing.
    
    PiperOrigin-RevId: 312300631

[33mcommit 15c5f711aaa993a60dd7a792d66930e53163338b[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon May 18 18:51:26 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 312197285

[33mcommit 549363be84eb85817c201e96d74226e96f3fdce9[m
Merge: 22e36877 3d0d12b4
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 26 12:20:43 2020 -0700

    Merge pull request #594 from bsolomon1124/gitignore-cmake
    
    Ignore cmake-generated files

[33mcommit 3699e400453a231d773ec90e953acbb09e7871db[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Mon May 25 17:04:53 2020 -0400

    Don't redirect bdist_wheel output to log file
    
    Not really helpful when kicked off in CI.

[33mcommit 483031aee57ade93d1bf51c72c76c08ee692da9f[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Mon May 25 17:04:01 2020 -0400

    Remove install comment instructions for i686

[33mcommit f9b52487d12aa6a4a6be5dc9e246a2efb48720d1[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Mon May 25 16:27:08 2020 -0400

    CI: don't install Bison into project root
    
    This shouldn't really matter on the CI server itself,
    but can be annoying if building from a local host
    since Git will try to pick up the result.

[33mcommit 3d0d12b418b4926bba0fe2aab5995336e6a83165[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Mon May 25 16:20:02 2020 -0400

    Ignore cmake-generated files

[33mcommit e9b1e2b3ddbf14f32398d788291c387686714199[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Sun May 24 13:58:43 2020 -0400

    (Attempt to) build MacOS + manylinux2014 wheels

[33mcommit 590058a161a6a705fef979059a817009c9c113cb[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Sat May 23 09:28:25 2020 -0400

    WIP manylinux build script

[33mcommit 41d04dfd52ae7f205efe954a2fe8aba66e63b317[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Wed May 20 17:27:45 2020 -0400

    Show dist/ after successful bdist_wheel

[33mcommit e6a1c8bd595afd4104068723e934a8cdbf39a533[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Wed May 20 17:26:16 2020 -0400

    allow_failure on as-yet unsupported Python 3.8

[33mcommit ee9cbee6d4fb1819088208cf4d96da77430fe462[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Wed May 20 16:59:33 2020 -0400

    Brew will exit >0 if pkg already installed

[33mcommit 710534bb5f6abab5ddbcfc120d505605686cae87[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Wed May 20 16:44:51 2020 -0400

    Update pyenv via brew for latest Python versions

[33mcommit fb388d785c413a714b26d18ea2aa902af43a66ad[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Wed May 20 16:31:26 2020 -0400

    Make sure PYENV_VERSION is active

[33mcommit 740ec3c749e92507f089401609dad821297b549d[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Wed May 20 16:26:19 2020 -0400

    Correct Python version

[33mcommit 5da2d105ffdd5d621c2765f99e6665dcc1c28bd2[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Wed May 20 16:25:44 2020 -0400

    Attempt to use pyenv workaround to support Python on MacOS

[33mcommit 91c561d4f19e45a18ef3c6143d2f302de29c89b3[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Wed May 20 15:28:57 2020 -0400

    [squashme] Build MacOS wheels

[33mcommit 22e3687752d1c1164f5a29c11fcf17019c9dc511[m
Merge: 74321527 2e820695
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 18 17:31:39 2020 -0700

    Merge pull request #591 from google/ts
    
    Update typeshed to 5fe6a5ba8b5d362f9339d5fef4d31ba1704c8924.

[33mcommit 2e820695104dd5e93d2297fd12c1e26a5c43b3df[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 18 16:09:33 2020 -0700

    Update typeshed to 5fe6a5ba8b5d362f9339d5fef4d31ba1704c8924.

[33mcommit 74321527bdeb340d1c779dc6e2304a4d135cee64[m
Merge: 1def3fe3 efcc9a11
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 18 17:05:01 2020 -0700

    Merge pull request #592 from google/google_sync
    
    Google sync

[33mcommit efcc9a11c192c5ffdea8318f21b0ed522a8fb354[m
Author: rechen <rechen@google.com>
Date:   Mon May 18 16:15:38 2020 -0700

    Rebucket a test containing type annotations.
    
    *sigh*
    
    PiperOrigin-RevId: 312174723

[33mcommit dd4712df9a72322ed1af2bd38f84abdbf42daf18[m
Author: rechen <rechen@google.com>
Date:   Mon May 18 15:01:36 2020 -0700

    Support callback protocols.
    
    Supports matching classes and functions against protocols that define a
    __call__ method. The matching suffers from the pre-existing limitations of our
    matcher (overly permissive on classes and function signatures that can't be
    expressed as callables). This feature is needed in order to import the newest
    version of typeshed.
    
    PiperOrigin-RevId: 312161014

[33mcommit 3841ae95cd20e9dcdd5d0509d09e1f800aaa124e[m
Author: mdemello <mdemello@google.com>
Date:   Mon May 18 14:51:12 2020 -0700

    Serialize metrics as json rather than yaml.
    
    Adds some custom serialization/deserialization code, taking advantage of the
    fact that all instance vars of metrics are things that json can serialize, so
    we don't need to write custom JsonEncoder and JsonDecoder classes per Metric
    subclass.
    
    Also adds validation for metric names read in from a file, and removes the six
    dependency from metrics_test.
    
    PiperOrigin-RevId: 312158876

[33mcommit ff3834cbc371238c93e1168a545da37f81a6c904[m
Author: tsudol <tsudol@google.com>
Date:   Mon May 18 12:00:43 2020 -0700

    Only print "In assignment of type" error message when it's interesting.
    
    #pyfixit
    
    PiperOrigin-RevId: 312125913

[33mcommit 36a66b3c19b50f6358014cb0acd64f08bd02716c[m
Author: rechen <rechen@google.com>
Date:   Mon May 18 10:42:03 2020 -0700

    Fix: in Python 3, classes with no parents implicitly inherit from object.
    
    I found this bug while trying to import a new version of typeshed.
    
    I also added more information to an AssertionError in convert.py to make
    debugging easier when a pytd node is improperly constructed.
    
    #pyfixit
    
    PiperOrigin-RevId: 312109396

[33mcommit d254b5f72459f51a0f03df3cf5224baae01d9a60[m
Author: rechen <rechen@google.com>
Date:   Fri May 15 15:29:22 2020 -0700

    Fix a recursion error caused by get_atomic_value calling str() on a dict.
    
    PiperOrigin-RevId: 311812581

[33mcommit 871fadb1d8e570e5fbcf4cef93eef34f12bfa836[m
Author: rechen <rechen@google.com>
Date:   Fri May 15 13:51:53 2020 -0700

    Fix: handle typing.Type in convert.py.
    
    When a module re-exports a type from another one:
      X = other_mod.X
    what ends up being written to the pyi file is:
      X: Type[other_mod.X]
    
    pytype was crashing on this. I couldn't reproduce the problem locally, so it
    might have something to do with pickling and late types. I confirmed that the
    crash disappears after this fix.
    
    PiperOrigin-RevId: 311795396

[33mcommit ead900833408aa1547672a929435053f79712892[m
Author: rechen <rechen@google.com>
Date:   Fri May 15 08:31:58 2020 -0700

    Print out the errorlog when self.Infer() finds unexpected errors.
    
    self.Check() already does this. Being able to see unexpected errors without
    grepping through the stderr log is a lot nicer.
    
    PiperOrigin-RevId: 311734437

[33mcommit 1def3fe37edfc775f35ad2b96f6776268a5e689e[m
Merge: bef6b3f8 1d2ecacd
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 14 17:39:00 2020 -0700

    Merge pull request #588 from google/google_sync
    
    Google sync

[33mcommit 1d2ecacd7b434938c826def183bc6eee7d7ee639[m
Author: rechen <rechen@google.com>
Date:   Thu May 14 17:09:12 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 311635407

[33mcommit 9de3c4625381638edb2458865a67f216ba7b8f7d[m
Author: rechen <rechen@google.com>
Date:   Thu May 14 15:37:29 2020 -0700

    Use vm.annotated_locals in the __annotations__ dict.
    
    We were tracking annotations in both annotated_locals and __annotations__. This
    change creates a special dict subclass, AnnotationsDict, for __annotations__,
    which does not track annotations in its members but does keep a reference to
    annotated_locals, so annotations are tracked in only a single place
    (annotated_locals) but also available in __annotations__.
    
    Also:
    * Removes replace_classvars in favor of keeping the ClassVar annotation but
      replacing it with its contained type when instantiated and in pyi output,
      since replace_classvars was now replacing our only ClassVar reference before
      attrs_overlay could process it.
    * Removes init_from_annotations. It's clearer to call get_annotations_dict
      followed by init_class.
    * Uses classgen.get_class_locals() rather than __annotations__ to build
      typing.NamedTuple classes.
    PiperOrigin-RevId: 311618699

[33mcommit bef6b3f837553bea4742b5c6d82a402bce316021[m
Merge: 4448668c 0a83538e
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 14 16:07:25 2020 -0700

    Merge pull request #559 from pganssle/check_38_support
    
    Initial stab at Python 3.8 support

[33mcommit 4448668c6a688c03adc398ec1fa218b089daf5dd[m[33m ([m[1;33mtag: 2020.05.13[m[33m)[m
Merge: f3851440 0ef0c13f
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 13 15:08:24 2020 -0700

    Merge pull request #586 from google/google_sync
    
    Prepare for a PyPI release.

[33mcommit 0ef0c13f8ac3e7f08c70fa42d06a551b1db748c0[m
Author: rechen <rechen@google.com>
Date:   Wed May 13 14:28:02 2020 -0700

    Prepare for a PyPI release.
    
    The new version of pytype looks good (I'm just waiting for a few more Rosie CLs
    to be submitted before releasing it internally), so we can go ahead with the
    PyPI release.
    
    PiperOrigin-RevId: 311404665

[33mcommit f385144047bf2b94edb78b428f0a4cca4e51e3d4[m
Merge: b0fb966a 59440a9c
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 13 14:04:00 2020 -0700

    Merge pull request #585 from ammaraskar/patch-1
    
    Add a top-level .gitignore

[33mcommit 59440a9ce0002d7ffe41df1d60c0b5f4655202ee[m
Author: Ammar Askar <aaskar@google.com>
Date:   Wed May 13 10:27:43 2020 +0000

    Add a top-level .gitignore

[33mcommit b0fb966a00e0556b5f1a25c752a1776ab350b51e[m
Merge: 3769e8fa 35faee50
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 11 16:44:52 2020 -0700

    Merge pull request #584 from google/google_sync
    
    Google sync

[33mcommit 35faee5068a07d93f310d4f09919cf545d4873a7[m
Author: rechen <rechen@google.com>
Date:   Mon May 11 16:09:15 2020 -0700

    Fix a Travis test error (Ellipsis does not exist in external py2).
    
    PiperOrigin-RevId: 311014291

[33mcommit b00b03dd31bc7f31a304a513a58531724c00a028[m
Author: rechen <rechen@google.com>
Date:   Mon May 11 15:49:02 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 311010341

[33mcommit 835cf1754468bc871bc17f40082260eb017c4da2[m
Author: rechen <rechen@google.com>
Date:   Mon May 11 15:04:50 2020 -0700

    Add a new pytype flag, --check-variable-types.
    
    When this mode is enabled, pytype checks variable values against annotations.
    Implemented by calling bad_matches every time an annotated value is stored and
    using annotated_locals to look up annotations.
    
    Since dataclasses is part of the stdlib, I modified the matcher to handle
    dataclasses.field so dataclass type-checking can (mostly) be handled like
    normal variable checking. (None is still special.) I kept all logic for the
    third party attrs library in its overlay.
    
    I enabled check_variable_types by default for our tests, to help avoid any
    behavior regressions during the (likely lengthy) release process. The attrs and
    dataclasses tests have check_variable_types disabled in order to test that the
    checking for these modules continues to work as expected even without it.
    
    I punted on a couple of things:
    * Class attributes are still not type-checked.
    * In some cases, annotations should probably replace inferred values. For
      example, in:
        class Foo:
          v: float
          def __init__(self):
            self.v = 0
      Foo.v should get a type of float, not int, in the type stub. Or in:
        x: Any = None
        for ...:
          x = <some complicated thing pytype infers the wrong type for>
      x should be treated as having type Any, not Union[Any, <some wrong thing>].
    
    This change increases the type-checking time for my sample file,
    blobstore2/access/signature/testdata/gen_v4_sig_from_canonical_request.py, from
    8s to 10s.
    
    For https://github.com/google/pytype/issues/323.
    
    PiperOrigin-RevId: 311001938

[33mcommit 69cf1adc98f4a09563ec7ac67b9f04e6cdc805c6[m
Author: rechen <rechen@google.com>
Date:   Mon May 11 14:25:11 2020 -0700

    Fix a crash caused by overlay_utils.Param being passed an empty type.
    
    PiperOrigin-RevId: 310993259

[33mcommit 1681fe44c11afdaf7bdd12a9ea4a9991183b08b0[m
Author: rechen <rechen@google.com>
Date:   Mon May 11 13:12:03 2020 -0700

    Report more precise line numbers for [annotation-type-mismatch].
    
    PiperOrigin-RevId: 310977453

[33mcommit 7c3d6559a2fc2aea806a0bee51093d6c000ba359[m
Author: rechen <rechen@google.com>
Date:   Mon May 11 13:03:48 2020 -0700

    Turn vm.Local.typ into a variable.
    
    This lets us track changes to annotations, so annotated_locals can handle all
    variable annotations, not just well-behaved attrs and dataclasses annotations.
    
    I've been using
    blobstore2/access/signature/testdata/gen_v4_sig_from_canonical_request.py, a
    file that happens to contain a lot of local variable annotations, to check the
    worst-case performance impact of my changes. This one increases the checking
    time from 4s to 8s due to the creation of additional variables.
    
    PiperOrigin-RevId: 310975815

[33mcommit ac3f596ccbfa12d0c31f0443ea8af823223523af[m
Author: rechen <rechen@google.com>
Date:   Sat May 9 00:07:38 2020 -0700

    In annotated_locals, record annotations instead of their instantiated values.
    
    This makes them a little easier to reason about.
    
    PiperOrigin-RevId: 310692264

[33mcommit a0cfeddca279765663c3f0eecf6fbadf79625a70[m
Author: rechen <rechen@google.com>
Date:   Fri May 8 14:46:42 2020 -0700

    Do a few more small cleanups around annotation handling.
    
    * Update an out-of-date comment on local_ops and annotated_locals.
    * Add properties current_local_ops and current_annotated_locals for easier
      access to the current frame's locals.
    * Do a slight refactor to remove a layer of nesting in Attrs.decorate.
    * Consistently use `orig` instead of `value` when they refer to the same thing.
    * When a type annotation exists, only overwrite cls.members[name] if there is
      no default. (When there is a default, the annotation has already been
      instantiated and stored.)
    * Remove unnecessary default values from {Attrib,Field}Instance constructors.
    * Move get_type_from_default from classgen into attr_overlay; dataclass_overlay
      can instead use the default directly. Makes it a module-level method so that
      it can be called in AttribInstance.
    * Remove typ field from FieldInstance.
    
    PiperOrigin-RevId: 310632912

[33mcommit db32c3acf56928dad238c6e7823f8cd4ef30deee[m
Author: mdemello <mdemello@google.com>
Date:   Thu May 7 17:52:07 2020 -0700

    Fixes for attr default values:
    
    - Check the default against the declared type
    - If the default is a decorated method, call it and use the return type.
    
    Also fix a test where we mixed up the signatures of @x.default and @x.validator
    
    PiperOrigin-RevId: 310471924

[33mcommit 38e78f7f8c88634d9cadacd14718305cea5f73f3[m
Author: mdemello <mdemello@google.com>
Date:   Thu May 7 15:03:30 2020 -0700

    Use typeshed's definition of sum()
    
    Our version used a typevar with bound=complex, which didn't allow for classes
    implementing their own __add__ function. Typeshed's version uses a generic
    typevar, but if we want to add a SupportsAdd protocol we should probably do it
    upstream first and then pull it in.
    
    PiperOrigin-RevId: 310444131

[33mcommit 3769e8fa54324051f5f33378d2959423e23691f2[m[33m ([m[1;33mtag: 2020.05.07[m[33m)[m
Merge: c3cf02e1 d8c2e38a
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 7 13:33:01 2020 -0700

    Merge pull request #582 from google/google_sync
    
    Google sync

[33mcommit d8c2e38aa19b5baa37885f8c0d678e15b4047c15[m
Author: rechen <rechen@google.com>
Date:   Thu May 7 13:05:43 2020 -0700

    Prepare for a PyPI release.
    
    PiperOrigin-RevId: 310421416

[33mcommit 9e9c93aae34efcbec71b3c7c9a5bc11e896d7c0f[m
Author: rechen <rechen@google.com>
Date:   Wed May 6 15:07:07 2020 -0700

    Undo an optimization based on a mistaken assumption.
    
    PiperOrigin-RevId: 310235574

[33mcommit 0b3226b8217ffd2338c5e2b55c2f2aeb43caaa78[m
Author: rechen <rechen@google.com>
Date:   Wed May 6 11:56:57 2020 -0700

    Refactor some annotation processing code.
    
    * Moves "Must be constant" and "using type parameter in variable annotation"
      checks from init_annotation_var to process_annotation_var, so they happen
      when an annotation is first processed rather than whenever we get around to
      instantiating it. For the latter, I had to add an `is_var` parameter to
      indicate whether the annotation is a variable annotation. Previously, we
      implicitly assumed that only variable annotations call init_annotation_var.
    * Makes process_annotation_var return a single value rather than a variable.
      Renames the method to extract_annotation to reflect the change.
    * Deletes init_annotation_var, since the previous changes had turned it into a
      trivial wrapper around vm.init_class.
    
    PiperOrigin-RevId: 310198547

[33mcommit e29074ddaa18cb9e4a0e6f8a03424a3c4142326b[m
Author: rechen <rechen@google.com>
Date:   Wed May 6 11:46:24 2020 -0700

    Cleanup: always use ambiguous_annotation to report ambiguous annotations.
    
    We were sometimes using ambiguous_annotation and sometimes invalid_annotation.
    Both log an [invalid-annotation] error, but always using ambiguous_annotation
    keeps the format consistent.
    
    PiperOrigin-RevId: 310196409

[33mcommit a31f36920ceb6fc6c34435e6d73f524fe4f2fdb6[m
Author: rechen <rechen@google.com>
Date:   Wed May 6 11:36:19 2020 -0700

    Cleanup: use .formal to check for the presence of type parameters.
    
    I realized that the .formal attribute tells you whether an annotation contains
    type parameters, so we don't need to call get_type_parameters. I also improved
    the docstrings for get_type_parameters and has_type_parameters.
    
    PiperOrigin-RevId: 310194384

[33mcommit a21ebd3387b34af45f0f877e4dcb048f5873e3e7[m
Author: rechen <rechen@google.com>
Date:   Tue May 5 15:59:14 2020 -0700

    Make bad_matches less expensive.
    
    For the linked bug, I want to call bad_matches a lot more frequently in order
    to type-check assignment values against annotations, but bad_matches was using
    node.HasCombination(), which can be slow.
    
    * Defers calling of node.HasCombination() until a bad match has been (possibly)
      found, so potential slowness only occurs in error cases.
    * Skips HasCombination() if a variable has only one binding. It should be very
      rare for a variable to be completely unreachable.
    * Avoids using bad_matches for purposes other than error logging.
    
    PiperOrigin-RevId: 310038493

[33mcommit c3cf02e1c3fc49c1be9494822fa4248f40532e61[m
Merge: 9c6e5f1b 4ec8cbb5
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 4 21:47:20 2020 -0700

    Merge pull request #579 from google/google_sync
    
    Google sync

[33mcommit 4ec8cbb5d237c7c5c1ac878f28bf929b19ae6975[m
Author: rechen <rechen@google.com>
Date:   Mon May 4 18:18:28 2020 -0700

    Add tests for annotated decorators that can also serve as examples.
    
    Creates a suite of tests for ensuring that pytype passes functions and classes
    through annotated decorators as expected. We can also point users at these
    tests as documentation for how to annotate decorators.
    
    PiperOrigin-RevId: 309858745

[33mcommit ee90a8d63bf0141e30d3272665595098bf9adc8f[m
Author: rechen <rechen@google.com>
Date:   Fri May 1 13:07:18 2020 -0700

    Fix crash caused by attr.s being passed a decorated class.
    
    PiperOrigin-RevId: 309459874

[33mcommit 3b98201cd915d5bd8c41d1c2ecec5e79e055b23c[m
Author: rechen <rechen@google.com>
Date:   Fri May 1 12:49:00 2020 -0700

    Improve annotated decorators' handling of classes.
    
    With this change, annotated decorators can pass through classes in the same
    module just like they can functions. (Decorating classes in different modules
    already worked correctly.)
    
    PiperOrigin-RevId: 309456542

[33mcommit 3ddef87fb5bc912280d9b3b0d3721b824ff9e598[m
Author: mdemello <mdemello@google.com>
Date:   Thu Apr 30 17:12:25 2020 -0700

    Remove target python 3.4 support
    
    Also removes a bunch of trivial checks from opcodes_test - we don't need to
    verify every entry in a map; a few spot-checks should be enough.
    
    PiperOrigin-RevId: 309329124

[33mcommit 7e8dd17dec0a10b497b16c31882d3fbf884bc9d5[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 30 16:26:48 2020 -0700

    Fix a "No MAKE_FUNCTION opcode" error triggered by overloads.
    
    For some reason, for overloaded functions the MAKE_FUNCTION opcode seems to be
    on the line of the "def" or "class" opening rather than the last significant
    line of the decorator.
    
    PiperOrigin-RevId: 309321787

[33mcommit 91319e7da3a05757b478a692b8ac70af40cbfb54[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 30 15:13:48 2020 -0700

    Fix a crash in typing.overload inference.
    
    output.py was using the signature from a function's implementation to generate
    pytd output for its overloads, leading to crashes when the overload's signature
    differed significantly from the implementation. Fixed by iterating through the
    overloads in output.py rather than in
    InterpreterFunction.get_call_combinations, since moving the loop outward means
    that the entire function is replaced for each overload.
    
    This change lets us stop saving/passing around the signature in various places,
    since we can get it directly from the function again.
    
    I also fixed a few places where I noticed InterpreterFunction.call using
    self.signature rather than the signature from the current overload.
    
    PiperOrigin-RevId: 309308762

[33mcommit 9c6e5f1bdbb037f25cb84475a7ccafa5b2b14988[m
Merge: ee51995a 5d9e3494
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 30 15:32:41 2020 -0700

    Merge pull request #577 from google/google_sync
    
    Google sync

[33mcommit 5d9e3494ee20bae9532424fe8ee871266e4102d9[m
Author: tsudol <tsudol@google.com>
Date:   Thu Apr 30 14:37:02 2020 -0700

    Make sure args.posargs can be unpacked in Filters.
    
    This prevents a crash when there are no posargs, e.g. filter(*args, **kwargs).
    
    PiperOrigin-RevId: 309301817

[33mcommit 796b4f0040ccd108759f6279277c2fb1f0221b59[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 30 12:21:57 2020 -0700

    Move a skipped test into bugs/.
    
    Creates a "bug" macro to save some typing.
    
    PiperOrigin-RevId: 309275841

[33mcommit cd8a5fca22486d871457dfa8316574799233d1af[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 30 12:11:51 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 309273794

[33mcommit 0971e8f549a94322a0a96d31389c702c6dd5c096[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 29 19:09:59 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 309144265

[33mcommit 7518263f82342d7935e055c3c1e5bc99085439af[m
Author: mdemello <mdemello@google.com>
Date:   Wed Apr 29 18:03:43 2020 -0700

    FIX: We need to check that all views in get_views([x]) contain x
    
    PiperOrigin-RevId: 309136217

[33mcommit ce7920db698561b37ef600aa9604eb0720d8cc5d[m
Author: mdemello <mdemello@google.com>
Date:   Wed Apr 29 17:36:16 2020 -0700

    FIX: Don't crash if abstract.Empty is passed to special_builtins.Filter
    
    PiperOrigin-RevId: 309132232

[33mcommit ee51995a1c5937cb4ebee291acb2e049fb0f81cc[m
Merge: 5785a59e 9788f9c6
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 27 16:18:12 2020 -0700

    Merge pull request #576 from google/test
    
    Use dir() instead of __dict__ to find test methods.

[33mcommit 5785a59e191a79afa8618c7b624b9ad2af2b3cd4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 27 15:53:16 2020 -0700

    Add back deleted requirements.txt.
    
    This file was added by PR #569, then accidentally deleted in commit
    40aea2a due to a bad google3 -> GitHub export configuration.

[33mcommit 9788f9c66bc2e96351ec9fe2ee0420edfc1db20d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 27 15:48:03 2020 -0700

    Use dir() instead of __dict__ to find test methods.
    
    When __dict__ is used, subclasses don't pick up inherited test methods.
    Since TargetIndependentTest subclasses test classes to add Python 2
    testing, this bug meant that there were a whole bunch of 2and3 tests
    that we were running in Python 3 only.

[33mcommit 5c499b1f9154d26e8220fe26432c1a94766650c0[m
Merge: 42609a00 749713dd
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 27 15:42:32 2020 -0700

    Merge pull request #575 from google/google_sync
    
    Google sync

[33mcommit 749713dd943a4eff021c99de3b671498c04b8e6f[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 27 15:15:53 2020 -0700

    Fix: re-bucket tests that use type annotations.
    
    Due to a bug in our open-source tests, TargetIndependentTest methods are not
    being run with Python 2 on Travis. This change fixes tests that would fail once
    the bug is fixed; I'll follow up with a PR to add back the missing testing.
    
    PiperOrigin-RevId: 308708365

[33mcommit 281331aba0acb3e0ab95e0efa352673c68c3846f[m
Author: mdemello <mdemello@google.com>
Date:   Mon Apr 27 15:13:53 2020 -0700

    Add special builtins support for filter(None, xs)
    
    Removes None from literal lists and tuples, and from union type parameters.
    
    PiperOrigin-RevId: 308708003

[33mcommit 975d517aa018969e926b160ada30573ee1e4e02a[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 27 13:06:50 2020 -0700

    Copy whitespace fix from PR #569.
    
    PiperOrigin-RevId: 308682365

[33mcommit 64cd9a5872c0b3294e57f3af20046540f948a29a[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 27 12:58:05 2020 -0700

    Don't confuse inner dataclasses with the same name.
    
    Instead of using defaultdicts for local_ops and annotated_locals, set them to
    empty values when a frame is created. This way, if a second frame is created
    with the same name, it does not accidentally retain values from the first.
    
    Fixes https://github.com/google/pytype/issues/572.
    
    PiperOrigin-RevId: 308680692

[33mcommit ee11c9445e1de6ca78f425ed33c45d66f0bbb625[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 27 10:10:21 2020 -0700

    Add __matmul__ and friends to numpy.ndarray.
    
    Fixes https://github.com/google/pytype/issues/571.
    
    PiperOrigin-RevId: 308644229

[33mcommit 5f75cdbe204e88a71eaf917d11be99f8c723f72e[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 23 11:40:36 2020 -0700

    Stop hardcoding Python 3.6 in devtools/python/blaze/pytype.
    
    PiperOrigin-RevId: 308097089

[33mcommit 40aea2a5092e4570c60ef83317be1695e7115019[m
Author: mdemello <mdemello@google.com>
Date:   Thu Apr 23 11:07:25 2020 -0700

    FIX: Display a helpful error rather than crashing when returning a typevar
    
    Now checking
    
      def f(x: T) -> T: return T
    
    raises the error
    
      bad option in return type [bad-return-type]
                 Expected: T
        Actually returned: `TypeVar`
    
    PiperOrigin-RevId: 308089963

[33mcommit 42609a00e024a0caa5cac149338c87ca8449d2ec[m
Merge: 584c8726 0af87e06
Author: Rebecca Chen <rechen@google.com>
Date:   Sun Apr 26 10:09:41 2020 -0700

    Merge pull request #569 from google/req
    
    Add a requirements.txt.

[33mcommit 0af87e06282e6189ea698adad83d22812239bef2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 23 14:51:31 2020 -0700

    Add a requirements.txt.
    
    With this, we can run `pip install -r requirements.txt` to get all the
    dependencies for building and testing the GitHub code locally.
    Previously, I was looking at .travis.yml every time to figure out what
    to install.
    
    Based on
    https://packaging.python.org/discussions/install-requires-vs-requirements/,
    setup.py's install_requires and requirements.txt accomplish different
    purposes, so I haven't tried to keep them in sync.
    
    I'm also hoping that adding this file will fix our broken dependency
    graph, which currently shows no dependencies and no dependents:
    https://help.github.com/en/github/visualizing-repository-data-with-graphs/listing-the-packages-that-a-repository-depends-on.
    
    I also deleted a stray newline in CONTRIBUTING.md, because why not?

[33mcommit 584c8726c62abd15aed2699700179f891ceaeb79[m[33m ([m[1;33mtag: 2020.04.22[m[33m)[m
Merge: ec312daf 60f4e968
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 22 16:48:34 2020 -0700

    Merge pull request #567 from google/google_sync
    
    Google sync

[33mcommit 60f4e968a7b6852acf2b4ad7f3d9a846fdef51d8[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 22 15:56:56 2020 -0700

    Prepare for a PyPI release.
    
    PiperOrigin-RevId: 307920522

[33mcommit 5d60ea19c00af79f653b45ac317755f66060528f[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 22 13:44:53 2020 -0700

    Make all test methods snake case.
    
    This is to fix a minor annoyance of mine, which is when a single test file uses
    both camel case and snake case test names.
    
    A couple years ago, I tried to fix this problem by updating all the tests so
    that each file used whatever style had previously been more prominent, but
    files have regressed over time. Maybe things will stay consistent if everything
    uses the same style.
    
    I made this change by replacing uppercase letters with an underscore followed
    by the lowercase letter in all test methods, then manually editing silly things
    like 'test_m_r_o' to remove unnecessary underscores.
    
    I also fixed some lint errors. Lint now warns about unreachable code in a test,
    which is pretty cool.
    
    PiperOrigin-RevId: 307889586

[33mcommit ec312daf3c123fb361e84aec5a7daf36c1e7e511[m
Merge: 492b5d96 d897b3fd
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 21 18:31:48 2020 -0700

    Merge pull request #566 from google/google_sync
    
    Google sync

[33mcommit d897b3fdd05edb99efdb37d70c0156e16cdc0d03[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 21 17:03:46 2020 -0700

    Don't report [invalid-typevar] when type() is called on a TypeVar.
    
    If type() is called on a value instantiated from an annotation, we can end up
    passing a TypeVar to a function, which triggers an [invalid-typevar] error. To
    avoid this, TypeNew now removes typevars from its return value.
    
    ParameterizedClass(Type) already had similar logic, so I refactored both places
    to use the same code and improved it to not lose container types.
    
    Fixes https://github.com/google/pytype/issues/209.
    
    PiperOrigin-RevId: 307710392

[33mcommit e9b6cb2588462a9dda8d5b38e415ab916be0288c[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 21 13:20:39 2020 -0700

    Add missing Callable attributes.
    
    Now that we replace types.FunctionType with Callable, the latter needs to
    declare everything in this list of attributes that isn't already in object:
    https://github.com/python/typeshed/blob/ec572510106125376f592298276527aafa045ed8/stdlib/3/types.pyi#L26-L34.
    
    PiperOrigin-RevId: 307667936

[33mcommit 93c7791397e290ebcd05f3f80c5b8f6f71020014[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 21 12:40:28 2020 -0700

    Fix another place where `strict=False` was accidentally dropped.
    
    PiperOrigin-RevId: 307660540

[33mcommit c12ac83b8bf068715d3a0674ac614ae64f6d87fc[m
Author: mdemello <mdemello@google.com>
Date:   Mon Apr 20 17:28:59 2020 -0700

    Fix some crashes in the indexer.
    
    * Don't crash when pytype emits duplicate opcode traces for a class def.
    * Don't crash when the callgraph gets a function of type <str PyTDClass(str)>
    
    No tests because I was unable to get a minimal repro for either case.
    
    PiperOrigin-RevId: 307509651

[33mcommit f07490dbbd3702421627d567814deca20c9b19b4[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 20 15:36:18 2020 -0700

    Allow functions to match types.FunctionType.
    
    Also copies FunctionType.__init__ to Callable.__init__ so that instantiating
    FunctionType still works.
    
    PiperOrigin-RevId: 307490233

[33mcommit 492b5d9637a933e8a1b9adc794e4245248b9d125[m
Merge: 4772ad6f b0ee0821
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 20 15:49:29 2020 -0700

    Merge pull request #565 from google/google_sync
    
    Google sync

[33mcommit b0ee0821fb0ce8f8ab5a2f7e2aa62b7e2c5520e5[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 20 14:44:48 2020 -0700

    Fix a Python 3.7 failure in vm_test.
    
    I ran the Travis tests with all of our changes except the last two from today,
    and of course one of them fails a test due to a bytecode change in 3.7 =/
    
    PiperOrigin-RevId: 307480258

[33mcommit dce4ff4be89374c72e05010ced56a9ca79d34ba5[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 20 13:41:22 2020 -0700

    Fix a couple of Travis test failures.
    
    * "googletest" and "unittest" being different lengths caused a lint error about
      wrong indentation.
    * Variable annotation tests can't run in 3.5.
    I discovered that unittest.skip can be used on an entire class, so I removed
    our ugly `del` hacks. Because of the unusual way the Travis tests are set up,
    https://github.com/google/pytype/pull/564 is needed to make class-level
    skipping work externally.
    
    The opensource tests pass on my machine after these fixes.
    
    PiperOrigin-RevId: 307467280

[33mcommit e8c894abaabeb9738c6676c73afa82404d9c7157[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 20 12:58:23 2020 -0700

    Use bytecode to adjust type comment and decorator line numbers.
    
    This fixes some old bugs we had open for [ignored-type-comment] errors caused
    by various corner cases. A little late, now that most projects probably don't
    have any reason to use type comments instead of PEP 526-style annotations
    anymore, but it's still nice to finally get this right =)
    
    While changing blocks.py to keep testFunctionCommentOnColon working, I
    accidentally got function type comments on the same line as the `def` working
    as well, so I added a test for it.
    
    PiperOrigin-RevId: 307459132

[33mcommit f135836859e1c7856565ecf19a3ed3102f2a2797[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 20 12:18:40 2020 -0700

    Fix: make class attribute filtering less strict and faster.
    
    When I deleted get_annotated_values(), I accidentally changed:
      def get_annotated_values(...):
        for value in var.FilteredData(self.vm.exitpoint, strict=False):
          yield value, False
      def _class_to_def(...):
        for value, is_annotation in self.get_annotated_values(...):
    to:
      def _class_to_def(...):
        for value in member.FilteredData(node):
    with two undesirable effects:
    * Overly strict filtering causing attribute errors.
    * A slight performance regression.
    PiperOrigin-RevId: 307451149

[33mcommit baf29b07434f4f4cbadb7fd4016ef837f8836bd1[m
Author: Sourav Badami <souravbadami@gmail.com>
Date:   Fri Apr 17 15:01:31 2020 -0700

    Strays 'nothing' type for empty tuple inference. (#563)
    
    Fixes #549.
    
    Resolves #563
    
    PiperOrigin-RevId: 307121340

[33mcommit 801e7c4afe382f68761733286025322dc222f8fd[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 17 14:30:02 2020 -0700

    Improve detection of variable annotations by using token types.
    
    Instead of matching a regex, detects variable annotations by checking for
      NAME COLON [annotation] EQUAL
    In the end, I gave up on supporting things like `if __random__: v: int = 0`
    because it introduced too many false positives.
    
    PiperOrigin-RevId: 307115591

[33mcommit 257b8ea64bf14d3b5568778272ecc1d32bc8aa22[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 17 13:30:41 2020 -0700

    Fix an "Appears only once in the signature" error.
    
    Bitten again by the fact that `x |= y` looks like a shortening of `x = x | y`
    but is in fact an in-place operation >.>
    
    PiperOrigin-RevId: 307104858

[33mcommit 36be34f45cb00a692c6cb5c278cc98500c252a13[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 17 13:05:57 2020 -0700

    Fix: distinguish between one-line functions and docstring-only functions.
    
    Previously, if we had a one-line function followed by a docstring-only one:
    
      def f(): pass
      def g():
        """Docstring."""
    
    we associated the docstring (and any type comment on the docstring-ed function)
    with both functions.
    
    PiperOrigin-RevId: 307100532

[33mcommit 963002f55aa0e747edd44bf07a32b07f2e881dcc[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 15 16:09:17 2020 -0700

    Fix two bugs in variable annotation handling.
    
    * `else: x = 0` is not an annotated assignment.
    * Multiline assignments need their line numbers adjusted.
    
    On a side note, I like this method of adjusting line numbers better than our
    previous regex-based solution. In a followup, I'll see if I can use it for type
    comments and decorators as well.
    
    PiperOrigin-RevId: 306739518

[33mcommit 95bbb6d8ba9af21ea8a5e07554843260b1a9d142[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 14 19:58:44 2020 -0700

    Unify pytype's two ways of handling variable annotations.
    
    After my change to support variable annotations inside functions, we had two
    overlapping ways of handling variable annotations:
    * For annotated assignments that matched directors._VAR_ANNOTATION_RE, we
      recorded the annotation operation in vm._pop_and_store() and applied the
      annotation as if it were a type comment.
    * For annotations outside function bodies, we used vm._store_annotation() to
      record the annotation operation and apply the annotation.
    Annotations that both matched the regex and were outside function bodies ended
    up being recorded and applied twice. With this change, all annotated
    assignments are handled by _pop_and_store and ignored by _store_annotation().
    Bare annotations are still handled by _store_annotation().
    
    An effect of this change is that we rely less on the __annotations__ dict and
    more on the values of variables for determining their types, so I deleted
    output.get_annotated_values() and tweaked some code in dataclasses_overlay that
    assumed types would be derived from __annotations__.
    
    In annotations_util.py, I fixed a couple inconsistencies in how
    apply_annotation handles errors vs. init_annotation_var.
    
    _VAR_ANNOTATION_RE had to be fixed to handle more annotation patterns.
    
    PiperOrigin-RevId: 306565563

[33mcommit b57cc280959d570ec9607ae029597793fff703cf[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 14 14:13:58 2020 -0700

    Track variable annotations in addition to type comments in directors.
    
    Variable annotations inside function bodies do not appear in the bytecode, so
    we were accidentally ignoring them. This fix tracks variable annotations in
    directors.py, reusing much of the logic for tracking type comments.
    
    Makes some type comment-specific names more general, to reflect that we're now
    also handling variable annotations, and removes the [invalid-type-comment]
    error class in favor of [invalid-annotation].
    
    PiperOrigin-RevId: 306512035

[33mcommit 2597b884e735e564723cf5d7cf3c99afd44fc406[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 14 13:31:42 2020 -0700

    Clean up and refactor some directors-related code.
    
    * Renames directors.SkipFile to directors.SkipFileError.
    * director.type_comments was a map from line number to a (code, comment) tuple.
      Removes `code`, which was unused.
    * Refactors Director._parse_source to split up the line and token processing
      into several sections.
    * Removes a redundant `suffix = suffix` line in errors.py and a print_function
      import that is unneeded in Python 3.
    * Simplifies a convoluted set construction in vm.py.
    
    PiperOrigin-RevId: 306503871

[33mcommit 4557bd8a5e8ed0480316805b229f5ebe505e501d[m
Author: mdemello <mdemello@google.com>
Date:   Mon Apr 13 20:08:51 2020 -0700

    Track when functions and classes have decorators applied to them.
    
    Also fixes the director to allow whitespace with no isolated closing bracket
    between a decorator and its corresponding function.
    
    PiperOrigin-RevId: 306363644

[33mcommit eb1f7216ea29b92d05c1d426ebb93d9b23910e89[m
Author: mdemello <mdemello@google.com>
Date:   Mon Apr 13 15:42:28 2020 -0700

    In order to match the bytecode, we need to associate a decorator with the last
    'significant' line before the def|class declaration it decorates.
    
    PiperOrigin-RevId: 306323648

[33mcommit 5c2be2e4b578e1f0aad5ad8c72c07dbc00109622[m
Author: mdemello <mdemello@google.com>
Date:   Mon Apr 13 11:39:30 2020 -0700

    Track decorators in the director.
    
    This is the first step towards better decorator support. The next step will be
    to add an is_decorator annotation to objects, using the director to confirm
    that something is a decorator (since the bytecode does not retain that information).
    
    PiperOrigin-RevId: 306275265

[33mcommit 4772ad6fe89f4df75ae3d08e7374f68074175d4a[m
Merge: 804fa97e dde53620
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 17 18:28:51 2020 -0700

    Merge pull request #564 from google/skip
    
    Support skipping an entire TestCase.

[33mcommit dde53620e9f47a43bd02a3e2c9472d6c64800468[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 17 18:06:55 2020 -0700

    Support skipping an entire TestCase.
    
    Classes should be skippable just like methods:
    https://docs.python.org/3/library/unittest.html#skipping-tests-and-expected-failures.
    Make this feature work with our unusual test setup.

[33mcommit 804fa97e7f9208df2711976085a96f756b3949e6[m
Merge: d5588991 e2c65487
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Apr 11 12:32:19 2020 -0700

    Merge pull request #560 from google/google_sync
    
    Google sync

[33mcommit e2c654874350d21bfea47814e2fb987696555d56[m
Author: Sourav Badami <souravbadami@gmail.com>
Date:   Fri Apr 10 15:59:09 2020 -0700

    Skips built in functions while merging pyi. (#556)
    
    Fixes #550.
    
    Resolves #556
    
    PiperOrigin-RevId: 305960694

[33mcommit 8e3363e1f1d06ea296c2f615b8421e92e29774c3[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 10 14:32:32 2020 -0700

    Add tests for __future__.annotations
    
    Discovered while adding tests that we still needed to add this feature to our
    internal __future__.pytd. While I was at it, I modernized some of the syntax in
    the pytd file.
    
    PiperOrigin-RevId: 305945714

[33mcommit cc1432c32b2843231ca03914bf57fde71f352fe4[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 9 22:35:23 2020 -0700

    Make (func: T) -> T work properly in the same file.
    
    Previously, when a function was annotated like this, the annotations worked
    properly when the function was used in a different file but not the same file.
    
    I changed the file's linting to py3 so I could use super() with no arguments
    and fixed a couple of new warnings about deprecated inspect methods.
    
    PiperOrigin-RevId: 305828065

[33mcommit c0b543007d03f86f5ba102c129035fe615a0ede3[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 9 10:08:42 2020 -0700

    Fix a recursion error by tracking seen annotations in get_type_parameters.
    
    PiperOrigin-RevId: 305706859

[33mcommit 31d97c41f41c9cdfe0a1351602b8dde133634551[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 7 17:30:26 2020 -0700

    Add typing.OrderedDict (new in Python 3.7).
    
    PiperOrigin-RevId: 305374392

[33mcommit 0a83538e2318352e197fe5a2f02ea2a2f40d24f3[m
Author: Paul Ganssle <paul@ganssle.io>
Date:   Thu Apr 9 14:47:38 2020 -0400

    Move pylint disable comment
    
    For reasons unclear, Python 3.8+ no longer understands the inline
    disabling comment in the old position, and I had to move it to
    immediately before the method definition.

[33mcommit cde5e9c4b0413d8123d64c0d4400efe91e8e64e5[m
Author: Paul Ganssle <paul@ganssle.io>
Date:   Thu Apr 9 14:10:13 2020 -0400

    Fix type definitions for Python 3.8 (Vectorcall)
    
    In PEP 590, the unused tp_print slot was repaced with tp_vectorcall_offset,
    see: https://www.python.org/dev/peps/pep-0590/#changes-to-the-pytypeobject-struct

[33mcommit 95e6be276e5792753bf6005d6485615868ac1f35[m
Author: Paul Ganssle <paul@ganssle.io>
Date:   Thu Apr 9 14:09:10 2020 -0400

    Fix visitor test for 3.8+
    
    See bpo-32892: https://bugs.python.org/issue32892

[33mcommit dad0f2d7537702db47b6391922fe99631bed50c8[m
Author: Paul Ganssle <paul@ganssle.io>
Date:   Thu Apr 9 14:07:31 2020 -0400

    Change required Python to <3.9

[33mcommit a78ce595ab680aeda443f414dde2185f2a7e3bd6[m
Author: Paul Ganssle <paul@ganssle.io>
Date:   Thu Apr 9 14:19:58 2020 -0400

    Test against 3.8 and master with allowed failures.
    
    This adds non-required jobs that will test against 3.8 and the master
    branch, which should make it easier to determine what needs to be done
    to add support for those Python versions.
    
    Note: This will currently always fail trivially, because it's excluded
    in python_requires. This will still be beneficial because
    non-maintainers can modify setup.cfg in their PR branches, but they
    cannot modify .travis.yml. A better long-term solution would be to add a
    workaround that allows installing the package on nominally unsupported
    versions of Python.

[33mcommit d5588991f7ce15a3a5f0221194f1f37b03ed9388[m
Merge: 7a9b91e9 f7d434de
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 8 16:22:47 2020 -0700

    Merge pull request #554 from google/typecheck
    
    Call sys.exit() with the return code in build_scripts/pyexe.

[33mcommit f7d434deb4ca9f47596470cde29acff91cc6a390[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 7 15:03:40 2020 -0700

    Call sys.exit() with the return code in build_scripts/pyexe.
    
    With this fix, our Travis script will report type-checking failures.

[33mcommit 7a9b91e9e1c66edb8eb8e81f84abc748476f8f81[m
Merge: bc2a9e1f c5d96593
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 7 15:01:20 2020 -0700

    Merge pull request #553 from google/google_sync
    
    Google sync

[33mcommit c5d9659316f2901e7e618ccdf76db0f6e91f9ba9[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 7 14:29:41 2020 -0700

    Make fixes for our Travis tests.
    
    * The type-checking step was broken. We didn't notice because
      build_scripts/pyexe.py was swallowing the return code.
    * Target Python 3.5 tests need some work to pass. (Previously, our host Python
      3.5 tests were targeting 3.6 and 3.7.)
    
    I'll first merge https://github.com/google/pytype/pull/552, then export this
    change, and finally send another PR to fix build_scripts/pyexe.py. After that,
    the Travis tests should be in good shape.
    
    For https://github.com/google/pytype/issues/545.
    
    PiperOrigin-RevId: 305341333

[33mcommit 2103d546e86666e23e5361b92ff1384393a99d87[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon Apr 6 10:04:27 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 305055448

[33mcommit e4dfc7f72b0a1057e30892b9f43e9112aaab0084[m
Author: rechen <rechen@google.com>
Date:   Sat Apr 4 21:42:39 2020 -0700

    Add skip(If|Unless)Py test utilities and use them to make tests pass under 3.7.
    
    Replaces the 3.7-specific skip methods in test_utils with more generic skip
    methods that let you specific a sequence of python versions in which a test
    should (not) be run.
    
    Uses these new skip methods to make all pytype tests pass under Python 3.7. (I
    skipped a failing test in tools/xref/verifier_test.)
    
    PiperOrigin-RevId: 304848267

[33mcommit b230058414e793c2c8de7e3c04425fe6f7960900[m
Author: rechen <rechen@google.com>
Date:   Sat Apr 4 17:38:37 2020 -0700

    Remove dependency on now-unnecessary python3_binary.
    
    Now that pytype no longer has host Python 2 tests, we should not need a custom
    Python 3 binary.
    
    I noticed that pytype_source_utils_test was missing from CMakeLists.txt, so I
    added it.
    
    If this change works, that'll be confirmation that we managed to migrate fully
    to Python 3 =)
    
    For https://github.com/google/pytype/issues/545.
    
    PiperOrigin-RevId: 304831817

[33mcommit c67cae8f555cd9da450bd54b35eec2618ee8e690[m
Author: rechen <rechen@google.com>
Date:   Sat Apr 4 17:29:34 2020 -0700

    Make pytype's functional tests target the host Python 3 version.
    
    With this change, the tests will use the following versions (host x target,
    where "3" means the host Python 3 version):
    * TargetIndependentTest: 3 x 2.7, 3 x 3
    * TargePython27Featuretest: 3 x 2.7
    * TargetPython3BasicTest: 3 x 2.7 (annotations backport only), 3 x 3
    * TargetPython3FeatureTest: 3 x 3
    
    The target version tracking the host version makes testing a new Python version
    extremely easy.
    
    The one thing we lose is testing between different Python 3 minor versions,
    e.g., 3.6 x 3.7, but I don't think this is a big loss: we don't need such tests
    internally; externally, using different host and target versions seems rare;
    and we still have 3 x 2.7 for verifying that cross-version analysis works.
    
    For https://github.com/google/pytype/issues/545.
    
    PiperOrigin-RevId: 304831205

[33mcommit 3e1659b21c59fbc4216e77fed2682c3c5251402a[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 3 18:40:21 2020 -0700

    Stop hardcoding the Python 3 minor version in some places in our test code.
    
    * Allows passing in a major version int to --python_version.
    * Removes some references to 3.6.
    * Migrates tests to Python 3-only when needed to keep them passing; I'll do a
      more systematic migration later.
    
    For https://github.com/google/pytype/issues/545.
    
    PiperOrigin-RevId: 304732420

[33mcommit 7079edb05b5d85ddcc14517903e02f9aa0060477[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 3 17:23:25 2020 -0700

    Cleanup: use python_version, not PYTHON_VERSION or options.python_version.
    
    We were using all three of these in various places in our test code.
    
    PiperOrigin-RevId: 304723681

[33mcommit 0f012bf67f7124193380fddaa545d072b4e93d2e[m
Author: mdemello <mdemello@google.com>
Date:   Thu Apr 2 16:37:22 2020 -0700

    Add a --timestamp-logs option to pytype.
    
    Will only apply if pytype is run from the command line, not when it is used as
    a library.
    
    PiperOrigin-RevId: 304502949

[33mcommit cdec8b19545a02761bf1bcfc6a4bc0796c34f2ff[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 1 18:28:42 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 304303629

[33mcommit 35e00a532a0e56826e12fbbc42dc784e6750332f[m
Author: mdemello <mdemello@google.com>
Date:   Wed Apr 1 18:08:43 2020 -0700

    Raise a 'not-supported-yet' error when aliasing Union[T, ...]
    
    PiperOrigin-RevId: 304301112

[33mcommit bc2a9e1fc85dc431d5948dc907b5b69332056dc0[m
Merge: 51bcd3a2 fcb4557d
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 7 14:14:06 2020 -0700

    Merge pull request #552 from google/drop_py2
    
    Drop host Python 2 support.

[33mcommit fcb4557d9ae98d0337adc10b05e996d211179942[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 6 16:42:39 2020 -0700

    Drop host Python 2 support.
    
    For https://github.com/google/pytype/issues/545.

[33mcommit 51bcd3a2d7be9db0af39a64074cd5ea4917eee4c[m[33m ([m[1;33mtag: 2020.04.01[m[33m)[m
Merge: a7ae6abd 430779a8
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 1 18:08:48 2020 -0700

    Merge pull request #543 from google/google_sync
    
    Google sync

[33mcommit 430779a8afdd6c7c4281a39b25c2864ed54b3f5b[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 1 17:03:57 2020 -0700

    Add a `key` argument to avoid type errors when sorting annotations in 3.5.
    
    Ughhh
    
    PiperOrigin-RevId: 304291925

[33mcommit 729fc21acee22ae6e467b5205c7e4a99649066cb[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 1 14:20:54 2020 -0700

    Fix two more OSS test failures.
    
    * self.assertCountEqual does not exist in Python 2.
    * Dictionaries are not insertion ordered in Python 3.5.
    
    PiperOrigin-RevId: 304261311

[33mcommit 6142b608e8a37d887885aa61d48942e647ee33f9[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 1 13:31:08 2020 -0700

    Do a PyPI release.
    
    Just a normal release, despite the date =)
    
    PiperOrigin-RevId: 304251409

[33mcommit 422b2f07146ef58081a75bc373cd5aedade0991a[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 31 14:10:11 2020 -0700

    Unskip tests in Python 3.7.
    
    The issue that caused the tests to be skipped is fixed. I had to fix one of the
    tests to stop returning an awaitable from __aiter__
    (https://www.python.org/dev/peps/pep-0492/#why-aiter-does-not-return-an-awaitable,
    https://docs.python.org/3/library/dis.html#opcode-GET_AITER).
    
    PiperOrigin-RevId: 304042948

[33mcommit ee0e1fd24bcfea95f7ad2bf88236e8b95635a84c[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 31 13:27:44 2020 -0700

    Use six.assertRaisesRegex instead of self.assertRaisesRegex.
    
    The latter is not available in Python 2 *sigh*
    
    I increased the shard count of a test that timed out.
    
    PiperOrigin-RevId: 304034251

[33mcommit 0e19be9e3937e320103c0ebd32ee3ffe688de0c1[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 31 12:29:00 2020 -0700

    Cleanup: remove backslashes in pytype tests.
    
    Also removes now-unnecessary g-backslash-continuation suppressions and fixes
    g-generic-assert errors in pytype/errors_test.
    
    PiperOrigin-RevId: 304021801

[33mcommit 485a68c999084171a047131c7f11bb979b226188[m
Author: Brad Solomon <bsolomon@protonmail.com>
Date:   Tue Mar 31 12:22:31 2020 -0700

    Note that install is broken on Alpine Linux (#541)
    
    Related:
    
    Resolves #541
    
    PiperOrigin-RevId: 304020432

[33mcommit 57c88d75a2435d078cc1b2575e85f935c518b5a5[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 30 18:15:36 2020 -0700

    Migrate all uses of assertErrorLogIs to assertErrorRegexes.
    
    PiperOrigin-RevId: 303864672

[33mcommit f01905b530ff0893a5e695d77b81a1558714525b[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 30 18:07:29 2020 -0700

    Do expected error checking in (Check|Infer)WithErrors.
    
    Now that we have comment-based error checking, I really wanted to be able to
    insert expected errors into test code and have them checked without needing to
    call a separate assert method afterwards. This CL:
    
    * Fixes a couple cases where errors were reported in a non-deterministic order,
      so that a mark can always be associated with the right error.
    * Has CheckWithErrors and InferWithErrors call assert_errors_match_expected()
      on the errorlog.
    * Forbids adding expected error comments to Check, Infer, and InferFromFile, so
      that we don't accidentally use one of these methods and have our expected
      errors silently ignored.
    * Replaces assertErrorLogIs and assertErrorsMatch with an assertErrorRegexes
      method that only has to be called when we want to check marks.
    * Makes some simplifications to the line number handling and error matching
      code that are possible because of the removal of assertErrorLogIs.
    
    On its own, this CL does not pass tests; a follow-up will migrate all uses of
    assertErrorLogIs over to assertErrorRegexes. I'll wait until both CLs have been
    reviewed, then submit them in quick succession.
    
    PiperOrigin-RevId: 303863481

[33mcommit b8fdc568ff51696b0f2cab8f400574e7b987b780[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 30 12:35:25 2020 -0700

    Cleanup: use "regex" instead of "regexp".
    
    assertRegexpMatches is deprecated in favor of assertRegex in Python 3, and
    assertRaisesRegexp was renamed to assertRaisesRegex in 3.2. Just for
    consistency, I also changed all other references to "regexp" I could find.
    
    Lastly, fixes two g-missing-super-call lint warnings.
    
    PiperOrigin-RevId: 303799439

[33mcommit 22c472452d13ecaf091b71e0393593f5c1e21439[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon Mar 30 11:50:41 2020 -0700

    Fix a documentation snippet demonstrating the usage with mixins.
    
    PiperOrigin-RevId: 303789067

[33mcommit a7ae6abd6b36fdd41cc0c7e5dc037f5f887517d7[m
Merge: 3f46c16d c290162f
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 1 13:25:10 2020 -0700

    Merge pull request #542 from google/lint
    
    Disable lint error not-an-iterable.

[33mcommit c290162f0659710f2ba333664c8e468562e6a00e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 31 12:43:31 2020 -0700

    Disable lint error not-an-iterable.
    
    The error is being reported here:
    https://travis-ci.org/github/google/pytype/jobs/669392038. Looks like a
    false positive to me.

[33mcommit 3f46c16d16c1b597ffd9be69254a4d3004c10428[m
Merge: 81f63fca 43addced
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 27 16:39:13 2020 -0700

    Merge pull request #539 from google/google_sync
    
    Google sync

[33mcommit 43addced6d51c9b21733b1ec3aaebab2d3c40c54[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 27 12:50:15 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 303387879

[33mcommit 9f6f25741192c22014290dd5e634bfc442f64396[m
Author: mdemello <mdemello@google.com>
Date:   Mon Mar 23 13:40:31 2020 -0700

    Report a name-error when accessing an unbound closure variable.
    
    Fixes a pytype crash when we hit this case.
    
    #pyfixit
    
    PiperOrigin-RevId: 302507132

[33mcommit 30c2e1943a0a57336b985e9dbd285ebf4f83fb4f[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 23 12:46:43 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 302495703

[33mcommit 81f63fcafe27f00c82cab4f7eef6686a2b60be66[m
Merge: 9cb61542 0774f1f9
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Mar 23 12:02:00 2020 -0700

    Merge pull request #536 from google/google_sync
    
    Google sync

[33mcommit 0774f1f9a91aedf6bbfca71603b76bb29e007399[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 23 11:14:40 2020 -0700

    Use six.assertCountEqual instead of self.assertCountEqual in test_base_test.
    
    Our Travis tests are unhappy with the latter in Python 2.
    
    PiperOrigin-RevId: 302474915

[33mcommit 7f67e43cb39df2922473e57c0730b525d9464ccd[m
Author: mdemello <mdemello@google.com>
Date:   Fri Mar 20 14:55:17 2020 -0700

    Move expected error matching into TestErrorLog.
    
    PiperOrigin-RevId: 302104556

[33mcommit 9d4ede665c5695614da67833f5d84a674002c545[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 20 14:43:26 2020 -0700

    Use //devtools/python/launcher:python3_binary directly in pytype.
    
    This change allows us to get rid of one of our copies of the Python
    interpreter. It will also make version upgrades easier because pytype will
    follow the runtime Python 3 version rather than being pinned to whatever we've
    most recently copied.
    
    We can't do the same thing with :python2_binary because the type annotations
    backport requires the binary to be built with -c opt.
    
    Startblock:
      b/147668882 is fixed
    PiperOrigin-RevId: 302102449

[33mcommit 83449e2668de3fc8ecb1e89a30598e435cc609a4[m
Author: mdemello <mdemello@google.com>
Date:   Fri Mar 20 12:21:29 2020 -0700

    Add a more user friendly error log matcher.
    
    Adds a new matcher, assertErrorsMatch(args), which allows comments of the form
    
      line of code # expected-error
    
    to assert that the line contains the error (without needing to add it to args),
    and
    
      line of code # .mark
    
    to refer to the line's lineno via ".mark" in the matcher.
    
    #pyfixit
    
    PiperOrigin-RevId: 302076400

[33mcommit d22208419d5ffe5ad060e7250024a83981d26835[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 20 10:18:35 2020 -0700

    Update pytype/docs/.
    
    PiperOrigin-RevId: 302051529

[33mcommit 0d85aef905b7b2c737528caeee945241a1bf5f1b[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 20 10:13:49 2020 -0700

    Move "Development process" into its own file.
    
    Since this section is pretty long, it's cleaner to put it into its own file.
    
    #pyfixit
    
    PiperOrigin-RevId: 302050516

[33mcommit 9cb61542266487ae2e532b29ab9db6b827c2b1cc[m[33m ([m[1;33mtag: 2020.03.19[m[33m)[m
Merge: 22354148 094bda69
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 19 16:02:27 2020 -0700

    Merge pull request #532 from google/google_sync
    
    Google sync

[33mcommit 094bda69638fffac01ce29745ffe084eca64ef79[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 19 15:22:37 2020 -0700

    Do a PyPI pytype release.
    
    PiperOrigin-RevId: 301906667

[33mcommit 04a6f0dbcaea73d420cc933895a4480ced700182[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 13 17:29:46 2020 -0700

    Add a signature for BinaryIO.write to work around a pytype bug.
    
    PiperOrigin-RevId: 300857322

[33mcommit b790777ca9fb796095423a96b091cd52d7a4a704[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 13 17:01:55 2020 -0700

    Make signature of IO.write more lenient in Python 2.
    
    Came across this in a Rosie CL while releasing the fix for the attached bug. In
    Python 2, you can write a unicode string to an IO[str] object.
    
    PiperOrigin-RevId: 300853464

[33mcommit 52fb99ac1ec45e2095ac1aba2fd17625062633cc[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 13 14:02:07 2020 -0700

    Fix a pytype crash found by murali@.
    
    PiperOrigin-RevId: 300822593

[33mcommit 22354148a7c89abd89a65a8a81819e8a98ce9d16[m
Merge: 08b752a1 e4ae4b20
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 11 18:38:25 2020 -0700

    Merge pull request #530 from google/google_sync
    
    Google sync

[33mcommit e4ae4b20bf38bb4b9d09d20f9d3aab049e1112de[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 11 17:06:26 2020 -0700

    Update oss docs.
    
    PiperOrigin-RevId: 300439156

[33mcommit 421d210f47890a560a9f439ef009960e96a20d74[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 11 12:54:26 2020 -0700

    Internal change
    
    PiperOrigin-RevId: 300388213

[33mcommit 08b752a125d0d870d13669bd00c47af99af22402[m
Merge: 348b45fc bdcc58fe
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 10 15:47:39 2020 -0700

    Merge pull request #529 from google/google_sync
    
    Google sync

[33mcommit bdcc58fe74314a1e0ed2e20b64f9b2f9e15fca7c[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 10 14:30:27 2020 -0700

    The dev guide has some useful bits now; open source them.
    
    PiperOrigin-RevId: 300178491

[33mcommit 4928447bbf525ff605b69b37f6612a281c482829[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 10 14:22:24 2020 -0700

    Flesh out the "Development Process" section of the dev guide.
    
    PiperOrigin-RevId: 300176834

[33mcommit a50b3f4a8e59b631a832ce14bc8e8735b9e2c824[m
Author: mdemello <mdemello@google.com>
Date:   Wed Mar 4 16:22:21 2020 -0800

    FIX: IO.write should only take a string argument.
    
    Also fixed a test that was validating the wrong behaviour.
    
    PiperOrigin-RevId: 298968030

[33mcommit 348b45fcfa0d169861eae6357d70e411210c3373[m
Merge: 5dd6807a b26e81e0
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 3 14:19:33 2020 -0800

    Merge pull request #520 from google/google_sync
    
    Google sync

[33mcommit b26e81e0c817c2a52b281e9cd513575d7cd0bbc5[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 3 11:20:00 2020 -0800

    Cleanup: silence a lint error I noticed while importing PR #519.
    
    PiperOrigin-RevId: 298649713

[33mcommit e6d84530c4c7f9517aaf3fc76c01c4aa8d02f291[m
Author: Rune Tynan <runetynan@gmail.com>
Date:   Tue Mar 3 11:17:22 2020 -0800

    Add lexing for base 2, 8, and 16 literals (#519)
    
    Alters lexer.lex and adds a test for the new numeric types, Closes #494
    
    Resolves #519
    
    PiperOrigin-RevId: 298649098

[33mcommit 62f39e3ce9721c10058aad6811878c38c5b42634[m
Author: mdemello <mdemello@google.com>
Date:   Thu Feb 27 15:27:22 2020 -0800

    FIX: Convert lines to bytestrings before calculating byte offsets.
    
    PiperOrigin-RevId: 297702793

[33mcommit 5dd6807a905aa07fecc230ecdea9127e9f646a08[m
Merge: ce8f7678 6f04c0c2
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 25 17:45:43 2020 -0800

    Merge pull request #518 from google/google_sync
    
    Google sync

[33mcommit 6f04c0c2d6a5d8addd3965eac402ee2254591029[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 25 17:00:06 2020 -0800

    Add missing Python 3-only ascii() builtin.
    
    I also took some functions that were at the very end of the list of function
    builtins and inserted them in alphabetical order.
    
    PiperOrigin-RevId: 297237855

[33mcommit fc1cfdbc3614c8631d529b89e98e70b7be1d13f0[m
Author: mdemello <mdemello@google.com>
Date:   Tue Feb 25 16:10:36 2020 -0800

    FIX: Crash when options.report_errors was False
    
    There are cases where we need to generate an [unsolvable] binding for a binary
    operator even if we have suppressed error reporting.
    
    PiperOrigin-RevId: 297227987

[33mcommit ce8f767846d79d0452735475e116901ba73aaf1b[m[33m ([m[1;33mtag: 2020.02.20[m[33m)[m
Merge: 8979502a 19e3ea0e
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 20 14:36:55 2020 -0800

    Merge pull request #517 from google/google_sync
    
    Do a PyPI release of the implicit Optional change.

[33mcommit 19e3ea0e92f4769b65b5ec7ba13f76453985d369[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 20 13:53:54 2020 -0800

    Do a PyPI release of the implicit Optional change.
    
    PiperOrigin-RevId: 296289579

[33mcommit 8979502a0967aeafb90c0a92819664193b4c84c0[m
Merge: 17944bb5 926228d3
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 19 10:33:16 2020 -0800

    Merge pull request #515 from google/google_sync
    
    Google sync

[33mcommit 926228d3239ca58d85fda2bbf2c4830bf34aa711[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 18 11:00:18 2020 -0800

    Add start, stop, and step attributes to range() in Python 3.
    
    Also noticed in https://github.com/google/pytype/issues/513.
    
    PiperOrigin-RevId: 295773632

[33mcommit 3b2a30309a81ae5ac867af0c163dbc2075cf4d14[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 18 09:24:58 2020 -0800

    Allow Any to match against parameterized classes.
    
    PiperOrigin-RevId: 295750288

[33mcommit 17944bb5c8d23da3d1e7c00913febf75effc7791[m
Merge: 07640ec0 9dc544b7
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 18 09:39:22 2020 -0800

    Merge pull request #514 from google/google_sync
    
    Allow a range to be sliced in Python 3.

[33mcommit 9dc544b7cea1cd2d15dbc7ef5d3087f37422bf64[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 14 15:36:37 2020 -0800

    Allow a range to be sliced in Python 3.
    
    Resolves https://github.com/google/pytype/issues/513.
    
    PiperOrigin-RevId: 295241887

[33mcommit 07640ec06bf0c21406ba283b3410be00ba8bc221[m
Merge: d896984a 52c41557
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 12 12:58:12 2020 -0800

    Merge pull request #512 from google/google_sync
    
    Remove pytype's support for implicit None annotations.

[33mcommit 52c415571de728914b5c8d6fd2bd1f4f78d98c3d[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 6 18:10:51 2020 -0800

    Remove pytype's support for implicit None annotations.
    
    PiperOrigin-RevId: 293721487

[33mcommit d896984a4e4a3d8b88fd274142eaf4d83ac45ccb[m
Author: Paul Ganssle <paul@ganssle.io>
Date:   Mon Feb 10 16:52:54 2020 -0500

    Further modernize python build system (#509)
    
    * Replace conditional logic with environment markers
    
    PEP 496 introduced environment markers, which allow you to declare a
    dependency conditional on the environment the package is to be installed
    into. Among other things, this is useful for cross-compilation.
    
    * Add Python 3.7 to trove classifiers
    
    * Add python_requires matching test matrix
    
    This will prevent `pip` from finding versions of pytype that do not
    support a given version of Python. Unfortunately, when no
    python_requires declaration is made, the default is "acceptable for all
    versions", and so without yanking old versions, `pip install pytype` on
    unsupported versions will simply fall back to the latest release without
    a `python_requires` declaration. Alas, this still seems like a win.
    
    * Add Python 3.5 to trove classifiers
    
    * Move all static build options into setup.cfg
    
    Using the declarative build file for all your declarative options is
    current best practice, since it makes it much easier to parse metadata
    from projects without executing arbitrary code.
    
    This will change the minimum required version of setuptools to 30.4,
    which was released in December 2016.
    
    * Add pyproject.toml file with build-system
    
    This declares the build system and (Python) dependencies required to
    build the project, and will trigger PEP 517 builds when present in pip
    installs.
    
    * Add pyproject.toml to MANIFEST.in
    
    This will include pyproject.toml in sdists, which will trigger PEP 517
    builds when installing from sdist.
    
    * Add license to build metadata
    
    * Use find_packages to populate the package list
    
    This will prevent further issues like #372 (though technically #372
    would still have caused a problem because __init__.py was missing).
    
    * Add project_urls
    
    This allows PyPI to give multiple links to various aspects of the
    project. See an example of how this renders on urllib3's PyPI page:
    https://pypi.org/project/urllib3/1.25.8/
    
    * Move version into setup.cfg
    
    Importing from a fixed module is a built-in capability of the
    declarative build file, so no need to re-invent it ourselves.

[33mcommit 54f7f3691a616ff428f23757eac4c252988ab401[m
Merge: a735b110 543dba08
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 6 16:07:20 2020 -0800

    Merge pull request #510 from google/google_sync
    
    Add __init__ files to two tools modules (#508)

[33mcommit 543dba08f24ce4e45a44c749f44a0d75a5fcbcd4[m
Author: Paul Ganssle <p.ganssle@gmail.com>
Date:   Thu Feb 6 15:25:50 2020 -0800

    Add __init__ files to two tools modules (#508)
    
    These two modules were not declared as modules because their `__init__.py` is missing. Python 3+ compensates for this by considering them namespaces, but the `annotate-ast` command (and probably a few others) are broken on Python 2.7 due to lack of an `__init__.py`
    
    Resolves #508
    
    PiperOrigin-RevId: 293690334

[33mcommit a735b1109229cacfcbbf183d1ea85d2c31065d70[m[33m ([m[1;33mtag: 2020.02.06[m[33m)[m
Merge: baab8944 73d60952
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 5 20:36:11 2020 -0800

    Merge pull request #506 from google/google_sync
    
    Google sync

[33mcommit 73d609529496c6b63b070456a34322b33fc2ea20[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 5 17:50:08 2020 -0800

    Do a PyPI release of the typeshed update.
    
    PiperOrigin-RevId: 293493488

[33mcommit 8bdba58ea14342ceece37cb93659d9e9d847eb6e[m
Author: rechen <rechen@google.com>
Date:   Mon Feb 3 11:46:21 2020 -0800

    Do not let strings match SupportsInt and SupportsFloat.
    
    I fixed this bug in Python 3 only because typeshed has `str.__int__` and
    `str.__float__` defined in Python 2.
    
    PiperOrigin-RevId: 292969221

[33mcommit de3a1740fa4a48d05ea236193e54de6674bd3b2c[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jan 27 15:24:30 2020 -0800

    FIX: Recognise trailing commas in nested multiline literals.
    
    Recognises this as a line with a lone closing bracket:
    
        ],
    
    and adjusts typecomments accordingly.
    
    PiperOrigin-RevId: 291812672

[33mcommit baab89445d667952051ab30c5504e5c455941b03[m
Merge: 9e315b94 de85b201
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 28 15:37:50 2020 -0800

    Merge pull request #502 from google/ts
    
    Update typeshed to d5851eca6f448b648e1a7b3f3010cc3dde498535.

[33mcommit de85b201b87fee2cc086dcce4050fb59fda05d3b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 28 15:06:34 2020 -0800

    Update typeshed to d5851eca6f448b648e1a7b3f3010cc3dde498535.
    
    External copy of internal typeshed update.

[33mcommit 9e315b940720c5734bcf8c7d683c310202938199[m[33m ([m[1;33mtag: 2020.01.24[m[33m)[m
Merge: 526c5a3e 0b8eff3d
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 24 14:36:12 2020 -0800

    Merge pull request #498 from google/google_sync
    
    Google sync

[33mcommit 0b8eff3d5a76aa15e25c0e715499ad908837061d[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 24 11:47:29 2020 -0800

    Prepare for a PyPI release.
    
    PiperOrigin-RevId: 291413279

[33mcommit 3679960f84dc858da298d0153204189d9d761d70[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 24 10:10:13 2020 -0800

    Update the opensource docs.
    
    PiperOrigin-RevId: 291393495

[33mcommit cee54de620e07f5163661052f8b45775ea7921ee[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jan 23 11:49:53 2020 -0800

    Add __init_subclass__ to object signature.
    
    For https://github.com/google/pytype/issues/255.
    
    PiperOrigin-RevId: 291213163

[33mcommit 526c5a3e3531d848660a721055882bdc2ec29faa[m
Merge: ce086c5c 26829d6c
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 23 11:49:35 2020 -0800

    Merge pull request #497 from google/google_sync
    
    Google sync

[33mcommit 26829d6c0e2f5bff6d091819f1ea3c59d6619c76[m
Author: Lidi Zheng <lidiz@google.com>
Date:   Thu Jan 23 10:25:42 2020 -0800

    Supporting multiple disabled rules in .cfg files (#496)
    
    Currently, in .cfg files, there isn't a documentation mentioning how to set multiple disable rules. After experiments, I found the only valid way is:
    
    Resolves #496
    
    PiperOrigin-RevId: 291194196

[33mcommit f1bb740f62c39de454c539515ca2ea2c2116a11f[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 21 14:39:05 2020 -0800

    Update attrs constructor signatures to reflect the latest version.
    
    PiperOrigin-RevId: 290825533

[33mcommit 1d516c6bd52ed0af99c9a771ab43a98d1d25f12e[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 17 14:47:20 2020 -0800

    Allow proto_to_pyi to run under Python 2.
    
    I haven't figured out why proto_to_pyi is running under Python 2. In the
    meantime, this workaround should get rid of the PytypeProto failures.
    
    PiperOrigin-RevId: 290346123

[33mcommit 0c2db36d180709586ce779d6eadc76c577071d3a[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Fri Jan 17 12:52:48 2020 -0800

    In errors that print Expected/Actual comparisons, align the values for clarity.
    
    Old:
      Expected: (self, ticket, label, bgcolor, subgraph_name: str, ...)
      Actually passed: (self, ticket, label, bgcolor, subgraph_name: None, ...)
    
    New:
             Expected: (self, ticket, label, bgcolor, subgraph_name: str, ...)
      Actually passed: (self, ticket, label, bgcolor, subgraph_name: None, ...)
    PiperOrigin-RevId: 290324236

[33mcommit 453b6233045f3da78e2195b05392e9dda23be7ba[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 17 12:49:16 2020 -0800

    Fix a Python 3 string encoding bug.
    
    This should fix the status dashboard's PytypeCheck failures.
    
    PiperOrigin-RevId: 290323650

[33mcommit 0af98bdc871cc5eb911a3447b02a22efa4dd7493[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 16 15:35:55 2020 -0800

    Stop pinning proto_to_pyi to Python 3.6.
    
    Changes proto_to_pyi to take a single major Python version int (2 or 3) rather
    than a (major, minor) version tuple so that we can stop hardcoding 3.6.
    
    Requires making the entire directory PY3 since pytype uses sys.version_info to
    find the Python 3 minor version.
    
    PiperOrigin-RevId: 290159720

[33mcommit a699ebaf565a6d767347d68b9464b028843d2c7d[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 15 16:25:56 2020 -0800

    Track the types of lambdas for tyre.
    
    Fixes a bug where python3_convert would put six.ensure_str() around lambdas.
    
    PiperOrigin-RevId: 289961105

[33mcommit 79d59aeefa8fcb90c6f69d8bf4a50ab7d803d9af[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 14 18:03:57 2020 -0800

    Fix name errors from `Type[_T] -> Type[_T]` decorators.
    
    When instantiating a function's return value, we call __init__ on all of the
    type parameter values. This doesn't work so well for module-level class
    decorators, since the class hasn't been defined yet, so references to it in
    __init__ end up being name errors. Luckily, we don't actually need to call
    __init__ on the class since we're not instantiating it.
    
    PiperOrigin-RevId: 289770640

[33mcommit fd7ddc8252971c2168b658bc3c9208897d9fc193[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Tue Jan 14 16:46:10 2020 -0800

    Don't fail on mypy-style '# type: ignore[code, ...]' comments
    
    Fixes https://github.com/google/pytype/issues/485
    
    PiperOrigin-RevId: 289758806

[33mcommit f777035042ef1c4aa291a4598a0a3a6264b1eb0c[m
Author: rechen <rechen@google.com>
Date:   Sat Jan 11 20:33:41 2020 -0800

    Avoid analyzing some function-like objects twice.
    
    Comprehensions and generators look like functions to pytype but do not need to
    be analyzed as standalone functions.
    
    PiperOrigin-RevId: 289289484

[33mcommit ce086c5c6ef55364dac96a3c1e97a4a21b1aefeb[m[33m ([m[1;33mtag: 2020.01.08[m[33m)[m
Merge: 030c0132 0eea6bb6
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 8 15:35:52 2020 -0800

    Merge pull request #490 from google/google_sync
    
    Do another PyPI release for a typeshed bug fix.

[33mcommit 0eea6bb623c7c03861318446433b83440aa3b147[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 8 13:39:28 2020 -0800

    Do another PyPI release for a typeshed bug fix.
    
    PiperOrigin-RevId: 288765173

[33mcommit 030c013239b9c0e68b612a0d0b68fa5bf57478e7[m
Merge: ca2ea4a5 c59d2b33
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 7 14:41:57 2020 -0800

    Merge pull request #489 from google/google_sync
    
    Google sync

[33mcommit c59d2b3324d45808e7da988153d5a2adf3f0421b[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 7 14:12:05 2020 -0800

    Support @type_check_only in pyi files.
    
    Since pytype doesn't do anything with this decorator, we parse and then discard
    it. The decorator is allowed on both classes and functions
    (https://docs.python.org/3/library/typing.html#typing.type_check_only).
    
    For https://github.com/python/typeshed/pull/3584.
    
    PiperOrigin-RevId: 288569410

[33mcommit 575389999d39c91e39035acf4b023c7673c8f9f9[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 7 11:56:02 2020 -0800

    Mark str as Hashable in py3.
    
    PiperOrigin-RevId: 288543043

[33mcommit c87d3e297bc594bbd226c4e204de4ba539231021[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 7 11:37:42 2020 -0800

    Fix: _is_annotations_dict should return a bool, not a generator.
    
    Fixes https://github.com/google/pytype/issues/486.
    
    PiperOrigin-RevId: 288539281

[33mcommit 469971b878d7b7227ec29c661e75820075a4daa3[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 7 10:06:23 2020 -0800

    Add empty pytype dev guide.
    
    Adds a "Developer Guide" that we can fill out throughout the quarter.
    
    PiperOrigin-RevId: 288519205

[33mcommit ca2ea4a5f39cd214735cd481c5017a78617810ca[m[33m ([m[1;33mtag: 2020.01.07[m[33m)[m
Merge: 40580a7a 8788b413
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 7 10:28:45 2020 -0800

    Merge pull request #487 from google/google_sync
    
    Update pytype CHANGELOG and __version__ for PyPI release.

[33mcommit 8788b4139fd5079e2e37ca140fa6a61af74eee8f[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 7 08:33:43 2020 -0800

    Update pytype CHANGELOG and __version__ for PyPI release.
    
    PiperOrigin-RevId: 288503087

[33mcommit 40580a7a973d7b19b7346d65ab4e8bdc0a292b5b[m
Merge: 2a4a47fb 30d72f8a
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 19 15:29:39 2019 -0800

    Merge pull request #479 from google/google_sync
    
    Google sync

[33mcommit 30d72f8afc790ab355bd1040ca3df4e448267078[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 19 14:51:51 2019 -0800

    Bring pytype's opensource docs up-to-date.
    
    PiperOrigin-RevId: 286468588

[33mcommit 8480c0ecdf061e756932c72697dc37472ee08713[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 19 14:45:37 2019 -0800

    Update the "Roadmap" section of the pytype README.
    
    Removes Windows support and puts in some things that we realistically think
    we'll have time to do.
    
    PiperOrigin-RevId: 286467520

[33mcommit 955b0e372b16547129c7c4b5fd1d23b94b3d1d57[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 19 11:26:08 2019 -0800

    When a late annotation has an error, keep as much of the annotation as we can.
    
    Currently, when eval_expr produces an error, the entire late annotation being
    evaluated is replaced by Any. But for regular annotations, only the part with
    an error becomes Any. Change eval_expr to match the regular behavior.
    
    PiperOrigin-RevId: 286429562

[33mcommit 69598de0223ab1d6a2c7224aa1cd5ba2c5f7cf6b[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 17 15:06:07 2019 -0800

    For late annotations, don't wrap eval_expr() errors in [invalid-annotation].
    
    Currently, for something like:
    
    def f(x: Undefined): ...
    
    we'll log a [name-error], but for:
    
    def f(x: "Undefined"): ...
    
    we'll log an [invalid-annotation] with the message body copied from the name
    error. Since annotations will eventually all be quoted, we should log a
    [name-error] in both cases.
    
    PiperOrigin-RevId: 286068606

[33mcommit 2a4a47fbb8b9134d9f7c5bd089b92a2a776a8854[m[33m ([m[1;33mtag: 2019.12.17[m[33m)[m
Merge: fee56b6a 6c585bc4
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 17 13:35:40 2019 -0800

    Merge pull request #478 from google/google_sync
    
    Google sync

[33mcommit 6c585bc4af871780957e176610c9da558c9e7669[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 17 11:50:47 2019 -0800

    Prepare for a PyPI release.
    
    PiperOrigin-RevId: 286026650

[33mcommit 69043cf031eeb45720f7ffdccaa35f5ba4095bba[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Tue Dec 17 03:11:24 2019 -0800

    Python3 kw_only arguments should be optional when a default is specified.
    
    This may affect all libraries that use overlay_utils, but specifically `attr`
    
    Fixes https://github.com/google/pytype/issues/408
    
    PiperOrigin-RevId: 285946628

[33mcommit fee56b6aa6debb08ee9ecf7e6edd2ef8df1f9fa7[m
Merge: 15ec10ec 891378fa
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 12 17:10:35 2019 -0800

    Merge pull request #477 from google/pypi
    
    Fix broken links in pytype's PyPI description.

[33mcommit 891378fa337164ba6b79a73a15c342b6abf20013[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 12 16:25:01 2019 -0800

    Fix broken links in pytype's PyPI description.
    
    Fixes https://github.com/google/pytype/issues/239.

[33mcommit 15ec10ec9862281ff19d0c26bd3f57833a7becea[m
Merge: f200c4c6 7ce1fa11
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 11 18:36:04 2019 -0800

    Merge pull request #476 from google/lint
    
    Make pytype work with the most recent version of pylint.

[33mcommit 7ce1fa11e08f73507a2f3230c7b1d928c26e4172[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 11 16:41:19 2019 -0800

    Make pytype work with the most recent version of pylint.
    
    Fixes https://github.com/google/pytype/issues/423.

[33mcommit f200c4c6803097c0af1c5a8580589ac6bbdcb570[m
Merge: 64a04d6f 27d1efba
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 11 16:39:26 2019 -0800

    Merge pull request #475 from google/google_sync
    
    Remove an unnecessary list comprehension.

[33mcommit 27d1efbaff25a02642bdbb37136779714e02f196[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 11 15:02:05 2019 -0800

    Remove an unnecessary list comprehension.
    
    The unnecessary comprehension was flagged by the most recent upstream release
    of pylint.
    
    For https://github.com/google/pytype/issues/423.
    
    PiperOrigin-RevId: 285068776

[33mcommit 64a04d6f40da82465616fb01cd79dbc1de4d2b67[m
Merge: a40fb8e0 cb6953b9
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 10 14:29:54 2019 -0800

    Merge pull request #474 from google/google_sync
    
    Fixed AttributeError in Python 3.8 (#466) (#471)

[33mcommit cb6953b90ccef8188111e928be1178706ad1e927[m
Author: Or Bin <orbin50@gmail.com>
Date:   Tue Dec 10 13:17:12 2019 -0800

    Fixed AttributeError in Python 3.8 (#466) (#471)
    
    This PR fixed and seems to be close #466.
    
    Resolves #471
    
    PiperOrigin-RevId: 284834257

[33mcommit a40fb8e07d54aa16a18b09efe6ec5774cf119264[m
Merge: 7744aed8 e9096a54
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 10 13:03:44 2019 -0800

    Merge pull request #472 from google/google_sync
    
    Google sync

[33mcommit e9096a54593932d898b83fbba7cc4f688c9a8b7d[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 10 11:53:49 2019 -0800

    Refactoring: Move get_annotations_dict to abstract_utils
    
    PiperOrigin-RevId: 284817437

[33mcommit 0e46a58333e8b9f7a47fd95326cd52ad01dc5c18[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 10 11:45:18 2019 -0800

    Add support for decorators to set attrs default and validator properties.
    
    PiperOrigin-RevId: 284815593

[33mcommit 56d132da134acf7fd502a8bdc5803cb2f6cfd978[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 10 11:38:33 2019 -0800

    Make two fixes to the LateAnnotation implementation.
    
    I didn't want to touch that change anymore, since it was already so large, but
    I found two issues while testing it:
    * An incorrect late annotation encountered after vm.late_annotations is set to
      None caused a crash. Fixed by immediately reporting a name error instead.
    * Function type comments previously supported unquoted late annotations but did
      not support quoted late annotations. Initially, I wanted to force quoting of
      late annotations in function type comments, but that would make the release
      difficult because existing comments can't be fixed. Instead, the new
      implementation will also supported unquoted late annotations.
    
    PiperOrigin-RevId: 284814174

[33mcommit dd0158d2b1089936d716faa68240b0a9c0713fbc[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 10 11:37:17 2019 -0800

    FIX: Dataclasses don't overwrite an explicit __init__ method.
    
    Fixes https://github.com/google/pytype/issues/469.
    
    PiperOrigin-RevId: 284813884

[33mcommit 414433e3cf5b43c7c78a448f2b295d3deec878a4[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 10 11:27:14 2019 -0800

    Add support for typing.ClassVar
    
    ClassVars are recorded in annotated_locals, and then replaced with their inner
    types once the class is created.
    
    Also adds dataclass and attrs support for ClassVar.
    
    PiperOrigin-RevId: 284811600

[33mcommit 895eeaf026e71dc3814c18e6d0447dd43f3144e6[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 10 11:20:39 2019 -0800

    Internal change
    
    PiperOrigin-RevId: 284810023

[33mcommit bb23799e775d2cca857da837d945833324041630[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 9 18:27:07 2019 -0800

    Overhaul the LateAnnotation implementation.
    
    Significantly changes how forward references are implemented, reducing the
    number of places where they need to be special-cased and fixing a number of
    bugs and edge cases.
    
    Unfortunately, to avoid breaking our existing forward reference support, I had
    to make this change all at once - apologies for the mega-CL.
    
    The way the new late annotations work is that when a forward reference is
    encountered, we immediately evaluate it but set a special flag on the VM that
    tells it to generate LateAnnotation objects instead of reporting name errors.
    Then, whenever a new global is defined, we resolve any late annotations that
    refer to it. Once all globals have been defined, we resolve any remaining
    annotations so that real name errors are still reported.
    
    The LateAnnotation class defines __getattribute__, allowing it to pretend to be
    an unsolvable before resolution and its resolved type afterwards.
    
    I expect this change to break a bunch of targets that have type errors in their
    forward references or function type comments, so I won't submit it until we've
    sorted out the typeshed update.
    
    Fixes https://github.com/google/pytype/issues/420.
    
    Startblock:
      b/143674618 is fixed
    PiperOrigin-RevId: 284678790

[33mcommit 5c206c276f961cec4ae19be35f60697e2896031e[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 9 13:35:09 2019 -0800

    Allow typing.AnyStr to be used as a type parameter in type macros.
    
    Fixes https://github.com/google/pytype/issues/444
    
    PiperOrigin-RevId: 284623803

[33mcommit 16c4bd78cbdc6a9d9a1c1326421c54cdfec0be43[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 9 09:43:30 2019 -0800

    Support six.integer_types.
    
    #pyfixit
    
    PiperOrigin-RevId: 284572815

[33mcommit 7744aed8138b548424b7c4a501528b78dff8e61e[m[33m ([m[1;33mtag: 2019.12.06[m[33m)[m
Merge: 60d5245d 166427ce
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Dec 6 12:56:13 2019 -0800

    Merge pull request #468 from google/google_sync
    
    Google sync

[33mcommit 166427ce3240672f644b94807f0d3abe834110ed[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 6 10:57:11 2019 -0800

    Prepare for a PyPI release of the typeshed update.
    
    PiperOrigin-RevId: 284218861

[33mcommit f760609aa071ae8438f059dcff0dbf8c58e17225[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 5 15:01:31 2019 -0800

    Internal change
    
    PiperOrigin-RevId: 284061171

[33mcommit aba5cf8d3a9aa3c3f8f81c743e920730e71bfa0b[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 4 15:53:04 2019 -0800

    Allow explicitly passing in a custom template to ParameterizedClass.
    
    Previously, ParameterizedClass always read its template from its base class,
    and typing.Generic was implemented by temporarily changing the template of
    PyTDClass(Generic) as needed. Explicitly passing in the template is clearer and
    less error-prone.
    
    PiperOrigin-RevId: 283854396

[33mcommit 35f00a5f436c605f9748519b2862fa2160822d10[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 3 20:06:39 2019 -0800

    Optimize bytecode compilation when the host and target Python versions match.
    
    Currently, when we want to compile source code, we write it to a temporary
    file and spawn a subprocess to call compile_bytecode, which reads the file.
    When the host and target Python versions match, we can call compile_bytecode
    directly, bypassing both the file write+read and the subprocess call.
    
    #pyfixit
    
    PiperOrigin-RevId: 283675427

[33mcommit 60d5245d730293732ed57f16133ca79f76f06fe1[m
Merge: 158e5939 618c1912
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 5 19:31:21 2019 -0800

    Merge pull request #467 from google/ts
    
    Update typeshed to f7f68607ab910595d0076b2003d78a364f96c8a8.

[33mcommit 618c191287cb25fc44b1ca61bd67448cc771eab7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 5 18:49:40 2019 -0800

    Update typeshed to f7f68607ab910595d0076b2003d78a364f96c8a8.

[33mcommit 158e593987af245fc2b9eb7b55902ffb6167d4b4[m
Merge: dc86e0e7 0f4b75e9
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 3 18:40:06 2019 -0800

    Merge pull request #465 from google/google_sync
    
    Google sync

[33mcommit 0f4b75e9ad289ad65a5993d1ef270cc35058e008[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 3 12:21:44 2019 -0800

    FIX: dataclass.field(init=True, default=None) should not set default.
    
    PiperOrigin-RevId: 283597323

[33mcommit 920536a67ca80bb1a116e9344bfb1678eea043c4[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 2 13:38:54 2019 -0800

    Clean up and refactor some code around late annotations.
    
    A collection of small improvements, mostly having to do with late annotations,
    which I don't expect to break anything and which pave the way for more
    substantial changes to how we deal with late annotations.
    
    In addition to some trivial changes to fix typos, remove extra whitespace,
    etc., I:
    
    * Standardized error message wording about ambiguous annotations to always say
      "must be constant"; previously we sometimes used "constant" and sometimes
      used "unambiguous type".
    * Fixed ParameterizedClass.__hash__ to guard against infinite recursion.
    * Moved the `node` parameter to the front of the parameters list for all
      annotations_util methods that take a node.
    * Made abstract_utils.eval_expr return full errors rather than just messages
      and added a `details` property to EvaluationError to get the messages.
    * Fixed a bug where Error.drop_traceback() didn't copy the `keyword` attribute.
    * Replaced errorlog.save/revert_to with an easier-to-use contextmanager.
    * Simplified vm.simple_stack() to convert only the current frame.
    * Refactored typing_overlay.TypeVar a little to be easier to understand.
    
    PiperOrigin-RevId: 283407413

[33mcommit dc86e0e7263fa08c1f233bb53e9ae78f834bfb54[m
Merge: 9e16d4a9 45343347
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 29 11:25:18 2019 -0800

    Merge pull request #463 from google/setup
    
    Remove pyi_checker from pytype's setup.py.

[33mcommit 9e16d4a9f80c7289fea1f5228a886602b5e464a8[m
Merge: 2e27ddea a384401e
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 27 13:38:45 2019 -0800

    Merge pull request #458 from dlax/main-pytype-single
    
    python -m pytype.single

[33mcommit 4534334765a1ee71c397bbfba9d6a7f14be82aee[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 27 13:18:38 2019 -0800

    Remove pyi_checker from pytype's setup.py.

[33mcommit 2e27ddea3428b64e0985b708e561b6392b842d1f[m[33m ([m[1;33mtag: 2019.11.27[m[33m)[m
Merge: 0ee615c4 cacfe7b8
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 27 12:50:10 2019 -0800

    Merge pull request #462 from google/google_sync
    
    Google sync

[33mcommit cacfe7b84e6114cfb4e4afa8a17105e7a294e057[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 27 10:41:48 2019 -0800

    Update the PyPI version and CHANGELOG for an open-source release tomorrow.
    
    I had to fix a couple of attrs/dataclass bugs caused by a refactor I did
    yesterday; assuming the build failures table is clean tomorrow morning, I'll do
    a PyPI release. Otherwise, you'll probably get another CL after Thanksgiving
    updating the release date :)
    
    PiperOrigin-RevId: 282796667

[33mcommit 1c2c3b0997c7950d687b70a2018c8ed23851dde3[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 27 10:39:22 2019 -0800

    Move pytype.tools.pyi_checker to its own directory.
    
    Since pytype doesn't depend on it or vice versa, it's better for pyi_checker to
    be its own project.
    
    PiperOrigin-RevId: 282796195

[33mcommit a384401e49234d47a7943ad21bcbf0844bb6e23c[m
Author: Denis Laxalde <denis@laxalde.org>
Date:   Tue Nov 26 22:39:53 2019 +0100

    Handle sys.executable possibly being None
    
    Fall back to "pytype-single" executable if it is not possible to use
    "python -m pytype.single" when sys.executable is None.

[33mcommit 0ee615c4c6fe179e8c2630370e116d1de2155d39[m
Merge: 929295e9 6e20ce6a
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 26 17:00:55 2019 -0800

    Merge pull request #461 from google/google_sync
    
    Google sync

[33mcommit 6e20ce6aed5ccf86b1f37b0663a3de1a3ed073eb[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 26 16:18:53 2019 -0800

    Make a new kwargs copy for each attrs or dataclass decorated class.
    
    Fixes an attrs bug caused by auto_attribs being detected when it shouldn't be.
    
    PiperOrigin-RevId: 282660472

[33mcommit a1b7b1ed8a152e7e2827eaa7a2ae81d3dedb0ba2[m
Author: Denis Laxalde <denis@laxalde.org>
Date:   Tue Nov 26 15:17:22 2019 -0800

    Fix UnboundLocalError about 'argument_parser' in Options (#457)
    
    The except clause in Options.__init__() refers to 'argument_parser'
    
    Resolves #457
    
    PiperOrigin-RevId: 282649565

[33mcommit 21d8b54a60a3532f5f1882c88788b65f316b1662[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 26 14:36:17 2019 -0800

    Fix a bug in vm.annotated_locals.
    
    I defined annotated_locals as dictionary from frame name to a dictionary from
    attribute name to value, but I used it as a dictionary from attribute name to
    value, which led to some weird errors when attribute names were reused between
    dataclasses. D'oh.
    
    PiperOrigin-RevId: 282642110

[33mcommit 482a6029dea81239cac1d9b123d5857647bd6fcc[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 25 16:04:15 2019 -0800

    Detect and raise an error for recursive type aliases, rather than crashing.
    
    Due to the way we handle annotations, the error occurs when the type alias is
    used, rather than when it is defined.
    
    PiperOrigin-RevId: 282453014

[33mcommit b2bcbf0431ef944087df3bcad917d07e8ea06efb[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 25 11:48:43 2019 -0800

    Simplify vm.local_traces and vm.ordered_locals.
    
    Previously, vm.local_traces was used to get the attribute order for dataclasses
    but also recorded attribute values that weren't used, and vm.ordered_locals was
    kept in the right order for attrs.
    
    Instead, vm.local_traces has been changed to vm.local_ops, which records
    variable names and operations (ANNOTATE or ASSIGN) in the order in which
    they're done, and vm.ordered_locals has been changed to an unordered dict of
    variable names to values. classgen.Decorator.get_class_locals takes a new
    argument, ordering, which can be used to request either the attrs or the
    dataclasses ordering.
    
    I also fixed a bug in the behavior of attr.s(auto_attribs=True): only annotated
    attributes should be picked up and should follow the dataclasses ordering.
    
    PiperOrigin-RevId: 282402682

[33mcommit 885cb4214c0f7cbc4f4e2546af9791c5c0907990[m
Author: Denis Laxalde <denis@laxalde.org>
Date:   Thu Nov 21 16:06:03 2019 -0800

    Add a -j/--jobs option to pytype (#454)
    
    The option is simply passed to ninja, thus enabling parallel builds.
    
    Resolves #454
    
    PiperOrigin-RevId: 281854519

[33mcommit 96cf3aabe03fee951e14baa86b4097e6dd9824fb[m
Author: Denis Laxalde <denis@laxalde.org>
Date:   Sun Nov 17 15:40:01 2019 +0100

    Use "python -m pytype.single" as executable for ninja commands
    
    This ensures that pytype-single is run with the same interpreter as
    pytype was invoked with.

[33mcommit 2f47feb8bdfade69db2ec9c402c98d8c0346b2e2[m
Author: Denis Laxalde <denis@laxalde.org>
Date:   Sat Nov 23 20:48:14 2019 +0100

    Rename pytype.main as pytype.single
    
    Having pytype.main actually running pytype-single is somewhat confusing.
    This situation is a remains from the time the pytype executable was
    what now is pytype-single (see e.g. commit 3de77436). Having a
    "pytype.single" module clarifies the situation.
    
    The underlying motivation is to make it possible to run pytype-single as
    `python -m pytype.single` (following the move of "pytype" executable in
    commit 79f8d35d93f8798d3bf7be0120c8a058a8af5280).

[33mcommit 929295e92251bc78d4487dedd5c027948f996c7c[m
Merge: e3a41fb3 79f8d35d
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 19 21:33:33 2019 -0800

    Merge pull request #456 from google/google_sync
    
    Google sync

[33mcommit 79f8d35d93f8798d3bf7be0120c8a058a8af5280[m
Author: Denis Laxalde <denis@laxalde.org>
Date:   Tue Nov 19 15:01:32 2019 -0800

    Add a top-level __main__.py module (#453)
    
    This allows running pytype as `python -m pytype`.
    
    Resolves #453
    
    PiperOrigin-RevId: 281386933

[33mcommit 214eaccc8a5a901fd2ad34fa901e0f29fd187d87[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 19 14:34:53 2019 -0800

    Fix nondeterministic unittest pickle.
    
    As usual, I have no idea why this fix works - I just tried random things until
    main_test stopped failing.
    
    PiperOrigin-RevId: 281381444

[33mcommit bea9ebe957abb5755621f6f3144a589345806851[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 19 11:31:57 2019 -0800

    Cleanup: reduce the number of public methods for making instances of things.
    
    I counted eight different methods that do variations of this task. This change
    removes three:
    * Makes AtomicAbstractValue.to_instance() private.
    * Makes CallTracer.instantiate() private and renames it to _instantiate_var().
    * Inlines annotations_util.instantiate_for_sub().
    and improves documentation for the rest.
    
    PiperOrigin-RevId: 281340069

[33mcommit b348b37c84bbcf2e13c19da6f59511485609b937[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 18 14:30:33 2019 -0800

    Do a bit of cleanup around pytype's late annotations support.
    
    While poking around at how pytype handles late annotations, I noticed a few
    minor things that could be cleaned up:
    
    * The default for the `new_locals` parameter should be False, since it is used
      as a bool.
    * The f_globals and f_locals parameters to vm.make_frame are passed in by all
      callers, so they don't need to be optional.
    * The `not f_locals` check in abstract_utils.eval_expr is unnecessary.
    * vm.convert_locals_or_globals is a one-line function with a name that (imo) is
      not very clear: inlining the function makes its behavior more obvious.
    
    PiperOrigin-RevId: 281154376

[33mcommit e3a41fb38517a1969be7582e7e93c59d674f2f50[m
Merge: bdd600e5 19c49443
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 13 15:25:06 2019 -0800

    Merge pull request #452 from google/google_sync
    
    Google sync

[33mcommit 19c49443e57333c820d75b342ab54df21a9b72b2[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 12 16:29:28 2019 -0800

    Revert problematic pickle change.
    
    This change (likely) caused main_test.python3 to become flaky.
    
    PiperOrigin-RevId: 280082228

[33mcommit 0d8c18f332b08d3a88037401be9ae201bc5c13d7[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 11 14:29:20 2019 -0800

    Re-enable [ignored-metaclass].
    
    Also fixes a lint error in tests/py3/test_classes about backslash line
    continuation (not sure why lint complained about that line and not the
    countless others where we do pretty much the same thing).
    
    PiperOrigin-RevId: 279817795

[33mcommit bdd600e5658f30206571d4799d95a77ae756a331[m
Merge: 459ea901 52d716b1
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 8 15:02:26 2019 -0800

    Merge pull request #451 from google/google_sync
    
    Google sync

[33mcommit 52d716b167f3473a6cb4e1b6d35e92ce4fae4341[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 8 14:02:04 2019 -0800

    Add a short README to annotate-ast that notes that it's incomplete.
    
    Resolves https://github.com/google/pytype/issues/419.
    
    PiperOrigin-RevId: 279385767

[33mcommit ac7719bc098d1c95f40e6bea828474260fdaa8d4[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 8 13:34:24 2019 -0800

    Stop pinning clif_to_pyi to Python 3.6.
    
    As part of the 3.6->3.7 upgrade work, I'm fixing places where pytype and
    related tools assume 3.6 as the Python 3 version. clif_to_pyi is an easy case
    because it does not use the minor version at all. We can just set the
    --python_version flag to take a single int of the major version (2 or 3)
    instead of a major.minor tuple.
    
    The only tricky bit is that clif_to_pyi_test calls the pytype pyi parser, which
    requires a (major, minor) Python version. Since I ultimately want to give
    pytype the ability to take just a major version as well (so that we can say
    --python_version=3 and have pytype use whatever the latest runtime version is),
    I had clif_to_pyi_test pass the major version to pytype and added a new utils
    method, full_version_from_major, to convert to a (major, minor) version. For
    now, this method requires host Python 3 to work completely - optimistically,
    I'll have pytype running under Python 3 by default by the time the rest of the
    upgrade work is done. If not, I'll hardcode in a Python 3 version that this
    method should return in Python 2.
    
    I also removed some old and unnecessary logic in the parser to set the python
    version to a default of (2, 7, 6) if a version of None was passed in.
    
    PiperOrigin-RevId: 279379968

[33mcommit 560445f529f508fae680677fb92213a8a9c60623[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 7 10:11:12 2019 -0800

    Make dataclass checking on None stricter again.
    
    #Squeegee
    
    PiperOrigin-RevId: 279112115

[33mcommit 744d427c6eb8592481e920bf973fb0fd74d41b25[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Thu Nov 7 09:36:17 2019 -0800

    Internal change
    
    PiperOrigin-RevId: 279104554

[33mcommit 459ea901e0118cfbad5a7808622a4cc240498ac2[m
Merge: 55dcaa09 059d2138
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 6 13:23:23 2019 -0800

    Merge pull request #447 from google/google_sync
    
    Google sync

[33mcommit 059d213832e60f6db6faf4cad76e7724f3b6b653[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon Nov 4 10:48:36 2019 -0800

    Use a 2-tuple of None as the default value to next() call in AnnotateAstVisitor.
    
    The result of next() is unpacked into a 2-tuple so we fail to unpack if the default value of None is returned.
    
    PiperOrigin-RevId: 278415824

[33mcommit 8957d69f30b7d1bd2980bd594141e457b3d103aa[m
Author: murali <murali@google.com>
Date:   Thu Oct 31 09:52:26 2019 -0700

    Internal change
    
    PiperOrigin-RevId: 277742269

[33mcommit 7f9cc669d6bbb5749744ebda464dc4e7315cdad2[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 30 10:13:19 2019 -0700

    Use pickle protocol 2 instead of cPickle.HIGHEST_PROTOCOL in pytype.
    
    Python 3 introduced new pickle protocols, so the highest protocol is now 4, not
    2. However, we still need to be Python 2-compatible.
    
    PiperOrigin-RevId: 277530228

[33mcommit 07eb441dbd2473de2b88aecff523ba8d009be201[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 28 17:39:38 2019 -0700

    Fix a crash caused by an empty arg being passed to a function via starargs.
    
    PiperOrigin-RevId: 277179811

[33mcommit 957bc69ace836632f98be635fc30bc03ac6d8d80[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 28 14:51:30 2019 -0700

    Temporarily make dataclass error checking more lenient on None.
    
    PiperOrigin-RevId: 277148225

[33mcommit 2d22181b26d78979feeb4d6548614882c30039dc[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 28 14:21:36 2019 -0700

    Check attribute values in dataclasses against the full annotation.
    
    Previously, an annotation like Optional[str] was turned into a variable with
    values None and str, and then the value was checked against only None.
    
    I also removed an unused `node` parameter from merge_classes.
    
    PiperOrigin-RevId: 277141785

[33mcommit ba56c97748dba890afc00e9f40f4f85e1319258b[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 28 11:20:44 2019 -0700

    Handle non-utf8 string literals without crashing in pytype in host py3.
    
    PiperOrigin-RevId: 277105148

[33mcommit 55dcaa09d1973f17cef60b29392857be46f9fa59[m
Merge: eef238b3 b7306328
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 28 12:01:45 2019 -0700

    Merge pull request #442 from google/google_sync
    
    Google sync

[33mcommit b7306328bd899c5fa0bf5127160960e8607e1ad6[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 28 11:13:28 2019 -0700

    Move a TargetPython3BasicTest to tests/py3/.
    
    PiperOrigin-RevId: 277103388

[33mcommit 506874843dde928a9bf0ec9d4accb085fa56be9b[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 25 13:29:51 2019 -0700

    Upgrade typed_ast to the latest GitHub version.
    
    Upgrade done by:
    * `qu4 checkout` followed by `qu4 pop -a` to revert all patches.
    * removing an operation that's a no-op in the newest typed_ast version from the
      copybara config.
    * `copybara third_party/py/typed_ast/copy.bara.sky --destination-cl <this cl>`
      to do the upgrade.
    * `qu4 push` (or `qu4 push -f` + fix code + `qu4 refresh` when necessary) until
      all the patches are reapplied.
    
    PiperOrigin-RevId: 276749507

[33mcommit 0bedef4e6a04c255fd66ca5ec614781dd374769c[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 24 16:50:53 2019 -0700

    Slightly reformat annotation-type-mismatch.
    
    I noticed that this error is formatted as:
    
    <msg>
      Annotation: <blah>
      Assignment: <blah> [annotation-type-mismatch]
    
    After this change, it'll be formatted as:
    
    <msg> [annotation-type-mismatch]
      Annotation: <blah>
      Assignment: <blah>
    
    PiperOrigin-RevId: 276594456

[33mcommit 04c348564a222df7f5cc26a14a57004907a8abfd[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Oct 23 14:49:05 2019 -0700

    Change "builtin" to "stdlib" as these are not "builtins" in the Kythe sense but rather part of the python standard library.
    
    PiperOrigin-RevId: 276356037

[33mcommit fa38994ba3fc35810b90714fb187d4e77b1ea9fe[m
Author: tsudol <tsudol@google.com>
Date:   Wed Oct 23 14:03:23 2019 -0700

    For unknown function defaults, use Variables instead of raw Unsolvables.
    
    For some reason this didn't show up until class-syntax NamedTuples. I'm not
    sure why.
    
    PiperOrigin-RevId: 276346568

[33mcommit e901ca3773d9b3879729c10f85a7d8087193ee0e[m
Author: tsudol <tsudol@google.com>
Date:   Wed Oct 23 10:35:25 2019 -0700

    Make typing.Counter generic.
    
    The pytd definition for typing.Counter used Any ("?") instead of a type var,
    so the class could not be specialized. Fixes other small errors in the pytd
    def for Counter.
    
    Also adds a test for typing.Counter/collections.Counter to ensure new pytd def
    works correctly.
    
    PiperOrigin-RevId: 276303583

[33mcommit e49f7350d4932e6a4ab5185a17927879e686ae8a[m
Author: mdemello <mdemello@google.com>
Date:   Tue Oct 22 13:03:39 2019 -0700

    Temporarily disable the ignored-metaclass error to do a release.
    
    PiperOrigin-RevId: 276126622

[33mcommit eef238b37ba5e7ce30bbdbf3f57dc278a286d5b1[m[33m ([m[1;33mtag: 2019.10.17[m[33m)[m
Merge: 32e48826 7bcb44d7
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 17 16:02:08 2019 -0700

    Merge pull request #439 from google/google_sync
    
    Google sync

[33mcommit 7bcb44d7ed07a8f30f4fea51848fd06595795c46[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 17 15:11:46 2019 -0700

    Fix a pytype crash caused by adding late annotations to Class.members.
    
    PiperOrigin-RevId: 275348523

[33mcommit 3abb10baa897ba1e9f584dff51bd501cc247b6ca[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 17 14:19:36 2019 -0700

    Update pytype's __version__ and CHANGELOG for a PyPI release.
    
    PiperOrigin-RevId: 275337350

[33mcommit 03b9bcfa2cfea394c97834af3ead7765876fb0c6[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Thu Oct 17 12:02:46 2019 -0700

    Change pytype Kythe builtins corpus name to the less-generic "pybuiltins".
    
    In the process, fix a bug where "language" was being omitted for stdlib VNames.
    
    PiperOrigin-RevId: 275308594

[33mcommit 852cd2d10ee29538b5e5c440c045fd441f9e68fe[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 16 16:26:47 2019 -0700

    Change a subprocess call to handle spaces in the python exe path.
    
    Also cleaned up some old cruft that accumulated in pytype.pyc because we don't
    touch it often.
    
    * Fixes lint errors in tests.
    * Passes along command-line arguments that the python exe needs as a separate
      list rather than in a string.
    * Removes python_version argument to pyc.compile_src_string_to_pyc_string: this
      argument was needed only in the case when a python_exe of None was passed,
      but the only place that did this was pyc_test, so it's better to have the
      test construct the correct python_exe argument.
    * Removes unused pyc.compile_file method.
    
    Fixes https://github.com/google/pytype/issues/437.
    
    PiperOrigin-RevId: 275138827

[33mcommit 32e48826a4eeaf2a5964aab51bc111c280d0a0dc[m
Merge: d1a8e627 7b04bee9
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 16 16:36:25 2019 -0700

    Merge pull request #438 from google/google_sync
    
    Documentation Edits wording/grammer/cleanup (#431)

[33mcommit 7b04bee96711f4d1f1138255353ccc5f4c52c31c[m
Author: Victoria Zhong <SemicolonExpected@users.noreply.github.com>
Date:   Wed Oct 16 15:46:11 2019 -0700

    Documentation Edits wording/grammer/cleanup (#431)
    
    ln 17 - don't need the meaning, if we just replace it with a semicolon it can be inferred that static analyzers dont execute the code it runs on
    
    Resolves #431
    
    PiperOrigin-RevId: 275130550

[33mcommit d1a8e6277c4a350b83d93b09dc1619cab10b90a7[m
Merge: 46a743a6 d00b4414
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 15 17:43:35 2019 -0700

    Merge pull request #436 from google/google_sync
    
    Update README.md (#433)

[33mcommit d00b44148ad6a8826e7cfa4cd6c46ec79917d48e[m
Author: Alan Yee <alanyee@users.noreply.github.com>
Date:   Tue Oct 15 16:31:48 2019 -0700

    Update README.md (#433)
    
    Add link to LICENSE file
    
    Resolves #433
    
    PiperOrigin-RevId: 274914616

[33mcommit 46a743a6a1061a84e408e6f96beb2094fcd82a15[m
Merge: c4bfbefe 24de68be
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 15 16:16:42 2019 -0700

    Merge pull request #435 from google/google_sync
    
    Google sync

[33mcommit 24de68be825bb6bdb93b5a78eb4b317c44e676c0[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 15 15:38:44 2019 -0700

    Add missing MAIN field to toplevel_py_binary.
    
    Sorry for missing this in my previous CL - unlike py_binary, toplevel_py_binary
    always requires the main field.
    
    PiperOrigin-RevId: 274903831

[33mcommit 2b6fdec769163ecf9019b5b0f55a015aad4d75b3[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 15 14:35:39 2019 -0700

    Fix an incorrect cmake rule name: py_binary -> toplevel_py_binary.
    
    PiperOrigin-RevId: 274889925

[33mcommit 95274983cd539c82b517abe5f739fce9d6922beb[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 15 14:20:26 2019 -0700

    Support the PEP 484 empty tuple syntax in pyi files.
    
    Fixes https://github.com/google/pytype/issues/432.
    
    PiperOrigin-RevId: 274886637

[33mcommit 85fd95882df4671898fae8cf06dfc6f4d4ea3a7d[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 15 13:56:24 2019 -0700

    Fix pyi parser to handle trailing commas in namedtuple definitions.
    
    Fixes https://github.com/google/pytype/issues/434.
    
    PiperOrigin-RevId: 274881013

[33mcommit 4703f217e055d13c5ac016c04c010accc7314d6b[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 15 12:09:02 2019 -0700

    Fix handling of nested classes inside inactive conditions.
    
    For https://github.com/python/typeshed/pull/3346.
    
    PiperOrigin-RevId: 274858854

[33mcommit 9dd7db015535fbf1b0b391db81a9902ed16a0619[m
Author: mdemello <mdemello@google.com>
Date:   Tue Oct 15 10:35:00 2019 -0700

    FIX: Record dataclass and attrib fields in cls.members
    
    PiperOrigin-RevId: 274836283

[33mcommit 6546f25c5694f4cf9b8101244ecac19cd912fcac[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 14 13:52:29 2019 -0700

    Add simple binaries to traces and tyre to make debugging easier.
    
    PiperOrigin-RevId: 274652772

[33mcommit be7a93f43d0fe7d694d03dd0d1d2999b52bbea24[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 14 12:48:25 2019 -0700

    Clean up some cruft from the pytype verbosity change.
    
    * Sets the verbosity as early as possible because load_pytd.create_loader()
      does some logging.
    * Removes now-unnecessary logic to save+restore the verbosity in py3checker.
    
    PiperOrigin-RevId: 274637960

[33mcommit ab9ee4bf901bddf854c5a50ea912e707452ea028[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 11 23:22:38 2019 -0700

    Don't permanently change the logging level when pytype is called as a library.
    
    Previously, creating a config.Options object with default options changed the
    logging level. With this change,
    
    * The logging level isn't changed until pytype starts running.
    * The original logging level is restored afterwards.
    * The verbosity=-2 workaround is removed.
    
    I also fixed a couple of lint errors. I confirmed that setting the verbosity
    still works in pytype itself and pytype.tools.analyze_project, and that both
    python3_convert and modernize now show the info logs from tyre.
    
    PiperOrigin-RevId: 274311693

[33mcommit c4bfbefe390bf7d978a6b76c722f1524ab83986f[m
Merge: cac39cb3 1ce66a7a
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 10 13:19:27 2019 -0700

    Merge pull request #430 from google/google_sync
    
    Google sync

[33mcommit 1ce66a7a0062747b409ee5e75beb27ced17a2d55[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 10 10:13:38 2019 -0700

    Support additional typing.NamedTuple syntax in the pyi parser.
    
    For https://github.com/python/typeshed/pull/3321.
    
    PiperOrigin-RevId: 273980958

[33mcommit a82f8b0505429272e4889ec6e0ba144430c8afb5[m
Author: mdemello <mdemello@google.com>
Date:   Tue Oct 8 14:58:55 2019 -0700

    FIX: Remove classmethods and staticmethods from auto_attribs.
    
    PiperOrigin-RevId: 273612569

[33mcommit 86f97029d6d3a179d3aeca7180322fd19aad181a[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 7 16:44:58 2019 -0700

    Fix a crash caused by abstract.TypeParameter not having a call method.
    
    PiperOrigin-RevId: 273406727

[33mcommit 5a229d408843ef4100f9358b0bb6e969e7b7c4cb[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 7 15:37:54 2019 -0700

    Fix a crash by using AtomicAbstractValue.get_class().
    
    I was looking at the status dashboard and noticed a crash caused by trying to
    match a type against None.
    
    PiperOrigin-RevId: 273392251

[33mcommit cac39cb36a123084aeb5f926fe2ff0988cb9d57c[m
Merge: b44ee477 59a005df
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 7 16:03:08 2019 -0700

    Merge pull request #429 from google/google_sync
    
    Google sync

[33mcommit 59a005df34d91dea2e1e4e5b775c2c79de8baec0[m
Author: mdemello <mdemello@google.com>
Date:   Fri Oct 4 14:08:55 2019 -0700

    Allow type comments and pytype directives without a space.
    
    Now accepts the following:
      # pytype:disable=foo
      # type:bar
    
    as well as the variants with a space after the :
    
    PiperOrigin-RevId: 272954398

[33mcommit e5c52b6d767f6c8fe94ee2c55be852f053b6b4d9[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 3 16:42:53 2019 -0700

    Don't bind instance attributes to the node at which they're first accessed.
    
    We were getting odd errors if the first time an attribute was accessed was in a
    place not reachable from later accesses. The easiest fix is to bind the
    attribute to the root node so it is always visible.
    
    PiperOrigin-RevId: 272769229

[33mcommit 7d956cf4271b534f39a980f6a2e8580dfa05eaad[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 30 15:20:18 2019 -0700

    Look ahead up to 10 lines for traces to match '%'.
    
    PiperOrigin-RevId: 272077490

[33mcommit b44ee4770d32f9e752901feb4d2617b4e3ea14e2[m
Merge: 786460a9 45f5bc24
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 27 16:45:55 2019 -0700

    Merge pull request #427 from google/google_sync
    
    Copy the numpy stub to pytype so it can be used externally.

[33mcommit 45f5bc24d704500d5dc8227bd7015859efa5097a[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 27 15:01:42 2019 -0700

    Copy the numpy stub to pytype so it can be used externally.
    
    As with the attr stubs, we have to keep two copies, one in pytype for
    opensource users and one under third_party/py/ in order for that import path to
    resolve properly.
    
    Fixes https://github.com/google/pytype/issues/391 (well, the only part of it
    that we can do anything about for now).
    
    PiperOrigin-RevId: 271654867

[33mcommit 786460a925e3caebd61107dc198ad1e4b021e599[m
Merge: b1d95a01 2973d065
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 27 14:52:50 2019 -0700

    Merge pull request #426 from google/google_sync
    
    Google sync

[33mcommit 2973d065d44ab63e9e14c9c7241a856512282d86[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 26 13:26:22 2019 -0700

    Add a skipped test showing a pytype bug.
    
    PiperOrigin-RevId: 271417853

[33mcommit e8e72516d4453eddb12d3631364065dac3fbece7[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 25 12:47:03 2019 -0700

    When constructing methods in an overlay, validate the signature.
    
    NOTE: Resubmitting after a rollback because I cannot reproduce the failures.
    PiperOrigin-RevId: 271184242

[33mcommit b1d95a01adc0b38cee56ce6a02973c6245000052[m
Merge: a100d251 c18ee628
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 27 13:42:38 2019 -0700

    Merge pull request #425 from google/google_sync
    
    Resolve some TODOs in pytype.

[33mcommit c18ee628431c2a94a078a9702eae7ef607176c99[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 24 12:15:12 2019 -0700

    Resolve some TODOs in pytype.
    
    * The TODO in errors.py to not allow a filename of None is no longer necessary
      after the fix to use `filename or ""` when sorting errors.
    * file_utils.get_versioned_path is used outside of pytype/pytd now, so it does
      not make sense to move it to pytd_utils.
    * Remove a TODO referencing a no-longer-existing name in imports_map_loader.
    * Remove TODOs to review/improve pytd files that have been in active use long
      enough that I'm pretty sure they're reasonable.
    * Move some py2-only tests whose corresponding py3 bugs have been fixed to be
      target independent.
    * Remove what looks to be an already-fulfilled TODO in py3/test_annotations.
    * Our py2 vs. py3 test bucketization is long done, so complete a related TODO.
    * Remove a TODO from cfg.py, which is basically a reference file at this point,
      since the real code has been ported to C++.
    
    I also fixed lint errors as I encountered them.
    
    #Squeegee
    
    PiperOrigin-RevId: 270959139

[33mcommit a100d25110b0c87b2108275984f3581a0fe8d7db[m
Merge: c9f8e0e4 2a902abd
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 27 12:20:30 2019 -0700

    Merge pull request #424 from google/pylint
    
    Temporarily pin to an older version of pylint.

[33mcommit 2a902abd73f60aa60dfc28f59a4c526e18686598[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 27 11:38:38 2019 -0700

    Previous fix was wrong; try quotes instead.
    
    Okay, this is getting embarrassing.

[33mcommit 3813b78893b83afde726b81a6cc67cb5ea0dd5d9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 27 11:29:12 2019 -0700

    Fix version range syntax.

[33mcommit 94fbf426388fe62c4ca03f9b15b8722319df833d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 27 11:23:41 2019 -0700

    Request a range of versions rather than an exact one.

[33mcommit 087c9e33f4874fd9442fe476e8d03ca421b74da2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 27 11:16:33 2019 -0700

    Temporarily pin to an older version of pylint.
    
    See https://github.com/google/pytype/issues/423.

[33mcommit c9f8e0e44785f3b02fda54b642da68c51d9e5f6c[m
Merge: 01316989 74896cc3
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 23 13:39:37 2019 -0700

    Merge pull request #421 from google/google_sync
    
    Google sync

[33mcommit 74896cc387cc1b46872db2c7548d895800cdc279[m
Author: rechen <rechen@google.com>
Date:   Mon Sep 23 11:34:01 2019 -0700

    Remove unused import of overlay_utils in dataclass_overlay.
    
    The opensource linter was unhappy with this import.
    
    PiperOrigin-RevId: 270722708

[33mcommit 88d0044d0e9e4dd8969037f82d5bf513d4930fad[m
Author: mdemello <mdemello@google.com>
Date:   Fri Sep 20 14:51:51 2019 -0700

    Automated g4 rollback of changelist 270313313.
    
    *** Reason for rollback ***
    
    broke tap
    
    *** Original change description ***
    
    When constructing methods in an overlay, validate the signature.
    
    ***
    
    PiperOrigin-RevId: 270355446

[33mcommit e52d87eadc623a6dc3bf0967d5a5ce14784e5652[m
Author: mdemello <mdemello@google.com>
Date:   Fri Sep 20 11:25:54 2019 -0700

    When constructing methods in an overlay, validate the signature.
    
    PiperOrigin-RevId: 270313313

[33mcommit 9911f65f2283d3183e093c72e81a4b332fd212b5[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 19 17:03:06 2019 -0700

    Support dataclasses.field() for setting defaults.
    
    Checks that the type of the default or factory matches the annotated type.
    
    * Also adds a new error, annotation-type-mismatch
    
    #pyfixit
    
    PiperOrigin-RevId: 270157816

[33mcommit 13687d1d41908ec680ff0c2a86fd2690242c5dc4[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 19 16:19:58 2019 -0700

    Improve error reporting for Python 2-only metaclasses.
    
    As we discussed in the pytype meeting, we'll still respect __metaclass__ to
    avoid weird follow-on errors but report an error at the attribute definition.
    
    #pyfixit
    
    PiperOrigin-RevId: 270149405

[33mcommit 6eeac23625397557fa1298406f1f82265bb2767e[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 19 13:16:01 2019 -0700

    Fix matching of AnyStr against other type parameters.
    
    When a function accepts a Callable containing a single type parameter, pytype
    would not allow AnyStr to match that type parameter. Fixing this bug allows us
    to remove some unnecessary overloads from builtins.
    
    #pyfixit #Squeegee
    
    PiperOrigin-RevId: 270109463

[33mcommit bcc86d81512008e6d3d7f7cf3ff23b1f10590b72[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 18 18:36:42 2019 -0700

    Separate out constructing and applying class decorators.
    
    Makes classgen.Decorator abstract, with a decorate(cls) method that modifies a
    pytype Class object in place.
    
    Also adds support for arguments to @dataclass
    
    #pyfixit
    
    PiperOrigin-RevId: 269936625

[33mcommit c9671038fb53796c6818d28fd17bb9c974f9782a[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 18 16:49:59 2019 -0700

    Add a dataclass overlay.
    
    * Factors out a base class from attr_overlay into classgen.Decorator
    * Modifies vm.py to trace annotations to variables
    
    #pyfixit
    
    PiperOrigin-RevId: 269920349

[33mcommit 01316989d11b140a57e6a761d046aafa5ce8bb5e[m
Merge: ccb1e81a 75c9fa73
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 19 17:08:23 2019 -0700

    Merge pull request #418 from google/google_sync
    
    Google sync

[33mcommit 75c9fa73a8654e70ff4cb5d9439b89e0a132bed7[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 18 15:32:43 2019 -0700

    Add support for the % operator to traces and tyre.
    
    This operator is needed to get types for string interpolation. Since supporting
    binary operators generally is more complicated, we punt on the other operators
    by returning NotImplemented in match_BinOp for now.
    
    #pyfixit
    
    PiperOrigin-RevId: 269905235

[33mcommit eb443792ece4e1017133cf2d223948ee802f9595[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 18 12:38:58 2019 -0700

    Keep going with pytype analysis after recursion is encountered.
    
    Previously, any time a function called itself, pytype would not analyze any
    code that occurred after the self call. This bug manifested itself as
    tyre.fixes.fix_string_ops adding six.ensure_str() around str() because the str
    construction occurred right after the recursive call.
    
    The fix is to catch the recursion error immediately after it occurs and return
    an unsolvable. Previously, we were catching it further up the stack and
    aborting analysis early.
    
    #pyfixit
    
    PiperOrigin-RevId: 269866945

[33mcommit 1778f6d96b834961ac5a5243941d3391eeee7ff0[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 17 17:06:03 2019 -0700

    Look ahead up to 5 lines when tracing function calls.
    
    The line number of the CALL_* opcode is the last line of the call (or the
    second to last, if the last contains only a closing parenthesis), but the line
    number of the ast node is the first line. The easiest workaround is to look
    ahead a few lines for the opcode. I picked 5 because attribute lookahead uses
    this value and it seemed as good as any.
    
    #pyfixit
    
    PiperOrigin-RevId: 269687977

[33mcommit 08fb467644de421eb74929a1bab38b50e89e258a[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 17 15:35:02 2019 -0700

    Add missing __qualname__ attribute to functions.
    
    #pyfixit
    
    PiperOrigin-RevId: 269669953

[33mcommit bf322fa72e8ce6f731d77c2fd39ec6c87a7c4948[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 17 15:34:17 2019 -0700

    Don't recognize py2-only metaclass syntax in py3.
    
    Previously, pytype recognized `__metaclass__ = ...` as setting a metaclass in
    Python 3, even though it does nothing useful.
    
    Fixing this issue is a one-line change; the rest of this CL shuffles tests
    around and tweaks documentation.
    
    #pyfixit
    
    PiperOrigin-RevId: 269669807

[33mcommit ccb1e81a7110c7a6df9b5d70bcc2f59b6957ea37[m[33m ([m[1;33mtag: 2019.09.17[m[33m)[m
Merge: 49e6c735 c3528038
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 17 15:01:48 2019 -0700

    Merge pull request #415 from google/setup
    
    Add pytype/overlays/ as a new subpackage.

[33mcommit 49e6c735d23d044d69acd73be1ac16fe4781ea26[m
Merge: 95ebca39 44f12293
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 17 15:01:35 2019 -0700

    Merge pull request #416 from google/google_sync
    
    Google sync

[33mcommit 44f122935d682a3af3e1c2a5b6f7a2b7a77ef9fb[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 17 13:44:30 2019 -0700

    Make pytype/overlays/ work with the opensource build.
    
    * Edits CMakeLists.txt files to make tests pass.
    * Adds empty overlays/__init__.py for subpackage recognition in Python 2.
    
    I also opened https://github.com/google/pytype/pull/415 to list overlays in
    setup.py's packages.
    
    PiperOrigin-RevId: 269645358

[33mcommit 6964cb0b3033cdb09db032a56f5f7a2936c8339d[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 17 11:23:47 2019 -0700

    Update pytype's __version__ and CHANGELOG for a PyPI release.
    
    http://dashboards/pytype_status looks good.
    
    PiperOrigin-RevId: 269613231

[33mcommit 034863163714c15736b562392fce4b3af345c826[m
Author: mdemello <mdemello@google.com>
Date:   Mon Sep 16 15:46:59 2019 -0700

    Move overlays to a subdirectory.
    
    Note that due to circular import issues they cannot be moved into their own
    build target.
    
    PiperOrigin-RevId: 269438897

[33mcommit 103f53d172885f1da6c54fc29980dd9ec086b8b9[m
Author: Piotr Domański <6.domandinho@gmail.com>
Date:   Mon Sep 16 13:27:46 2019 -0700

    Temporary fix for sorting errors (#412)
    
    An alternative way to avoid exception during sorting errors.
    
    Resolves #412
    
    PiperOrigin-RevId: 269407191

[33mcommit bc7c5858f86a659c970ad12ef8709f9c3b4e7465[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 11 11:18:07 2019 -0700

    Fix some xref issues exposed by //third_party/aimee/clara2_labs/core:clara_slots
    
    * Fix pytype traces for LateAnnotations
    * Handle multiline function definitions.
    * Handle class definitions within a function body
    * Don't crash the callgraph generator if pytype hasn't annotated or
      traced a function properly
    
    PiperOrigin-RevId: 268500582

[33mcommit c3528038d08a395276c66c0dd0a210346905f28c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 17 12:33:34 2019 -0700

    Add pytype/overlays/ as a new subpackage.

[33mcommit 95ebca39d72567ef5e8a4be86f1787893a39184d[m
Merge: db1fca13 435f9be3
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 6 17:01:30 2019 -0700

    Merge pull request #404 from google/ts
    
    Update typeshed to 668988fa8cfd106a73218b23f953f226db89b3d4.

[33mcommit 435f9be361213b7bc2d0e628f166c53c8e972fe1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 6 14:36:04 2019 -0700

    Update typeshed to 668988fa8cfd106a73218b23f953f226db89b3d4.
    
    This update contains a fix for https://github.com/google/pytype/issues/389 and
    a tempfile change that will help pytype distinguish between BytesIO and TextIO
    in tests.

[33mcommit db1fca13dd8da76841aafbee25302bd35a83cbdf[m[33m ([m[1;33mtag: 2019.09.06[m[33m)[m
Merge: 2edda9af 4694eb08
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 6 14:13:03 2019 -0700

    Merge pull request #403 from google/google_sync
    
    Google sync

[33mcommit 4694eb08680a573412f28af4a6d7b42f785a6245[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 6 11:37:34 2019 -0700

    Update pytype __version__ and CHANGELOG for a PyPI release.
    
    PiperOrigin-RevId: 267640611

[33mcommit 95ee65b562157e413c1c6ef15f4cb8b915445736[m
Author: tanujdhir <tanujdhir@google.com>
Date:   Tue Sep 3 11:16:18 2019 -0700

    Update IO write() to return int, as it returns the number of bytes written.
    
    See also https://github.com/python/typeshed/blob/b294782183/stdlib/3/typing.pyi#L470
    
    PiperOrigin-RevId: 266973062

[33mcommit 5e8fb38a0c7f086098682fefe57b36051c361507[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 29 16:22:29 2019 -0700

    Fixes for proto1_convert
    
    * Disable callgraph generation while we are developing the feature
    * Fix some leftover items in make_serializable()
    
    PiperOrigin-RevId: 266254339

[33mcommit 2edda9afc476879f6d19232c006d9e6914b41ddf[m
Merge: 5445b20e e1dc0c70
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 5 15:18:40 2019 -0700

    Merge pull request #402 from google/ts
    
    Update typeshed to ce0f5b226fc00c732e5b6eb2a9fcb845cd18531c.

[33mcommit e1dc0c70ec8c624d5431a5377855576de1f8be4a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 5 12:27:31 2019 -0700

    Update typeshed to ce0f5b226fc00c732e5b6eb2a9fcb845cd18531c.

[33mcommit 5445b20ec169b3d6f0aa8cbf8d567183f0a6ceec[m[33m ([m[1;33mtag: 2019.08.29[m[33m)[m
Merge: 2e89a7ba 8aa6ff32
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 29 15:32:44 2019 -0700

    Merge pull request #399 from google/google_sync
    
    Update pytype __version__ and CHANGELOG for a PyPI release.

[33mcommit 8aa6ff32ff5433685f054d117ada38d9fe0f0cb7[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 29 14:44:57 2019 -0700

    Update pytype __version__ and CHANGELOG for a PyPI release.
    
    http://dashboards/pytype_status shows only a handful of failures, none of which
    look like pytype bugs.
    
    PiperOrigin-RevId: 266233511

[33mcommit 2e89a7bafc40f32fe3f5b151368180fad3da6889[m
Merge: a5c85aac 3d82d9be
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 28 17:51:15 2019 -0700

    Merge pull request #398 from google/ts
    
    Update typeshed to fab2ee0d7c38dba0a5142924e53460548fdce0b0.

[33mcommit 3d82d9be742b6197e79805090c9a3bf0e70f2646[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 28 17:13:58 2019 -0700

    Update typeshed to fab2ee0d7c38dba0a5142924e53460548fdce0b0.

[33mcommit a5c85aaca0534730974c1c6fe6f625b1e413fa7c[m
Merge: 0e8e75a6 afdbe75e
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 28 16:51:43 2019 -0700

    Merge pull request #397 from google/google_sync
    
    Google sync

[33mcommit afdbe75ebad61ceacef45f35ce61bf0965e043e2[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 28 14:47:26 2019 -0700

    Use compat.native_str instead of six.ensure_str.
    
    The open source tests were complaining about six.ensure_str not existing in
    some Python versions. Since we already have our own compat function that does
    the same thing, it's easier to switch to that than figure out what's going on
    with six.
    
    PiperOrigin-RevId: 265998386

[33mcommit 80d1ff28ae460a5681850e2273cbf34b2f12919d[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 28 12:17:15 2019 -0700

    Move a type-annotated test to the appropriate bucket.
    
    PiperOrigin-RevId: 265965570

[33mcommit fca9a22b5a683fead5adcda4b525b21099a8384c[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 28 11:58:10 2019 -0700

    Fix a crash caused by a variable having no bindings.
    
    PiperOrigin-RevId: 265961535

[33mcommit b70b072c2a5c6696d6e25eba499e9afa3c9e0b4d[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 28 11:50:49 2019 -0700

    Use the first line of a class's body as the end of the ClassDef.
    
    Class definitions have a lot of corner cases; rather than try to account for
    them all, we simply bound the end of the "def class" statement by the first
    line of the body.
    
    PiperOrigin-RevId: 265959920

[33mcommit f463ac43935be5a1ac7892e9d173c12447f5169b[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 28 10:47:53 2019 -0700

    Use a function's call records to infer the types of its parameters.
    
    PiperOrigin-RevId: 265944009

[33mcommit 63d198868bf991e026246b50cf8558a8a63f7051[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 27 11:25:57 2019 -0700

    FIX: Properties in a generic class should be able to be annotated with the
    class type params.
    
    PiperOrigin-RevId: 265727845

[33mcommit 33cb76fbffe3d749926f0682faeeae88c6797f77[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 26 15:26:22 2019 -0700

    Trace all bindings of a function call together.
    
    This change allows us to better handle multiple same-named function calls on
    the same line.
    
    PiperOrigin-RevId: 265553790

[33mcommit 76ea6e6637392c1dc63efd863b5f3dc3f017a97b[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 26 13:53:43 2019 -0700

    Implement MatchAstVisitor.match_Subscript for subscript accesses.
    
    * Adds a _suppress_opcode_tracing method to the vm to avoid tracing function
      calls for binary operations. I also noticed that the hack used to avoid
      tracing function calls for properties was broken, so I replaced that hack
      with this one.
    * Changes _get_traces to match on either a single symbol or a tuple of symbols
      so we can match both __getitem__ and __getslice__.
    * Moves the attribute matching tests into their own test case.
    
    PiperOrigin-RevId: 265533024

[33mcommit 3ce6717939a17d2ac54ff0b162ba1056280d3605[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 26 12:07:35 2019 -0700

    Add an experimental --precise-return mode to pytype.
    
    This mode causes pytype to use the first return type it finds in the case of a
    failed function call, rather than Any. The immediate purpose is to improve
    opcode tracing, so that type errors don't immediately cause type information to
    be lost, but it's also a potential pytype improvement worth experimenting with.
    
    PiperOrigin-RevId: 265510179

[33mcommit 33f1cc5cf5d1ae2343d47e24e7c9964d975209b2[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 23 15:13:05 2019 -0700

    Support matching against typing.Literal function parameters.
    
    With this change, we should be able to support all Literal uses in typeshed
    that don't involve enums.
    
    #Squeegee
    
    PiperOrigin-RevId: 265144891

[33mcommit 0a5639e764bee28b8064e1a080925f0d82c8f01b[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 23 13:24:25 2019 -0700

    Rewrite google_utils to utils in all files in pytype/tools/xref/.
    
    Found one more test failure =/ Also, the Python 2 tests are passing locally but
    failing to even start on Travis, but hopefully that's just a transient issue.
    
    PiperOrigin-RevId: 265121559

[33mcommit 519ba5d5fc50b092f39491d402feff0d8600b63d[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 23 11:11:27 2019 -0700

    Have copybara ignore pytype/cmake/**.
    
    Changes to this directory are closely tied to pytype/build_scripts (which is
    already ignored) and only affect the open source tests.
    
    PiperOrigin-RevId: 265093693

[33mcommit 0e8e75a651c2ae9a88632d6d35d452de948939d6[m
Merge: 09648a9b 98c568ef
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 28 15:39:26 2019 -0700

    Merge pull request #396 from google/travis
    
    Add a verbose mode to print failing test logs to stderr.

[33mcommit 98c568ef8693dd2e58c239a64d3166af64e14905[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 28 15:00:01 2019 -0700

    Print logs to stderr rather than stdout.

[33mcommit 40af9428d0e85e74b9192d92da93286eb3431a2a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 28 14:41:04 2019 -0700

    Add a verbose mode to print failing test logs to stdout.
    
    Currently, when a test fails on Travis, we get no information except the
    test name and a path to a log file we can't access. Instead, we should
    print the log file to stdout.

[33mcommit 09648a9b088d244da86e0548ca4ea417c3de8c49[m
Merge: ba5acc06 a7aa8fc5
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 23 18:20:27 2019 -0700

    Merge pull request #395 from google/google_sync
    
    Google sync

[33mcommit a7aa8fc5e1104d333177348d1b390a74efde86e5[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 23 10:17:21 2019 -0700

    Remove unused imports, version check hack in xref.
    
    The imports change is to get the open source tests passing again, which also
    requires https://github.com/google/pytype/pull/394. After that PR, we'll no
    longer need most of the version checks in the tests.
    
    PiperOrigin-RevId: 265080707

[33mcommit bd9263f5431293dc5bba8f168bc30591063744f7[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 22 18:57:17 2019 -0700

    Import a README change.
    
    PiperOrigin-RevId: 264968002

[33mcommit 0f7f3b5d6d5c8e28eea5b0642f5885a9770acf80[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 22 16:59:37 2019 -0700

    Refactor the callgraph generator.
    
    Additional changes:
    * Adds a slot for the top-level module "function"
    * Augments a FunctionDef node with the pytype function signature.
    
    PiperOrigin-RevId: 264950633

[33mcommit 61e8cebd5576579ed8979dc5b4d83b0b6bf2c461[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 22 13:34:17 2019 -0700

    Rename abstract.Callable to abstract.CallableClass.
    
    We had Class, PyTDClass, InterpreterClass, ParameterizedClass, TupleClass, ...
    and Callable.
    
    PiperOrigin-RevId: 264907730

[33mcommit 7600b61bf8d2ad4f5ade875c8475856eb40fd2e9[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 22 12:10:28 2019 -0700

    Move kythe out of the IndexVisitor, and generate kythe facts in postprocessing.
    
    The indexer is increasingly being used for other applications, so it makes
    sense to decouple code indexing from kythe fact generation as much as possible.
    
    PiperOrigin-RevId: 264890164

[33mcommit 21e0c1058082f16ec19a3401bef3510dd3b7508b[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 19 16:07:12 2019 -0700

    Improve tracing of literals.
    
    * Adds match methods for literals.
    * Adds some test decorators to make it easier to run different tests in
      different host versions.
    * Tweaks _get_node_name to avoid NotImplementedError in the case that a method
      is called on a literal.
    
    PiperOrigin-RevId: 264264816

[33mcommit 3f24ab0703ab020517387b08014be4785583cd13[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 19 14:46:11 2019 -0700

    Count traces and keep track of already matched ones in MatchAstVisitor.
    
    * Fixes a match_Attr bug by not letting the same trace match multiple nodes.
    * Removes the need for some `break` statements by adding a `maxmatch` parameter
      to _get_traces().
    * Changes the MRO of xref.indexer.IndexVisitor to accommodate the fact that
      traces.traces.MatchAstVisitor and xref.indexer.ScopedVisitor both define
      enter_Module. Also resolves some lint warnings in xref.indexer.
    
    #Squeegee
    
    PiperOrigin-RevId: 264246775

[33mcommit 9304a28854a3b90ae35a4977f862b4c3c578bd78[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 19 13:31:11 2019 -0700

    Have proto1to2 use the xref indexer rather than detect_usage.
    
    * Reworks detect_usage/pytype_indexer to allow overriding process_file.
    * Removes some more unpicklable stuff from the index.
    * Adds generate_callgraphs=True when creating pickled indexes for testing.
    
    PiperOrigin-RevId: 264229285

[33mcommit b6c8792cb161c07562249691e3f4cf66b5841a98[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 19 11:55:28 2019 -0700

    Parse string literals in pyi files.
    
    * Turns BYTESTRING, UNICODESTRING, and unprefixed strings (previously treated
      as names) into STRING objects.
    * Stops supporting quoted forward references. Since pyi files natively support
      forward references, it's never necessary to quote them anyway. If we wanted
      to continue supporting quoted references, we'd have to either allow STRING
      everywhere a type is allowed or manually copy every rule involving `type` to
      create an equivalent one with STRING. The first option makes postprocessing a
      lot harder because, at the point a new type is created, we wouldn't know
      whether to keep the string prefix and quotes for use as a literal or to throw
      them away for use as a name. The second option is ugly. Thus, I'm inclined to
      drop support instead. All of typeshed still parses.
    * Makes a couple other tweaks to avoid parsing conflicts:
      * Allows only lists of string literals for __slots__ in the syntax, which
        simplifies their handling in parser.py.
      * Does not allow a list of types (e.g., `[int, str]`) as a top-level type.
    
    #Squeegee
    
    PiperOrigin-RevId: 264208245

[33mcommit 648d09cc18ac94314454ce247a9533965ae3966b[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 19 11:17:01 2019 -0700

    Update pytype CHANGELOG and fix a CMake bug.
    
    node_utils.py was still in the indexer target after being moved to its own
    target, and pytype.pytd_lib doesn't exist in CMake because it has empty srcs.
    
    PiperOrigin-RevId: 264198994

[33mcommit f825fd9513049b6638c2d3c23d8636ca1ee02b1c[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 15 17:07:09 2019 -0700

    Fix xrefs for multiline class definition statements.
    
    e.g.
    
      class A(
        B,
        C):
        ...
    
    #squeegee
    
    PiperOrigin-RevId: 263673986

[33mcommit 00e18151fe419c14737f7bd048056193c57a531b[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 15 16:09:08 2019 -0700

    Add a make_serializable() method that deletes pytype data from the index.
    
    PiperOrigin-RevId: 263662799

[33mcommit 0aaf3f4bb38b22fd32471ea81453491818e59985[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 15 16:01:38 2019 -0700

    Migrate xref/indexer from namedtuples to attrs.
    
    The primary motivation is to have mutable objects, but attrs are nicer anyway.
    
    PiperOrigin-RevId: 263661084

[33mcommit 18c4d15499b5357eb412379da82854db40ae8f25[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 14 17:37:23 2019 -0700

    Generate callgraphs within process_file, so that we need not preserve the vm
    
    PiperOrigin-RevId: 263467264

[33mcommit 8f3eef0ae36feaee2d42d3a7e6428057fa7e3da4[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 14 16:20:42 2019 -0700

    Get rid of the global ast variable in xref.
    
    Also move some utility functions shared by callgraph into node_utils.
    
    PiperOrigin-RevId: 263453217

[33mcommit ba5acc06de9fcfaba8d16629eed16b2ae15b12ee[m
Merge: 00d01da7 7ab82d77
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 23 10:12:51 2019 -0700

    Merge pull request #394 from google/test
    
    Don't lint or test xref in Python 2.

[33mcommit 7ab82d77d1175f59c9421f41c8124712669417e5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 22 20:11:36 2019 -0700

    Don't lint or test xref in Python 2.

[33mcommit 00d01da75ea6bf44afb09eb8d2f688d12245a4ea[m
Merge: dce214e9 2c3c2393
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 22 18:46:36 2019 -0700

    Merge pull request #392 from caleb15/patch-1
    
    add WSL directions

[33mcommit 2c3c2393b5133a4c89d779cabaf3a9ea736dd5cb[m
Author: Caleb Collins-Parks <46505081+caleb15@users.noreply.github.com>
Date:   Thu Aug 22 17:05:09 2019 -0700

    use code block to be consistent

[33mcommit 104e23d59852ea944dff9603897c3e47f7497ea3[m
Author: Caleb Collins-Parks <46505081+caleb15@users.noreply.github.com>
Date:   Wed Aug 21 14:37:25 2019 -0700

    add WSL directions
    
    You can install pytype if you use WSL on windows.

[33mcommit dce214e93259e4f121366683a0a12a790b994b33[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Aug 15 16:59:04 2019 -0700

    Add attrs as a dependency (#390)

[33mcommit 500b568b0ecc79fa76a163ed4c4ad03325726028[m
Merge: ae5e632b 9728259b
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 14 18:49:56 2019 -0700

    Merge pull request #388 from google/google_sync
    
    Google sync

[33mcommit 9728259b7a4283607867db926a8c3c5a0b0ea1d3[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 14 15:47:08 2019 -0700

    callgraph_test: also exclude typed_ast imports in lower versions.
    
    I forgot to do this the first time around ><
    
    PiperOrigin-RevId: 263446233

[33mcommit d36b0d17ef2ff4a131267ad436ed068dd64b411d[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 14 14:47:03 2019 -0700

    Only run xref.callgraph_test in Python 3.5-6.
    
    This workaround is ugly, but I dug a bit more into how the opensource tests
    run, and the only alternative I can think of is to change
    https://github.com/google/pytype/blob/ae5e632bd85f57f73630bef9932e05a9d84fa98f/cmake/modules/PyTypeUtils.cmake#L40
    to add separate test_all_27, ..., test_all_37 targets that each omit certain
    tests, and that seems pretty terrible as well.
    
    PiperOrigin-RevId: 263433508

[33mcommit 6863eaab660bc9dcac9e8081bae5877fb9da99d2[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 14 13:32:01 2019 -0700

    Improve usability of pytype.io.
    
    * Makes the loader object optional for all public functions in io.py, since we
      don't expose the load_pytd module.
    * Reorders some parameters so the order is always options, then loader.
    * Makes the errorlog a returned value instead of a parameter that is passed in
      to be modified - this is just a better design =P
    * Makes the config object optional for check_py and generate_pyi, to make the
      default options easier to use.
    * Exposes the errors module as part of io_lib, since we have public functions
      that return errors.ErrorLog objects.
    
    PiperOrigin-RevId: 263417060

[33mcommit f0649af9818b54cce5edff8e38222b95c18c2181[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 14 12:59:22 2019 -0700

    Add missing BaseException.__suppress_context__ attribute.
    
    Fixes https://github.com/google/pytype/issues/367.
    
    PiperOrigin-RevId: 263410172

[33mcommit 4b8ec8595c48ae246572bd6c75e5ba8a19e9b515[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 13 16:46:36 2019 -0700

    Capture function parameters and annotated types in the callgraph.
    
    PiperOrigin-RevId: 263243809

[33mcommit b91597500c159ba6cb0df6b4ecbac67e2370d617[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 12 14:43:08 2019 -0700

    Add basic callgraph functionality:
    
    * Track outgoing method and function calls within a function body
    * Track function parameters and return types
    
    Currently, parameters are typed as typing.Any due to the way opcode traces
    work, they will need to be adjusted based on the eventual type of the function
    when pytype completes its inference.
    
    Design doc: https://docs.google.com/document/d/1zC-yh6C1XH3cPqcpZNvdasJX7E1TsQxRR3Tt9Kcd6dU/edit?usp=sharing
    
    PiperOrigin-RevId: 263008743

[33mcommit ae5e632bd85f57f73630bef9932e05a9d84fa98f[m[33m ([m[1;33mtag: 2019.08.09[m[33m)[m
Merge: 2afef389 8c0141ec
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 9 17:37:08 2019 -0700

    Merge pull request #382 from google/google_sync
    
    Google sync

[33mcommit 8c0141ecdbca487156d57a647b99d685f3542e3e[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 9 16:57:14 2019 -0700

    Fix a parse error caused by typing.Literal.
    
    typeshed has started using typing.Literal, and our attempt to partially support
    it was causing a parse error.
    
    After this, I think the PyPI release is finally actually ready...
    
    PiperOrigin-RevId: 262661172

[33mcommit f0ed8c871abfbb83db91f824a65e7833f7f19edd[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 9 15:34:53 2019 -0700

    Remove DESCRIPTION.rst.
    
    https://github.com/google/pytype/pull/381 updates pytype to directly use
    README.md for the PyPI description, so we no longer need this file.
    
    PiperOrigin-RevId: 262647283

[33mcommit 27b3da49c2aea5549ab21c4f5a8c38a0c544114c[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 9 12:27:47 2019 -0700

    Update README to include all current pytype subtools.
    
    PiperOrigin-RevId: 262610790

[33mcommit 2d17f71cd8bca39a9d4ad30385f2dbfe2ad8ff99[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 9 12:10:41 2019 -0700

    Make pytd_utils publicly available.
    
    The immediate motivation for making this public is that I want to use
    pytd_utils.JoinTypes in tyre, but I've been thinking for a while that it makes
    sense to make the pytd utilities public since the definitions already are.
    
    Untangling pytd_utils from :pytd_for_parser also allowed me to break the
    circular dependency between pytd and pytd_utils by removing pytd.Print.
    
    * Moves all uses of pytd.Print to pytd_utils.Print.
    * Creates new targets pytd_utils and parse_constants and adds pytd_utils to
      public target pytd_lib.
    * Turns the ASTeq and ASTdiff methods on pytd.TypeDeclUnit into functions in
      pytd_utils instead. ASTdiff needs to be moved because it depends on
      pytd_utils.Print, and I moved ASTeq as well for consistency.
    * Deletes pytd.Print.
    * Moves three visitors that pytd_utils depends on - CollectTypeParameters,
      ExtractSuperClasses, and PrintVisitor - into pytd_visitors, since pytd_utils
      can't depend on visitors.
    * Alphabetizes the visitors in pytd_visitors for easier future maintenance.
    * Corrects lint errors.
    
    #Squeegee
    
    PiperOrigin-RevId: 262607897

[33mcommit b3a5c16dc0e547f1f58bbd8b7085e36dd8bd9a13[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 9 11:52:21 2019 -0700

    Cleanup the pytype BUILD and CMake files.
    
    * Removes a stray srcs entry in :pytd.
    * Reorders CMakeLists.txt to follow the BUILD file.
    
    PiperOrigin-RevId: 262604270

[33mcommit 2afef389eacd5693fd23033f2cacd7ee5a70c979[m
Merge: 8de2b5f5 e88aba76
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 9 15:56:38 2019 -0700

    Merge pull request #381 from google/desc
    
    Use README.md for the PyPI description.

[33mcommit e88aba7643195fc95906e252f451a9577e7e9bbb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 9 15:21:42 2019 -0700

    Use README.md for the PyPI description.
    
    As it turns out, reStructuredText is not happy with unicode characters.
    But since March 2018, PyPI has allowed using markdown for the long
    description, which works: https://test.pypi.org/project/pytype/.

[33mcommit 8de2b5f55ecc45b13ae48fc6935482b8899e1a79[m
Merge: 46156ac8 de095ad6
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 9 12:46:14 2019 -0700

    Merge pull request #380 from google/annotate
    
    Add an entrypoint for annotate-ast to setup.py.

[33mcommit de095ad6147be48075159bb25cbff2b70a9daa96[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 9 12:06:02 2019 -0700

    Add an entrypoint for annotate-ast to setup.py.

[33mcommit 46156ac857ae1f14a467d51b86512ff81f890735[m
Merge: e4ee23d4 b930c654
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 9 12:02:20 2019 -0700

    Merge pull request #378 from google/google_sync
    
    Google sync

[33mcommit b930c654290a3299ebc06946f3eb04c7eeab37ec[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 9 11:26:24 2019 -0700

    Fix a Python 3.7 bug in traces.
    
    This came up in the opensource tests - in 3.7, a new CALL_METHOD opcode was
    added. I thought about whether traces_test should use pytype.tests.test_base in
    order to test in every target Python version in every host version, but that
    seems like overkill for now.
    
    PiperOrigin-RevId: 262597779

[33mcommit 0188636e9ee9de82adfc7735368e627c06669505[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 8 15:20:04 2019 -0700

    Prepare pytype for the next PyPI release.
    
    * Updates the version and CHANGELOG.
    * Makes xref:indexer_test and xref:parse_args_test runnable on Travis. We
      should have some testing, since we offer the pyxref tool.
    * Adds a missing line to annotate_ast/CMakeLists.txt and removes an unnecessary
      dep and unused library from xref/BUILD.
    * Corrects lint warnings.
    
    Once this change is exported to GitHub, I'll follow up with a PR to add an
    entrypoint for annotate-ast to setup.py and install typed_ast for Travis tests.
    
    PiperOrigin-RevId: 262444374

[33mcommit 5049102e7c459ffd4d957f7bfe5df824c84bc30b[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 8 13:54:04 2019 -0700

    Implement MatchAstVisitor.match_Call.
    
    * Augments the call_function traces to include the return value.
    * Adds MatchAstVisitor.match_Call, including a _get_node_name method to get the
      function name from the node.
    * Adds tests, which involved splitting up MatchAstVisitorTest and replacing
      assertTraceEqual with assertTracesEqual to reduce boilerplate.
    
    PiperOrigin-RevId: 262425913

[33mcommit 3ea8dcb10bf6faadfbfb88b94ddf17664154ebae[m
Author: mdemello <mdemello@google.com>
Date:   Thu Aug 8 13:16:03 2019 -0700

    Add pytype data to definitions in the indexer.
    
    This is the first step towards generating typed call graphs for proto1to2.
    
    Design doc: https://docs.google.com/document/d/1zC-yh6C1XH3cPqcpZNvdasJX7E1TsQxRR3Tt9Kcd6dU/edit?usp=sharing
    
    PiperOrigin-RevId: 262418162

[33mcommit 11263b563f2a18cb64c1918cb20ecd5b6d9a322d[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 8 11:42:00 2019 -0700

    Fix a bad function name in pytype error messages.
    
    For nested classes, we were repeating the class prefix in the function name.
    While adding a test, I also noticed that an old test wasn't actually running
    because the "test" prefix in the method name was missing, so I fixed that also.
    
    PiperOrigin-RevId: 262399833

[33mcommit 4422ac2834deb003033c941e56fdd04182862ceb[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 6 15:56:44 2019 -0700

    Add a small wrapper binary to annotate_ast, to help iterate faster.
    
    PiperOrigin-RevId: 262014423

[33mcommit a94a785839825e2d207306010144b9eef9034193[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 5 16:58:56 2019 -0700

    Revert tyre changes to the kythe indexer.
    
    tyre is now using the underlying traces library, so these changes to make
    xref.indexer track pytd types are no longer needed.
    
    I also added a traces test for converting unknowns to Any, which was covered by
    the xref.indexer tests that I'm removing.
    
    PiperOrigin-RevId: 261801244

[33mcommit 7ed58b2bb002846ef0bb9dc741dc91abb1f3e188[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 5 16:12:26 2019 -0700

    Partially support typing.Literal matching.
    
    * Removes the keep_literals test flag and converts literals to abstract values
      in a safe way in convert.py. Converting an instance of a literal works
      properly, but converting the literal type itself for now just returns the
      type of the value while throwing away the fact that we had a literal value.
    * Adds some tests with a lot of TODOs.
    * Tweaks some visitors to account for pytd.Literal natively representing a
      generic type and nested constants now being possible (Literal[True]).
    * Reports [not-supported-yet] for creating literals in source files.
    * Allows importing Literal from both typing and typing_extensions. This is
      easier to implement and also will make the pytype change easier when Literal
      makes the move from typing_extensions to typing.
    
    #Sqeegee
    
    PiperOrigin-RevId: 261792433

[33mcommit 6c663ada592a039e9a1f766d95437b4cfcb2204a[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 5 14:41:28 2019 -0700

    Revert annotate_ast changes to the kythe indexer.
    
    This looks like it was an earlier iteration of pytype/tools/annotate_ast, so
    I'm guessing it's not needed anymore.
    
    PiperOrigin-RevId: 261773052

[33mcommit cf5fd430c1fc4ad4b1b3c6c5884f29bba880a791[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 5 13:59:27 2019 -0700

    Update annotate_ast to use the new traces library.
    
    * Uses traces.trace() and traces.MatchAstVisitor to simplify annotate_ast.
    * Also makes two small unrelated fixes that I happened to notice: the filename
      doesn't need to be a separate argument because it's a pytype option, and the
      Python version should be `python_version`, not `version`. (The Options object
      accepted the latter because there happens to be an unrelated option, the
      pytype version, called `version`...)
    
    PiperOrigin-RevId: 261763276

[33mcommit 8a98cfcf9e50713afd0ca9ec0978719b55eafb7f[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 5 10:19:44 2019 -0700

    Implement abstract.BuildClass.to_type().
    
    The __build_class__ builtin is a function that creates a new class. It needs a
    to_type() implementation because it appears in opcode traces.
    
    PiperOrigin-RevId: 261712600

[33mcommit e4ee23d40c9bc1bff4be83743621e4ab1691cafe[m
Merge: bde50055 843c57af
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 8 16:29:01 2019 -0700

    Merge pull request #377 from google/travis
    
    Install typed_ast before running Travis tests.

[33mcommit 843c57afc822e76502af295e00989d68a64d8d1d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 8 15:34:42 2019 -0700

    Install typed_ast before running Travis tests.

[33mcommit bde50055b5baeaa2ded33efb1fb2104a7a92701f[m
Merge: 3dff6b72 a18f1222
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 7 14:01:40 2019 -0700

    Merge pull request #373 from google/setup
    
    Add new pytype/tools/ subdirs to `packages` in setup.py.

[33mcommit a18f1222809be2209a87adfc0e0083ec4b803171[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 5 15:39:21 2019 -0700

    Add new pytype/tools/ subdirs to `packages` in setup.py.
    
    Fixes https://github.com/google/pytype/issues/372.

[33mcommit 3dff6b72160a55825b56fd78e7fba1c9b0f0e715[m
Merge: 8f90fdc6 09c064d0
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 2 18:51:53 2019 -0700

    Merge pull request #370 from google/google_sync
    
    Google sync

[33mcommit 09c064d096a99ec74aaef135b875a1f86d18be8f[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 2 17:21:44 2019 -0700

    Tweak traces to get the opensource tests passing.
    
    * Removes some google-isms from the tests.
    * Accommodates some changes to the ast module in 3.7.
    
    PiperOrigin-RevId: 261421809

[33mcommit b8a6c775b077ec4f311feddb8547662927bfc77e[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 2 16:42:34 2019 -0700

    Remove deleted pytd files from CMakeLists.txt.
    
    PiperOrigin-RevId: 261416174

[33mcommit ae3a08e0ae04f0325a1bdbcb4e6ea4a2c6eb708e[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 2 15:25:16 2019 -0700

    Implement pytype.tools.traces.traces.MatchAstVisitor.
    
    * Adds match_Attribute, match_Import, and match_Name. These node types are the
      ones that generate references, so MatchAstVisitor will produce all the types
      that the indexer currently does, plus some types for definitions.
    * Uses the new match methods in xref/indexer.py.
    
    PiperOrigin-RevId: 261402829

[33mcommit 06e03ec71a7f820b2d0bb8cce60eba2a934a7c76[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 2 14:24:29 2019 -0700

    Add pytype.tools.traces.traces.trace().
    
    * Implements the traces.trace() method that generates pytd traces.
    * For now, the only place this method is used is in traces_test, but it'll make
      writing tests for traces.MatchAstVisitor easier.
    
    PiperOrigin-RevId: 261391277

[33mcommit 97ff739a30e61db0e74b4a3cd04432da7ff374aa[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 2 14:09:15 2019 -0700

    Add the skeleton for pytype.tools.traces.traces.MatchAstVisitor.
    
    * Adds an AbstractTrace class to wrap traces.
    * Adds a VmTrace subclass of AbstractTrace for use by xref/indexer.py.
    * Moves the assign lineno tracking to a new MatchAstVisitor, which will
      eventually use the information to implement match_Name.
    * Adds MatchAstVisitor.match, which for now raises NotImplementedError for
      every node type.
    
    PiperOrigin-RevId: 261388232

[33mcommit 290290cd66314b9fd1f28668fac03e90d553c65d[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 1 10:31:18 2019 -0700

    Add tests for pytype.tools.traces.source.
    
    * Adds source_test.
    * Fixes off-by-one errors in get_closest_line_range, next_non_comment_line.
    * Renames find_text to find_first_text.
    * Adds and standardizes docstrings.
    
    PiperOrigin-RevId: 261148510

[33mcommit 2408ee54a261fb4b14a4ce2af688726e7d55eecc[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 31 15:13:19 2019 -0700

    Remove pytype workarounds for previously missing/unparseable stubs.
    
    This has been bothering me for a while. Typeshed has added quite a few new
    stubs over the years, and pytype's parsing has also improved, but we've kept
    around now-unnecessary stubs and entries in missing.txt. This cleans all that
    up, fixes the tests, and resolves some lint warnings in the tests.
    
    PiperOrigin-RevId: 261007907

[33mcommit 3ea98f683f0a092d67eb686bc6be9daa96c9e774[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 31 15:07:18 2019 -0700

    Fix a broken pytype test.
    
    PiperOrigin-RevId: 261006776

[33mcommit f84123b1f5a4976be52a4a9be1e5eabab6e1d551[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Jul 31 13:47:53 2019 -0700

    Support `default` kwarg to `max` and `min` builtins
    
    When only one positional argument is passed, `min` and `max` allow a `default` keyword argument, which is returned if the supplied iterable is empty.
    
    > There are two optional keyword-only arguments. [...] The default argument specifies an object to return if the provided iterable is empty. If the iterable is empty and default is not provided, a ValueError is raised.
    > New in version 3.4: The default keyword-only argument.
    
    From https://docs.python.org/3/library/functions.html#max
    
    PiperOrigin-RevId: 260990884

[33mcommit 070041ed16ba97e71b39faf8519a76b900179d80[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 31 13:18:04 2019 -0700

    Copy unicode "logo" over to the opensource docs.
    
    PiperOrigin-RevId: 260985665

[33mcommit 8681c27af4877d1769b66528d37bd2e5826b95c7[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Jul 31 13:04:13 2019 -0700

    Adopt a unicode pytype "logo" :)
    
    PiperOrigin-RevId: 260983255

[33mcommit e04b09a0fb04a57428601aae49f1595a76f91833[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 31 10:44:27 2019 -0700

    Fix: don't unwrap trace data until we're sure what the opcode is.
    
    PiperOrigin-RevId: 260955670

[33mcommit 5be26144e97876c36485600e50d23d181519f718[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 30 15:09:50 2019 -0700

    Partially support parsing of typing.Literal in pyi files.
    
    * Supports Literal[<bool>], Literal[<int>], Literal[None], and Literal[<enum>].
      Literal[None] is simplified to None.
    * Makes Literal[<string>] half-work and adds comments about what's broken.
    * Allows importing Literal from both typing and typing_extensions.
    * Rewrites Literal[x, y, ...] to Union[Literal[x], Literal[y], ...].
    * Raises a parse error if literal values appear outside Literal.
    * Turns all Literal nodes into Any at the end of parsing, since none of the
      rest of pytype supports them yet.
    
    PiperOrigin-RevId: 260804450

[33mcommit a62d48a6b0c08e3da0902737470e415788ca0ce1[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 30 13:53:23 2019 -0700

    Start pytype.tools.traces.source.
    
    Moves the SourceLocation and SourceFile objects over to traces.source, with a
    few simple changes. Bigger changes, tests, etc., will be in a follow-up.
    
    * Makes a few methods that weren't being used outside SourceFile private.
    * Renames SourceFile to source.Code.
    * Moves get_attr_location to source.Code.
    
    PiperOrigin-RevId: 260788163

[33mcommit 295f8a22386ad632f9efc238e929e80ddfb7f4b0[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 30 12:33:18 2019 -0700

    Give opcode trace data a consistent type.
    
    * Makes sure the data is always a
      Tuple[Optional[List[AtomicAbstractValue]], ...].
    * Tweaks all code that uses this data accordingly.
    
    PiperOrigin-RevId: 260772015

[33mcommit 8f90fdc6a666c5af886d332ac3a5347d21a9a750[m[33m ([m[1;33mtag: 2019.07.30[m[33m)[m
Merge: 5ccca77b d834cfce
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 30 12:40:45 2019 -0700

    Merge pull request #369 from google/google_sync
    
    Allow trailing commas in lists in type stubs.

[33mcommit d834cfcec446f629aed02ed8000597cd4687899a[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 30 11:59:16 2019 -0700

    Allow trailing commas in lists in type stubs.
    
    Addresses failing pytype test in https://github.com/python/typeshed/pull/3149.
    
    I'm planning to do a mini external release today for this fix, since the
    internal release includes everything up to it, and the parser change has a very
    low likelihood of breaking anything.
    
    PiperOrigin-RevId: 260765164

[33mcommit 5ccca77bb81f86ed15094dba0d6795d8b99c11ba[m
Merge: a123f085 b6127a92
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 29 18:13:03 2019 -0700

    Merge pull request #368 from google/google_sync
    
    Google sync

[33mcommit b6127a92a054eb8b975680d421d86bf243d27bee[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 29 17:15:39 2019 -0700

    Add pytype.tools.traces.visitor.
    
    * Adds a BaseVisitor class that can visit an AST parsed by any ast-like module.
    * Removes the get_suppressed_nodes() functionality - all tests still pass.
    * Uses BaseVisitor in xref/indexer.py.
    
    PiperOrigin-RevId: 260613464

[33mcommit fb621fcd8263f118e50e1ebe928f5150625a805c[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 29 11:06:38 2019 -0700

    Add another FAQ entry on pytype strictness.
    
    PiperOrigin-RevId: 260537699

[33mcommit 10565521c897b13308c0fd22daf280b06d45617f[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 29 10:00:27 2019 -0700

    Add a SourceLocation class to indexer.py.
    
    Adds a namedtuple to hold (line, column) information. Makes the code
    slightly nicer-looking but should not change any end behavior.
    
    PiperOrigin-RevId: 260522027

[33mcommit 416089e717a50d4422aaf16cbe693b264202467c[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 26 17:01:31 2019 -0700

    Cleanup: remove unnecessary constant pytd.TYPE.
    
    The only subclasses of pytd.Type that weren't in pytd.TYPE were LateType and
    FunctionType, both of which are clearly types.
    
    #Squeegee
    
    PiperOrigin-RevId: 260240266

[33mcommit 909be90ec80fe593cad2977a73620717b4150a6a[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 26 14:44:45 2019 -0700

    Fix a crash caused by the subprocess.Popen overlay not always being used.
    
    PiperOrigin-RevId: 260217282

[33mcommit 4e5793f391f6ce4ce83eeb1e351c755208c1cf21[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 26 10:59:52 2019 -0700

    Use pytype.config.Options.create() wherever it simplifies options creation.
    
    I noticed recently that I was frequently creating dummy filenames for Options.
    When I looked into making the filename not required, I realized that we already
    have a create() method that solves this problem.
    
    #Squeegee
    
    PiperOrigin-RevId: 260175088

[33mcommit a123f085ac9ae0c1677ce31818042514da6e8f37[m[33m ([m[1;33mtag: 2019.07.26[m[33m)[m
Merge: 125e99b8 08fd03a6
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 24 09:50:52 2019 -0700

    Merge pull request #366 from google/google_sync
    
    Google sync

[33mcommit 08fd03a6e149aebb054563d936835a49cb287b1e[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 23 23:01:12 2019 -0700

    Update pytype CHANGELOG and __version__ for a Friday release.
    
    PiperOrigin-RevId: 259679747

[33mcommit f8172877b59518e93a17ec778a701449718aef6b[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 23 20:13:25 2019 -0700

    Improve typing of subprocess.Popen in Python 3.
    
    PiperOrigin-RevId: 259664606

[33mcommit d1a4e459b380108c90726e328d09ffb2162eb99c[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jul 18 16:24:26 2019 -0700

    FIX: Clone instance set before iterating over it in output.py
    
    PiperOrigin-RevId: 258867359

[33mcommit bfd7e6fd241b1b391baa0999ec071cf107185919[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jul 18 16:15:55 2019 -0700

    Fix a bytes/unicode issue when typechecking pyc.py
    
    PiperOrigin-RevId: 258866009

[33mcommit 93232912926a7e3fb4fd871dc4cfd5bd1d5c6d09[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 17 10:28:58 2019 -0700

    Fix attr symlinks.
    
    Turns out that with directories, you have to list both the directory itself
    and every file in it.
    
    PiperOrigin-RevId: 258594470

[33mcommit 125e99b877f516cdb08f3f3abbf6005310d8857e[m
Merge: c4b5b7a2 09f08328
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 22 15:36:10 2019 -0700

    Merge pull request #364 from google/ts
    
    Update typeshed to 40215d1fa3ef33a31fe68624472c10dd62350f18.

[33mcommit 09f0832892d56ad45fe94e1a231fabf655add72b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 22 14:52:26 2019 -0700

    Update typeshed to 40215d1fa3ef33a31fe68624472c10dd62350f18.
    
    Also manually copies a fix to keep pytype itself building.

[33mcommit c4b5b7a23fc9698cf927db1cd934789b567600bf[m
Merge: 15bb6fc9 ebe91cb3
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 16 23:57:32 2019 -0700

    Merge pull request #361 from google/google_sync
    
    Google sync

[33mcommit ebe91cb35089f0e5a832c01c7d3ceb0b890492f5[m
Author: Jason Cooke <Jason-Cooke@users.noreply.github.com>
Date:   Tue Jul 16 23:18:25 2019 -0700

    Import of GitHub PR #360: docs: fix typo
    https://github.com/google/pytype/pull/360
    Merge 643377306cd8aab7b1b9ae1541fd5c70aec02b71 into 15bb6fc95e902be4c1fe808b4c60cc48efb5b8eb
    
    PiperOrigin-RevId: 258507963

[33mcommit 90a7bd0300d958355aa0abb58994fc23030069b4[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 16 14:50:41 2019 -0700

    Fix an accidental string in string comparison in indexer.py.
    
    Calls to get_opcode() were being passed a single op name for the op_list
    parameter. This is hard to catch in testing because checks like
    'STORE_NAME' in 'STORE_NAME' evaluate to True!
    
    PiperOrigin-RevId: 258445253

[33mcommit 15bb6fc95e902be4c1fe808b4c60cc48efb5b8eb[m
Merge: 44b1f6f7 8dd028db
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 16 13:12:19 2019 -0700

    Merge pull request #359 from google/google_sync
    
    Google sync

[33mcommit 8dd028db8a808723d4e3f24391997bb3a1ac521f[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 15 13:32:40 2019 -0700

    Output pytd nodes instead of string types from the pytype indexer.
    
    Fully resolved pytd nodes provide much better type information than
    string types.
    
    * Adds a `resolve_type` method to load_pytd that can resolve smaller type units
      than a TypeDeclUnit, as long as an ast is provided for local lookup.
    * Changes the indexer to use `resolve_type` to output pytd nodes of types.
    
    PiperOrigin-RevId: 258226785

[33mcommit 747aecd963c138f0f441967b6272cf58d960a720[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 15 10:31:54 2019 -0700

    Improve pytype's usability as a library.
    
    * Moves ToType to pytd.py to make it publicly available.
    * Returns the parsed AST from io.parse_pyi.
    
    Also fixes some lint warnings.
    
    PiperOrigin-RevId: 258190789

[33mcommit 2a00a3bb85156799cf1abb511445545d96138f11[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jul 12 12:19:52 2019 -0700

    Fixes for xref (multiline []= and multiple refs in a scope).
    
    * Statements of the form foo[i] = <multiline expr> now index foo correctly.
    * If a variable is used multiple times in a scope, all instances get indexed.
    
    PiperOrigin-RevId: 257846742

[33mcommit 6d1ccbfe0658c4414f3cacc84f871a4509ede834[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jul 11 16:43:40 2019 -0700

    Fix indexing of multiline assign statements.
    
    PiperOrigin-RevId: 257707287

[33mcommit 8f26dd9db507d0b0100b61e601e6601ae4b23dba[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jul 11 14:00:23 2019 -0700

    Fix indexing of class and method definitions in python 3.
    
    * In py2 we were looking for a BUILD_CLASS opcode, but in py3 this needs to be
      a combination of LOAD_BUILD_CLASS and STORE_NAME.
    * For InterpreterFunction(A.foo), py has name 'foo', but py3 has name A.foo
    
    Also runs verifier tests twice, with -V2.7 and -V3.6
    
    PiperOrigin-RevId: 257676657

[33mcommit 44b1f6f7cddccb326abac4c21b4f26688369764e[m[33m ([m[1;33mtag: 2019.07.11[m[33m)[m
Merge: 35a3c618 6dd4ff1f
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 11 11:34:08 2019 -0700

    Merge pull request #357 from google/google_sync
    
    Google sync

[33mcommit 6dd4ff1f6aa8dbf46939ab412ac8d0a9c0581ae6[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 11 10:41:26 2019 -0700

    Update pytype version and CHANGELOG for attempt 2 at a PyPI release.
    
    I didn't end up releasing on July 3 because I wasn't sure how buggy
    that version was after the rollback of the internal release.
    
    PiperOrigin-RevId: 257636810

[33mcommit 1bb16db539d5034934449086a6528c1ad6973958[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 11 10:07:52 2019 -0700

    Remove unknowns from indexer types.
    
    ~unknownN was showing up in the type map. Since we can't turn the unknowns into
    typevars (as that would require somehow keeping the typevar definitions
    around), the simplest fix is to turn them into Any.
    
    I also fixed two lint warnings in indexer_test for not using assertIn.
    
    PiperOrigin-RevId: 257629574

[33mcommit 28234aee0663d7f90b1b93cd0e5a33b354cbafe7[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 10 20:13:17 2019 -0700

    Copy README change to opensource docs.
    
    PiperOrigin-RevId: 257534628

[33mcommit 3953f89b22846dfd6d9859bd81fe7948cd988ad7[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 10 11:17:41 2019 -0700

    Support `async def` in pyi files.
    
    People are starting to want to use this syntax in typeshed:
    https://github.com/python/typeshed/pull/3088.
    
    One odd thing I found is that we were allowing `async.coroutine` as a
    decorator, which doesn't work once we make async a keyword, but I think the
    decorator is supposed to be async*io*.coroutine anyway.
    
    PiperOrigin-RevId: 257443556

[33mcommit 2f535f5080b3dc795653bf8bdcf1dbadb1f153ae[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Jul 10 01:03:48 2019 -0700

    Use list comprehension instead of list(map( ... )) to ease understanding of example
    
    PiperOrigin-RevId: 257353665

[33mcommit 4c4f346bf6a8ee04b8b95def1616a23871de5525[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jul 9 13:13:21 2019 -0700

    Let typeshed potentially override a default pyi for blacklisted files.
    
    PiperOrigin-RevId: 257256210

[33mcommit 462ebd0f38855d8f167b345786ec5c9a2744a46a[m
Author: tsudol <tsudol@google.com>
Date:   Sun Jul 7 00:25:17 2019 -0700

    Add typing.SupportsComplex to __builtin__.complex.
    
    This allows complex to be accepted where SupportsComplex is used.
    
    PiperOrigin-RevId: 256823711

[33mcommit eb28a7fd615851051fa99e88cbcf8998fa8d8264[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jul 3 15:07:18 2019 -0700

    Support late annotations in typing.NamedTuple
    
    Fields with late annotations are typed correctly as member variables and
    as arguments to __new__.
    
    NOTE: Methods returning a dict are set to type -> {str: Any} in the
    presence of late annotations (__dict__, _field_defaults, _asdict), rather
    than {str: Union(*field_types)}, since the late annotation introduces an
    'Any' into the union.
    PiperOrigin-RevId: 256445795

[33mcommit 35a3c618acf93a50ddae00c3567e225941c46cf3[m
Merge: 86c5b0d6 db884ced
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 3 16:24:32 2019 -0700

    Merge pull request #354 from google/google_sync
    
    Google sync

[33mcommit db884ced5467d2de88fef027f116e6e78c0cef87[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 3 14:02:36 2019 -0700

    Update pypi version for an external release.
    
    PiperOrigin-RevId: 256434307

[33mcommit 61a45065d65c0886a3d318bb80295e4a80150b8a[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 1 13:41:40 2019 -0700

    Fix pytype after latest typeshed update.
    
    * typeshed changed the return type of a function from _ast.Module to _ast.AST,
      then back to _ast.Module.
    * functools.partial is now modeled as a class again, after briefly being a
      function. This also runs into a pytype bug involving generic classes.
    
    Fixes https://github.com/google/pytype/issues/322.
    
    PiperOrigin-RevId: 256023613

[33mcommit ec3e2e743ff785d07d7164d5cd964743f3b0a626[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jun 28 15:25:44 2019 -0700

    Fix function typecomments for functions with no body code.
    
    Fixes functions of the type
       def f(x):
         # type: (int) -> None
         """Docstring but no body."""
    
    PiperOrigin-RevId: 255679175

[33mcommit 6fd6996ccf3df1d9c15bcb4948fa2e87aa55c260[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 28 11:32:05 2019 -0700

    Update oss docs.
    
    PiperOrigin-RevId: 255637824

[33mcommit 86c5b0d6c5d931790182809a86b86385b71b7200[m
Merge: 365afbce c2b98cbb
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 2 14:40:20 2019 -0700

    Merge pull request #353 from google/google_sync
    
    Google sync

[33mcommit c2b98cbb6f0af8ffcb70f9cf6f1fcf65f9238bfb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 2 11:29:18 2019 -0700

    Update typeshed to e1e5c83795af3313216c937a39a3dd7091b3d6d1.

[33mcommit 9afec7c12c8ffea26fd7428378a2e928a9beda49[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 1 13:41:40 2019 -0700

    Fix pytype after latest typeshed update.
    
    Manual copy of an internal change to keep build passing.

[33mcommit 365afbce0b781498fc19898f09ba75f8412cea02[m[33m ([m[1;33mtag: 2019.06.28[m[33m)[m
Merge: f077f259 e50517d4
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 27 16:52:30 2019 -0700

    Merge pull request #352 from google/google_sync
    
    Google sync

[33mcommit e50517d49a0c0d920c59c87f0d9675a4a6a0fbd4[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 27 16:12:37 2019 -0700

    Fix a py3 parameter type in UnicodeDecodeError.__init__.
    
    Fixes https://github.com/google/pytype/issues/349.
    
    PiperOrigin-RevId: 255499321

[33mcommit eec098c09812b092b1bd57a99b9a152356d04256[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 27 15:54:19 2019 -0700

    Update pytype's PyPI version for a Friday release.
    
    PiperOrigin-RevId: 255495615

[33mcommit f077f259eab60da128a56a42ad3140f65c645ea3[m
Merge: 27eb234d f6447141
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 26 18:30:23 2019 -0700

    Merge pull request #351 from google/google_sync
    
    Google sync

[33mcommit f6447141f27d4ea1e6f30b8bf95363e5e4dbafab[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 24 10:11:44 2019 -0700

    Support late annotations in the `type` argument to attr.ib.
    
    PiperOrigin-RevId: 254781566

[33mcommit f22fa15d6b6dfa9ee9b7226b505fc92efee880ec[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 24 00:09:00 2019 -0700

    Make `except` blocks aware of the exception type.
    
    This change will help pytype detect usages of `Exception.message`. It
    generates lots of new findings, so I won't submit it until the attr change is
    released, but I'd like to get it reviewed so I can test it and start sending
    out patches.
    
    PiperOrigin-RevId: 254699453

[33mcommit 37cb3957370024ab346f88de6bb7ca6034da25a9[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jun 21 14:51:42 2019 -0700

    Check for functions without a signature in output.value_to_pytd_type
    
    Caused a transient crash in xref - I can no longer hit that code path, but if
    we do this seems like a better default than throwing an exception.
    
    PiperOrigin-RevId: 254472967

[33mcommit a4af0a851cd03367e3f506f5bc028379d53ad5da[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jun 21 12:06:44 2019 -0700

    Fixes for auto-attribute generation
    
    * If a class member is defined twice, move it to the end of ordered_locals.
    * auto-attrs should not include methods and properties.
    
    PiperOrigin-RevId: 254443971

[33mcommit 00cf32efb05ecf762da043f98e3544735e2d52ca[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jun 20 15:41:32 2019 -0700

    FIX: Prevent an indexer crash when creating a ref id from a data literal.
    
    PiperOrigin-RevId: 254287040

[33mcommit 27eb234da9f3477156dc653114867d07fc2353c9[m[33m ([m[1;33mtag: 2019.06.21[m[33m)[m
Merge: ac832535 b8bf8ded
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 19 19:51:11 2019 -0700

    Merge pull request #346 from google/google_sync
    
    Google sync

[33mcommit b8bf8ded02436577e3ffb69bbed96f74347b064c[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 19 18:15:52 2019 -0700

    Actually make Travis happy with annotate_ast_test.
    
    Last time I got careless and only manually tested in Python 2, so of course it
    turns out that the test only passed in Python 2.
    
    This change makes annotate_ast_test a py2and3_test. I also added rlevasseur to
    the Copybara authors list, since I noticed that your change was unhelpfully
    exported under the author "Pytype Team".
    
    PiperOrigin-RevId: 254111410

[33mcommit 4efe67c9ffafa1aa7661d1264fdcec4b6994de3c[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 19 16:49:53 2019 -0700

    Make annotate_ast_test pass on Travis.
    
    There was a typo in the cmake file and a test failure complaining about
    assertRegex not existing.
    
    PiperOrigin-RevId: 254098765

[33mcommit 421e31a34ce46517e83b5df4ef316a13b22bfee8[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 19 14:53:16 2019 -0700

    Fix a coroutine bug.
    
    Fixes a bug where our implementation of the GET_AWAITABLE opcode
    didn't handle generators or non-coroutine awaitables correctly.
    
    Also adds more detailed comments to some existing code that I had
    trouble reasoning about, and corrects a typo in a test name.
    
    Makes progress toward https://github.com/google/pytype/issues/244.
    
    PiperOrigin-RevId: 254076264

[33mcommit d947c46182a8ead78ddb387835af55c28790d9a3[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 19 14:35:53 2019 -0700

    Annotate the `init` argument to attr.s and attr.ib.
    
    #Squeegee
    
    PiperOrigin-RevId: 254072599

[33mcommit 804226991b2a4217e0209dd319ceb392753c4014[m
Author: rlevasseur <rlevasseur@google.com>
Date:   Wed Jun 19 14:06:35 2019 -0700

    Add a library to add type information to an AST.
    
    This adds a basic implementation of an AST visitor that merges Pytype's inferred type
    information into the AST. After merging, nodes with type information have two extra
    attributes:
     * `resolved_type`, which is a Pytype pytd object describing the type
     * `resolved_annotation`, a string version of `resolved_type`. It doesn't quite match
       what a real annotation would be (some Pytype-internal PyTD things sneak in), but
       it's pretty close and this can be fixed later.
    
    It currently only supports Name nodes and is naive about its assumptions about the AST
    and Opcode line number matching. e.g., an assignment statement that spans line will
    likely not be matched correctly; this can be fixed later, though.
    
    This library assumes ast objects mostly match the native ast module interface, but
    doesn't assume the native ast module is being used -- this is so that alternative ast
    implementations can be used. They just need to be similar enough to the native ast
    module/objects that traversal and matching can happen.
    
    PiperOrigin-RevId: 254066694

[33mcommit ccf9280326e49cfead5aedfaaae825b28569b1c6[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 19 11:21:08 2019 -0700

    Add temporary pytype stubs for attr.
    
    After our discussion at the last pytype meeting about modifying and using
    the typeshed stubs, I realized that an even easier workaround would be to
    use pytype's own inferred stubs. The (only?) advantage of this approach is
    that pytype has already been tested extensively against these stubs, so we
    can support open source users immediately instead of waiting until we find
    time to test against the typeshed stubs.
    
    This change:
    * Puts the unpickled attr stubs in pytype/pytd/builtins/2and3/attr/, with
      minimal changes as described in
      pytype/pytd/builtins/2and3/attr/__init__.pytd. Since these stubs being
      part of pytype itself means that we now support open source users as well,
      I've updated CHANGELOG and __version__.py appropriately, with an
      (optimistic) estimated PyPI release date of this Friday.
    * Symlinks the google overrides to these stubs so that we're using the same
      stubs internally and externally. One small annoyance is that pytype
      requires the .pytd extension and the overrides use .pyi, so the files have
      to be linked and renamed individually.
    * Gets rid of test_utils.TestAttrMixin and the mini fake stub in attr_overlay.
      These were needed because the attr stubs weren't always available and we
      didn't control their contents, neither of which is true anymore. Another
      nice thing is that files using attr can now be analyzed locally - previously
      I was manually copying test_utils.ATTR_PYI to attr.pyi every time.
    * Increases the shard count on tests:test_attr because it timed out on me.
    
    #Squeegee
    
    PiperOrigin-RevId: 254035136

[33mcommit dfbb4aca5bc067aaf166aa0cc4b59c025e05d494[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 18 20:00:15 2019 -0700

    Copy over a pytype README update.
    
    I forgot that README changes can't be merged directly on GitHub ><
    Since I was copying the change anyway, I cleaned it up a bit.
    
    PiperOrigin-RevId: 253919598

[33mcommit a1663fc4abf6dcd426e35d22c6cbfe7a879e45bf[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 18 12:02:50 2019 -0700

    Fix a crash caused by nested @attr.s usage.
    
    pytype was hitting its depth limit and creating an unsolvable where
    attr_overlay expected a class. I also deleted abstract.TYPE_TYPE, since I
    forgot to remove it when changing the code that used it.
    
    PiperOrigin-RevId: 253838090

[33mcommit 5e1dc272a2ed6303e3486f79e0f636832fc63d7c[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon Jun 17 14:27:30 2019 -0700

    Collect attributes from base classes when using @attr.s
    
    PiperOrigin-RevId: 253661421

[33mcommit 97e56d23bdc9e29869406a6f22b6201f38d46656[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 17 14:02:29 2019 -0700

    Fix a pytype crash caused by attr.make_class.
    
    pytype doesn't support this yet, but it at least shouldn't crash.
    
    PiperOrigin-RevId: 253656189

[33mcommit 8b676dcc8ad688a4b1faf1899dcc940e75edc1e1[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jun 14 16:30:04 2019 -0700

    Create an overlay_utils for common overlay functionality.
    
    Refactors attrs and typing.NamedTuple to share method creation code.
    
    PiperOrigin-RevId: 253318044

[33mcommit ac832535fa0a2b577c87c780ef5d73c2a744ba40[m
Merge: 7163e858 ee466779
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 17 17:49:47 2019 -0700

    Merge pull request #343 from adamcataldo/patch-1
    
    Update README.md

[33mcommit ee466779f2d5a7aa0ee2bb7ec07b49e547db5ce3[m
Author: adamcataldo <adam.cataldo@gmail.com>
Date:   Mon Jun 17 16:14:15 2019 -0700

    Update README.md

[33mcommit df025a75e9158496013da733ed09cd09776a61a7[m
Author: adamcataldo <adam.cataldo@gmail.com>
Date:   Mon Jun 17 16:07:36 2019 -0700

    Update README.md

[33mcommit 7163e85880b52d53d58044e53157e2a21988308e[m
Merge: 3908bd74 7eeaedc2
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 14 18:47:08 2019 -0700

    Merge pull request #342 from google/google_sync
    
    Google sync

[33mcommit 7eeaedc211d73110344d3360c49d74e0bea2b03b[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Fri Jun 14 14:19:08 2019 -0700

    Add support for attr.ib(init=False)
    
    PiperOrigin-RevId: 253294908

[33mcommit 3acc9e32b2da2f4b5c6cbc3f439e7605f19a4ed1[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 13 13:17:13 2019 -0700

    Respect attr.ib() defaults when invalid-annotation is logged.
    
    Got a bunch of missing-parameter errors because I set default=None here =(
    I also changed `_, errors = self.InferWithErrors(...)` to
    `errors = self.CheckWithErrors(...)` wherever I saw the former.
    
    PiperOrigin-RevId: 253091625

[33mcommit 7c777f966c319a9014c7717ecca81dcd275c6cfa[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 13 12:44:16 2019 -0700

    Use annotations_util.init_annotation where appropriate.
    
    After my previous change to eval_class_late_annotations, I was
    looking into whether we needed init_class anywhere else and realized
    that there already exists an init_annotation method that both
    type-checks and correctly instantiates annotations. *facepalm*
    
    PiperOrigin-RevId: 253085614

[33mcommit 3fe94d9d0c94beea1488a6fdfe0af80540dfdaf5[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 12 18:49:18 2019 -0700

    Make sure __init__ is called when initializing late annotations for classes.
    
    PiperOrigin-RevId: 252944153

[33mcommit 0c77abde2e7dfb4041cb2a7043dba586fb3c57f2[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jun 12 15:31:17 2019 -0700

    Show a diff of disassembled pickle files when testing for determinism.
    
    Effectively untested because of course now it's refusing to generate a diff,
    but at least it hasn't broken anything.
    
    PiperOrigin-RevId: 252913233

[33mcommit 9cd1b109be48ecd26ac5cf2039d25cafa9f5dc80[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 11 16:32:06 2019 -0700

    Check that the type passed to attr.ib is an actual type.
    
    PiperOrigin-RevId: 252723598

[33mcommit e881640204b81f075199dabe0dcb5abe263300b9[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 11 14:26:14 2019 -0700

    Still store attributes even when attrs reports an invalid annotation.
    
    When an invalid-annotation is logged, I was seeing lots of follow-on errors due
    to the attribute not being added to the __init__ signature.
    
    PiperOrigin-RevId: 252698668

[33mcommit 51d221612eb1208c5cad28111400f8b91f73ba3e[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 11 13:35:32 2019 -0700

    Fix a crash caused by passing a typing construct to attr.ib(type=...).
    
    PiperOrigin-RevId: 252687777

[33mcommit 5130a7fc919b551ff2ee482dc42ed7ec78effeb7[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 10 15:21:48 2019 -0700

    Change default for attr.ib(default=None) to Any.
    
    With a default of None, we don't know the actual type. About a quarter of new
    findings generated by pytype at HEAD are false positives caused by assuming
    None is the only allowed value.
    
    PiperOrigin-RevId: 252496853

[33mcommit aaf90cb34d2ea5a7096e3f2250d67a509ec32439[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 10 12:54:16 2019 -0700

    Support the factory keyword to attr.ib.
    
    About a tenth of new findings generated by pytype at HEAD are
    false positives caused by pytype thinking that attributes with
    a factory are still required args to __init__.
    
    Together with the default=None change, this covers the
    majority of false positives I saw in a spot check of new
    findings, so I'm hopeful that I can file bugs for the remaining
    small issues and then proceed with the release as usual.
    
    PiperOrigin-RevId: 252464949

[33mcommit df8850fb4ed2533b0d7bff2e61748192ec921e4c[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 10 12:29:30 2019 -0700

    Cleanup: remove extraneous typing.Any imports from attr tests.
    
    PiperOrigin-RevId: 252459634

[33mcommit a8d2379236420afda8c4b04466cc692290a32baf[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jun 7 23:51:06 2019 -0700

    Add support for auto_attribs. (Only valid with PEP526 syntax in python 3.6+)
    
    Caveat: auto_attribs requires a typing.ClassVar annotation on any class var we
    don't want to convert into an attribute, and we don't support typing.ClassVar
    yet.
    
    #pyfixit
    
    PiperOrigin-RevId: 252177415

[33mcommit 3908bd7409c71c8cf18b8bfd781843769a812b0f[m
Merge: 81f59701 6480b0e1
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Jun 8 00:04:53 2019 -0700

    Merge pull request #341 from google/google_sync
    
    Google sync

[33mcommit 6480b0e180d5b35d3ff9ef2c337533890c6f9263[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 7 23:26:45 2019 -0700

    Change `= ...` to `= None` in a test that runs with target py2.
    
    PiperOrigin-RevId: 252176185

[33mcommit 187795b91302c8119e17f1077e1f10a498b80d6f[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 7 21:45:08 2019 -0700

    Support import-as and combining from-imports in merge_pyi.
    
    * Instead of using touch_import(), print and reparse import statements so that
      we can put multiple imports from the same package on one line.
    * This makes it easy to support import-as, so I've done that as well.
    
    Fixes https://github.com/google/pytype/issues/330.
    
    #pyfixit
    
    PiperOrigin-RevId: 252169902

[33mcommit 1590847453e87b143341568c485bdbb2b945a168[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 7 21:17:27 2019 -0700

    Give long names to all the merge-pyi options.
    
    Just a minor usability improvement.
    
    PiperOrigin-RevId: 252168228

[33mcommit 07eb9dac1923009d4b7de251779981ac075d87f9[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jun 7 21:03:11 2019 -0700

    Add support for default values in attrs.
    
    The default value is used to infer a type if no type is provided, and in the
    generated __init__ function.
    
    Note in particular that if a type *is* provided it is used unconditionally; the
    type of the default is not checked against the type of the attr, so x =
    attr.ib(type=str, default=10) will not raise an error.  (This is consistent
    with current pytype behaviour for variables and function params with both
    assignments and and type annotations.)
    
    #pyfixit
    
    PiperOrigin-RevId: 252167328

[33mcommit 259333508913f1ca3ae1d17891b1c2a968f515af[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 7 15:52:11 2019 -0700

    Clean up merge_pyi's import handling code.
    
    I started working on https://github.com/google/pytype/issues/330 and realized
    that merge_pyi's logic for inserting new imports was somewhat fragile and
    hacky, so I first cleaned that up.
    
    * Moves the insertion of new imports and top-level assignments to a separate
      step after annotations have been added. Previously, add_globals() ran
      every time a function signature was modified, and an attribute was used to
      determine whether it had already run.
    * Only inserts imports for types that are actually used. Previously, this
      was approximated by inserting all imports when any annotations were added,
      and no imports if no annotations were added.
    
    #pyfixit
    #Squeegee
    
    PiperOrigin-RevId: 252135431

[33mcommit 2687702e6fee6b6844fb5ff33cfb7be522cfeca0[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jun 7 15:31:18 2019 -0700

    Add support for args to @attr.s
    
    Currently adds 'init' and 'kw_only', plus a TODO for auto_attribs.
    
    Of the remaining args, most are irrelevant for typing purposes. 'frozen' is
    probably beyond the scope of pytype, and we could potentially add support
    for 'slots' but it seems lower value.
    
    #pyfixit
    
    PiperOrigin-RevId: 252131856

[33mcommit 4b90e304c06b75ed09116c8ad4d9cc1d41724047[m
Author: tsudol <tsudol@google.com>
Date:   Fri Jun 7 14:37:35 2019 -0700

    Differentiate comparisons that always succeed in Python 2 vs Python 3.
    
    In Python 2, the ordering and equality operators (<, >=, ==, `is`, etc.) always
    succeed. In Python 3, only the equality operators always succeed.
    
    Technically #pyfixit!
    
    PiperOrigin-RevId: 252121372

[33mcommit c9cda591c339d32dc9c977f2ee188437fbc999ec[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jun 6 17:19:33 2019 -0700

    Handle late annotations in class variables.
    
    #pyfixit
    
    PiperOrigin-RevId: 251960255

[33mcommit 81f5970155b85303f4e44a9c89f6127b1d2c55c6[m
Merge: 89c2dd4a ec51fda5
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 7 14:35:01 2019 -0700

    Merge pull request #339 from google/grammar
    
    Finish adding merge-pyi's local copy of the lib2to3 grammar.

[33mcommit ec51fda55b846311b59b444d7b696b88a9cad9ce[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 4 23:06:08 2019 -0700

    Finish adding merge-pyi's local copy of the lib2to3 grammar.
    
    * Creates a patch of our local edits.
    * Puts the grammar file in setup.py data.
    
    Fixes https://github.com/google/pytype/issues/332.

[33mcommit 89c2dd4adf2842bfd6dcedd8bee041737944b51e[m
Merge: 8ca79ea4 171f1eb8
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 6 16:07:34 2019 -0700

    Merge pull request #338 from google/google_sync
    
    Google sync

[33mcommit 171f1eb889be355f7f3b1c3f8443ffcdcc6d5715[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 6 15:13:48 2019 -0700

    Fix a merge-pyi crash in Python versions before 3.6.
    
    pyi files are always supposed to use the syntax from the latest Python version.
    The lib2to3 grammar file before Python 3.6 can parse most type annotations but
    not PEP 526 variable annotations.
    (Even more confusingly, this problem only shows up in open source tests because
    our internal copy of lib2to3 uses the Python 3 grammar file!)
    
    We work around this issue by patching in a local copy of the grammar with
    support for PEP 526. I tried doing this a bunch of different ways, and the only
    one I found that worked was to apply the patch first thing at import time,
    since merge_pyi goes on to compile a bunch of patterns, etc. This means that we
    can't use a contextmanager, so we leave lib2to3 permanently changed =(
    
    Another issue was that our local grammar doesn't support async and await, since
    they require much more extensive changes to lib2to3. Consequently, we only use
    it in host Python versions before 3.6, so that async and await can still be
    parsed with 3.6+.
    
    I'll follow up with a PR that adds a patch showing the changes I made to the
    grammar and adds the new grammar file to setup.py.
    
    Makes progress toward https://github.com/google/pytype/issues/332.
    
    #pyfixit
    
    PiperOrigin-RevId: 251936937

[33mcommit f37713c80f09a8cb8ffe159e89a2b35bfbf79f88[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jun 6 13:20:59 2019 -0700

    Fix attr annotations.
    
    * Fix union types
    * Add support for late annotations
    
    Due to b/134687045, late annotations are annotated correctly in the
    constructor, but not as a member variable, i.e.
    
      class Foo
        x = attr.ib() # type: 'Foo'
    
    annotates as
    
      class Foo
        x: Any
        def __init__(x: Foo): ...
    
    #pyfixit
    
    PiperOrigin-RevId: 251913428

[33mcommit 19b706bf66719010a843d3bc6becaac44bdcabf7[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jun 5 17:18:49 2019 -0700

    Add type annotations for the __init__ method.
    
    Also adds a fix for name mangling in __init__ kwargs.
    
    #pyfixit
    
    PiperOrigin-RevId: 251751975

[33mcommit ce53168ade6954c7910bdd1cf32c2e38d8666511[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 5 16:39:39 2019 -0700

    Clean up user guide section on variable annotations; copy to open source.
    
    PiperOrigin-RevId: 251745014

[33mcommit c83c0e19c8521ae3b01fdf506a0f3cf3b9802ead[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jun 5 13:53:23 2019 -0700

    Add support for attrs annotated using PEP526 syntax.
    
    #pyfixit
    
    PiperOrigin-RevId: 251711601

[33mcommit eb8381dbae517da5129a51a9ea06d7c673c4bec8[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jun 5 11:26:01 2019 -0700

    Basic attrs overlay.
    
    Adds support for the basic case of attrs defined using attr.ib, with type=...
    annotations or #type comments.
    
    e.g.
    
      @attr.s
      class Foo():
        x = attr.ib(type=bar)
        y = attr.ib()
        z = attr.ib() # type: int
        ...
    
    types as
    
      class Foo:
        x : bar
        y : Any
        z : int
        ...
    
        def __init__(x, y, z, ...) -> None: ...
    
    #pyfixit
    
    PiperOrigin-RevId: 251681823

[33mcommit 8ca79ea45c4a63310d0d22006e32f20217239694[m
Merge: 5b4201da c9432b80
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 5 11:55:06 2019 -0700

    Merge pull request #336 from google/google_sync
    
    Google sync

[33mcommit c9432b80cb1676d0050d60ca93f6f0113fda7d33[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 5 10:36:56 2019 -0700

    Add a command line arg to merge_pyi to control logging verbosity.
    
    Previously, we used logging level DEBUG, which made the stdout
    output quite noisy. With this change, we use ERROR by default,
    with the option to increase/decrease the verbosity as desired.
    
    Fixes https://github.com/google/pytype/issues/333.
    
    #pyfixit
    
    PiperOrigin-RevId: 251671480

[33mcommit 84312d5eea55b2fca14fb961cf500eb59c0871ca[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Jun 5 10:36:27 2019 -0700

    Make pytype indexer set resolved type information for Name nodes.
    
    This makes the indexer code modify the AST object that it processes to set
    the computed type information that Pytype has. They are pytype.pytd.pytd objects,
    so they're fairly internal, but should provide the basis from which additional
    logic can be based upon.
    
    PiperOrigin-RevId: 251671373

[33mcommit cc40699ce5b3771b42d5fcab5148cd93d82adc8f[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 5 10:33:16 2019 -0700

    Clean up merge_pyi's test and add a CMake target for it.
    
    * Removes merge_pyi/google/, which contained an outdated update script and
      a google-specific test file that was easily merged with the main test file.
    * Sets up a CMakeLists.txt entry for merge_pyi_test. I renamed the file for
      consistency: previously, the BUILD target was merge_pyi_test but the file
      was test_merge_pyi.
    * Changes the test method names from run_test to test_{whatever}, which will
      make them discoverable by our open source test runner once
      https://github.com/google/pytype/pull/334 is merged. This also benefits
      internal testing because the names are more descriptive.
    
    PiperOrigin-RevId: 251670725

[33mcommit 88d2edbc15c3ad8b33049f7439509b73f0ea8765[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jun 4 17:40:15 2019 -0700

    Add a marker to grep the debug logs for opcodes.
    
    PiperOrigin-RevId: 251552159

[33mcommit 5b4201da848b3b2c2de9380bc779c5985475afac[m
Merge: ca209874 6507795b
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 5 10:03:55 2019 -0700

    Merge pull request #334 from google/tests
    
    Support the load_tests protocol in build_scripts.test_module.

[33mcommit 6507795b9cc11823a187bf895517ea03fbc455a7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 5 01:44:15 2019 -0700

    Support the load_tests protocol in build_scripts.test_module.
    
    pytype/tools/merge_pyi/test_merge_pyi.py uses the load_tests
    protocol, and I'd like to be able to run this test
    externally because I'm making some changes to merge-pyi.

[33mcommit ca209874b0a9a785e301ed740e31f8c8670faf9d[m
Merge: 1020628d 1de7c0c1
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 4 17:06:14 2019 -0700

    Merge pull request #331 from google/google_sync
    
    Google sync

[33mcommit 1de7c0c1ab928dc01a308983cfddd248cba3b665[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 4 15:41:30 2019 -0700

    Fix a pytype crash caused by str being treated as a sequence.
    
    Is there a badge for this yet?
    
    #pyfixit
    
    PiperOrigin-RevId: 251531496

[33mcommit 7fd70bda89ae412f671fa1c4927fcdc750db01f3[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 4 15:24:30 2019 -0700

    Support typing.overload in Python files.
    
    Supports decorating functions with @typing.overload in Python files. When this
    decorator is used, there should be one or more @overload-decorated functions
    followed by one non-@overload-decorated function, all with the same name.
    
    I also took the opportunity to fix a lint warning in errors.py and to use the
    new abstract.{INTERPRETER_,PYTD_,}FUNCTION_TYPES constants everywhere.
    
    #pyfixit
    
    PiperOrigin-RevId: 251528058

[33mcommit 02e591977ca81e0eb383f3e9d0976c94be7324d6[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 4 12:56:31 2019 -0700

    Add missing typing.TextIO.buffer attribute.
    
    #pyfixit
    
    PiperOrigin-RevId: 251497428

[33mcommit 5d9926b4de017c8c5f3ffff691f68f8ab28e6633[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jun 3 14:20:20 2019 -0700

    Add an overlay for six.string_types.
    
    #pyfixit
    
    PiperOrigin-RevId: 251307039

[33mcommit 1020628ddeb085c9d164778fb58d2dca883db26f[m[33m ([m[1;33mtag: 2019.05.31[m[33m)[m
Merge: ed6b8d25 fecfa0fc
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 31 14:33:07 2019 -0700

    Merge pull request #329 from google/google_sync
    
    Google sync

[33mcommit fecfa0fceefb6081beaca71360bb797d2ec42407[m
Author: rechen <rechen@google.com>
Date:   Fri May 31 13:51:26 2019 -0700

    Remove a type annotation from pytype/tools/xref/indexer.py.
    
    This was breaking the Python 2 linting on Travis.
    
    It's a bit weird because xref doesn't work in Python 2 anyway due to the
    typed_ast dependency, but it's (sort of) part of pytype and pytype supports
    Python 2 for now.
    
    PiperOrigin-RevId: 250949693

[33mcommit 9c1bebf3c889fc1ce7a96341c30255815e8d9396[m
Author: rechen <rechen@google.com>
Date:   Fri May 31 12:43:21 2019 -0700

    Update pytype's version and changelog for a PyPI release.
    
    PiperOrigin-RevId: 250937593

[33mcommit 3aeccee8f0fa8b7818eb77e83b9fde5c7928e9af[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Thu May 30 14:19:59 2019 -0700

    Make pytype indexer support custom ast module implementations.
    
    This allows the pytype indexer code to use a passed-in ast module
    implementation instead of always using typed_ast. This is to allow
    different ast implementations to more easily be used without having
    to keep edits in the indexer.py code around.
    
    PiperOrigin-RevId: 250761011

[33mcommit ed6b8d255e2d3291577db5ccf618fd24f67ba55a[m
Merge: 959d49b0 c27fe8a9
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 30 13:25:31 2019 -0700

    Merge pull request #327 from google/google_sync
    
    Google sync

[33mcommit c27fe8a93b4c65f7a03855bb803ef62b157c5d6d[m
Author: rechen <rechen@google.com>
Date:   Thu May 30 10:09:29 2019 -0700

    Work around a matching bug by adding filter() overloads for AnyStr.
    
    PiperOrigin-RevId: 250709838

[33mcommit cd4dc9ef75943938dcc87ca703f805ca4438c2d2[m
Author: rechen <rechen@google.com>
Date:   Tue May 28 16:44:36 2019 -0700

    Implement PytypeIndexer.build_string_index_func.
    
    Implements the PytypeIndexer method that builds a function to type index a
    string of source code. To do this, I also added a function to tools.xref.output
    to create a location->type map from an Indexer object.
    
    #Squeegee
    
    PiperOrigin-RevId: 250387902

[33mcommit 959d49b038b1fb4399a16a24db612f87f241cde8[m[33m ([m[1;33mtag: 2019.05.24[m[33m)[m
Merge: 2403c3b2 ab3dba82
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 24 12:38:20 2019 -0700

    Merge pull request #325 from google/google_sync
    
    Google sync

[33mcommit 2403c3b2a312b0a8ee05318511f751641f14b891[m
Merge: a913bdaa 45e6bcfa
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 24 12:26:15 2019 -0700

    Merge pull request #324 from google/setup
    
    Bump the required importlab version.

[33mcommit ab3dba82f89a5c8c8f2bd2f53d98a72b7f62a8de[m
Author: rechen <rechen@google.com>
Date:   Fri May 24 12:03:19 2019 -0700

    Update pytype's PyPI version and changelog for a release.
    
    The changelog description is a little premature, since
    https://github.com/google/pytype/pull/324 isn't in yet,
    but there shouldn't be any problem getting that merged today.
    
    PiperOrigin-RevId: 249875106

[33mcommit 031f788f3d8a7feee46006e2df084a929046ac65[m
Author: rechen <rechen@google.com>
Date:   Thu May 23 15:25:18 2019 -0700

    Move some visitors to a public pytd_visitors module.
    
    Moves visitors.Visitor, visitors.ClassTypeToNamedType,
    visitors.CanonicalOrderingVisitor, and serialize_ast.RenameModuleVisitor
    to a new module, pytd_visitors.py.
    
    I ended up sticking to the set of visitors that already have at least one
    other interested user rather than trying to guess which additional
    visitors might be useful.
    
    PiperOrigin-RevId: 249727174

[33mcommit d213853564ecfda4612cb65299201c230cce2420[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Thu May 23 14:35:23 2019 -0700

    Read python source as UTF8 encoded in pytype.
    
    PiperOrigin-RevId: 249717143

[33mcommit beca1b8875df0f1556956784eb97f80af1aba834[m
Author: rechen <rechen@google.com>
Date:   Wed May 22 21:10:12 2019 -0700

    Minor cleanup of xref's README and visibility.
    
    * Updates the README to reflect that xref is no longer experimental.
    * Makes indexer and xref the only public targets. Changes the one
      outside user of xref_main_lib to use indexer instead (and turns on
      strict_deps, just for fun).
    
    PiperOrigin-RevId: 249577062

[33mcommit 4d5c12fec9f363680ba361ca5e2ff59fd143c7c9[m
Author: rechen <rechen@google.com>
Date:   Wed May 22 16:52:13 2019 -0700

    Break out pytype/config.py and pytype/io.py into their own libraries.
    
    As we talked about in today's meeting, makes :io its own library so
    we can make it publicly visible. I looked through pytype/tools/... and
    realized that :io is pretty useless without the ability to create
    options objects, so I also pulled out :config.
    
    PiperOrigin-RevId: 249548848

[33mcommit 228c2ba638ec660211ac6449753801b070ac09d9[m
Author: rechen <rechen@google.com>
Date:   Wed May 22 13:24:15 2019 -0700

    Enable accessing pytype types after the xref indexer has completed.
    
    Implements `keep_pytype_data`, which replaces stale references to
    C++ objects with string types.
    
    PiperOrigin-RevId: 249507489

[33mcommit 4b32b329b979ae036281f15815fd57e604470d2b[m
Author: rechen <rechen@google.com>
Date:   Wed May 22 11:26:41 2019 -0700

    Add a (no-op) --experimental_use_pytype flag to python3_convert.
    
    Adds a new flag to hide all of my in-progress pytype work, and sketches out its
    structure while leaving TODOs for the implementation.
    
    PiperOrigin-RevId: 249486121

[33mcommit 2494b4ff374b16e5e82711316ce54370895f1f29[m
Author: rechen <rechen@google.com>
Date:   Wed May 22 11:16:39 2019 -0700

    Internal change
    
    PiperOrigin-RevId: 249484154

[33mcommit 06d053e66810b5497a34538e9fda327501f4d50a[m
Author: rechen <rechen@google.com>
Date:   Wed May 22 09:45:45 2019 -0700

    Fix a crash in xref caused by looking too far ahead for attribute bounds.
    
    I came across this while playing around with getting accurate line and column
    information for attribute references.
    
    PiperOrigin-RevId: 249465457

[33mcommit 45e6bcfad507b8ce66efcd5fbb349cf73b890ccf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 24 11:49:47 2019 -0700

    Bump the required importlab version.
    
    Bumps the version to pull in the fix for
    https://github.com/google/pytype/issues/318.

[33mcommit a913bdaa9a608ab1a097b929547ede023ea5cd28[m[33m ([m[1;33mtag: 2019.05.15[m[33m)[m
Merge: 32b42c8b f87729c9
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 15 13:16:23 2019 -0700

    Merge pull request #314 from google/google_sync
    
    Google sync

[33mcommit f87729c97f7f37548ec18e101ebb923ec1beae7c[m
Author: rechen <rechen@google.com>
Date:   Wed May 15 10:24:16 2019 -0700

    Update pytype's version and CHANGELOG for a May 15 release.
    
    The typeshed update is in https://github.com/google/pytype/pull/313.
    
    PiperOrigin-RevId: 248356832

[33mcommit 8e55f2295770df3f2d549a7fb8f241b7406db165[m
Author: rechen <rechen@google.com>
Date:   Tue May 14 16:10:25 2019 -0700

    Fix functools.partial matching after the most recent typeshed update.
    
    The last typeshed update changed functools.partial from a class to a series of
    overloads that attempt to match on the input function's parameter count. This
    doesn't work well when the function has keyword arguments, so I've added an
    overlay that detects and handles this case.
    
    PiperOrigin-RevId: 248231209

[33mcommit 32b42c8b433033dee96ee02588975347f518d0d9[m
Merge: e19aa9ad a04f973b
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 14 19:53:08 2019 -0700

    Merge pull request #313 from google/ts
    
    Update typeshed to 50d98acc766e9425cb099c17b711f1bccb697584.

[33mcommit a04f973b869cb3a353b573acd7be96d23e24bcd7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 14 19:10:13 2019 -0700

    Update typeshed to 50d98acc766e9425cb099c17b711f1bccb697584.
    
    Also updates pytype/mixin.py and some test cases to reflect that in py3,
    unittest.TestCase is in unittest/case.pyi rather than unittest/__init__.pyi.

[33mcommit e19aa9ada98f3751c6a25f81704c1760655f1580[m
Merge: f421b064 a96337bc
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 14 17:03:52 2019 -0700

    Merge pull request #312 from google/google_sync
    
    Google sync

[33mcommit a96337bcb5944a44e9ace741f2a1676dd517c10d[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon May 13 17:05:29 2019 -0700

    Internal change
    
    PiperOrigin-RevId: 248040808

[33mcommit b5dd7c7ff57a3127dcba0b67e2006a3035c7596b[m
Author: rechen <rechen@google.com>
Date:   Mon May 13 10:45:41 2019 -0700

    Standardize whitespace and fix `pass` in pyi files.
    
    Fixes two minor annoyances in pytype's output:
    * We were inconsistent about whether there was a trailing newline in
      PrintVisitor's output. Now there never is.
    * We were printing:
        class X:
          pass
      instead of:
        class X: ...
      This change switches to the latter, which is the recommended style
      for pyi files.
    
    PiperOrigin-RevId: 247966685

[33mcommit f421b0648ba3001fe09aef618f7c17108a700ccc[m
Merge: 4dc645db 9023de98
Author: Rebecca Chen <rechen@google.com>
Date:   Sun May 12 11:18:51 2019 -0700

    Merge pull request #310 from google/google_sync
    
    Google sync

[33mcommit 9023de987897da91baefa576412abdecad4a87a6[m
Author: rechen <rechen@google.com>
Date:   Sun May 12 10:34:05 2019 -0700

    Finish supporting nested classes in pyi files.
    
    Supports referencing nested classes by their fully qualified name from
    anywhere, and by their bare name from inside themselves (so that `self`
    resolves properly).
    
    Also fixes a bug in load_pytd for resolving deeply nested classes.
    
    Makes progress towards https://github.com/google/pytype/issues/150.
    Makes progress towards https://github.com/google/pytype/issues/171.
    
    PiperOrigin-RevId: 247839027

[33mcommit 2d5b4de400295f690c0795aeadf570a3f3489bbc[m
Author: rechen <rechen@google.com>
Date:   Thu May 9 14:42:22 2019 -0700

    Support referencing a nested class from within the same top-level class.
    
    After this CL, we'll have three missing pieces left:
    * forward references to the fully qualified names of nested classes
    * referencing a nested class inside itself
    * referencing a nested class outside the body of the top-level class
    
    Makes progress towards https://github.com/google/pytype/issues/150.
    Makes progress towards https://github.com/google/pytype/issues/171.
    
    PiperOrigin-RevId: 247499367

[33mcommit 902f9f0768462557bcc317e406ec50c694a07dca[m
Author: rechen <rechen@google.com>
Date:   Thu May 9 14:31:52 2019 -0700

    Support nested class lookup from other .py and .pyi files.
    
    Makes progress toward https://github.com/google/pytype/issues/150.
    Makes progress toward https://github.com/google/pytype/issues/171.
    
    PiperOrigin-RevId: 247497485

[33mcommit 4dc645dbb8c71c82eb1882fd1adb289ca11463fd[m[33m ([m[1;33mtag: 2019.05.08[m[33m)[m
Merge: b88da19c 6dbe855d
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 8 22:06:34 2019 -0400

    Merge pull request #309 from google/google_sync
    
    Fix a bug where pytype would fail to resolve an unused import.

[33mcommit 6dbe855dba25d18a00a3ff8103da38eaf337c3e4[m
Author: rechen <rechen@google.com>
Date:   Wed May 8 18:31:56 2019 -0700

    Fix a bug where pytype would fail to resolve an unused import.
    
    This is a problem when a pyi files does `from X import Y as Y` with
    the intent to re-export Y. pytype would see Alias(Y, X.Y) and assume
    that X was a module and Y a module attribute. Instead, we need to
    detect when X is a package and attempt to load a pyi for X.Y.
    
    When this is LGTM'd, I'll update __version__ and CHANGELOG with
    the current date before submitting, so that I can do a PyPI release
    and unblacklist the affected third_party typeshed files.
    
    Makes progress toward https://github.com/google/pytype/issues/171.
    
    PiperOrigin-RevId: 247335339

[33mcommit b88da19c2111c4ee433b9cdf23d91225288c094d[m
Merge: 834ae1e5 6df668e4
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 8 20:56:32 2019 -0400

    Merge pull request #308 from google/google_sync
    
    Google sync

[33mcommit 6df668e4536a50c48e633ec700c6676225a9f749[m
Author: Richard <rhshadowgreen@gmail.com>
Date:   Wed May 8 17:21:02 2019 -0700

    Add missing comma (#307)
    
    Added comma to separate introductory phrase from subject of sentence
    
    Resolves #307
    
    PiperOrigin-RevId: 247325536

[33mcommit 90ce4ec74ea34fffa289cc6d70fa11ba01723b00[m
Author: rechen <rechen@google.com>
Date:   Tue May 7 13:32:54 2019 -0700

    Add "pytype and mypy" lightning talk to FAQ.
    
    Realistically, this is the first question that gets asked about
    pytype externally, so I want to put this somewhere easy to find,
    but I'm not sure if the top of the FAQ is the right place.
    
    PiperOrigin-RevId: 247080251

[33mcommit 834ae1e5497ee1ac87569d1842d21a947ff672c8[m[33m ([m[1;33mtag: 2019.05.06[m[33m)[m
Merge: 91e28097 37bec45b
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 6 18:29:32 2019 -0400

    Merge pull request #306 from google/google_sync
    
    Google sync

[33mcommit 37bec45b44a92abf075b89b2d0eb5d517c396a95[m
Author: rechen <rechen@google.com>
Date:   Mon May 6 14:50:51 2019 -0700

    Fix a typo so the pyi parser respects module aliases.
    
    Fixes https://github.com/google/pytype/issues/274.
    Makes progress toward https://github.com/google/pytype/issues/171.
    
    PiperOrigin-RevId: 246901870

[33mcommit ad8a9cb35939c62b7c3469436efd5195ceb25be2[m
Author: rechen <rechen@google.com>
Date:   Mon May 6 14:42:43 2019 -0700

    Support collections.namedtuple in the pyi parser.
    
    Treats collections.namedtuple as typing.NamedTuple with field
    types of Any.
    
    Also allows namedtuple to be used as a function name so that
    collections.pytd continues to parse correctly.
    
    Makes progress toward https://github.com/google/pytype/issues/171.
    
    PiperOrigin-RevId: 246900350

[33mcommit 633d0d1d48a6564350a76bb52744ce78642ddfab[m
Author: rechen <rechen@google.com>
Date:   Wed May 1 15:57:31 2019 -0700

    Add typeshed update to upcoming pytype release.
    
    PiperOrigin-RevId: 246216188

[33mcommit f6c9c8b119622c47315e885d69a5250207a81e5e[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 30 10:43:10 2019 -0700

    Update typeshed/update_typeshed.sh and typeshed/missing.txt
    
    * Changes how the update script formats pytype_blacklist.bzl - currently, it
      makes incorrect no-op formatting changes on every update.
    * Adds two entries to missing.txt.
    * Changes stdlib/2.7 to stdlib/2 in missing.txt. The corresponding typeshed
      directory was renamed years ago.
    
    PiperOrigin-RevId: 245977148

[33mcommit 91e280973de88f02ffca1cd2c669e55320ba26ae[m
Merge: bb1286a1 7f4d463d
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 1 15:27:51 2019 -0700

    Merge pull request #303 from google/ts
    
    Update typeshed to 4e572ae6a398c82fa9f1b0e7ba7c819274de8c3a.

[33mcommit 7f4d463ddf79f00f6316680d16fda0a921a032f0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 1 14:27:58 2019 -0700

    Update typeshed to 4e572ae6a398c82fa9f1b0e7ba7c819274de8c3a.

[33mcommit bb1286a1af1ca4337ae1d2be8f5098d8e8e1b20a[m[33m ([m[1;33mtag: 2019.04.26[m[33m)[m
Merge: 8311566a cf4364a6
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 26 11:55:24 2019 -0700

    Merge pull request #302 from google/google_sync
    
    Google sync

[33mcommit cf4364a60e0b6ef02fcb6a8831bf477bb093ee09[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 26 11:21:02 2019 -0700

    Update pytype's version number for a PyPI release.
    
    PiperOrigin-RevId: 245454676

[33mcommit d2b430df0cfc14d6a87c03469e5f48db0a7f6369[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 24 14:25:15 2019 -0700

    Performance optimization: skip HasCombination when only one combination exists.
    
    Last optimization! For now, anyway. Again checked against tests and a sample of
    1600 targets.
    
    Halves the amount of time pytype spends in HasCombination while analyzing
    //third_party/py/pytype:type_checked_lib and speeds up inference on sample
    files convert.py and test_data/pytree.py by 15%.
    
    PiperOrigin-RevId: 245116313

[33mcommit c4f3f0f4307b16c611fbad260052605d4806e504[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 24 13:06:12 2019 -0700

    Add `strict` keyword to cfg.py.
    
    It's still occasionally useful to have a pure-Python implementation of the
    typegraph, so I made the optimization changes to cfg.py as well.
    
    PiperOrigin-RevId: 245100977

[33mcommit 8311566a6611c43c0b245b4410a9138c70acd3ef[m
Merge: e797857f 3868814b
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 24 12:52:10 2019 -0700

    Merge pull request #301 from google/google_sync
    
    Google sync

[33mcommit 3868814b5b94453f58bbc0e43fd9454450b69e1f[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 23 15:17:02 2019 -0700

    Cleanup: factor out PyObject_IsTrue logic into a helper function.
    
    PiperOrigin-RevId: 244935494

[33mcommit 908321f3e1703fca67fdd4d82120e32d5000ae31[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 23 14:22:37 2019 -0700

    Performance optimization: skip pruning bindings if there is only one.
    
    Applies the approximation that I previously did to Filter(edData) to Bindings.
    I again made sure that the tests and a sample of 1600 targets still pass.
    
    Reduces the amount of time that pytype spends in Bindings while analyzing
    //third_party/py/pytype:type_checked_lib from 6% of the total to 4% and speeds
    up checking of sample files convert.py and test_data/pytree.py by 19%.
    
    PiperOrigin-RevId: 244925022

[33mcommit 5732708b445cb1211a9e6d551dce1bb0611d3a7e[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 22 14:34:27 2019 -0700

    Add missing Python 3 methods int.{to,from}_bytes.
    
    PiperOrigin-RevId: 244736366

[33mcommit 1cb56cacfff675ef6dc9aabb65954beb38faa2eb[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 19 15:18:53 2019 -0700

    Performance optimization: skip filtering bindings if there is only one.
    
    This is an approximation, but it passes all of our tests as well as a
    build_all_pytype_targets sample of 1600 targets.
    
    It reduces the amount of time that pytype spends in Filter and FilteredData
    while analyzing //third_party/py/pytype:type_checked_lib from about 8% of the
    total to about 2% and speeds up inference on two sample files (convert.py
    and test_data/pytree.py) by about 25%.
    
    PiperOrigin-RevId: 244431772

[33mcommit e797857f173daa92ce52f58841aae1d7c3d2f8d3[m[33m ([m[1;33mtag: 2019.04.19[m[33m)[m
Merge: d42e1e7e 5d3e5283
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 19 13:49:07 2019 -0700

    Merge pull request #298 from google/google_sync
    
    Google sync

[33mcommit 5d3e5283e6346bbdde8063e586ab2cb14e112e0c[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 19 12:10:03 2019 -0700

    Update CHANGELOG and version for a PyPI release.
    
    Also edited the CHANGELOG line about PEP 544 because I looked
    at the PEP again and realized that protocols can also have
    non-method attributes, which we don't support.
    
    PiperOrigin-RevId: 244399530

[33mcommit 7bbee17ade5307ce82a74cf426c711b2c022b7a6[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 18 15:06:36 2019 -0700

    Performance optimization: remove an extra tuple() call in Node.__hash__.
    
    This change reduces the time spent in __hash__ when analyzing
    //third_party/py/pytype:type_checked_lib by about 20% and decreases the Kessel
    Run runtime by about 5%.
    
    I also fixed two lint issues.
    
    PiperOrigin-RevId: 244266806

[33mcommit ddf7631b08f6bd4fd1f3c1f57eca988fcf457e6f[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 18 13:24:55 2019 -0700

    Fix the py3 signature of __builtin__.round.
    
    PiperOrigin-RevId: 244246369

[33mcommit d42e1e7e7cb8ae1685d22c6630e52f203634c995[m
Merge: 36940c00 e55dd55a
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 17 14:40:54 2019 -0700

    Merge pull request #297 from google/google_sync
    
    Google sync

[33mcommit e55dd55a31d476ca3eed61dc771efa9338562460[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 17 13:11:38 2019 -0700

    Be more careful about type-checking protocol method bodies.
    
    Fixes https://github.com/google/pytype/issues/214.
    Fixes https://github.com/google/pytype/issues/296.
    
    PiperOrigin-RevId: 244053077

[33mcommit 25b6a06eb693308fe1b1c55b977642c75112ffd0[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 17 13:01:36 2019 -0700

    Support using a protocol in the same module that defines it.
    
    Partially addresses https://github.com/google/pytype/issues/296.
    
    PiperOrigin-RevId: 244051213

[33mcommit 2b3f7386e4191dfceb3af60165b3c060593b0e4c[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 17 12:14:10 2019 -0700

    Support custom protocols in pyi files.
    
    Supports custom protocols as long as they are defined in a
    different module from where they are used.
    
    Partially addresses https://github.com/google/pytype/issues/296.
    
    PiperOrigin-RevId: 244043001

[33mcommit a9cf7868b90e0bbdde2fc8395eda1befa9b3f178[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 17 11:42:24 2019 -0700

    Support importing Protocol from typing_extensions.
    
    In reality, Protocol is defined in typing_extensions. It's hard for us
    to move our definition from typing to typing_extensions because typing
    can't depend on any libraries except builtins, so instead import the class.
    
    Partially addresses https://github.com/google/pytype/issues/296.
    
    PiperOrigin-RevId: 244037223

[33mcommit 6aca77f784979af6d47c2bdf4f0f56bdeaa443ed[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 17 10:48:21 2019 -0700

    Cleanup: inline a method only called once.
    
    PiperOrigin-RevId: 244026076

[33mcommit 393156b5dcb676ab0d1648fa9da8892870a8a047[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon Apr 15 14:10:37 2019 -0700

    Remove debugging print() call
    
    This makes the JSON output stream invalid and causes the indexer
    driver to fail.
    
    PiperOrigin-RevId: 243686045

[33mcommit ca93d769a4ef2b7e0ca662fe09d3c9165326ba30[m
Author: mdemello <mdemello@google.com>
Date:   Fri Apr 12 16:39:24 2019 -0700

    Link an import statement's definition anchor to the word "import".
    
    Relies on the fact that we have one import per line.
    
    PiperOrigin-RevId: 243356422

[33mcommit 36940c00247ec733f7942d9b1ff22709506837dd[m
Merge: 00b1bc7a 7e3fbee5
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 15 14:11:34 2019 -0700

    Merge pull request #295 from google/lint
    
    Re-enable some disabled pylint messages.

[33mcommit 7e3fbee518029dce9f4a7f3611be8389c7e9f73c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 15 13:35:19 2019 -0700

    Leave bad-names empty; we allow all variable names.

[33mcommit 3cef0ddf1488c9f3887cee9f9430be6fb324d2c6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 11 20:12:45 2019 -0700

    Re-enable some disabled pylint messages.

[33mcommit 00b1bc7a9e2757d0b058c3d43bdfe96c4c70d42f[m[33m ([m[1;33mtag: 2019.04.12[m[33m)[m
Merge: 17de15cb 02ba2c13
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 12 12:14:32 2019 -0700

    Merge pull request #294 from google/google_sync
    
    Google sync

[33mcommit 02ba2c1376d9930ef24313852dcb8731287261ba[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 12 11:16:59 2019 -0700

    Bump the PyPI version number for a Friday release.
    
    PiperOrigin-RevId: 243298259

[33mcommit 061ec62854fab956c03369d578b40738b61a6dad[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 11 20:45:12 2019 -0700

    Fix a bunch of lint findings.
    
    Fixes the following findings from upstream pylint:
    * chained-comprehension
    * comparison-with-callable
    * consider-iterating-dictionary
    * len-as-condition
    * misplaced-comparison-constant
    * no-value-for-parameter
    * raising-format-tuple
    * redefined-argument-from-local
    * redefined-outer-name
    * syntax-error
    * trailing-newlines
    * unnecessary-pass
    
    I also deleted dead code and fixed gpylint findings I
    discovered along the way, mostly g-complex-comprehension.
    
    PiperOrigin-RevId: 243196010

[33mcommit 3e1040d9fd72b99963f7f62823f295a0ddf1d9df[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 10 21:25:08 2019 -0700

    Make pytype in README title lowercase for consistency.
    
    PiperOrigin-RevId: 242999985

[33mcommit 17de15cbcde3eed6fb9904100b3fec856361d811[m
Merge: a26457c7 1ed2bb52
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 11 15:55:24 2019 -0700

    Merge pull request #293 from google/lint
    
    Run pylint over build_scripts/ and setup.py as well.

[33mcommit 1ed2bb5214f67dee9819dc23d25029772dbea029[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 11 12:49:54 2019 -0700

    Run pylint over build_scripts/ and setup.py as well.
    
    * Lints the rest of our source files not in pytype/.
    * Edits those files to be free of lint errors, disables relative-import
      because it only fires in 2.7 and doesn't seem to be useful.
    * Tweaks pylintrc to be a little easier to read and maintain.
    * Moves the pylint step from .travis.yml to build_scripts/travis_script,
      alphabetizes installs in .travis.yml.

[33mcommit a26457c7820146c82b88650d7736cd48bba92428[m
Merge: 70b93b36 e4208b35
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 11 11:43:21 2019 -0700

    Merge pull request #287 from hiyashichuka/278_use_pylint
    
    Add pylintrc #278

[33mcommit e4208b3591ce3d15936f582c67c543084ba9fe0c[m
Author: HiyashiChuka <hiyashichuka.oisii@gmail.com>
Date:   Thu Apr 11 20:14:19 2019 +0900

    Add pylintrc
    
    ・remove fixme, modify max-line-length
    .modify travis.yml,
      -Because I want to pylint run regularly.

[33mcommit 70b93b360119d2ef62b782ae79c70a046468d091[m
Merge: 2bd6ec03 d9ac4914
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 10 15:05:35 2019 -0700

    Merge pull request #292 from google/google_sync
    
    Google sync

[33mcommit d9ac4914ffb9bb10fdc09edf51de3804f292ab6b[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 10 14:33:33 2019 -0700

    Fix lint errors in merge_pyi.
    
    Addresses a line-too-long error that https://github.com/google/pytype/pull/287
    found on one of the imports in this file while also taking the opportunity to
    clean up everything flagged by gpylint.
    
    PiperOrigin-RevId: 242941778

[33mcommit 991b0ebc06bf8670803190c7e8aded31589377aa[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 10 11:35:51 2019 -0700

    Limit the number of tracebacks pytype will show for one error.
    
    Without this limit, pytype occasionally shows pagefuls of the same
    error over and over again.
    
    PiperOrigin-RevId: 242908633

[33mcommit 2bd6ec03ccd78a8e092e65a28f8eb38e39880b46[m
Merge: 08b623b4 35cb3887
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 9 17:44:59 2019 -0700

    Merge pull request #291 from google/google_sync
    
    Google sync

[33mcommit 35cb3887ebad5845b362411063e9b7d9090109b8[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 9 15:47:59 2019 -0700

    Update pytype's CHANGELOG to include typeshed update.
    
    The update is in https://github.com/google/pytype/pull/290.
    
    PiperOrigin-RevId: 242755752

[33mcommit e0f72a12afe0a9bdb36ef1173702cbca237cecbe[m
Author: mdemello <mdemello@google.com>
Date:   Fri Apr 5 12:51:46 2019 -0700

    FIX: Two primitive objects can always be compared if they are the same type.
    
    PiperOrigin-RevId: 242176474

[33mcommit 08b623b4aaa93b999e3f3be8085d05d00b0dd678[m
Merge: cf4a7aef 9bcf41a5
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 9 17:07:11 2019 -0700

    Merge pull request #290 from google/ts
    
    Update typeshed pin to cfa65b831b327c595129fcc11c855ac504920d98.

[33mcommit 9bcf41a5c04ca62dee08a314fd01ffaed6367ce2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 9 15:29:17 2019 -0700

    Update typeshed pin to cfa65b831b327c595129fcc11c855ac504920d98.
    
    Matches the internal update yesterday.

[33mcommit cf4a7aef490fe44e7552698287107bbe8ff87d59[m[33m ([m[1;33mtag: 2019.04.05[m[33m)[m
Merge: 3a3d50f3 6abddedd
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 5 11:56:45 2019 -0700

    Merge pull request #289 from google/google_sync
    
    Bump pytype's PyPI version number for a release.

[33mcommit 6abddedd178d2a572017d4fd1910601d4a3ec984[m
Author: rechen <rechen@google.com>
Date:   Fri Apr 5 11:17:36 2019 -0700

    Bump pytype's PyPI version number for a release.
    
    PiperOrigin-RevId: 242158627

[33mcommit 3a3d50f3b3fc277c07a32acdda329c7e6d030636[m
Merge: f943e982 c2da1e1c
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 4 12:01:09 2019 -0700

    Merge pull request #288 from google/google_sync
    
    Google sync

[33mcommit c2da1e1c0525f31d80333ae7c4f986ee6ae7407a[m
Author: rechen <rechen@google.com>
Date:   Thu Apr 4 11:26:57 2019 -0700

    Add Match.__getitem__ and Pattern.fullmatch.
    
    Fixes https://github.com/google/pytype/issues/286.
    
    PiperOrigin-RevId: 241968511

[33mcommit 24a738b3e423c4db4c7bdf07a7ae5c79c7d0c10f[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Apr 3 14:26:12 2019 -0700

    Add signature of enum.auto.__init__.
    
    Currently code that uses `enum.auto` does not type check. The `auto` class is made to inherit from `IntFlag` so that the attributes of an `Enum` object type check correctly. However, the `__init__` signature of `auto` is different.
    
    Typeshed used to have this `__init__` signature at one point, but they removed it because mypy doesn't seem to need it (https://github.com/python/typeshed/pull/1331/commits/bda78533b349594711a66298cba7b97c2a3b47c9). Pytype however seems to do.
    
    PiperOrigin-RevId: 241805634

[33mcommit 4a6e7bb95a1383dbeb94abfe996c3584c85a809b[m
Author: rechen <rechen@google.com>
Date:   Wed Apr 3 00:36:31 2019 -0700

    Bump pytype's PyPI version number again.
    
    Corresponding PR is https://github.com/google/pytype/pull/284.
    Doing another release today may be overly optimistic; I'll
    just edit the date in the CL if it ends up being wrong.
    
    PiperOrigin-RevId: 241678751

[33mcommit f943e9823f7770a954a804e35e09685766857513[m[33m ([m[1;33mtag: 2019.04.02.1[m[33m)[m
Merge: fb569926 675cff96
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 2 19:47:51 2019 -0700

    Merge pull request #284 from google/setup
    
    Only require typed_ast in 3.3+.

[33mcommit 675cff96ffea22203809fc5e29838a0cf9aca1fd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 2 18:31:41 2019 -0700

    Only require typed_ast in 3.3+.
    
    In lower versions, this requirement causes an installation failure:
    https://travis-ci.org/google/python-fire/jobs/514951139.

[33mcommit fb569926d9614280adc887ae2d8e524ee88c8f22[m[33m ([m[1;33mtag: 2019.04.02[m[33m)[m
Merge: 6c8ee284 5d5de483
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 2 15:46:24 2019 -0700

    Merge pull request #283 from google/setup
    
    Change our development status from Stable to Production/Stable.

[33mcommit 5d5de483f7cf2da9506820666b896fac774cb145[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 2 15:11:28 2019 -0700

    Change our development status from Stable to Production/Stable.
    
    PyPI doesn't seem to recognize Stable, and a classifer search shows
    projects using Production/Stable.

[33mcommit 6c8ee2848e20eb88e5c77fa6bc419b20d58518fb[m
Merge: f2571fa2 38c72ff6
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 2 15:03:44 2019 -0700

    Merge pull request #282 from google/google_sync
    
    Google sync

[33mcommit 38c72ff627989379189f3e99a105d45881d87402[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 2 13:51:50 2019 -0700

    Bump pytype's PyPI version number for a release.
    
    PiperOrigin-RevId: 241596631

[33mcommit 26b1c7a395831d4e9e10a0b5244bb4a7f0110b80[m
Author: rechen <rechen@google.com>
Date:   Tue Apr 2 13:24:16 2019 -0700

    Add an AnyStr overload to __builtin__.filter to work around a pytype bug.
    
    PiperOrigin-RevId: 241591075

[33mcommit 7cf8bc5af59788414f2ce262435f74ff4cd4919e[m
Author: mdemello <mdemello@google.com>
Date:   Mon Apr 1 16:19:14 2019 -0700

    In python3, filter always returns an Iterator.
    
    Technically, it returns a filter object, but it behaves as an iterator for all
    practical purposes, and typeshed lists the signature as -> Iterator[T], so we
    can follow suit.
    
    PiperOrigin-RevId: 241421968

[33mcommit f2571fa23e363bc021fbe53daf14f04b087b8b45[m
Merge: a2fabfa8 7016cba6
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 1 15:42:54 2019 -0700

    Merge pull request #281 from google/google_sync
    
    Google sync

[33mcommit 7016cba6262c2db24fe7c5cf6c072101dc24f6d8[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 1 14:48:51 2019 -0700

    Add missing attributes and methods to typing.ChainMap.
    
    The __init__ method takes any number of maps that don't have to all be the same
    type, so I used the approach from
    https://github.com/python/typeshed/blob/f11d061849c89a8e28809e52b71a80f0e329cb7d/stdli[]/itertools.pyi#L62
    of listing out the common cases in overloads.
    
    PiperOrigin-RevId: 241404306

[33mcommit 13f760f3b2fb333129bdfeac1cfaef64ce014d70[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 1 13:06:43 2019 -0700

    Bring the pytype CHANGELOG up-to-date.
    
    The typeshed update is in https://github.com/google/pytype/pull/279.
    
    PiperOrigin-RevId: 241383755

[33mcommit 892e2bcbb2772640ed0c093237858d270dd76096[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 1 12:50:34 2019 -0700

    pytype-all: Add a --no-cache option to put output in a temp dir.
    
    Fixes https://github.com/google/pytype/issues/202. Makes it easier
    to play around with pytype without leaving extra files lying around
    and to quickly do repeated clean runs when debugging.
    
    PiperOrigin-RevId: 241380867

[33mcommit 6077a859393f718aa809c51cc01be2e86483b699[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 1 12:43:52 2019 -0700

    Rename pytype_output to .pytype
    
    For https://github.com/google/pytype/issues/202. Using a hidden
    directory makes sense for the simplest workflow of using pytype
    as a type checker, and more advanced users can rename the
    directory anyway.
    
    PiperOrigin-RevId: 241379637

[33mcommit 96f562bf3a456055b3703284913c7a439faac86e[m
Author: rechen <rechen@google.com>
Date:   Mon Apr 1 12:31:03 2019 -0700

    Make pytype's ninja output more readable.
    
    Fixes https://github.com/google/pytype/issues/277.
    Before this change, pytype's intermediate output looked like:
      [1/10] pytype-single {lots of args} /path/to/foo/bar.py
    Now it will look like:
      [1/10] check foo.bar
    or:
      [1/10] infer foo.bar
    If a step fails, the full command line will still be printed
    at the end of the build. Passing in `-v2` will cause the
    command line to be printed at every step as before.
    
    Also rewrites a too-complex comprehension.
    
    PiperOrigin-RevId: 241377065

[33mcommit cd8a83cb13fa8f6b13858d935062d1bfcb90a06e[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 29 17:37:04 2019 -0700

    Add typing.ChainMap and typing.Counter.
    
    Fixes https://github.com/google/pytype/issues/242.
    
    PiperOrigin-RevId: 241081214

[33mcommit 7bb83f2d61024d8773c5148d90e26a436cca3707[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 29 17:16:06 2019 -0700

    Cleanup: make typing.pytd and collections.pytd a little more readable.
    
    Moves two typing definitions so that version info checks are in order of
    increasing version, alphabetizes a list of collections aliases, adds an
    aesthetically pleasing newline.
    
    PiperOrigin-RevId: 241078973

[33mcommit c451b179feb5c3a64961a03d973a2ab1dbe2fd73[m
Author: mdemello <mdemello@google.com>
Date:   Fri Mar 29 16:37:19 2019 -0700

    Add an option to xref to show tracebacks for pytype exceptions.
    
    PiperOrigin-RevId: 241074063

[33mcommit a2fabfa889c348a4842d88b7e425dc0899f306ae[m
Author: Martin DeMello <martindemello@gmail.com>
Date:   Mon Apr 1 13:40:59 2019 -0700

    Add a dependency on typed_ast (#280)
    
    * Add a dependency on typed_ast
    
    Also upgrade development status to stable.

[33mcommit f39ed384d53116074809193fa7f7b817120257d6[m
Merge: 31723ada 7317564d
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 1 13:03:56 2019 -0700

    Merge pull request #279 from google/typeshed
    
    Update typeshed to 9b9ff64fc59f95e3595cfdfd821675d81ad56aa3.

[33mcommit 7317564dcdd539af32e7aa35992bab33ce8f456d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 1 11:35:17 2019 -0700

    Update typeshed to 9b9ff64fc59f95e3595cfdfd821675d81ad56aa3.

[33mcommit 31723ada8a73cf9150226c3ce6445790e859e8b8[m
Merge: 8f830f7e d0538d1a
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 29 16:07:55 2019 -0700

    Merge pull request #276 from google/google_sync
    
    Google sync

[33mcommit 8f830f7ef3abb2fce18ef2a4bbbb3068ae87b53d[m
Merge: 1f619e0f e1bbef05
Author: Martin DeMello <martindemello@gmail.com>
Date:   Fri Mar 29 15:30:53 2019 -0700

    Merge pull request #275 from google/oss-xref
    
    add an executable for xref to setup.py

[33mcommit d0538d1ab71a2e8b63d041f11c4ecf27694546c3[m
Author: mdemello <mdemello@google.com>
Date:   Fri Mar 29 13:58:33 2019 -0700

    Add a link to the file anchor from import statements.
    
    PiperOrigin-RevId: 241045402

[33mcommit 9d3c00233e136f6189f749700eecfa578620baf8[m
Author: mdemello <mdemello@google.com>
Date:   Fri Mar 29 11:49:54 2019 -0700

    Add a copybara replacer for ast27t->ast27.
    
    Left it with paths=_py_files in case we use typed_ast elsewhere.
    
    PiperOrigin-RevId: 241022240

[33mcommit 1cd14bcdb0aba9d3c0fab0571b1d2a98abfb60a2[m
Author: mdemello <mdemello@google.com>
Date:   Thu Mar 28 15:37:07 2019 -0700

    Add a "module" node linked to the first byte of a file.
    
    PiperOrigin-RevId: 240868346

[33mcommit e1bbef05346ab26c350d6f14f2a6b8617b40d86a[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Mar 29 14:52:38 2019 -0700

    sync typeshed back to master

[33mcommit 584b42c654c4371ed931e73029b8b16a868dde14[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Mar 29 14:34:30 2019 -0700

    add an executable for xref to setup.py

[33mcommit 1f619e0f3af06d4e654d237bc48490347083f65f[m[33m ([m[1;33mtag: 2019.03.27[m[33m)[m
Merge: fddbad8c 89cad817
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 27 14:17:53 2019 -0700

    Merge pull request #273 from google/google_sync
    
    Google sync

[33mcommit 89cad817d2264288304791ec83de6eb9c8e8f989[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 27 11:55:17 2019 -0700

    Support `# type: ignore` on import lines in pyi files.
    
    Our parser is causing problems for
    https://github.com/python/typeshed/pull/2887#issuecomment-476943850.
    
    Most of the new tests call parse_string() directly instead of using
    _ParserTestBase.check() because the ast contains internal details
    like the use of __PACKAGE__ for the current package.
    
    PiperOrigin-RevId: 240610622

[33mcommit 47e2bb1a5969d8309e2e7ec7265eda1b3b354475[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 27 11:51:52 2019 -0700

    Update the open source docs.
    
    PiperOrigin-RevId: 240610004

[33mcommit e7e09520a57f1add8224a9dc8b22eed52be17110[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 27 11:43:58 2019 -0700

    Fix a lint warning I noticed while importing a PR.
    
    PiperOrigin-RevId: 240608328

[33mcommit 43d4a5b8452248d0e308864def54692dc16a717b[m
Author: tamuhey <tamuhey@gmail.com>
Date:   Wed Mar 27 11:39:49 2019 -0700

    made `python_verision` in pytype.cfg same as its runtime python version (#272)
    
    from #270
    
    Resolves #272
    
    PiperOrigin-RevId: 240607458

[33mcommit 7913940e257ca9e5f0b141757a93c03e24016a01[m
Author: mdemello <mdemello@google.com>
Date:   Mon Mar 25 14:10:51 2019 -0700

    Improve the exception error message for a bad imports map.
    
    PiperOrigin-RevId: 240214956

[33mcommit fddbad8c00a08b5d90acbbea8b25f7407ae619c7[m
Merge: 9a2a4eb4 b397d5f2
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 26 10:16:34 2019 -0700

    Merge pull request #271 from cclauss/patch-1
    
    Travis CI: The 'sudo' tag is now deprecated

[33mcommit b397d5f270a64b0085d848e7fa273bd5a299a8cc[m
Author: cclauss <cclauss@me.com>
Date:   Tue Mar 26 12:49:55 2019 +0100

    Travis CI: The 'sudo' tag is now deprecated
    
    [Travis are now recommending removing the __sudo__ tag](https://blog.travis-ci.com/2018-11-19-required-linux-infrastructure-migration).
    
    "_If you currently specify __sudo: false__ in your __.travis.yml__, we recommend removing that configuration_"

[33mcommit 9a2a4eb49449d18020e22d06e5640caee7b196be[m[33m ([m[1;33mtag: 2019.03.21[m[33m)[m
Merge: 6b2796e7 41433744
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 21 14:54:02 2019 -0700

    Merge pull request #268 from google/google_sync
    
    Google sync

[33mcommit 41433744700e691eadcdb5769c86b0b1d906e43e[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 21 14:14:48 2019 -0700

    Update pytype __version__ and CHANGELOG for a PyPI release.
    
    This CL depends on a typeshed update in
    https://github.com/google/pytype/pull/267.
    
    PiperOrigin-RevId: 239670039

[33mcommit 6d68cf7085bcf48769f9dd930b45a190e2638ead[m
Author: mdemello <mdemello@google.com>
Date:   Wed Mar 20 17:35:42 2019 -0700

    Fix: Don't crash when we call a lambda function.
    
    see https://github.com/kythe/kythe/issues/184
    
    PiperOrigin-RevId: 239510964

[33mcommit d326943d56dafd461bfa62a7fc11f2dc26ec946c[m
Author: mdemello <mdemello@google.com>
Date:   Wed Mar 20 16:51:17 2019 -0700

    Index imports both as local declarations and as remote references.
    
    Also fixes the case
      import x.y
      a = x.y.Foo
    
    where x.y in line 2 was indexed as `y` within x/__init__.py rather than as
    imported file x/y.py
    
    PiperOrigin-RevId: 239503865

[33mcommit 14167bc7fa69bdcc2a4623abf0f8b67b17f935b9[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 20 10:23:47 2019 -0700

    Widen the return type of ast.parse in a Python 3 test.
    
    https://github.com/python/typeshed/pull/2859 changed the return type.
    Module is a subclass of AST, so it's still correct, just less precise.
    Based on the PR description, this change was intentional.
    
    PiperOrigin-RevId: 239423111

[33mcommit b3aedfe86404b940fdc744db2f0219015662f4ec[m
Author: murali <murali@google.com>
Date:   Mon Mar 18 14:52:48 2019 -0700

    Classname and field names for NamedTuple can be unicode also.
    
    PiperOrigin-RevId: 239066767

[33mcommit 054ecfe913e4715579567d04a4616bba96c7df64[m
Author: mdemello <mdemello@google.com>
Date:   Mon Mar 18 13:53:01 2019 -0700

    Remove pytype disable.
    
    PiperOrigin-RevId: 239053983

[33mcommit 6b2796e71ccad1d00bf1b6113edb6556ea4ea629[m
Merge: 1b0ce4de 58c87c5e
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 21 14:07:22 2019 -0700

    Merge pull request #267 from google/ts
    
    Update the typeshed pin to match the internal version.

[33mcommit 58c87c5e7d156322506557a0d1d9da6ba8669491[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 21 12:59:17 2019 -0700

    Cherry pick a test fix.

[33mcommit 0b367f5fd863acf9cb004bf086910b7958bfca76[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 21 12:43:39 2019 -0700

    Update typeshed pin to afe665690cf6fc58677d5df00c002a9336453c4a.

[33mcommit 1b0ce4de0df858dbcd03c7d9244d5b7e1cfb2ee9[m
Merge: ab4415f8 69007bf0
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Mar 18 13:52:23 2019 -0700

    Merge pull request #263 from google/google_sync
    
    Google sync

[33mcommit 69007bf0db92a12ca77f648405cfa917b2efca32[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 18 13:16:43 2019 -0700

    Add missing python 3 methods clear() and copy() to bytearray and list.
    
    Fixes https://github.com/google/pytype/issues/243.
    
    PiperOrigin-RevId: 239046899

[33mcommit d0b3336de375559a5dc69db05e8fe1881657b19d[m
Author: rechen <rechen@google.com>
Date:   Mon Mar 18 12:58:36 2019 -0700

    Fix the visibility of variable annotations in Python 3.7.
    
    Fixes the test failure seen here:
    https://travis-ci.org/google/pytype/jobs/507287176.
    
    PiperOrigin-RevId: 239043386

[33mcommit 7b2c5a79e06cfa2ea78fa3e50d1d0c926ffc60f7[m
Author: rechen <rechen@google.com>
Date:   Sat Mar 16 20:22:03 2019 -0700

    Tweak a sentence in the README to read more naturally.
    
    PiperOrigin-RevId: 238836166

[33mcommit 06daac7b2e18daf2f2d6014b57af4f32dfe1a125[m
Author: mdemello <mdemello@google.com>
Date:   Fri Mar 15 22:19:08 2019 -0700

    Allow late types in bounds and constraints of TypeVars.
    
    Fixes https://github.com/google/pytype/issues/73
    
    #pyfixit
    
    PiperOrigin-RevId: 238762812

[33mcommit 126800c2aeb0fec6749b802b895bab4abea15fb7[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 15 17:59:58 2019 -0700

    Fix the type of sys.version_info.
    
    Fixes https://github.com/google/pytype/issues/127.
    
    We had it defined as a (major, minor) tuple, when it should actually be a
    (major, minor, micro, releaselevel, serial) namedtuple.
    
    #pyfixit
    
    PiperOrigin-RevId: 238743800

[33mcommit d07d882fdc23ea270b353760020d7dd1a65ce9ef[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 15 17:08:56 2019 -0700

    Only load overlays for modules that are available.
    
    #pyfixit
    
    PiperOrigin-RevId: 238737989

[33mcommit a59b100de08512301a6db28470fa35fecacc5eb2[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 15 15:20:03 2019 -0700

    Fix a crash by doing an isinstance() check before accessing all_template_names.
    
    #pyfixit
    
    PiperOrigin-RevId: 238720531

[33mcommit 5fab9e0a45a730714f47d25d278ef9eec9132e2b[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 15 14:30:56 2019 -0700

    Add missing attributes to __builtin__.BaseException.
    
    Fixes https://github.com/google/pytype/issues/225.
    
    Definitions shamelessly stolen from
    https://github.com/python/typeshed/blob/master/stdli[]and3/builtins.pyi.
    
    #pyfixit
    
    PiperOrigin-RevId: 238711410

[33mcommit 911b836ce040f44a0afe8a0d466b93ccc7845f4e[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 15 13:49:23 2019 -0700

    pytype: Allow overwriting a variable annotation.
    
    #pyfixit
    
    PiperOrigin-RevId: 238703730

[33mcommit ab4415f899837d778bb2f1b03c2757ea8253f750[m[33m ([m[1;33mtag: 2019.03.15[m[33m)[m
Merge: 1a3bf9ce 1ec19df4
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 15 21:02:14 2019 -0700

    Merge pull request #261 from google/google_sync
    
    Google sync

[33mcommit 1ec19df4a0748b9052003648b170a631391855af[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 15 13:06:11 2019 -0700

    Add one more line to the changelog for the upcoming PyPI release.
    
    PiperOrigin-RevId: 238696016

[33mcommit 915e27ca6fe83e47c2cb8339b3a4585bfefdba87[m
Author: mdemello <mdemello@google.com>
Date:   Thu Mar 14 16:11:02 2019 -0700

    Remove kwonly args from the function call before constructing **kwargs.
    
    Fixes https://github.com/google/pytype/issues/219
    
    #pyfixit
    
    PiperOrigin-RevId: 238540234

[33mcommit 06e27c9baf7f603cf5aa1137fb5b08ab8c8affd7[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 14 13:00:42 2019 -0700

    Call verify_ast in --parse-pyi.
    
    Fixes https://github.com/google/pytype/issues/174.
    
    This allows typeshed testing to catch failures like
    unresolved imports and bad containers, which will
    solve the recurring problem of a typeshed update
    crashing pytype.
    
    #pyfixit
    
    PiperOrigin-RevId: 238501027

[33mcommit 75b8c30f4b2fa42b70963d6d48566c2b2679fe99[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 14 11:45:38 2019 -0700

    Update pytype's version and CHANGELOG in preparation for a PyPI release.
    
    Assuming I don't break anything today, I'm planning to do a release tomorrow.
    
    PiperOrigin-RevId: 238487256

[33mcommit e897518185c63b379e1beeb0e3c342f62c28a2ff[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 14 10:26:36 2019 -0700

    Filter out special `typing` members from aliases in pyi files.
    
    My previous change to support aliasing `typing` members caused
    spurious BadDependencyErrors when `typing` members that are
    supported natively in pyi files rather than defined in
    typing.pytd are aliased.
    
    #pyfixit
    
    PiperOrigin-RevId: 238469422

[33mcommit 716841f88e5146e867504214ae9300385e51e505[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Mar 13 17:27:45 2019 -0700

    __slots__ entries can be unicode or str in py2 matching []
    
    PiperOrigin-RevId: 238345059

[33mcommit 4bfe5cc87e66aa6222f29b11203a8ba775b1a63e[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 13 15:21:38 2019 -0700

    Delete pytype's now-unnecessary copy of the asyncio.tasks stub.
    
    Makes progress toward https://github.com/google/pytype/issues/16.
    
    #pyfixit
    
    PiperOrigin-RevId: 238321114

[33mcommit 1f4730044b4644b885b6214c97abbc16eff3f4a7[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 12 11:56:47 2019 -0700

    Support type macros in pyi files.
    
    Adds pyi support for aliases that contain type parameters
    ("type macros"). Removes another blocker for updating typeshed
    and allows us to start using typeshed's asyncio.tasks stub.
    
    Makes progress toward https://github.com/google/pytype/issues/16.
    
    #pyfixit
    
    PiperOrigin-RevId: 238065341

[33mcommit bdc35c8025974e6cbddd5e7b4fa9be3d1e1f01f6[m
Author: rechen <rechen@google.com>
Date:   Tue Mar 12 11:44:29 2019 -0700

    Partially fix a lookup problem caused by pyi circular imports.
    
    In my fix for https://github.com/google/pytype/issues/227, I
    claimed that circular imports could only trigger lookup problems
    involving builtin types. As it turns out, when three modules are
    involved, external types can also be left unresolved.
    
    Completely solving this bug would require incrementally resolving
    a pyi file, re-caching it after each dependency lookup. This is
    messy and also forces ast verification to happen earlier, which
    breaks some tests in ways I don't understand. This partial fix is
    good enough to unblock the typeshed upgrade.
    
    #pyfixit
    
    PiperOrigin-RevId: 238062931

[33mcommit 1a3bf9ce428a4ec2a9d153cf411da0a457d61c01[m
Merge: 666cca91 d89229dd
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 15 13:00:05 2019 -0700

    Merge pull request #260 from google/setup
    
    Remove outdated reference to asyncio from setup.py

[33mcommit d89229dd16413c7dd2014fbe50453e209417c41c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 14 11:24:14 2019 -0700

    Remove outdated reference to asyncio from setup.py

[33mcommit 666cca911858d571e2b478b0255eb0a37c637669[m
Merge: 2f97d0a6 28265b34
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 12 18:13:38 2019 -0700

    Merge pull request #258 from google/google_sync
    
    Google sync

[33mcommit 28265b341d0802cd04effa60b8dc9c33edfc3b4c[m
Author: mdemello <mdemello@google.com>
Date:   Mon Mar 11 17:00:15 2019 -0700

    Add a toplevel function to wrap all pytype exceptions into a single error type.
    
    Also uses this to raise a single error type in xref.
    
    PiperOrigin-RevId: 237915116

[33mcommit 2df98364d64e3bcd70cd84652daed5feb63df02f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Mar 11 13:16:45 2019 -0700

    Re-export renamed typing module members. (#257)
    
    This PR needs to be imported and re-exported.
    
    Resolves #257
    
    PiperOrigin-RevId: 237867524

[33mcommit 68cee37efb39a54214d40fe2d1b43c9bd84699af[m
Author: mdemello <mdemello@google.com>
Date:   Fri Mar 8 17:12:23 2019 -0800

    FIX: Set python_version and python_exe correctly in xref.
    
    PiperOrigin-RevId: 237547600

[33mcommit 64a8221acaf730b67960689ee502ce4d106d83a2[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 8 12:15:31 2019 -0800

    Forbid extra parameters to Optional in pyi files.
    
    Also fixes two lint errors by using assertRaises.
    
    PiperOrigin-RevId: 237496123

[33mcommit 0409423e72c6955960db643145e51629a5a029e2[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 8 12:05:38 2019 -0800

    Teach pytype that functions and classes always evaluate to True.
    
    I also had to tweak some tests that were using `typeX or typeY` as an example
    of an ambiguous type annotation.
    
    Fixes https://github.com/google/pytype/issues/62.
    
    PiperOrigin-RevId: 237494532

[33mcommit 2f97d0a6d5407003749a8d0ce487230177e435a6[m[33m ([m[1;33mtag: 2019.03.08[m[33m)[m
Merge: 9c34acb8 0b18d0dd
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 8 12:16:14 2019 -0800

    Merge pull request #254 from google/google_sync
    
    Google sync

[33mcommit 0b18d0dd8b7006346aada48aa89ff51b04c2fa73[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 8 11:03:14 2019 -0800

    Update the PyPI version number.
    
    Today's internal release looks good, so I'm going to release the same version
    on PyPI.
    
    PiperOrigin-RevId: 237481804

[33mcommit bd20861776376af26983a737498f69c9c9baf0e3[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 7 17:08:30 2019 -0800

    Cleanup: move AtomicAbstractValue.compatible_with into compare.py.
    
    Further shortens abstract.py and makes compatible_with easier to reason about,
    since all the code is in one place. I'm about to add another case to it for
    https://github.com/google/pytype/issues/62.
    
    PiperOrigin-RevId: 237358033

[33mcommit f38543f286a7e426c7390886421740c808c0ece8[m
Author: rechen <rechen@google.com>
Date:   Thu Mar 7 11:08:42 2019 -0800

    Add builtin fixes to the pytype changelog.
    
    I'll probably do a PyPI release soon, since there have been a number of small
    fixes in the past week. Added a line to the changelog so it won't look like an
    empty release.
    
    PiperOrigin-RevId: 237282982

[33mcommit c044e5e6f292eecf3cac02e240d43de3b25beb9c[m
Author: rechen <rechen@google.com>
Date:   Wed Mar 6 22:23:26 2019 -0800

    Fix a bug in pytype's definition of __builtin__.enumerate.
    
    PiperOrigin-RevId: 237183983

[33mcommit 9c34acb86b3b490df8a61c540e665a32b7d6b533[m
Merge: 080339b9 ddd308e6
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 6 17:39:48 2019 -0800

    Merge pull request #252 from google/google_sync
    
    Google sync

[33mcommit ddd308e6c216df76c6a40b56a4700b05a6c83e30[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Tue Mar 5 11:16:17 2019 -0800

    Support lazy-loaded attributes when checking if writable.
    
    PiperOrigin-RevId: 236884599

[33mcommit 04d54448c7366b125d09017a9f35e507e26e3e10[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon Mar 4 16:10:15 2019 -0800

    github.com/google/kythe -> github.com/kythe/kythe
    
    $ devtools/scripts/replace_string 'github.com/google/kythe' 'github.com/kythe/kythe'
    
    Tested:
        [] found no affected targets
        []
    PiperOrigin-RevId: 236744922

[33mcommit 080339b9ea1e434007e3f2261167812321c65f03[m[33m ([m[1;33mtag: 2019.03.01[m[33m)[m
Merge: 18801367 d7bb2b82
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 1 17:06:32 2019 -0800

    Merge pull request #251 from google/google_sync
    
    Google sync

[33mcommit d7bb2b821d3c78422194f41fd3969cd3af656c8f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 1 16:01:55 2019 -0800

    Add test_data to MANIFEST.in (#249)
    
    This PR also needs to be imported and re-exported rather than merged directly. I'm planning to use this one to test the import process fix I sent you.
    
    Resolves #249
    
    PiperOrigin-RevId: 236395061

[33mcommit 9a2ef0156299d806b4f279e8e545bfefdd0f6500[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 1 12:06:09 2019 -0800

    Bump the PyPI version number for a release.
    
    PiperOrigin-RevId: 236353737

[33mcommit add70ed8d9d079c2bfdbab402581b03b48c8b70e[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 1 11:29:52 2019 -0800

    Fix deprecated syntax in the pytype parser.
    
    Applies the fix I saw in a deprecation warning when I built pytype.
    
    PiperOrigin-RevId: 236347153

[33mcommit 1880136724d07835d323344366ba4d39bde2d614[m
Merge: a861ce3c 33a34711
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 1 15:24:40 2019 -0800

    Merge pull request #250 from google/google_sync
    
    Google sync

[33mcommit 33a347112a9f5c6141a12e1ce409fb4e05bfa6f1[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 1 10:58:20 2019 -0800

    Internal change
    
    PiperOrigin-RevId: 236341203

[33mcommit 67b45d3cf16c1f5501baed9e2c00eaaa4ad33f02[m
Author: rechen <rechen@google.com>
Date:   Fri Mar 1 10:46:08 2019 -0800

    Work around a typeshed bug in Python 3.4.
    
    Fixes https://github.com/google/pytype/issues/241.
    
    I've avoided describing this change as "supporting" 3.4 because that would be
    more work than I want to put into a soon-to-be-deprecated version. (For
    example, we'd have add tests.)
    
    PiperOrigin-RevId: 236339038

[33mcommit ce86c513b6b6885700ad24328bd822b8345bd1a0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 27 19:15:19 2019 -0800

    Include LICENSE in MANIFEST.in. (#248)
    
    This PR needs to be imported and re-exported rather than merged directly.
    
    Resolves #248
    
    PiperOrigin-RevId: 236039039

[33mcommit 78de3e137bc9d9697d080214a9b747e1ff326ce1[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 27 15:25:30 2019 -0800

    Update the first line of the pytype README to emphasize its main selling point.
    
    PiperOrigin-RevId: 236003957

[33mcommit a861ce3c70e7a3284bcf6281ff94b3ca9a3419e3[m
Merge: 5ec29851 252cf084
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 27 12:30:10 2019 -0800

    Merge pull request #247 from google/google_sync
    
    Google sync

[33mcommit 252cf084d74e8376854951322f682937665a0153[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 26 15:11:07 2019 -0800

    Fix a crash caused by a temporary annotation on `self`.
    
    Pytype doesn't allow `self` to be annotated on `__init__` but also temporarily
    annotates `self` in generic classes. Makes these two behaviors play nicely with
    each other.
    
    PiperOrigin-RevId: 235802451

[33mcommit 6cc00c16ec521ce2e39339e1652f576c60794a36[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 26 15:00:04 2019 -0800

    Cleanup: fix [g-complex-comprehension] lint errors in pytype/abstract.py.
    
    PiperOrigin-RevId: 235800206

[33mcommit 7116af06b6c2a7397ffad2c18527fd3e1f0f163b[m
Author: mdemello <mdemello@google.com>
Date:   Fri Feb 22 15:47:56 2019 -0800

    FIX: Bad type definition for reversed.__iter__ in __builtins__.pytd
    
    PiperOrigin-RevId: 235273421

[33mcommit 3573e89c8b9d469fa653d4b9495cc8babaf872ba[m
Author: mdemello <mdemello@google.com>
Date:   Wed Feb 20 15:59:59 2019 -0800

    Recover the filepath to a module within xref.
    
    PiperOrigin-RevId: 234887444

[33mcommit e0c16d4f5ed367ce4be2612a83d2b114b1884bb1[m
Author: mdemello <mdemello@google.com>
Date:   Wed Feb 20 13:42:26 2019 -0800

    Add imports_info support to xref.
    
    PiperOrigin-RevId: 234860140

[33mcommit 9e0eb2ef70fac094a2ac53e4438b55b8e8545346[m
Author: mdemello <mdemello@google.com>
Date:   Tue Feb 19 14:55:34 2019 -0800

    FIX: xref handles --debug itself, not via pytype's options.
    
    PiperOrigin-RevId: 234680134

[33mcommit 95d951491dcee6442c1e188237e639505148263b[m
Author: rechen <rechen@google.com>
Date:   Thu Feb 14 17:09:06 2019 -0800

    Allow aliasing the typing module in pyi files.
    
    pytype crashes when attempting to use the newest version of typeshed. One of
    the problems is that the ast stub does `import typing as _typing`.
    
    This change supports aliasing typing, and fixes a lint error caused by
    a complicated list comprehension.
    
    PiperOrigin-RevId: 234057345

[33mcommit 5ec29851706b8d24c09d9a1a1f9883f5e7220e23[m[33m ([m[1;33mtag: 2019.02.13[m[33m)[m
Merge: 4dacbcef b4c8e185
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 13 17:23:05 2019 -0800

    Merge pull request #240 from google/google_sync
    
    Google sync

[33mcommit b4c8e1859bda8c42da8e52901170904800a491b2[m
Author: rechen <rechen@google.com>
Date:   Wed Feb 13 13:04:11 2019 -0800

    Bump the PyPI version number for a release.
    
    PiperOrigin-RevId: 233813220

[33mcommit c0b5ae07ea21549b1636725e6306efa6c6bba58c[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 12 20:50:12 2019 -0800

    Fix a pyi circular import bug.
    
    Fixes a bug where pytype would crash if two modules import
    members from each other and one of the members contains a
    builtin type.
    
    Fixes https://github.com/google/pytype/issues/227, which will
    allow us to remove a pytype workaround from a typeshed stub.
    After trying to construct a test case in which an external
    dependency can cause the same problem, I *think* that this
    edge case can only be triggered by a builtin.
    
    I also fixed some lint errors.
    
    PiperOrigin-RevId: 233682385

[33mcommit fbcb303d4911fa0fcf219d0aaf111fcbd323d98d[m
Author: rechen <rechen@google.com>
Date:   Tue Feb 12 09:16:31 2019 -0800

    Updates pytype's error message link to point to new website.
    
    Updates the link that prints at the end of a pytype finding.
    I think it's slightly nicer to have the canonical documentation
    be separate from the source code; also this makes the url a
    bit shorter, which looks neater.
    
    PiperOrigin-RevId: 233617940

[33mcommit 4dacbcefa46652fdf8929e6b66a7ff202cefa219[m
Merge: 7c7222aa 58ee06a3
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Feb 11 17:33:03 2019 -0800

    Merge pull request #238 from google/setup-url
    
    Update the PyPI url in setup.py

[33mcommit 58ee06a30e7dde7a22286044defaaa185bea942b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Feb 11 16:59:02 2019 -0800

    Update the PyPI url in setup.py
    
    Updates the URL that PyPI uses for the "Homepage" link on the left of the project page
    (https://pypi.org/project/pytype/).

[33mcommit 7c7222aa28f0ba4e2bf438b52fd0cdcc62bbe9b3[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 8 17:03:26 2019 -0800

    Fix an incorrect link in the pytype website.
    
    The "Home" link worked correctly locally, but in the deployed site, it
    was sending viewers to google.github.io.

[33mcommit 23b342fada523bb56a6b83d02af79b8b11c2241e[m
Merge: a66db12f a4ccca65
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 8 16:54:04 2019 -0800

    Merge pull request #237 from google/google_sync
    
    Google sync

[33mcommit a4ccca655f2b7347856a89d5abe39cb1533abc5e[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 8 15:56:16 2019 -0800

    Add website files.
    
    * Overrides some hover styles to prevent text from being bolded on hover
      (which caused page layout to change when a table of contents was moused over).
    * Adds a custom page layout in order to: (1) add navigation links to the side
      panel and (2) remove a fixed footer that sometimes overlapped with the
      navigation depending on the page size. I kept the "Theme by orderedlist"
      attribution that was in the footer by moving it to the header but removed
      "This project is maintained by Google" to make more vertical space. The
      original layout is at
      https://github.com/pages-themes/minimal/blob/master/_layouts/default.html.
    
    The final effect is
    [] minus the
    cartoon snake.
    
    PiperOrigin-RevId: 233142164

[33mcommit 66f0afdd922ba0b354c75ee117caff60d28f6668[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 8 15:14:30 2019 -0800

    Add a docs/index.md.
    
    This page is a copy of README.md and will serve as the home page for
    http://google.github.io/pytype.
    
    PiperOrigin-RevId: 233135320

[33mcommit 2864804bd451f4b06951eed243590da50da1fab1[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 8 15:04:03 2019 -0800

    Do some cleanup of pytype/docs/ in preparation for adding website files.
    
    * Starts tracking the Jekyll config file internally; otherwise, staging the
      various pieces of the site in the right order is a pain.
    * Changes opensource/update_docs.sh to cover DESCRIPTION.rst as well.
    * Updates the team docs.
    
    PiperOrigin-RevId: 233133520

[33mcommit 6e59ae56a1dcb39df830acf7c01052269ba6271a[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 8 14:44:03 2019 -0800

    Update DESCRIPTION.rst to reflect the most recent README.md change.
    
    PiperOrigin-RevId: 233129794

[33mcommit ff872804216c2d7c5892785af456dd18667db081[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 8 13:48:46 2019 -0800

    Make two tweaks to README.md.
    
    * Makes the first section header a title.
    * Moves the Quickstart section earlier to highlight installation instructions.
    
    PiperOrigin-RevId: 233119722

[33mcommit a66db12f7b881d550e1bb3b8e29846b7ec44c902[m
Merge: 63de7323 2ad54e70
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 8 13:30:35 2019 -0800

    Merge pull request #236 from google/google_sync
    
    Google sync

[33mcommit 2ad54e70863971bdbb5677957882f90da861ae9e[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 8 11:09:14 2019 -0800

    Fix the pytype CHANGELOG.
    
    Due to a merge conflict, an entry got added to the 2019.01.30 release that
    didn't belong there. I also forgot to add an entry for a recent CL.
    
    PiperOrigin-RevId: 233091910

[33mcommit dae1f9f279401e551eae6985116c1ba836db5dfe[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Feb 6 13:22:54 2019 -0800

    Decorate {bytearray,float}.fromhex() with @classmethod.
    
    These are class methods.
    
    PiperOrigin-RevId: 232733327

[33mcommit be50c50a255978eea3b8fc631201884a2dd74e33[m
Author: mdemello <mdemello@google.com>
Date:   Tue Feb 5 16:32:02 2019 -0800

    Add argument group support to tools/arg_parser.
    
    Also add pytype's infrastructure args to xref for debugging purposes.
    
    PiperOrigin-RevId: 232581935

[33mcommit 2c8c1cb5ea1473e2b6d4f0b922599848f7bd29e7[m
Author: mdemello <mdemello@google.com>
Date:   Tue Feb 5 16:20:32 2019 -0800

    Internal change
    
    PiperOrigin-RevId: 232580044

[33mcommit 6fa8d0e813f08daabf81e88ed841c22901cd231f[m
Author: rechen <rechen@google.com>
Date:   Fri Feb 1 14:32:04 2019 -0800

    Remove {.good}/{.bad} from code blocks in pytype/docs/.
    
    GitHub markdown doesn't recognize these suffixes. (We didn't notice this
    problem before because GitHub itself ignores them, but GitHub Pages gets
    confused and renders the code incorrectly.)
    
    PiperOrigin-RevId: 232038963

[33mcommit 8b078f710db44c52642381c658d45042acb2c69f[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jan 31 15:14:18 2019 -0800

    FIX: A file vname should not have a lang or signature.
    
    PiperOrigin-RevId: 231863583

[33mcommit 8375df62a1f1bf46049156050b89e1c840e406e0[m
Author: sivachandra <sivachandra@google.com>
Date:   Wed Jan 30 14:59:10 2019 -0800

    Add a new verbosity level of -2 to imply not to change existing verbosity.
    
    PiperOrigin-RevId: 231673951

[33mcommit 05f2e3aca63d252a24d38d48b2bfa427d389fb9b[m
Author: sivachandra <sivachandra@google.com>
Date:   Wed Jan 30 14:27:16 2019 -0800

    Unify Options.create and Options.__init__ flow.
    
    This gives the benefit that the options created by Options.create are
    post-processed. This also helps eliminate some amount of duplicate code
    around setting the python_exe option.
    
    PiperOrigin-RevId: 231668239

[33mcommit 0ddf075afe5138cb346d1f77d5df3f7cb3277ed0[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 30 14:26:50 2019 -0800

    Fix variable annotation support in Python 3.7.
    
    Fixes https://github.com/google/pytype/issues/216.
    
    In 3.7, the STORE_ANNOTATION opcode is removed and its
    functionality moved to STORE_SUBSCR.
    
    PiperOrigin-RevId: 231668171

[33mcommit 2c2ea9397172170dc72d4bb8a3722cdfdb0bd357[m
Author: ahxun <ahxun@google.com>
Date:   Wed Jan 30 13:50:51 2019 -0800

    The change supports the annotations for AsyncGenerator, AsyncIterable, AsyncIterator and AsyncContextManager.
    
    PiperOrigin-RevId: 231661484

[33mcommit 63de7323d0b235d607621c281d9b8efc889b7d73[m[33m ([m[1;33mtag: 2019.01.30[m[33m)[m
Merge: 51d60c70 5737efc4
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 30 13:01:30 2019 -0800

    Merge pull request #235 from google/google_sync
    
    Google sync

[33mcommit 5737efc46c633732f571344a8bc1a6d9bea0fe48[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 30 09:26:40 2019 -0800

    Update pytype's PyPI version number for a release.
    
    PiperOrigin-RevId: 231608362

[33mcommit 9b0c38673450b1db396168ae428477d22ed26b10[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 29 11:20:59 2019 -0800

    Fix a crash caused by calling call_metaclass_init on a non-class.
    
    PiperOrigin-RevId: 231438669

[33mcommit 25f50ee9032f72e6a1bdfa8d7a326a7b16b54a2a[m
Author: rechen <rechen@google.com>
Date:   Sat Jan 26 13:56:50 2019 -0800

    Call the metaclass initializer when creating a class.
    
    The code from the diffbase that calls setattr() in a
    metaclass also does some normal attribute setting in the
    same location; we can support the latter.
    
    #Squeegee
    
    PiperOrigin-RevId: 231067708

[33mcommit 37e0fbd16b139c6dfa72efd1ef516c9e5300287c[m
Author: rechen <rechen@google.com>
Date:   Sat Jan 26 13:19:58 2019 -0800

    Support _HAS_DYNAMIC_ATTRIBUTES on metaclasses.
    
    There's currently no way to silence attribute errors for class
    attributes, and I'm trying to support some code that does:
    
    class Meta(type):
      def __init__(cls, ...):
        setattr(cls, "something")
    
    class Foo(metaclass=Meta):
      ...
    
    Foo.something
    
    PiperOrigin-RevId: 231066126

[33mcommit 51d60c7065a50c6b90766a8c56630fc222451ac3[m
Merge: 8a29e8ac 7b62e7ef
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jan 28 15:32:06 2019 -0800

    Merge pull request #233 from google/google_sync
    
    Google sync

[33mcommit 7b62e7efb83a4267b1e5897fe6d0249b259508c3[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 25 13:40:25 2019 -0800

    Add future.utils.with_metaclass support to CHANGELOG.
    
    Contributed by maxvo@ in commit 1ca6da8536b0d7da9275d289c8b8c3dd80d698d1.
    
    PiperOrigin-RevId: 230960635

[33mcommit 9bc1568dd27a22ca1c23f4b31faa2194d64a7ae3[m
Author: ahxun <ahxun@google.com>
Date:   Thu Jan 24 19:20:37 2019 -0800

    Fix the Coroutine issue to support python-3.7.
    
    Issue Description:
    Before python 3.6, __aiter__ can be defined like: "async def __aiter__"
    From python 3.7, it is only allowed to define like: "def __aiter__"
    
    For Detail:
    refer to https://www.python.org/dev/peps/pep-0492/#api-design-and-implementation-revisions
    
    Before 3.5.2, __aiter__ was expected to return an awaitable resolving to an asynchronous iterator. Starting with 3.5.2, __aiter__ should return asynchronous iterators directly.
    
    If the old protocol is used in 3.5.2, Python will raise a PendingDeprecationWarning.
    
    In CPython 3.6, the old __aiter__ protocol will still be supported with a DeprecationWarning being raised.
    
    In CPython 3.7, the old __aiter__ protocol will no longer be supported: a RuntimeError will be raised if __aiter__ returns anything but an asynchronous iterator.
    
    PiperOrigin-RevId: 230834374

[33mcommit 1ca6da8536b0d7da9275d289c8b8c3dd80d698d1[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Thu Jan 24 08:59:56 2019 -0800

    Add pytype Overlay for future.utils.with_metaclass.
    
    PiperOrigin-RevId: 230730799

[33mcommit b206ee489c0a3459fce58dccd67177c554a3597f[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 23 15:24:15 2019 -0800

    Update the pytype copy of asyncio.tasks.
    
    Fixes https://github.com/google/pytype/issues/203.
    
    PiperOrigin-RevId: 230614309

[33mcommit 5f5e4ada0c4a0d86bd1735509ac518c2cc53479c[m
Author: ahxun <ahxun@google.com>
Date:   Tue Jan 22 20:45:21 2019 -0800

    Coroutine Annotation Support, including:
    1. Native coroutine function defined as "async def ..."
    2. Asynchronous Context Managers defined as "async with ..."
    3. Asynchronous Iterator defined as "async for ..."
    4. Generator based coroutine, support decorators for asyncio.coroutine and types.coroutine
    5. Awaitable and Coroutine objects
    
    PiperOrigin-RevId: 230463838

[33mcommit 10189059948e8c9a7eecf64c56cce79c6f0f8651[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 22 16:23:55 2019 -0800

    Move the xref arg parser into a library so that other clients can use it.
    
    PiperOrigin-RevId: 230433629

[33mcommit be0f9fd372165f65517a7b38d53d966808f60b9f[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 22 15:22:23 2019 -0800

    Pass kythe vname fields as args to xref.
    
    PiperOrigin-RevId: 230421688

[33mcommit 8a29e8acad78847f124b49c4f59ab6077582286d[m[33m ([m[1;33mtag: 2019.01.18[m[33m)[m
Merge: 9f17bc67 bfd5efda
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 18 16:44:34 2019 -0800

    Merge pull request #231 from google/google_sync
    
    Google sync

[33mcommit bfd5efda15b6823c8c879088ae00b025437e3977[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 18 14:21:05 2019 -0800

    Bump pytype's PYPI version for a release.
    
    PiperOrigin-RevId: 229993606

[33mcommit 5e7dd33dac899a823b090bb9fe7b10080c2d83cb[m
Author: mdemello <mdemello@google.com>
Date:   Thu Jan 17 16:56:00 2019 -0800

    Move part of analyze_project's argument parser into tools/
    
    Useful for other tools that want to both process arguments and pass some of
    them along to pytype_single. The config file processing has been left within
    analyze_project for now, since we don't need a config file for anything else.
    
    PiperOrigin-RevId: 229843677

[33mcommit 9f17bc679f34b7174fc92fde0a9f69f560cffd93[m
Merge: e4071278 0fc0fd83
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 17 16:48:12 2019 -0800

    Merge pull request #230 from google/google_sync
    
    Google sync

[33mcommit 0fc0fd839c9133e2563e942aca7d7710288652aa[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 17 14:57:51 2019 -0800

    Move a test with type annotations to the right bucket.
    
    PiperOrigin-RevId: 229823713

[33mcommit 00788c2eea8fb3b80de02d3e9e1a03f367434ac3[m
Author: Jeffrey Jedele <jeffrey.jedele@gmail.com>
Date:   Thu Jan 17 11:31:16 2019 -0800

    #228 Fix parsing of Python version string. (#229)
    
    Python distributions like Anaconda modify the Python version
    
    Resolves #229
    
    PiperOrigin-RevId: 229786474

[33mcommit c5a8d26328a2ceba114b15478fc9c27647a1920f[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 15 17:04:17 2019 -0800

    Handle attribute accesses that span multiple lines.
    
    Also deduplicates the list of kythe facts (opcode traces can be duplicated but
    kythe facts need to be unique).
    
    PiperOrigin-RevId: 229468796

[33mcommit 648f6f233312ed2ade1a6b74f0cf8549750c02d9[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 15 14:35:31 2019 -0800

    Add instructions for testing xref/kythe integration from the command line.
    
    PiperOrigin-RevId: 229442222

[33mcommit 35fc64e4e51c6bd89e8e15078475068f0c4128ea[m
Author: sivachandra <sivachandra@google.com>
Date:   Tue Jan 15 11:20:10 2019 -0800

    Tweak python_exe when python_version alone is set on config.Options object.
    
    Also make the input filename a formal argument to config.Options.create.
    
    PiperOrigin-RevId: 229406247

[33mcommit 3df067185f0132d227615c776e92832d4563a815[m
Author: mdemello <mdemello@google.com>
Date:   Mon Jan 14 16:40:20 2019 -0800

    When constructing a class inheriting from unittest.TestCase, call setUp after
    calling __init__.
    
    PiperOrigin-RevId: 229280965

[33mcommit e40712785939d80437cc9d63a20e2803b5a37c5c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Jan 12 03:38:10 2019 +0000

    Set theme jekyll-theme-minimal

[33mcommit 43dd2e94478b4ab3a136e21fbc1af241e6fe5698[m
Merge: f30a0915 c7735cfa
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 8 15:51:26 2019 -0800

    Merge pull request #224 from google/google_sync
    
    Google sync

[33mcommit c7735cfab7ece7638701bfe6d76eb63398b92519[m
Author: rechen <rechen@google.com>
Date:   Tue Jan 8 14:05:14 2019 -0800

    Update broken links.
    
    GitHub markdown needs filename.md#section, not filename#section.
    
    PiperOrigin-RevId: 228395847

[33mcommit 613c2985591f044693e6d6f44d156547a2570f28[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jan 8 13:19:30 2019 -0800

    Internal change
    
    PiperOrigin-RevId: 228386872

[33mcommit f30a091552a0a356538ad05ed4c994a7ba62bdf5[m
Merge: abfd069f 16d77b8d
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 8 13:03:14 2019 -0800

    Merge pull request #223 from google/google_sync
    
    Google sync

[33mcommit 16d77b8d5cf18eb501fd61fbd2299db39cc28a63[m
Author: rechen <rechen@google.com>
Date:   Mon Jan 7 14:29:20 2019 -0800

    Fix pytype handling of typing.NoReturn.
    
    I built two targets with new findings and one with a crash,
    and all three build successfully with this change.
    
    PiperOrigin-RevId: 228236436

[33mcommit 314bd8c3f904dc165aa3e2c63b75d0a1b4ac3779[m
Author: rechen <rechen@google.com>
Date:   Mon Jan 7 11:55:54 2019 -0800

    Update the pytype README.
    
    * Use the new intro from the internal landing page.
    * Incorporate the quickstart, to more effectively show how easy
      it is to set up pytype.
    
    PiperOrigin-RevId: 228208183

[33mcommit fdd0456b58f8623eefa0eb44a953bceee3d6fe4f[m
Author: rechen <rechen@google.com>
Date:   Mon Jan 7 11:37:32 2019 -0800

    Internal change
    
    PiperOrigin-RevId: 228204617

[33mcommit c189e26100b0887ee889d8bb2c9fbefc9770f639[m
Author: rechen <rechen@google.com>
Date:   Mon Jan 7 02:22:52 2019 -0800

    Update merge-pyi's README to reflect the argparse --help change.
    
    Flips the .py and .pyi files in the description to match the
    actual usage.
    
    PiperOrigin-RevId: 228129221

[33mcommit 48609fd5f42663960f6b32597605b384887d688f[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 4 20:52:51 2019 -0800

    Add a link to errors.md to file a GitHub bug.
    
    PiperOrigin-RevId: 227952958

[33mcommit bdd2d426aa2fa7b71ae6acc44802786d4b572582[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 4 20:00:52 2019 -0800

    Remove "pytype" from the FAQ title.
    
    It's redundant.
    
    PiperOrigin-RevId: 227949684

[33mcommit abfd069f67a7c0fe24f711063080c72897514988[m
Merge: 06fadb9d 15a3e3e4
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 4 22:09:20 2019 -0800

    Merge pull request #222 from google/google_sync
    
    Google sync

[33mcommit 15a3e3e47d19ed8c73603ae20d8a95485a26a279[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 4 17:49:34 2019 -0800

    Open-source the pytype FAQ.
    
    Fixes https://github.com/google/pytype/issues/152.
    
    PiperOrigin-RevId: 227940599

[33mcommit 1c60f309ef9ff64fa1568e44489f319e41f030e7[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 4 17:47:52 2019 -0800

    Internal change
    
    PiperOrigin-RevId: 227940472

[33mcommit 50109a1f14685bf1754731a4886fb2b82cf10334[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 4 16:38:13 2019 -0800

    Internal change
    
    PiperOrigin-RevId: 227933322

[33mcommit 9290b2f0c25f421f5fea2f7a30377b3a476c33b7[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 4 13:13:33 2019 -0800

    Internal change
    
    PiperOrigin-RevId: 227902597

[33mcommit d44f4c2f967a2536e60f56b9dfa8915540b82499[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 4 13:02:00 2019 -0800

    Fix misleading argparse description in merge_pyi.
    
    Fixes a small issue that bothered me the last time I tried to use this tool:
    the order is `merge-pyi foo.py foo.pyi`, but if you follow the --help message,
    it seems to instruct you to switch the .py and .pyi files.
    
    PiperOrigin-RevId: 227900770

[33mcommit c708739e6cc06bbc519103ffc8a03f86c8eacc8b[m
Author: rechen <rechen@google.com>
Date:   Fri Jan 4 10:18:55 2019 -0800

    Deprecate _has_dynamic_attributes.
    
    This variant of _HAS_DYNAMIC_ATTRIBUTES is unused:
    []
    
    PiperOrigin-RevId: 227874882

[33mcommit 57d0eddd965b9ce3630502033d71d6747b0d8fd3[m
Author: rechen <rechen@google.com>
Date:   Thu Jan 3 15:57:30 2019 -0800

    Resolve an old pytype TODO.
    
    #Squeegee
    
    PiperOrigin-RevId: 227765325

[33mcommit f87099bbe2c81b064d42dedfe524fbc9535138b5[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 2 12:14:06 2019 -0800

    Store variable annotations for not-yet-defined objects.
    
    A common use of variable annotations is to declare types for objects
    that have yet to be defined. Support this use case by retrieving
    local variables and attributes from __annotations__ when they're not
    otherwise found and putting __annotations__ items in pyi output.
    
    PiperOrigin-RevId: 227560239

[33mcommit 13c4e446a2617f509ebd684eb4bb566493e460aa[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jan 2 11:46:50 2019 -0800

    FIX: Need to use string.find, not string.index.
    
    PiperOrigin-RevId: 227555749

[33mcommit 45153eff38ccbf264a71677da022560af18d425a[m
Author: rechen <rechen@google.com>
Date:   Wed Jan 2 10:54:10 2019 -0800

    Fix a bug in variable annotation handling.
    
    Fixes a bug where pytype would crash if __annotations__ were
    overwritten. Also does a few small cleanups.
    
    PiperOrigin-RevId: 227546284

[33mcommit 06fadb9dfd21783825e83dcdd04b0e5ba44f252f[m[33m ([m[1;33mtag: 2018.12.21[m[33m)[m
Merge: c8573cbb 18001c27
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 26 10:14:13 2018 -0800

    Merge pull request #220 from google/google_sync
    
    Google sync

[33mcommit 18001c279d2cf3a3f5a0357a908bf147cfc27ab0[m
Author: rechen <rechen@google.com>
Date:   Fri Dec 21 16:15:31 2018 -0800

    Stop special-casing unreadable files; skip type stubs.
    
    Once importlab PRs 42-44 land, the graph that pytype gets from importlab will
    include both unreadable Python files and type stubs. Thus, we can stop
    special-casing unreadable files in main (since pytype will analyze them
    normally and report a syntax error) and need to filter out .pyi and .pytd
    files in pytype_runner.
    
    The fact that pytype sees type stubs now will make it easier to implement
    https://github.com/google/pytype/issues/151.
    
    Also bumps the version number in order to do a release.
    
    Fixes https://github.com/google/pytype/issues/212.
    
    PiperOrigin-RevId: 226556520

[33mcommit 161b318059b6dc73e19106d5b5ca69b8c324b6d3[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 20 12:17:57 2018 -0800

    Fix pytype's flaky test.
    
    Fixes main_test.Pytype.testBuiltinsDeterminism3, which was failing ~half of the
    time with a complaint that __builtin__ and six.moves.builtins were being
    pickled non-deterministically.
    
    PiperOrigin-RevId: 226374183

[33mcommit 17d83833871b1c6e00fd8cf88e234e1ce1325a9c[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 19 15:31:47 2018 -0800

    Use hash() instead of id() in AtomicAbstractValue.get_fullhash().
    
    This doesn't seem to have fixed the flaky test, but it seems like a good thing
    to do anyway.
    
    PiperOrigin-RevId: 226243994

[33mcommit c8573cbb40f00a27c88027487f5a9eb77df806f5[m
Merge: e0972660 60e0efc6
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 19 15:42:45 2018 -0800

    Merge pull request #218 from google/google_sync
    
    Google sync

[33mcommit 60e0efc667463f0063ee23436062ad35cfd9034e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 19 14:41:20 2018 -0800

    Add testing framework for target Python 3.7. (#217)
    
    Fixes https://github.com/google/pytype/issues/208.
    
    Resolves #217
    
    PiperOrigin-RevId: 226236301

[33mcommit 24be93a0f5d2d83058a83214e8fe70838780ea3e[m
Author: mdemello <mdemello@google.com>
Date:   Tue Dec 18 14:59:28 2018 -0800

    Minor refactoring: replace vm.convert.unsolvable.to_variable by vm.new_unsolvable.
    
    Creating a new unsolvable is a common enough operation that it should be short.
    
    PiperOrigin-RevId: 226065691

[33mcommit e93af2da12e15785cafc0e584d3471338d793a54[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 18 14:20:55 2018 -0800

    Make attribute.py prefer more specific values for submodules.
    
    Sometimes an __init__.pyi contains a `submodule: module` entry, but there also
    exists a submodule.pyi with more precise information. We were previously using
    the __init__ attribute, but we should be using the submodule's pyi instead.
    
    Startblock:
      after 2018-12-06 02:00 in MTV
    PiperOrigin-RevId: 226058674

[33mcommit e09726603f40be9ee212f5d6c2de13719eb4936f[m
Merge: 580c2d83 cd29f90d
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 18 13:27:01 2018 -0800

    Merge pull request #213 from google/google_sync
    
    Remove ".py" report (#204)

[33mcommit cd29f90d4435c232f3240a6f102b2da20e9046a5[m
Author: Ritwik Sharma <ritwik.1204@gmail.com>
Date:   Tue Dec 18 11:59:15 2018 -0800

    Remove ".py" report (#204)
    
    Part of #111
    
    Resolves #204
    
    PiperOrigin-RevId: 226035107

[33mcommit 580c2d8333f290ea6b173842cb958a52b5fb1e17[m
Merge: 17b72a4c 69b46351
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 17 15:35:13 2018 -0800

    Merge pull request #210 from google/google_sync
    
    Google sync

[33mcommit 69b4635182a3f232d5876016f56e2495706f19a1[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 17 14:19:56 2018 -0800

    Fix lint errors exposed by importing a GitHub PR.
    
    The import showed some cases in which we were using assertEqual rather than
    assertLen internally, which caused the import CL to be larger than it needed
    to be. I also fixed some pre-existing lint errors in the affected files.
    
    PiperOrigin-RevId: 225889017

[33mcommit 9ad3b3354b108204b6c1f95adabe25adc15f8433[m
Author: Ritwik Sharma <ritwik.1204@gmail.com>
Date:   Mon Dec 17 13:52:55 2018 -0800

    Add unreadable_python_inputs (#205)
    
    Few Changes in try block in continuation with #204
    
    Resolves #205
    
    PiperOrigin-RevId: 225883515

[33mcommit 4714023296fe8bb5cd0e7b8e92cf166e68b90314[m
Author: sivachandra <sivachandra@google.com>
Date:   Wed Dec 12 11:02:07 2018 -0800

    Remove the now unnecessary "pytype: disable=wrong-arg-count" comment.
    
    PiperOrigin-RevId: 225216688

[33mcommit 17b72a4c75ccbc64afdf3e74383a0d8a2c44b395[m[33m ([m[1;33mtag: 2018.12.11[m[33m)[m
Merge: 9e720fbb bc826921
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 12 14:19:30 2018 -0800

    Merge pull request #201 from google/google_sync
    
    Google sync

[33mcommit bc82692116198f87d005b07ede35522d69ee53c2[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 11 16:15:59 2018 -0800

    Add Python 3.7 opcode mapping.
    
    My attempted open-source export was failing because the target Python
    version was being set to 3.7 for tests run under host 3.7. I could
    have changed the tests to fix this problem, but since we want to
    support 3.7 eventually anyway, I instead:
    * added a new opcode mapping,
    * changed utils.validate_version to accept 3.7,
    * added 3.7 magic numbers, and
    * added stub implementations of LOAD_METHOD and CALL_METHOD.
    
    As usual, I fixed lint errors as I found them.
    
    Since I didn't end up doing a PyPI release yesterday, I bumped the
    version number again so that it'll match the release date.
    
    For the opcodes, I checked
    https://docs.python.org/3/library/dis.html for what's new in 3.7,
    then got the numeric codes with:
    
    Python 3.7.1
    >>> import dis
    >>> class A:
    ...   def a(self):
    ...     pass
    ...
    >>> def f():
    ...   return A().a()
    ...
    >>> list(dis.get_instructions(f))
    [Instruction(opname='LOAD_GLOBAL', opcode=116, arg=0, argval='A', argrepr='A', offset=0, starts_line=2, is_jump_target=False), Instruction(opname='CALL_FUNCTION', opcode=131, arg=0, argval=0, argrepr='', offset=2, starts_line=None, is_jump_target=False), Instruction(opname='LOAD_METHOD', opcode=160, arg=1, argval='a', argrepr='a', offset=4, starts_line=None, is_jump_target=False), Instruction(opname='CALL_METHOD', opcode=161, arg=0, argval=0, argrepr='', offset=6, starts_line=None, is_jump_target=False), Instruction(opname='RETURN_VALUE', opcode=83, arg=None, argval=None, argrepr='', offset=8, starts_line=None, is_jump_target=False)]
    
    PiperOrigin-RevId: 225090317

[33mcommit 1b2e08cf05bfa71403f4cf466541a4c55fe5e691[m
Author: rechen <rechen@google.com>
Date:   Tue Dec 11 15:57:05 2018 -0800

    Resolve two more opensource export issues.
    
    * Move Python 3-only tests to py3/test_errors.py.
    * Ignore setup.py in copybara config.
    
    PiperOrigin-RevId: 225086882

[33mcommit 49ee171d6e6ea3d8608020cb0946db959808fc39[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 10 11:52:57 2018 -0800

    Move an incorrectly bucketed test from tests/test_tracebacks.py.
    
    I accidentally put a test with a type annotation in this file, which was
    blocking a GitHub export.
    
    PiperOrigin-RevId: 224854721

[33mcommit aabaafe6d1e741fa50674011161319ee50ee7c82[m
Author: rechen <rechen@google.com>
Date:   Mon Dec 10 11:33:04 2018 -0800

    Update the PyPI version in __version__.py and CHANGELOG.
    
    PiperOrigin-RevId: 224850885

[33mcommit bcac071141d0a9c872515ecab56f13923ccefd66[m
Author: rechen <rechen@google.com>
Date:   Thu Dec 6 11:36:20 2018 -0800

    Prettify the rest of the operators in slots.py.
    
    Adds symbols for every operator with a builtin symbol, and
    human-friendly descriptions for __(get|set|del)item__ and __getslice__.
    
    #Squeegee
    
    Startblock:
      after 2018-12-06 02:00 in MTV
    PiperOrigin-RevId: 224376610

[33mcommit d978620686707fa9b53c04412023cafbbc8845d8[m
Author: ahxun <ahxun@google.com>
Date:   Wed Dec 5 14:22:28 2018 -0800

    Support PEP-526 variable annotation syntax.
    
    PiperOrigin-RevId: 224220790

[33mcommit 166936aaf1d3f57a817098927b14ad790b181d75[m
Author: rechen <rechen@google.com>
Date:   Wed Dec 5 14:09:55 2018 -0800

    Remove third_party/py/pytype/setup.py.
    
    This file is only needed for the open-source project, and having an internal
    copy of it prevents us from directly accepting PRs that touch it (e.g.,
    https://github.com/google/pytype/pull/199).
    
    Also fixes an annotation that was causing a build failure.
    
    PiperOrigin-RevId: 224218690

[33mcommit 63b997c42fe16d528d92c92f81cbe3f44d6481fa[m
Author: tsudol <tsudol@google.com>
Date:   Mon Dec 3 15:41:25 2018 -0800

    Handle pointer types in hashed data structures.
    
    - std::unordered_set can be replaced with std::set, because (1) elements in
      the set may be modified which violated std::unordered_set's contract, and
      (2) we already have support for std::sets of pointer values.
    - std::unordered_map is only used with `const CFGNode*`, which can safely use
      the nodes' IDs as hash values.
    
    PiperOrigin-RevId: 223876810

[33mcommit 0934e460a4efb52de1ea7a20a0a2f9b6077dbc4a[m
Author: tsudol <tsudol@google.com>
Date:   Mon Dec 3 15:16:58 2018 -0800

    Add Binding IDs so Bindings can be ordered.
    
    Each Binding generated by a Program instance gets a unique ID, allowing them to
    be easily used in ordered data structures.
    
    PiperOrigin-RevId: 223872429

[33mcommit 54ae80151c9229a54b25454409a4ed20c3141af2[m
Author: tsudol <tsudol@google.com>
Date:   Mon Dec 3 15:08:58 2018 -0800

    Refactor sets of CFGNodes to use a custom comparator.
    
    This removes some undefined behavior in the typegraph library by using CFGNode
    ids instead of memory addresses when using CFGNode pointers in sets.
    
    PiperOrigin-RevId: 223871080

[33mcommit f690f7ed27677dc8ef38ea3536d907a57ac9c01e[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 30 15:53:19 2018 -0800

    Fix the definitions of builtins input() and raw_input().
    
    I got a little bored debugging a flaky nondeterminism test.
    
    PiperOrigin-RevId: 223588852

[33mcommit 274ecd6ef4be2790ebaf1aeb96b69e16021fc63e[m
Author: ahxun <ahxun@google.com>
Date:   Fri Nov 30 15:49:23 2018 -0800

    Fix a bug in class abstract.MixinMeta
    
    PiperOrigin-RevId: 223588260

[33mcommit 91dcc38d2b246b4880827eca91a7c29100c607cd[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 27 14:39:24 2018 -0800

    Set the default target python version to the host version.
    
    For both pytype-single and pytype-all, sets the default Python version to
    sys.version_info[:2]. Also:
    
    * Checks that when --python_exe is specified, the executable matches the python
      version. Previously, we simply assumed that they matched.
    * Resolves some pre-existing lint errors.
    
    Fixes https://github.com/google/pytype/issues/192.
    
    PiperOrigin-RevId: 223060355

[33mcommit d1b9413529d971a06906e7edb6658ce0c4363921[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 21 13:52:11 2018 -0800

    Improve error messages for `+` and `~` operators.
    
    Currently, operator errors show up as either [unsupported-operands] or
    [wrong-arg-types] for binary operators, and as [attribute-error] for unary
    operators. For `+` and `~`, changes the error to always be
    [unsupported-operands] and shows the symbol rather than the double-underscore
    name. If this change looks okay, I'll go ahead and make the same change for the
    remaining operators in slots.py.
    
    PiperOrigin-RevId: 222455959

[33mcommit 0b718d6737ce9bc88bdcfe6035865a60a3b19f72[m
Author: tsudol <tsudol@google.com>
Date:   Wed Nov 21 09:44:25 2018 -0800

    Add visitor for extracting definitions.
    
    The DefinitionFinder visitor is based on ast.NodeVisitor. It finds variable,
    function and class definitions in source files and type hints.
    
    PiperOrigin-RevId: 222421647

[33mcommit 3cfcf04ecb3acf24a2bda605010233e4fbe67fa5[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 20 23:50:49 2018 -0800

    Remove an unnecessary traceback.
    
    Fixes a bug where an unnnecessary traceback appeared due to function caching.
    Adds a regression test for another traceback-related bug that disappeared at
    some point.
    
    PiperOrigin-RevId: 222361585

[33mcommit 073a1fd6a1ec78c26788fd2f272f123b38024759[m
Author: ahxun <ahxun@google.com>
Date:   Tue Nov 20 16:56:44 2018 -0800

    For the wrong number of type parameters in Generator, Dict, Callable, print more detail error message.
    
    PiperOrigin-RevId: 222329401

[33mcommit 7eeb1dea0fac74039acb6d0eec9edca8d5f18c2c[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 20 16:43:43 2018 -0800

    Cleanup: deduplicate code relating to reversible operators.
    
    * Removes some vm code that duplicated code in slots.py.
    * Fixes the definitions of the __pow__ and __rpow__ slots.
    * Removes some unused code in slots.py and transforms.py.
    
    PiperOrigin-RevId: 222327719

[33mcommit cd0d50c2f536b51e5feb6f68cb92054c6797a06d[m
Author: tsudol <tsudol@google.com>
Date:   Tue Nov 20 14:22:55 2018 -0800

    Switch class members to dicts instead of lists.
    
    This makes member management a little easier and reflects how Python and pytype
    handles classes.
    
    PiperOrigin-RevId: 222306402

[33mcommit 4351343515d68a2a04ec1af5bcd21574aaacb8d0[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 19 13:56:56 2018 -0800

    pytype-all: Add a --keep-going option.
    
    Changes the default behavior to stop at the first error, with the option to
    keep going and analyze as much as possible.
    
    #Squeegee
    
    PiperOrigin-RevId: 222133400

[33mcommit 5a383a837e7b6d4c5902bb91a1e8a5a4b92a43ff[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 19 11:34:04 2018 -0800

    Have copybara rewrite assertLen() to assertEqual(len()).
    
    assertLen is a method that googletest gets from abseil. Since
    gpylint suggests using it, I think rewriting it to a unittest
    method will be more robust than trying to remember to avoid it
    and suppress the lint warning.
    
    PiperOrigin-RevId: 222109887

[33mcommit 9e720fbb08f517e27c6902e278b32af00e84d80e[m
Merge: eae22b48 a4264cba
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 5 14:11:15 2018 -0800

    Merge pull request #199 from brianquinlan/patch-1
    
    Use https as the website url scheme

[33mcommit a4264cba712adbf2c8b5742230523c085dba9357[m
Author: Brian Quinlan <brian@sweetapp.com>
Date:   Tue Dec 4 18:28:02 2018 -0800

    Use https as the website url scheme

[33mcommit eae22b48630abf08263e1839aaebd31bd10c8e84[m
Merge: bbcafd66 23740bf5
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 19 13:12:12 2018 -0800

    Merge pull request #196 from google/google_sync
    
    Google sync

[33mcommit 23740bf5bb44254e8ba3f5ddac3b65bf393985da[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 19 11:07:55 2018 -0800

    Fix a bug in --generate-config and do a small cleanup.
    
    * Fixes a bug where --generate-config produced a config containing
      both --disable and --enable-only.
    * Makes config._PYTYPE_SINGLE_ITEMS private again, since I realized
      that it's much better to use parser.pytype_single_args.
    
    PiperOrigin-RevId: 222105208

[33mcommit 2737e7e69203b1d72f019c5cf2c046057c2f3823[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 16 11:53:43 2018 -0800

    pytype/tools: improve status messages.
    
    * Edits CHANGELOG to include both this change and Xun's annotation fix, since
      I realized that I forgot to ask for an entry for that one.
    * Prints a notification before importlab runs.
    * Errors on unparseable inputs.
    * Specifies that pytype is counting the number of local dependencies, since
      we skip typeshed and pip-installed ones.
    * Prints completion messages for pytype-all and merge-pyi.
    
    PiperOrigin-RevId: 221828874

[33mcommit fae7246a5e410b3de3bbda225ceea92b8d95ed0c[m
Author: ahxun <ahxun@google.com>
Date:   Thu Nov 15 18:47:02 2018 -0800

    Forbid Callable[Any, X]
    Forbid partially parameterized annotations for Generator
    Forbid NoReturn as a parameter annotation, variable annotation, or inner type
    Make the number of allowed parameters the same between interpreter and pytype for Optional[X, Y]
    
    PiperOrigin-RevId: 221728413

[33mcommit 2984a904ada11fe1d93de859720ed130040622d9[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 15 17:02:57 2018 -0800

    Cleanup (part 7): move mixins from abstract.py to new mixin.py
    
    Last part (for now). abstract.py is still ~3500 lines, but it's
    down from ~4800.
    
    PiperOrigin-RevId: 221715875

[33mcommit 4c17115e14859b91661734fa1bdafba9d3fa65ae[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 14 19:52:04 2018 -0800

    Cleanup (part 6): move function-related things from abstract.py to function.py.
    
    Also:
    * moves Union.merge_values into vm.py because function.py now needs it,
    * makes function its own py_library,
    * renames FunctionArgs to Args to avoid the redundant `function.FunctionArgs`.
    PiperOrigin-RevId: 221558357

[33mcommit 5b89bd762fd477b5736f1cda852bf1b799695376[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 14 17:11:48 2018 -0800

    Cleanup (part 5): Fix the import relationship between pytd_utils and parser.
    
    Previously, parser depended on pytd_utils in BUILD, but pytd_utils imported
    parser. Removes the problematic import by moving the definition of JoinTypes to
    pytd_utils and that of canonical_pyi to parser.
    
    This change will allow pytd_for_parser to be depended on by upcoming targets
    that don't pull in the parser.
    
    PiperOrigin-RevId: 221541060

[33mcommit 36c8b17dd3909f694394d976b39d0127ac4df640[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 14 16:59:48 2018 -0800

    Require importlab-0.4 or greater for pytype.
    
    Fixes https://github.com/google/pytype/issues/194.
    
    PiperOrigin-RevId: 221538762

[33mcommit f6b820caf0abeb0f84208360a78f4dc2765f7988[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 14 16:24:50 2018 -0800

    Cleanup (part 4): Move part of abstract.py into a new abstract_utils.py.
    
    Also updates CMakeLists.txt to match BUILD again. (pytd.py is in its own
    library in BUILD.)
    
    PiperOrigin-RevId: 221532199

[33mcommit b252fb79747eb3c11115181b32070219fecc3671[m
Author: rechen <rechen@google.com>
Date:   Wed Nov 14 11:01:19 2018 -0800

    Cleanup (part 3): add a bunch of isinstance() wrappers to AtomicAbstractValue.
    
    One of the most common ways one abstract.py object depends on another is
    through an isinstance() check, so allowing these checks to happen without
    importing abstract.py makes it possible to break up the file.
    
    PiperOrigin-RevId: 221474115

[33mcommit 6215068e74b8d70e51cd21efc763b156cbd026e2[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 13 21:07:47 2018 -0800

    Cleanup (part 2): rearrange abstract.py to make it easier to split.
    
    * Makes every static method non-static or a top-level function. I also
      extended this change to some needlessly static methods in loadmarshal.py.
    * Turns full_type_name and compute_template into top-level functions.
    * Merges the type parameter names Generator.SEND and Generator.RET with the
      names at the top of the file.
    * Removes chain, WrapsDict, and _get_class. The first two were aliases that
      were only used once each, so I've replaced them with the full names of the
      aliased objects. _get_class was replaced with the similar get_atomic_value.
    * Makes merge_values a classmethod on Union. This method can't be easily moved
      out of abstract.py due to its use of Union, and I want all of the top-level
      functions to be things I can move into a utilities file.
    
    PiperOrigin-RevId: 221384997

[33mcommit 8068504f6c96f2a02819ec7b1f6170a0fea01fe1[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 13 16:41:14 2018 -0800

    Cleanup: make PyTDFunction.get_constructor_args a classmethod.
    
    This is the first in a string of CLs aimed at breaking up abstract.py. The
    overall plan is:
    * Make as many things as possible stand-alone functions.
    * Move everything except AtomicAbstractValue and its subclasses out
      of abstract.py.
    * Put MixinMeta and its subclasses in a new mixin.py, function-related things
      in function.py, and everything else in a new abstract_utils.py.
    
    Part of the first step is turning every static method into either a
    stand-alone function (so it can be moved) or a class method (to prove that it
    should continue to be in abstract.py).
    
    This change turns PyTDFunction.get_constructor_args into a classmethod. It
    fixes some lint errors along the way.
    
    PiperOrigin-RevId: 221357473

[33mcommit 8b4c3cf680059a6400ae0145f0c4443441d0c05b[m
Author: tsudol <tsudol@google.com>
Date:   Tue Nov 13 14:42:49 2018 -0800

    Split out test helper functions into their own library.
    
    PiperOrigin-RevId: 221337286

[33mcommit 59e2107ef6e549659b0cb72444a6547037ae5e43[m
Author: sivachandra <sivachandra@google.com>
Date:   Tue Nov 13 14:00:12 2018 -0800

    Add an "enable-only" option to pytype-single.
    
    This option allows one to specify only the checks they want Pytype to
    perform. Specifying both the options, "enable-only" and "disable", is
    an error.
    
    PiperOrigin-RevId: 221329067

[33mcommit 9cb33165eed78fb1df48ba7664b58fdef931670b[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 12 12:28:40 2018 -0800

    Add source, kind and location fields to Definitions.
    
    "source" is the source file for the definition. (Optional, typically left blank
    for tests.)
    "location" is a string combining the definition's source and lineno.
    "kind" is the kind of object the definition represents, e.g. "function" for
    functions and "class" for classes.
    
    These are primarily used for error messages.
    
    PiperOrigin-RevId: 221137200

[33mcommit 9229add0d3f74c958ee057b90fb6bf02af0f63ea[m
Author: mdemello <mdemello@google.com>
Date:   Mon Nov 12 12:19:19 2018 -0800

    Allow source code to be passed to xref as a string.
    
    PiperOrigin-RevId: 221135884

[33mcommit 1d8dd6216a92d0b68bab9e2e87c6ed8e69f26346[m
Author: tsudol <tsudol@google.com>
Date:   Mon Nov 12 09:59:17 2018 -0800

    Add Error classes for pyi checker.
    
    Also fixes a couple small errors in definitions.pyi.
    
    PiperOrigin-RevId: 221109621

[33mcommit 9646d6b022820c1eeedaac2fedc07726ddb75771[m
Author: ahxun <ahxun@google.com>
Date:   Thu Nov 8 15:02:18 2018 -0800

    Make type parameter `Any` match all the other types while doing type renaming.
    
    PiperOrigin-RevId: 220708292

[33mcommit 1fac53333aca0e8f3062eef61a71a7304ddce162[m
Author: tsudol <tsudol@google.com>
Date:   Wed Nov 7 15:48:00 2018 -0800

    Fix typo in definitions.pyi.
    
    PiperOrigin-RevId: 220543676

[33mcommit bbcafd66e687eecc38c3dd99c60206629862b68e[m[33m ([m[1;33mtag: 2018.11.06[m[33m)[m
Merge: 591d18d5 3eb8f489
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 6 15:28:04 2018 -0800

    Merge pull request #191 from google/google_sync
    
    Google sync

[33mcommit 3eb8f489b23438a516ee839c9dc23d2be30d34d4[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 6 14:24:11 2018 -0800

    Remove pyi_checker from tools/CMakeList.txt's subdirectories.
    
    Sorry for the noise! I grepped for `pyi_checker` in pytype/, and it doesn't
    look like there's anything else I missed.
    
    PiperOrigin-RevId: 220351986

[33mcommit df3065359ba50dc7147cd408bad63c1feb0ce780[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 6 14:06:56 2018 -0800

    Remove pyi_checker/CMakeLists.txt and exclude it from the METADATA check.
    
    pytype.pyi_checker.definitions_test can't run under most of pytype's host
    versions because it uses dataclasses, and it's even failing in 3.7 for some
    unknown reason. Also excludes xref from the CMakeLists.txt check because it
    doesn't have any cmake files either.
    
    PiperOrigin-RevId: 220348479

[33mcommit a46c8b74c673c5226d4efa84b48731b796dbb9b4[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 6 12:35:03 2018 -0800

    Process ParameterizedClass's annotations as soon as possible.
    
    The type parameter renaming change exposed a bug where
    annotation_utils._process_one_annotation wasn't called on a class's
    annotations until they were used in a function, causing
    parse_formal_type_parameters to incorrectly store unprocessed
    annotations in all_formal_type_parameters. We should instead process
    annotations as soon as they become available.
    
    PiperOrigin-RevId: 220331832

[33mcommit ec3b8a90c3e619f18e508de8ca3308cc57eadedb[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 6 12:24:39 2018 -0800

    Don't report [not-supported-yet] when a type parameter name is reused.
    
    A few instances of this pattern cropped up in a
    build_all_pytype_targets run I did for an unrelated change.
    
    PiperOrigin-RevId: 220330024

[33mcommit 1e0ae3f5f4a08c4b96b62b25b029625ed93604b1[m
Author: rechen <rechen@google.com>
Date:   Tue Nov 6 12:22:02 2018 -0800

    pytype-all: Use --imports_info to allow pyi file reuse.
    
    * Switches pytype-all to use --imports_info instead of --pythonpath.
    * Makes a bug fix to imports_map_loader to prevent deletion of unrelated
      map entries.
    * Stops clearing pytype_output between runs.
    
    Fixes https://github.com/google/pytype/issues/173.
    #Squeegee
    
    meow=Give me a Moma badge!
    PiperOrigin-RevId: 220329564

[33mcommit 5999988ba233569ee393fe5c9231bfb8f032f193[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 5 20:26:20 2018 -0800

    Cleanup: rename type_parameters to reduce confusion.
    
    During our last 1:1, we talked about it being confusing that SimpleAbstractValue
    and ParameterizedClass have conceptually different attributes both named
    type_parameters. This change attempts to clear up some of the confusion by doing
    the following renames:
    * SimpleAbstractValue.type_parameters ->
      SimpleAbstractValue.instance_type_parameters
    * Class.name2types -> Class.all_formal_type_parameters
    * ParameterizedClass.type_parameters ->
      ParameterizedClass.formal_type_parameters
    
    PiperOrigin-RevId: 220219405

[33mcommit 35d0cf51a21ce3ecb5d511d12fa2411907b8c736[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 5 17:28:45 2018 -0800

    Make some --imports_info behavior more general.
    
    --imports_info, which previously had only one user (pytype.bzl), will soon have
    a second one (pytype-all), so it needs to handle some things more carefully:
    * Removes an `output` check from _validate_map that I believe was leftover from
      a long-gone multifile mode.
    * Previously, load_pytd sometimes used the presence of imports_map to determine
      whether to use typeshed, which sort of worked because the only imports_map
      user also pre-loaded typeshed via generate_builtins. Instead, set
      use_typeshed=False when generate_builtins is used, and otherwise always allow
      loading from typeshed.
    * Fixes a bug where an empty imports_map (`{}`) was somtimes confused with no
      imports_map (`None`).
    
    PiperOrigin-RevId: 220202794

[33mcommit 22cd36f3588fe147b2eed9979965fe74654d82c6[m
Author: rechen <rechen@google.com>
Date:   Mon Nov 5 13:54:52 2018 -0800

    pytype-all: Get precise deps from import_graph.deps_list().
    
    Uses import_graph.deps_list() to more precisely compute a module's
    direct dependencies, rather than assuming all of the pytype-single
    actions have to happen sequentially.
    
    Also removes the now-unused PytypeRunner.output attribute and a
    duplicate copy of flags_with_values in get_pytype_command_for_ninja.
    
    Makes progress toward https://github.com/google/pytype/issues/173.
    #Squeegee
    
    PiperOrigin-RevId: 220166606

[33mcommit bf2d2ccb60d759161785ec0ac15d532a03bb9103[m
Author: ahxun <ahxun@google.com>
Date:   Mon Nov 5 13:41:28 2018 -0800

    Solution for type renaming(Part 2):
    1. Move the logic that collecting the type parameters information from `Instance` to its `base class`
    2. Add scope for type parameters
    3. Change the `substs` data structure to `AliasingDict` in matcher.py
    
    PiperOrigin-RevId: 220164169

[33mcommit d56178462cabecf2e1bf7d522b75eb34eec8193f[m
Author: ahxun <ahxun@google.com>
Date:   Mon Nov 5 13:40:37 2018 -0800

    Solution for type renaming(Part 1):
    1. Add `UnionFind` data structure to support better type renaming
    2. Modify `add_alias` in `AliasingDict`
    3. Update `LazyAliasingMonitorDict` to support type parameters merging
    
    PiperOrigin-RevId: 220164007

[33mcommit 5c20357487a557631d1b2103f38aa2f546d750d7[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 2 21:42:56 2018 -0700

    Use importlab's new --trim option in pytype-all.
    
    #Squeegee
    
    PiperOrigin-RevId: 219905422

[33mcommit ab24f2defcfa108e5ce4a19860cb05a33ce59f92[m
Author: tsudol <tsudol@google.com>
Date:   Fri Nov 2 13:33:52 2018 -0700

    Internal change
    
    PiperOrigin-RevId: 219852148

[33mcommit f7d27f7595e50e5ccef3edf56c8fae8ca8535c8a[m
Author: rechen <rechen@google.com>
Date:   Fri Nov 2 10:43:00 2018 -0700

    Populate CHANGELOG.
    
    * Populates the CHANGELOG with entries for all 18 of our PyPI releases.
    * Updates documentation on how to keep CHANGELOG and tags up to date.
    
    I separately pushed GitHub tags for all of our releases.
    
    Fixes https://github.com/google/pytype/issues/168.
    
    PiperOrigin-RevId: 219823609

[33mcommit 591d18d542aed96b7aae69ed1e5d49f27a491235[m
Merge: 9891f337 d84d3b61
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 1 15:51:07 2018 -0700

    Merge pull request #189 from google/google_sync
    
    Have pytype (naively) generate ninja files.

[33mcommit d84d3b618a47454d730b52bb8e6bbdd38f4ab759[m
Author: rechen <rechen@google.com>
Date:   Thu Nov 1 14:47:03 2018 -0700

    Have pytype (naively) generate ninja files.
    
    Has pytype farm its pytype-single calls out to ninja via subprocess. At the end
    of the change description, I've included a short explanation of how ninja works;
    for more detail, there's https://ninja-build.org/manual.html.
    
    I've called this change "naive" because it does not:
    (1) avoid clearing pytype_output/ so that output can be reused between runs or
    (2) generate fine-grained dependency info so that ninja can parallelize builds.
    These improvements will be in future CLs.
    
    Makes progress toward #173. Fixes #169.
    
    * Adds this change to a new CHANGELOG file. We discussed starting a changelog
      in the meeting, so we might as well start now. I've added a single entry for
      the most recent release, to show how the file will be structured; I'll
      backfill the rest of the file later.
    * Adds ninja to install_requires in setup.py.
    * Moves pyi files into a subdirectory of pytype_output/ so we can have two
      pyi dirs, `pyi` and `pyi_1`.
    * Adds a write_ninja_preamble method, which writes out the pytype-single rules
      to build.ninja.
    * Adds a write_build_statement method, which appends a single build statement
      to build.ninja.
    * Adds a setup_build method, which writes out a full build.ninja file using the
      above two helpers. This method differs in two main ways from the old loop
      over yield_sorted_modules() in PytypeRunner.run(): it skips useless actions,
      and it doesn't count builtin and system files in the progress message. The
      second change was made so that pytype's file count would be more in line
      with ninja's action count.
    * Adds a build method, which calls out to ninja via subprocess.
    
    How ninja works:
    
    ninja looks for a build.ninja containing a number of rules and build statements.
    For example:
    
    rule infer
      command = pytype-single -o $out $in
    build foo.pyi: infer foo.py
    build bar.pyi: infer bar.py | foo.pyi
    
    defines an `infer` rule and statements to build `foo.pyi` and `bar.pyi`. In the
    second build statement, `| foo.pyi` says that bar.pyi depends on foo.pyi. ninja
    will ensure both foo.pyi and bar.pyi are present and up-to-date by executing any
    build statements necessary.
    
    The variables $out and $in are provided by default; it's also easy to define
    custom ones:
    
    rule infer
      command = pytype-single -P $pythonpath -o $out $in
    build foo.pyi: infer foo.py
      pythonpath = pytype_output/pyi/
    
    TESTED=new and existing unit tests, plus pip installing pytype with this change
    and running it over some GitHub repos.
    PiperOrigin-RevId: 219702660

[33mcommit 9891f3370ab84d1dbe8be7d9c0c88ef651ab5246[m
Merge: 6433734b a8616730
Author: Martin DeMello <martindemello@gmail.com>
Date:   Wed Oct 31 18:26:35 2018 -0700

    Merge pull request #188 from google/email
    
    Remove custom email notification settings from .travis.yml.

[33mcommit a8616730f80d0193b220622240452e8c1818f3af[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 31 18:08:22 2018 -0700

    Remove custom email notification settings from .travis.yml.
    
    Based on my reading of https://docs.travis-ci.com/user/notifications/,
    I believe that without the custom settings, the email frequency will be
    the same, but the emails will be sent to the PR author (if the author
    is a member of the pytype repo). This seems good enough to me and will
    stop our spamming of the external mailing list.
    
    Fixes #185.

[33mcommit 6433734bf1bbfad3cff91243f89903a1be4927a7[m[33m ([m[1;33mtag: 2018.10.30[m[33m)[m
Merge: 181d4e29 edb3093f
Author: Martin DeMello <martindemello@gmail.com>
Date:   Tue Oct 30 15:37:36 2018 -0700

    Merge pull request #187 from google/google_sync
    
    Google sync

[33mcommit edb3093f3093614a6d6585441df522e27c99ca5c[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 30 14:04:29 2018 -0700

    pytype-all: Do some restructuring/cleanup to pave the way for GitHub #173.
    
    * Bumps the version number so we can release this version as the last one
      before the ninja switch.
    * Updates a TODO in main.py to include a concrete way forward and adds two
      TODOs for pruning the dependencies of builtin and system files from the
      import graph.
    * Renames two actions: REPORT_ERRORS -> CHECK, IGNORE_ERRORS -> INFER.
      CHECK and INFER will make more sense as the names of ninja build rules.
    * Moves action generation into its own, testable function.
    
    PiperOrigin-RevId: 219362003

[33mcommit c81921071927f6e1740bcc41a3cb4e08438257fc[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 29 21:31:32 2018 -0700

    pytype-all: convert custom options to a command-line format.
    
    This change is a necessary precursor to fixing GitHub #173 because the
    build.ninja file needs a full command line for each pytype-single call.
    
    A nice side effect is that we can now test custom_options.
    
    PiperOrigin-RevId: 219243800

[33mcommit e2ce8ae2f789b8556b4c2cb78e78680ce75c3ac7[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 29 15:29:33 2018 -0700

    Cleanup: use compute_mro() more consistently.
    
    While messing around with type_parameters, I noticed that the
    MRO computing logic could be cleaned up a bit.
    
    * Makes InterpreterClass._get_pure_bases() a standalone function,
      _get_mro_bases(), that compute_mro() always calls, so that the
      extra input_bases argument isn't needed. Simplifies
      _get_mro_bases() slightly by folding some of the base
      manipulation logic originally in compute_mro() into it.
    * Changes AtomicAbstractValue to set the mro via compute_mro()
      and its subclasses to override compute_mro(), rather than
      letting every class directly set the attribute.
    * Moves the real compute_mro() from AtomicAbstractValue to Class.
    
    PiperOrigin-RevId: 219204464

[33mcommit bc639d36bb8021d1f84a659b613092585278804e[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 29 15:05:51 2018 -0700

    Get rid of now-unused datatypes.LazyDict.
    
    * Removes LazyDict.
    * Changes LazyAliasingMonitorDict to AliasingMonitorDict.
    * Merges DictTemplate with AliasingDict.
    
    PiperOrigin-RevId: 219200522

[33mcommit f694845e92dd63b9e21555c5ad8589b02e529ad2[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 29 14:45:14 2018 -0700

    Get rid of uses of LazyDict's methods.
    
    Gets rid of uses of lazy_eq and add_lazy_item, with the goal of
    switching from using a LazyDict for type_parameters to using a regular
    dict, lazily loaded. I ran build_kessel_run over this change, and it
    has no performance impact, as far as I can tell.
    
    * In instantiate(), rather than checking for parameter names in
      type_parameters, checks in the template, which is more accurate and
      avoids using type_parameters before it is fully loaded.
    * Adds __eq__ and __hash__ methods to TypeParameterInstance and Tuple
      to get rid of lazy_eq calls. Improves ParameterizedClass.__hash__.
    * Delays loading of type_parameters to get rid of add_lazy_item calls.
    * Renames Class._get_template to _compute_template to match existing
      compute_* methods and to avoid having two _get_template functions.
    
    PiperOrigin-RevId: 219196752

[33mcommit 43b6ec9ddbc645e66f94989db91b41d3b019b223[m
Author: mdemello <mdemello@google.com>
Date:   Thu Oct 25 12:20:00 2018 -0700

    Improve the display of tracebacks in error messages.
    
    PiperOrigin-RevId: 218729544

[33mcommit 60ed766d64d76d99df2b70fd9b5fbc8acac43d94[m
Author: sivachandra <sivachandra@google.com>
Date:   Wed Oct 24 11:36:19 2018 -0700

    Internal change
    
    PiperOrigin-RevId: 218547630

[33mcommit 120988ba44e37b30fd1fefe85dd38cbef06579ee[m
Author: sivachandra <sivachandra@google.com>
Date:   Mon Oct 22 10:26:49 2018 -0700

    Extend FunctionArgs.simplify to support Python 3's BUILD_TUPLE_UNPACK_WITH_CALL.
    
    PiperOrigin-RevId: 218190433

[33mcommit b939a591f8ca8a9963aeaf940745f2acf350f930[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 18 10:21:24 2018 -0700

    Some cleanup around module_name.
    
    * load_pytd.get_module_name() is documented as being able to return
      None, so allow None to be passed to load_pytd.load_file().
    * Remove an old read_pyi_save_pickle option.
    
    PiperOrigin-RevId: 217723988

[33mcommit 181d4e295e3e3906302e3db32c6bc34b39a772c1[m
Merge: 4f8103db 32b8f3f9
Author: Rebecca Chen <rechen@google.com>
Date:   Sun Oct 28 18:32:45 2018 -0700

    Merge pull request #186 from google/typeshed
    
    Update typeshed to 9ee458226c212acc2691f014d2a5575f33160d6d.

[33mcommit 32b8f3f91bad74ac7e09e320eb35d3d1809b047a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Oct 27 18:03:31 2018 -0700

    Update typeshed to 9ee458226c212acc2691f014d2a5575f33160d6d.

[33mcommit 4f8103dbb7285be21d0ff67102c49a39f6f3d6d7[m
Merge: 91ea2e13 03e25d03
Author: Martin DeMello <martindemello@gmail.com>
Date:   Wed Oct 17 11:51:04 2018 -0700

    Merge pull request #184 from google/google_sync
    
    Google sync

[33mcommit 03e25d0373696f86c0f7ffeb788a6515bac7b837[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 17 10:09:53 2018 -0700

    Update CMakeLists.txt to reflect a recent BUILD file change.
    
    Also adds a METADATA check to prevent these files from going
    out of sync in the future.
    
    PiperOrigin-RevId: 217539423

[33mcommit f7f7a63dcce0b3a7c24cb2bc8da172980f0e64d0[m
Author: Peter Ludemann <peter.ludemann@gmail.com>
Date:   Tue Oct 16 10:59:35 2018 -0700

    Manual import of GitHub PR #147: Fix documentation: change .pytd to .pyi
    https://github.com/google/pytype/pull/74
    
    PiperOrigin-RevId: 217347716

[33mcommit 1f73b2920203d1b223e6713847b3fc6e58c39850[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 15 16:48:48 2018 -0700

    Silence incorrect pytype py3 findings in pytype itself.
    
    PiperOrigin-RevId: 217231171

[33mcommit 09e4c68fd424b6cc8d39e11231361fab6dcca127[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 12 15:40:32 2018 -0700

    Handle abstract dicts properly in Python 3 function calls.
    
    An abstract.Dict is abstract if could_contain_anything is True. By checking
    for this attribute in FunctionArgs.starstarargs_as_dict(), we avoid
    accidentally treating abstract dicts as concrete ones, which leads to spurious
    missing-parameter errors.
    
    PiperOrigin-RevId: 216933928

[33mcommit a1c35d55cad3f231cc98a00dfdaee53bce42dc1d[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 12 14:02:46 2018 -0700

    Always analyze contructors, in Python 3.
    
    In Python 3, a method name may contain the class name, so we need to split on
    "." before matching against constructor names.
    
    PiperOrigin-RevId: 216917949

[33mcommit 61d0a17bebb429136988b8bdf6dd36525b2a57b5[m
Author: rechen <rechen@google.com>
Date:   Thu Oct 11 17:44:10 2018 -0700

    Add a --diff option to show_pickle to diff two pickles.
    
    Makes non-determinism easier to debug. Note that show_pickle can currently only
    unpickle files generated with PYTYPE=DEV due to the pytd.Class signature
    change. This problem should resolve itself with tomorrow's release.
    
    PiperOrigin-RevId: 216790928

[33mcommit e2b8a9f1253e8394e18386dabbd02ae3fe7a22d6[m
Author: mdemello <mdemello@google.com>
Date:   Thu Oct 11 15:57:33 2018 -0700

    Fix parser treating nested classes as constants.
    
    This is a conservative change that simply adds a node.classes field alongside node.constants, and leaves the nested classes in both places. All existing tests pass, and it should be enough to support a fix to #150.
    
    PiperOrigin-RevId: 216776237

[33mcommit c5cb4d8108b41c8503f703d88b26130eeedc800d[m
Author: mdemello <mdemello@google.com>
Date:   Thu Oct 11 14:42:29 2018 -0700

    Move implementations of add_metaclass and with_metaclass to their own module.
    
    The overlay implementations of six.add_metaclass and six.with_metaclass are
    independent of six. Moving them to their own module will let them be used by
    other libraries implementing the same functionality (e.g. `future`)
    
    PiperOrigin-RevId: 216763783

[33mcommit fcdd6e1b1275263b035ac1a9337c9df57dcb8102[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 10 17:16:32 2018 -0700

    Verify that pyi_output is non-empty.
    
    PiperOrigin-RevId: 216620864

[33mcommit e10e79bf59d360e48b0e8ac1a96045bb07da3188[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 10 17:09:22 2018 -0700

    Fix: handle pyi_output == None.
    
    PiperOrigin-RevId: 216619889

[33mcommit f2ec1fef1469731dc28929d0a5a7f748f349ffc5[m
Author: mdemello <mdemello@google.com>
Date:   Wed Oct 10 16:04:49 2018 -0700

    Support the -o option with --parse-pyi.
    
    It's a small piece of code and useful when debugging pyi parsing.
    
    PiperOrigin-RevId: 216609912

[33mcommit 8ef3279ffdf37d69c59e83a1ea6f93508b24d2ea[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 10 13:11:56 2018 -0700

    Filter closure variables at load time.
    
    Calls cfg.Variable.Filter() in load_closure_cell so that variables are
    filtered before we put them in a closure, since when we analyze a closure on
    its own, we're no longer at the right node to do filtering.
    
    Also fixes a LOAD_GLOBAL bug (None being loaded as Any) exposed by this change.
    
    PiperOrigin-RevId: 216580334

[33mcommit cb96458df7967142920ea34e5e732ffa31c87242[m
Author: tsudol <tsudol@google.com>
Date:   Wed Oct 10 11:07:37 2018 -0700

    Add get_first_opcode to SignedFunction.
    
    This allows all SignedFunctions to have late annotations. Every other user of
    get_first_opcode ensures the function is an InterpreterFunction, except for
    annotations_util. Because of this, None is a safe default value.
    
    PiperOrigin-RevId: 216559731

[33mcommit d2c7b0f8bf2d314159cfea67f33f1c4e84aa808a[m
Author: mdemello <mdemello@google.com>
Date:   Tue Oct 9 15:48:10 2018 -0700

    Verify that all type parameters used in mutations are in scope.
    
    A mutation using an invalid typevar should fail at pyi import time, not when
    analysing the call site.
    
    PiperOrigin-RevId: 216437371

[33mcommit 9f710ae7a3a3e4e97e6a9fe4fafd4eedd15129f7[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 8 16:39:08 2018 -0700

    Cleanup: move InterpreterFunction mutations to InterpreterFunction.call().
    
    Moves mutations from BoundFunction to InterpreterFunction, which:
    * allows us to get rid of the `last_substs` attribute.
    * keeps all the InterpreterFunction logic together.
    * enables PyTDFunction and InterpreterFunction to use the same Mutation class
      and _apply_mutations helper.
    
    PiperOrigin-RevId: 216272684

[33mcommit b982cb16b931e7cbaee40f1b8cfbb38b0b92c349[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 8 16:34:19 2018 -0700

    Improve handling of <, <=, >, >=
    
    Does more precise comparisons in order to support more kinds of
    version checks. Previously, pytype could handle
    `sys.version_info[0] == ...` only; now we can do all of the
    relational operators. We still don't support tuple comparisons,
    so `sys.version_info >= (3, 6)` won't work, but wanting to
    check the minor version is rarer, and in a pinch, the major and
    minor versions can be checked separately.
    
    PiperOrigin-RevId: 216271911

[33mcommit 8f3d9f7c2a6c3b54d795170fb80783f79395fbdc[m
Author: rechen <rechen@google.com>
Date:   Sun Oct 7 00:28:39 2018 -0700

    Cleanup: add the module name to objects created by overlays.
    
    PiperOrigin-RevId: 216074685

[33mcommit 2bf48c67c841d9f20ce19360802cec6c7488f9cd[m
Author: mdemello <mdemello@google.com>
Date:   Fri Oct 5 15:02:48 2018 -0700

    Put strict module checking behind a flag.
    
    PiperOrigin-RevId: 215972193

[33mcommit 91ea2e13f4e1d749c12b9b17689afdb9b0976943[m
Merge: 092c8424 f4934b4b
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 15 17:51:29 2018 -0700

    Merge pull request #182 from google/typeshed_update
    
    Update typeshed to cec2202550ab0f41205fad521a889415be0fd405.

[33mcommit f4934b4b1f5680eb8803b6c07b999b241054ce5e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 15 17:16:08 2018 -0700

    Update typeshed to cec2202550ab0f41205fad521a889415be0fd405.

[33mcommit 092c8424a3e5747eeb1a87dc2bf26e495a766552[m
Merge: 02f94d63 f25f4235
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Oct 5 18:04:39 2018 -0700

    Merge pull request #180 from google/setup_cfg
    
    Turn on type-checking for more of pytype itself.

[33mcommit f25f42353464aa21d85a1476c86adf464006e7be[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 26 17:21:34 2018 -0700

    Turn on type-checking for more of pytype itself.

[33mcommit 02f94d63b5d9b11001e576c10e9c02278b7f4172[m
Merge: 309a87fa 71166236
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Oct 5 16:56:09 2018 -0700

    Merge pull request #179 from google/google_sync
    
    Google sync

[33mcommit 71166236eeb06c24ddfbb4a42a6cb2630e0fb6ac[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 5 13:59:46 2018 -0700

    Small cleanup: collect dependencies and late dependencies in the same pass.
    
    I noticed that CollectLateDependencies is always called after
    CollectDependencies, so we can simplify a little by combining them.
    
    PiperOrigin-RevId: 215961751

[33mcommit 07037d5a6c868136c0085cb9d3a8ba5a29ac54ec[m
Author: mdemello <mdemello@google.com>
Date:   Fri Oct 5 13:13:52 2018 -0700

    Add late dependencies to the list of module prefixes in the loader.
    
    PiperOrigin-RevId: 215954730

[33mcommit 6a0a124a7238308e93f48fd207cbf820edb4550f[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 5 12:06:38 2018 -0700

    Add `slice` as a parameter option for bytearray.__delitem__.
    
    Fixes https://github.com/google/pytype/issues/178.
    
    PiperOrigin-RevId: 215944462

[33mcommit 349735c8b7f0a999316b8cefaed8fb56b1e00304[m
Author: rechen <rechen@google.com>
Date:   Fri Oct 5 10:32:31 2018 -0700

    Make cfg.Variable.Bindings() deterministic.
    
    PiperOrigin-RevId: 215927527

[33mcommit 309a87fab8a861241823592157208e65c970f7b6[m
Merge: 09b9fac4 da0d1ed6
Author: Martin DeMello <martindemello@gmail.com>
Date:   Thu Oct 4 14:37:40 2018 -0700

    Merge pull request #177 from google/google_sync
    
    Google sync

[33mcommit da0d1ed6e2211dd582def75521e59b7f791daf99[m
Author: tsudol <tsudol@google.com>
Date:   Thu Oct 4 11:20:38 2018 -0700

    Only check for recursion in paramaterized protocols.
    
    The protocol caching would look neater in _match_paramaterized_protocol, but
    `left` is needed for the key, and it's easier to not change the interface of
    _match_paramaterized_protocol.
    
    PiperOrigin-RevId: 215771581

[33mcommit fc252e17114d56e22fdd8882365ae2880e98775f[m
Author: rechen <rechen@google.com>
Date:   Wed Oct 3 18:12:28 2018 -0700

    Fix a crash in VerifyContainers.
    
    PiperOrigin-RevId: 215663895

[33mcommit 1f8afcc6e7d17b44325531addd0d9b6cd0ba32a2[m
Author: sivachandra <sivachandra@google.com>
Date:   Wed Oct 3 16:27:40 2018 -0700

    Tweak enum.pytd a little to match the actual behavior.
    
    PiperOrigin-RevId: 215649959

[33mcommit b975454ec39d2dc463a40879f5f6a99bfa99e549[m
Author: mdemello <mdemello@google.com>
Date:   Wed Oct 3 16:26:58 2018 -0700

    add enum.pytd to cmake sources
    
    PiperOrigin-RevId: 215649876

[33mcommit f3aa2561e13b59bd5475924981fac56e0e8ff3fc[m
Author: tsudol <tsudol@google.com>
Date:   Wed Oct 3 16:20:13 2018 -0700

    Fix default dict class hierarchy.
    
    collections.defaultdict now subclasses typing.DefaultDict, and
    typing.DefaultDict now subclasses typing.Dict.
    
    PiperOrigin-RevId: 215648899

[33mcommit e33d9deb57a3f62484af2b9e997e124d4aa84397[m
Author: tsudol <tsudol@google.com>
Date:   Wed Oct 3 15:46:01 2018 -0700

    Prevent loop when matching self-referential protocols.
    
    Assumes that partially-matched protocols will match unless a
    non-self-referential method causes a failure.
    Unable to test further because of [].
    
    PiperOrigin-RevId: 215643122

[33mcommit ff4f3eeca64098dc0fa1a9e27a0b75d2e2d39be7[m
Author: mdemello <mdemello@google.com>
Date:   Wed Oct 3 13:29:31 2018 -0700

    Do not attempt to load a submodule we haven't explictly imported.
    
    Fixes #175 [https://github.com/google/pytype/issues/175]
    
    PiperOrigin-RevId: 215616894

[33mcommit d65cea98011fed66addc2d575833f4879a1acdde[m
Author: ahxun <ahxun@google.com>
Date:   Tue Oct 2 22:07:42 2018 -0700

    Fix the bug that Generic PytdClasses can't be instantiated
    
    PiperOrigin-RevId: 215513507

[33mcommit a788f79727f8115931f7eb050d6f444834c7ccd7[m
Author: rechen <rechen@google.com>
Date:   Tue Oct 2 21:29:26 2018 -0700

    Use a custom pytd file for enum in Python 3.
    
    This bug is blocking me on [] because of how many py2and3 targets
    it affects - until it is fixed, copying our custom py2 pyi file and adding the
    py3 bits from typeshed should get rid of the most annoying false positives.
    
    PiperOrigin-RevId: 215510764

[33mcommit d6b99ee24a52c20f9376daa088f90eb20506333e[m
Author: mdemello <mdemello@google.com>
Date:   Tue Oct 2 14:11:49 2018 -0700

    Allow .. as a package name in pyi files.
    
    Fixes #94 [https://github.com/google/pytype/issues/94]
    
    PiperOrigin-RevId: 215455800

[33mcommit 3d12f4eec840ad2edbbf2474011671298d087fad[m
Author: mdemello <mdemello@google.com>
Date:   Tue Oct 2 11:23:08 2018 -0700

    Use ast27t in xref.
    
    Handles backported type annotation syntax.
    
    PiperOrigin-RevId: 215424761

[33mcommit ab9493bbac252b5e22594fa5b2b8cc93495b21af[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 1 16:06:24 2018 -0700

    Finish making the pickled builtins deterministic.
    
    * Removes a redundant `or ()` in load_pytd.py - this is actually left over from
      an incorrect fix, but I kept it because it's a cleanup.
    * Tests determinism of the builtins pickle under all four target and host
      python version combinations in main_test.
    * Sorts some previously set-based operations in visitors.py.
    
    TESTED:
    * Ran testBuiltinsDeterminism 10 times in each (target x host) configuration.
    * Ran check_determinism.par on //video/youtube/utils/types_spy:processor twice,
      //video/youtube/src/python/validation:ads_validators twice,
      //video/youtube/src/web/polymer:_creator_studio_polymer_compiled twice,
      //video/youtube/src/python/servers/innertube/gaming:gaming_util twice, and
      //devtools/python/blaze/pytype:precompiled_builtins_3 twice.
    PiperOrigin-RevId: 215297844

[33mcommit d7f747890128ad95a27caca60d269897cd5160ac[m
Author: mdemello <mdemello@google.com>
Date:   Mon Oct 1 16:00:22 2018 -0700

    Do not expand type parameter constraints in ExpandCompatibleBuiltins.
    
    We want
      f(x: float) -> float
    to be rewritten to
     f(x: float|int) -> float
    
    but not to rewrite
      T = Typevar('T', float)
      f(x: T) -> T
    
    Fixes https://github.com/google/pytype/issues/159
    
    PiperOrigin-RevId: 215296765

[33mcommit 1cef566e1fc84d9a522c4b880008d841665acabe[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 1 13:29:12 2018 -0700

    Stop adding plistlib to the blacklist in main.py.
    
    While working on the non-determinism bug, I noticed that pytype no longer seems
    to have any trouble with this file.
    
    build_all_pytype_targets with --define=PYTYPE=DEV shows no new findings:
    target,failure,[]_link
    //area120/jolonto/pipelines/notifs/new_jobs_for_seeker:main,Findings,[]
    
    PiperOrigin-RevId: 215270038

[33mcommit 1687f0348339603c1d814eec10515d5deccb7aa7[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon Oct 1 12:08:58 2018 -0700

    Increase determinism of gzip'd pickles.
    
    I don't know if this is a terminal issue, but it should be standard procedure
    for gzip, and may be confounding the test output.
    
    Additionally set PYTHONHASHSEED=0 for the test, since some internal
    representations are apparently using dicts/sets. This should also be set on the
    .bzl-created rules if its not already.
    
    PiperOrigin-RevId: 215256689

[33mcommit a71a0f427223e189013d579359bad734d93c4b8d[m
Author: rechen <rechen@google.com>
Date:   Mon Oct 1 11:55:32 2018 -0700

    Cleanup: remove private attribute accesses in pytype/tools/xref/.
    
    #Squeegee
    
    PiperOrigin-RevId: 215254326

[33mcommit 3a1b6f1091ce8a353ea3cc6ecc6c9c9930907949[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 27 16:01:51 2018 -0700

    Replace the contrived `x: 0` example with one of a function as a type hint.
    
    PiperOrigin-RevId: 214851632

[33mcommit e2354342621cf34742871dac77f458168c366ddc[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 27 09:42:42 2018 -0700

    Add more files to :type_checked_lib.
    
    Adds more files and makes sure those files type-check under open-source pytype
    as well. (Hence the disable on the tracemalloc import, for example.) Removes
    pytype files from the blacklist and uses `# pytype: skip-file` instead, since
    the blacklist is internal-only.
    
    I'll follow up with a change to setup.cfg once this change is exported.
    
    PiperOrigin-RevId: 214788365

[33mcommit 09b9fac43ac25cd68e20e138d064e543615a6a74[m[33m ([m[1;33mtag: 2018.09.26[m[33m)[m
Merge: 1c71d485 d380261d
Author: Martin DeMello <martindemello@gmail.com>
Date:   Wed Sep 26 12:54:11 2018 -0700

    Merge pull request #166 from google/google_sync
    
    Google sync

[33mcommit d380261d5742406b80b1c51a843cbbb9c9741cf5[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 26 10:01:29 2018 -0700

    pytype-all: don't run inference on pip-installed dependencies.
    
    Adds a "kind" field to modules. pytype_runner uses this
    field to exclude importlab.resolve.(Builtin|System) modules
    from inference.
    
    Also gets rid of the no-longer-used preserve_init parameter to
    infer_module and path_to_module_name.
    
    Bumps the PyPI version number yet again.
    
    PiperOrigin-RevId: 214621739

[33mcommit eb634acbe48484e7caa9382b23065dcad56b1d31[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 25 21:41:31 2018 -0700

    Remove pytype_output at the start of each pytype run.
    
    Sorry about the two-step change - I was going to log a warning and come back
    to this later, but it turns out that removing the directory lets us send a
    cleaner PR for google_cloud_python/api_core because we then don't have to do
    `rm -rf pytype_output` between runs.
    
    PiperOrigin-RevId: 214552669

[33mcommit 622c7e9941f46ae2d4e9d278b102b1189cb40e06[m
Author: mdemello <mdemello@google.com>
Date:   Tue Sep 25 14:26:11 2018 -0700

    Convert resolved modules to file paths via pytype's loader cache.
    
    Continues to track unresolved modules, mostly in case we want to log them.
    
    PiperOrigin-RevId: 214503760

[33mcommit a8df519a7115cb959027985504c4794ae9c3ca76[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 25 14:09:54 2018 -0700

    Print an info message in analyze_project if pytype_output already exists.
    
    Until we figure out what to do about this problem, we can at least log it to
    make debugging easier.
    
    PiperOrigin-RevId: 214500958

[33mcommit 1c71d485b7fc31eeec48e9d0cc30a38554d5255c[m
Merge: 89baba6e bcc95916
Author: Teddy Sudol <tsudol@google.com>
Date:   Wed Sep 26 09:10:25 2018 -0700

    Merge pull request #165 from google/typeshed
    
    Update the typeshed submodule.

[33mcommit bcc95916fb6768653d3b74238ae370733d6e2ec1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 25 22:42:58 2018 -0700

    Update the typeshed submodule.

[33mcommit 89baba6ed3ac063a6776255b91d372d47c8f0dc5[m[33m ([m[1;33mtag: 2018.09.25[m[33m)[m
Merge: 652a6750 bcf0c5cb
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 25 14:22:50 2018 -0700

    Merge pull request #164 from google/google_sync
    
    Google sync

[33mcommit bcf0c5cbad54120544a0fcd4e36f51492d5962bd[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 25 12:56:04 2018 -0700

    Bump PyPI version number.
    
    Preparing to release the changes adding the __path__ attribute and
    fixing a Python 3 varargs unpacking bug, which are needed by
    google_cloud_python.api_core.
    
    PiperOrigin-RevId: 214488194

[33mcommit 201d568c24aabf3000ce34fe9b35414cc19ef5eb[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 25 12:06:57 2018 -0700

    Improve our handling of BUILD_(LIST|SET|TUPLE)_UNPACK.
    
    Partially implements Python 3 vararg unpacking in order to fix a bug I saw in
    the course of adding pytype to an open-source project.
    
    PiperOrigin-RevId: 214480445

[33mcommit f0b76d733ae67e1d04bd9bee90948458a6b87925[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon Sep 24 23:12:56 2018 -0700

    Fix handling of variadic positional arguments together with kwonly arguments.
    
    Before this fix, pytype used keyword only arguments as positional arguments when types weren't specified in a pyi file.
    
    Example:
    
    def foo(*args, z): pass
    
    foo(1, z=4) => function foo got multiple values for keyword argument 'z' [duplicate-keyword-argument]
    
    PiperOrigin-RevId: 214389231

[33mcommit 6680a548408cf6748b1809b8116c97c51b2eb930[m
Author: ahxun <ahxun@google.com>
Date:   Mon Sep 24 16:40:29 2018 -0700

    Support user-defined generic types. Passed all the local tests.
    
    Future work: Solve type parameter renaming problem to make user-defined generic types more powerful.
    
    PiperOrigin-RevId: 214353902

[33mcommit 7fe2be4bb41e9309caecf0a3d13ad3fa6bb09c28[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon Sep 24 11:32:50 2018 -0700

    Always pass -E to the interpreter used for byte compilation to avoid it
    being influenced by the environment (PYTHONPATH with a sitecustomize,
    etc.).
    
    PiperOrigin-RevId: 214301119

[33mcommit 9d7da61359cae06e361ce3959b9eca219d2fd8ca[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 21 12:09:10 2018 -0700

    Add __path__ as a global and module attribute.
    
    I also alphabetized __builtin__.module's attributes.
    
    PiperOrigin-RevId: 214023812

[33mcommit 9783e95623bb56efdc6779c5bf2c0766d89c141c[m
Author: mdemello <mdemello@google.com>
Date:   Fri Sep 21 11:24:24 2018 -0700

    Fix a few crashes found by testing against the pytype codebase:
    
    1. Don't crash on namedtuple attr access
    2. Don't crash on attr access of an binop (e.g. (a or b).foo)
    
    PiperOrigin-RevId: 214016278

[33mcommit 53e8e1cc857fada80c08c20b3d561c4730b22fc7[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 20 17:02:25 2018 -0700

    Show a full sample.cfg.
    
    Wraps up my work on the config file bug by adding the pytype-single arguments
    to sample.cfg and making it a fully functional sample config file - i.e.,
    someone could generate it and immediately use it for their project.
    
    Also makes sure the documentation on the config file is up-to-date. Since I was
    touching the README, I moved the "not an official Google product" disclaimer to
    the end - Adam had pointed out that having it at the beginning may be scaring
    people off.
    
    PiperOrigin-RevId: 213909618

[33mcommit ec581fdcc4f19a61c8297993b8960cc6c52d04ef[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 20 14:59:56 2018 -0700

    Get accurate references to class attributes.
    
    PiperOrigin-RevId: 213888459

[33mcommit 2fcbb256847eec1408fb8e01bdf38a6f9044da33[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 20 13:09:23 2018 -0700

    Move the kythe test scripts to their own directory.
    
    Adds scripts to browse multiple files together.
    
    PiperOrigin-RevId: 213868348

[33mcommit f6ab06f1a9a4ec89b3659b4cd8d958a0560229ac[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 20 11:55:04 2018 -0700

    Get correct definition anchors for imports.
    
    PiperOrigin-RevId: 213855908

[33mcommit 652a6750fbbebb7c5c5d132925c0a777c469d7f9[m
Merge: 373dbaec 8af617bc
Author: Martin DeMello <martindemello@gmail.com>
Date:   Tue Sep 25 00:14:35 2018 -0700

    Merge pull request #162 from google/travis
    
    Move pytype options out of travis_script into setup.cfg.

[33mcommit 8af617bc1385ebc131d9894eb99ff1305ed81fe7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 20 16:49:37 2018 -0700

    Move pytype options out of travis_script into setup.cfg.

[33mcommit 373dbaec4c8faf3aaa3ed7902c26ccd6dac2abd5[m[33m ([m[1;33mtag: 2018.09.19[m[33m)[m
Merge: 1bb69122 d5a00a23
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 20 12:59:36 2018 -0700

    Merge pull request #161 from google/typeshed
    
    Update the typeshed submodule.

[33mcommit d5a00a23ced5adf45dffd258f4a7cdd44e34a302[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 20 11:55:18 2018 -0700

    Update the typeshed submodule.
    
    Updates the submodule to 4f4a025409dc4037a35a46c8a57b75a384d05fe5,
    which is the latest commit that we've pulled into Google and verified
    works well with pytype.

[33mcommit 1bb6912239d67281d0b76e3292412322bea68b24[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 20 11:51:05 2018 -0700

    Revert "Update the typeshed submodule."
    
    This reverts commit cedf05a8d94e040953201c21276beca9f0db7d19.
    
    Accidentally pushed to master rather than another branch.

[33mcommit cedf05a8d94e040953201c21276beca9f0db7d19[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 20 11:45:51 2018 -0700

    Update the typeshed submodule.
    
    This pins the submodule to the same typeshed commit we're using
    internally, which we've verified works well with pytype.

[33mcommit 5a6ecdf8692cbec4082cdc3eb83dcf00bb16f4ef[m
Merge: e39b1eed 9060417f
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 20 11:17:30 2018 -0700

    Merge pull request #160 from google/google_sync
    
    Google sync

[33mcommit 9060417f50ab5226686c2347cd83000cb74bd543[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 20 10:31:23 2018 -0700

    Allow pytype-all's `inputs` option to be specified in setup.cfg.
    
    Adds `inputs` to config.ITEMS, which includes some odd shenanigans in
    parse_args.py because argparse treats positional and optional arguments subtly
    differently. Bumps the version number again in preparation for a PyPI release
    of the --exclude fix and this change.
    
    PiperOrigin-RevId: 213838356

[33mcommit 5087c32311adcc6597265e28a99842086e5da94d[m
Author: rechen <rechen@google.com>
Date:   Thu Sep 20 10:04:06 2018 -0700

    Support hidden files in pytype-all.
    
    Changes pytype_runner to handle dotted names better when computing an
    output path, and expand_source_files to skip hidden files by default.
    They can still be analyzed by explicitly requesting them; for example,
    `pytype home/*` will skip home/.hidden, but `home/.hidden` and
    `home/.*` would both pick it up.
    
    Also gets rid of a collect_files() method that I realized could be
    replaced with recursive_glob().
    
    PiperOrigin-RevId: 213833679

[33mcommit 544fba327da9d8790b8a6c41ee6709bde9b4158a[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 19 16:06:13 2018 -0700

    Capture the enclosing scope of a function call, for call graphs.
    
    Fixes references to record both the enclosing and the referred scope.
    
    PiperOrigin-RevId: 213714931

[33mcommit 8d08da239e8723a37eefeaf6400a3b7cde6c24c6[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 19 13:03:29 2018 -0700

    Restore old --exclude behavior on directories.
    
    With this change, --exclude first does shell expansion, then recursively
    collects .py files. This restores the behavior of our first version of
    --exclude, after I accidentally changed it to only do the shell expansion.
    
    PiperOrigin-RevId: 213679537

[33mcommit 1238e6943338ede2c3bd8f4be93f0b7b5a7bb508[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 19 11:27:23 2018 -0700

    Make --exclude a set rather than a list.
    
    I'm planning to make inputs, which is a set, file-configurable next. Since the
    two arguments are similar in many ways, making --exclude a set as well allows
    some code sharing.
    
    I also alphabetized config.ITEMS everywhere so that they stay organized when we
    add inputs and other future options, and fixed a small bug my last change
    introduced: `file_utils.cd('')` is legal and a no-op.
    PiperOrigin-RevId: 213662100

[33mcommit 634c932ee7172989fa2b187a75c4960e95498515[m
Author: mdemello <mdemello@google.com>
Date:   Wed Sep 19 11:18:58 2018 -0700

    Add references for class bases.
    
    Also fix a bug with references to PyTDClass objects.
    
    PiperOrigin-RevId: 213660450

[33mcommit b15827eccec472b7c22016ee6ec49feeb5c1f290[m
Author: mdemello <mdemello@google.com>
Date:   Tue Sep 18 14:33:11 2018 -0700

    Handle class attribute lookups via the MRO.
    
    Also adds a fix for location information for decorated classes and functions.
    
    PiperOrigin-RevId: 213518417

[33mcommit e39b1eedd1619f8b5ab7db768ab4b3f0dc608f93[m[33m ([m[1;33mtag: 2018.09.18[m[33m)[m
Merge: 0811af70 dfbe136b
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 18 15:21:18 2018 -0700

    Merge pull request #158 from google/google_sync
    
    Google sync

[33mcommit dfbe136b62f9e3fc4b99a937b6db398bb285894b[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 18 13:26:28 2018 -0700

    Support `# type: ignore` at the ends of more lines in pyi files.
    
    For https://github.com/python/typeshed/pull/2389.
    I initially tried adding
    
    constandef
     : constantdef typeignore
     ...
    
    but that led to a shift/reduce conflict =(
    
    PiperOrigin-RevId: 213505250

[33mcommit bf675a98ede88db2117ee687fa1f25f46fa03750[m
Author: rechen <rechen@google.com>
Date:   Tue Sep 18 11:39:17 2018 -0700

    Support setting pytype-all's --exclude argument in the config file.
    
    Adds --exclude to config.ITEMS. Adds a compat.recursive_glob() function to
    support this change. Also does two tiny cleanups: adds a newline after
    `[pytype]` in the sample config, for readability, and deletes an extra
    whitespace in the help message for --verbosity.
    
    I mostly developed this feature in the GitHub project and also ran it there on
    a few simple examples, but with this much code, I felt more comfortable
    linting and testing it internally.
    
    PiperOrigin-RevId: 213486175

[33mcommit 02c78132e8a50f73a8b2a017fb0b5b6413247205[m
Author: mdemello <mdemello@google.com>
Date:   Mon Sep 17 13:58:09 2018 -0700

    Add support for annotations in inner functions.
    
    PiperOrigin-RevId: 213332457

[33mcommit e993ca12b95a2a3032bdbd0b1804fda06211a19d[m
Author: mdemello <mdemello@google.com>
Date:   Mon Sep 17 12:57:56 2018 -0700

    Resolve references from builtins and stdlib.
    
    PiperOrigin-RevId: 213322199

[33mcommit 26ac18ce47c79eef1f8b383d28de05a7e6525ac3[m
Author: mdemello <mdemello@google.com>
Date:   Fri Sep 14 15:23:50 2018 -0700

    Fix method call anchors
    
    Removes some tests from indexer_test because they're covered by kythe tests.
    
    PiperOrigin-RevId: 213053562

[33mcommit 108d4c557d61a075a279053e17797798c07bb714[m
Author: mdemello <mdemello@google.com>
Date:   Fri Sep 14 13:49:18 2018 -0700

    Add docstrings to the kythe graph.
    
    PiperOrigin-RevId: 213037052

[33mcommit 91b4ea12cfa2f7e75130d1ec795779eeaf9a657e[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 14 10:08:46 2018 -0700

    Allow parameterized protocols in pyi files.
    
    This is another thing that has popped up in typeshed since we last imported it
    and wasn't caught due to VerifyContainers not being run.
    
    PiperOrigin-RevId: 213000778

[33mcommit 9da1452541f58b5e933fc2c3746d8a335c13a8e5[m
Author: rechen <rechen@google.com>
Date:   Fri Sep 14 09:15:32 2018 -0700

    Support a new typeshed pattern.
    
    We didn't catch that this pattern breaks pytype because --parse-pyi doesn't
    run the VerifyContainers check.
    
    PiperOrigin-RevId: 212992719

[33mcommit bcdac6606a0665be493821871925cc135e701145[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 13 16:20:27 2018 -0700

    Add more precise attribute resolution, using pytype-derived data.
    
    Also adds a classmap to support nested classes and classes with the same name.
    
    PiperOrigin-RevId: 212897965

[33mcommit 0811af708802a9cb561cf71b71294dd724468e4b[m
Merge: 9a7a048c 2d75492d
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Thu Sep 13 15:07:37 2018 -0700

    Merge pull request #156 from google/sivachandra_add_travis_step_runner
    
    Organize Travis commands into steps.

[33mcommit 2d75492ddf424b71fb2b72f1f6921d5ccb3a66db[m
Author: Siva Chandra <sivachandra@google.com>
Date:   Wed Sep 12 13:27:35 2018 -0700

    Organize Travis commands into steps.
    
    Three steps have been added to build, test and type check pytype sources.

[33mcommit 9a7a048ce54eccfe60a5acc57339940e4b1c817b[m
Merge: ffd8ac6f d34759d6
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Thu Sep 13 08:46:25 2018 -0700

    Merge pull request #155 from google/google_sync
    
    Google sync

[33mcommit d34759d69d2322007d744f3fa0937fa3912ce64e[m
Author: sivachandra <sivachandra@google.com>
Date:   Wed Sep 12 21:58:27 2018 -0700

    Add a missing source file in a CMake target.
    
    PiperOrigin-RevId: 212757663

[33mcommit ec670a6ae2aad24457d6e161a64c8faaef3646f2[m
Author: mdemello <mdemello@google.com>
Date:   Tue Sep 11 11:36:30 2018 -0700

    Add a --debug flag to config.py for subtools to use.
    
    PiperOrigin-RevId: 212489835

[33mcommit 3ec1912a3fcb3849c137c78884b9b0a57f19e102[m
Author: tsudol <tsudol@google.com>
Date:   Tue Sep 11 09:25:41 2018 -0700

    Move parser MemoryLeakTest into its own file.
    
    This test fails when run under `blaze coverage`, so our Zapfhahn runs fail.
    By moving it into its own file, it can be easily excluded from coverage runs.
    Error reported by Zapfhahn: []
    
    PiperOrigin-RevId: 212464843

[33mcommit ad9a1c03789377cae608032ea2ea4073be16deb3[m
Author: mdemello <mdemello@google.com>
Date:   Mon Sep 10 16:59:40 2018 -0700

    Search the chain of nested environments for a DEREF variable.
    
    Also moves all human-readable-output code to debug.py.
    
    PiperOrigin-RevId: 212361301

[33mcommit 46fe52e1469bd5629521e35c87579590d1bd1694[m
Author: mdemello <mdemello@google.com>
Date:   Mon Sep 10 11:19:05 2018 -0700

    Add a blaze wrapper for the kythe verifier tests.
    
    PiperOrigin-RevId: 212300135

[33mcommit ffd8ac6f86811f7e9ddc62f808c38faa2af28f0e[m
Merge: be40e46d 184ae8aa
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Tue Sep 11 14:51:58 2018 -0700

    Merge pull request #153 from google/sivachandra_add_travis_37
    
    Add Python3.7 host testing to Travis matrix.

[33mcommit 184ae8aa3a6264decb4fd1760bd3979d0a40b372[m
Author: Siva Chandra <sivachandra@google.com>
Date:   Tue Sep 11 14:10:58 2018 -0700

    Add Python3.7 host testing to Travis matrix.

[33mcommit be40e46dd8344d17a64f14aa576e43d13a6dbea3[m[33m ([m[1;33mtag: 2018.09.07.1[m[33m)[m
Merge: 9a726e86 0bc52e19
Author: Martin DeMello <martindemello@gmail.com>
Date:   Fri Sep 7 16:54:43 2018 -0700

    Merge pull request #149 from google/typeshed_update
    
    Update the typeshed submodule.

[33mcommit 0bc52e19551a828beb03c257ef2cf0f6db3295af[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 7 16:22:26 2018 -0700

    Update the typeshed submodule.

[33mcommit 9a726e86d32348972c0c30d9a8399af3bde82687[m[33m ([m[1;33mtag: 2018.09.07[m[33m)[m
Merge: 27374b3f 5009c7e7
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 7 15:47:54 2018 -0700

    Merge pull request #148 from google/google_sync
    
    Google sync

[33mcommit 5009c7e79b89cb348ce2f6f4ed591cfd458c034b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 7 15:24:20 2018 -0700

    Add partial support for nested classes in pyi files. (#147)
    
    This PR will have to be imported and re-exported rather than merged directly.
    
    Resolves #147
    
    PiperOrigin-RevId: 212045708

[33mcommit 4d42aea9ddee0eeec8531b087ee879659d00cd2a[m
Author: mdemello <mdemello@google.com>
Date:   Fri Sep 7 13:43:43 2018 -0700

    Remove link test, since links are no longer stored in the indexer.
    
    We will test via kythe's verifier mechanism instead.
    
    PiperOrigin-RevId: 212028985

[33mcommit 27374b3f87305bb8211042ff2bbdf81e815baab3[m
Merge: e5c1b3eb d11cfcc5
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Fri Sep 7 13:58:26 2018 -0700

    Merge pull request #146 from google/google_sync
    
    Google sync

[33mcommit d11cfcc524b9d062c5ed40ef29c322fbacdeefe2[m
Author: sivachandra <sivachandra@google.com>
Date:   Thu Sep 6 18:06:25 2018 -0700

    Make utils_test work under Python-3.7.
    
    A test method in this test module assumes that an expression
    like id((1,)) == id((1,)) evaluates to False. However, Python-3.7
    seems to be doing a more aggressive constant literal caching, which
    makes that expression to evaluate to True. So, this change is
    essentially making the test method evaluate id of a sufficiently
    complex expression to avoid caching.
    
    PiperOrigin-RevId: 211901694

[33mcommit 1a156b541779e058e7494add46dd6a9eb104e97d[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 6 16:57:53 2018 -0700

    FIX: We can't assume a current frame in the VM
    
    PiperOrigin-RevId: 211893674

[33mcommit b4c1f5c7cc9dfbfcadf8b40798c9ec106fce26db[m
Author: mdemello <mdemello@google.com>
Date:   Thu Sep 6 15:18:33 2018 -0700

    Record types and function calls in the indexer.
    
    * Adds a typemap to store symbol types
    * Adds a function/method call record
    * Adds the beginning of support for union types by allowing multiple bindings
      per variable
    
    Also adds a basic kythe verifier test and the shell scripts needed to run it.
    
    PiperOrigin-RevId: 211878602

[33mcommit 5033965072d5ba3d1cb843cd76830a020d62071f[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 5 10:46:11 2018 -0700

    Rename Function._full_name to Function._repr_name.
    
    A full_name property already exists, so rename _full_name to reduce confusion.
    
    PiperOrigin-RevId: 211659165

[33mcommit f6e69f327d3e37659a10c7130aad2a6813f63e83[m
Author: rechen <rechen@google.com>
Date:   Wed Sep 5 10:33:07 2018 -0700

    Update errors.md to make clear that a misspelling is intentional.
    
    PiperOrigin-RevId: 211656664

[33mcommit e5c1b3eb09eea08e222c4675909c9c8d32b814ad[m
Merge: 6a74e10f 7352fc78
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Sep 6 23:06:08 2018 -0700

    Merge pull request #145 from google/sivachandra_add_back_cpython
    
    Add back the cpython submodule.

[33mcommit 7352fc781f01de62198e15ee100c70c4c08ca645[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Thu Sep 6 22:25:35 2018 -0700

    Add back the cpython submodule.

[33mcommit 6a74e10fcc9a36a2b98abbc81b3900382be8c03e[m
Merge: 8f18033a b9aec031
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue Sep 4 15:03:18 2018 -0700

    Merge pull request #144 from google/google_sync
    
    Future-proof preconditions.py:_TOKEN_RE

[33mcommit b9aec031754602c73b9741f3a769bffd55db98c3[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue Sep 4 14:20:48 2018 -0700

    Internal change
    
    PiperOrigin-RevId: 211523402

[33mcommit 8f18033a5b311590d0ae619ebbb87868b40d7375[m
Merge: 3c0f80b9 507b026e
Author: Martin DeMello <martindemello@gmail.com>
Date:   Tue Sep 4 14:05:16 2018 -0700

    Merge pull request #143 from google/google_sync
    
    Refactor: Move the kythe graph generation into its own file.

[33mcommit 507b026e1779d2a60d3563517bf8e3de7b03c257[m
Author: mdemello <mdemello@google.com>
Date:   Fri Aug 31 11:20:40 2018 -0700

    Refactor: Move the kythe graph generation into its own file.
    
    PiperOrigin-RevId: 211114928

[33mcommit 3c0f80b9a1386932b278f356a7a563a9bb54578e[m
Merge: 14217686 2c0475ac
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Tue Sep 4 13:29:02 2018 -0700

    Merge pull request #141 from google/sivachandra_cpython_submodule
    
    Add cpython submodule pinned to the current 2.7 HEAD.

[33mcommit 2c0475acc8ee24c595775899a03f8e0b1fdcc7ed[m
Author: Siva Chandra <sivachandra@google.com>
Date:   Thu Aug 30 15:26:38 2018 -0700

    Add cpython submodule pinned to the current 2.7 HEAD.
    
    Extended the build script to build the patched Python2.7 interpreter if
    the option "--py27" is specified. A standalone script which can build
    the patched interpreter has also been added. This script will be used by
    a CMake target to build the patched interpreter as part of the
    run_tests.py flow.

[33mcommit 14217686aa628c4564a50b33d883712625f8b736[m
Merge: aa23d33e b4f06897
Author: Teddy Sudol <tsudol@google.com>
Date:   Wed Aug 29 10:54:17 2018 -0700

    Merge pull request #139 from google/google_sync
    
    Google sync

[33mcommit b4f06897aa015523c70b20a3bf87fe7f2f6c924b[m
Author: tsudol <tsudol@google.com>
Date:   Wed Aug 29 09:10:36 2018 -0700

    Make load_pyi understand import aliases.
    
    Also adds a test for relative imports in pyi files.
    
    PiperOrigin-RevId: 210731580

[33mcommit 4b397b1b9b9a23053b55bac79987d098edb225c5[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 28 13:13:53 2018 -0700

    Generate kythe graph output from xref.
    
    PiperOrigin-RevId: 210592583

[33mcommit 11899ab93e7627163fe11c41fcd8d74d6c227810[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Mon Aug 27 11:43:06 2018 -0700

    Update frozenset() non-operator interfaces.
    
    According to the stdlib docs, these take any Iterable object, not just another AbstractSet: https://docs.python.org/3/library/stdtypes.html#frozenset
    
    Also add missing symmetric_difference() method.
    
    PiperOrigin-RevId: 210403184

[33mcommit 89ad51623a7170ee9f712c5014031f3014f373f6[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 27 09:19:20 2018 -0700

    FIX: Calling the wrong full_name in repr(BoundFunction)
    
    PiperOrigin-RevId: 210377575

[33mcommit 58af87c08642afb0f88882dde340e4ac1a21c8d2[m
Author: mdemello <mdemello@google.com>
Date:   Fri Aug 24 15:45:16 2018 -0700

    Pull out the full name calculation for repr(BoundFunction) into its own method.
    
    PiperOrigin-RevId: 210169959

[33mcommit 2cf1adfa5076379c7039028c3f50cb9167f44ef7[m
Author: sivachandra <sivachandra@google.com>
Date:   Fri Aug 24 11:49:26 2018 -0700

    Update CONTRIBUTING.md with info that run_tests.py also runs C++ unit tests.
    
    PiperOrigin-RevId: 210132792

[33mcommit aa23d33e8b6d9378956adc56c042d3e75cd73d93[m
Merge: f13e1adc 20395e1f
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Fri Aug 24 12:15:20 2018 -0700

    Merge pull request #138 from google/sivachandra_run_test_targets
    
    Adjust run_tests.py to reflect the fact that it also runs C++ unit tests.

[33mcommit 20395e1fe0a79255fcc236ecad3d4a5ea3ec5e3e[m
Author: Siva Chandra <sivachandra@google.com>
Date:   Fri Aug 24 11:42:24 2018 -0700

    Adjust run_tests.py to reflect the fact that it also runs C++ unit tests.

[33mcommit f13e1adc23b299e3d8fde6c5afeb41f9fbebd915[m
Merge: 60130e96 fd27d8b4
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Fri Aug 24 07:01:38 2018 +0800

    Merge pull request #137 from google/google_sync
    
    Google sync

[33mcommit fd27d8b4b09f6d5a7671d1f4e70ae40221926dad[m
Author: sivachandra <sivachandra@google.com>
Date:   Thu Aug 23 15:15:04 2018 -0700

    Run the cc_test binaries when the targets are built.
    
    PiperOrigin-RevId: 210009307

[33mcommit c0be2ae2778dc7c048dc8cc733b7b4b5977ab59b[m
Author: mdemello <mdemello@google.com>
Date:   Tue Aug 21 14:18:32 2018 -0700

    Add support for docstrings.
    
    Also fixes the test suite to use python_version.
    
    PiperOrigin-RevId: 209658336

[33mcommit c075e5e664be655a47f7d247ff69aa9e0c9487bd[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 20 17:04:39 2018 -0700

    Handle import statements
    
    - Store imports in a modules dict
    - When resolving references, check if the target of an attribute access is an
      imported module
    
    PiperOrigin-RevId: 209511573

[33mcommit 60130e9675781a222abfd9f8343168fcacbbc198[m
Merge: df1bf145 de7ff03e
Author: Martin DeMello <martindemello@gmail.com>
Date:   Thu Aug 23 09:51:54 2018 -0700

    Merge pull request #136 from google/sivachandra_add_cc_test_script
    
    Add a simple script to run a C++ unit test binary.

[33mcommit de7ff03e55db674ec133024eb56bda5d0e00997f[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon Aug 20 13:59:14 2018 -0700

    Add a simple script to run a C++ unit test binary.
    
    This script will be called from the CMake cc_test rule.
    
    [Changes to the rule to make use of this script will be made as a
    Google internal change and exported to Github.]

[33mcommit df1bf14557ca3c35c1286a6abbb9fb846bfcf9df[m
Merge: 2b6f8afd 67797790
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Tue Aug 21 05:41:06 2018 +0800

    Merge pull request #135 from google/google_sync
    
    Google sync

[33mcommit 677977902ee2d819d53223c8f68dab2f2a4abe21[m
Author: mdemello <mdemello@google.com>
Date:   Mon Aug 20 11:45:52 2018 -0700

    Use typed_ast in xref.
    
    Sets xref to PY3ONLY as well, since typed_ast is a python3-only library.
    
    PiperOrigin-RevId: 209457084

[33mcommit 147991038dacac16174c1ac6b5eb109ea83b6991[m
Author: sivachandra <sivachandra@google.com>
Date:   Sat Aug 18 10:42:56 2018 -0700

    Add implementations of cc_library and cc_test rules and use them.
    
    All cc_test targets in pytype/typegraph are now added to the CMake file.
    Building these targets does not run the tests yet. The ability to run the
    tests will be added in a future change. However, one can now run the test
    binaries manually.
    
    PiperOrigin-RevId: 209280766

[33mcommit 1cdfd4f6b3028f9acfec936a808509c1a1d6b6f3[m
Author: ahxun <ahxun@google.com>
Date:   Fri Aug 17 15:17:41 2018 -0700

    Make typing.NamedTuple as a class for python 3.6+:
    1) backward-compatible with old function call usage.
    2) accept key-value pair to specify variable name and type name.
    3) subclass can provide default values and define its own methods.
    
    PiperOrigin-RevId: 209215187

[33mcommit 6438299c78a45812e907f88b4aad8d7753bea81f[m
Author: mdemello <mdemello@google.com>
Date:   Fri Aug 17 14:44:42 2018 -0700

    Internal change
    
    PiperOrigin-RevId: 209210186

[33mcommit 7c1a46106b0d90cf370aec2e384d3c30fd57d356[m
Author: ahxun <ahxun@google.com>
Date:   Fri Aug 17 14:31:24 2018 -0700

    Fix a crash prior to python 3.6 while running `from typing import NamedTuple`.
    
    PiperOrigin-RevId: 209207900

[33mcommit 2b6f8afd6192e3c63e5b697c5f972fcd35ae8b60[m
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Sat Aug 18 05:50:05 2018 +0800

    Add back the googletest submodule. (#132)

[33mcommit 9f911bb50cd9ff23fa951062741132f5e8792556[m
Merge: 8ddc5583 0cb7d409
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Sat Aug 18 04:55:07 2018 +0800

    Merge pull request #131 from google/google_sync
    
    Google sync

[33mcommit 0cb7d4099e906914571490436e5cf2da718d3709[m
Author: sivachandra <sivachandra@google.com>
Date:   Fri Aug 17 13:15:06 2018 -0700

    Internal change
    
    PiperOrigin-RevId: 209195741

[33mcommit 0595fc431a250762e3b114edc9d73b5b50d3eec4[m
Author: sivachandra <sivachandra@google.com>
Date:   Fri Aug 17 13:10:39 2018 -0700

    Add missing include.
    
    PiperOrigin-RevId: 209195047

[33mcommit 1074d61fc79af31b60d9af0a9bd2bfb2af8abc80[m
Author: sivachandra <sivachandra@google.com>
Date:   Wed Aug 15 11:04:21 2018 -0700

    Add info about building the 'pytype' and other exes to CONTRIBUTING.md.
    
    PiperOrigin-RevId: 208848796

[33mcommit 8ddc5583509fc08880805403cfbd5f171835f87d[m
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Thu Aug 16 14:54:33 2018 +0800

    Add googletest as a submodule. (#130)

[33mcommit 066596205debb85246870e5281add9bc55de5d2b[m
Merge: d1cb7537 cc7f438c
Author: Martin DeMello <martindemello@gmail.com>
Date:   Tue Aug 14 16:16:57 2018 -0700

    Merge pull request #129 from google/google_sync
    
    Google sync

[33mcommit cc7f438cefa13fac28defe756cd2317fa62352be[m
Author: tsudol <tsudol@google.com>
Date:   Mon Aug 13 14:56:52 2018 -0700

    Fix str.startswith and str.endswith type stubs.
    
    - first arg may be str or Tuple of str, not Iterable.
    - both functions take "start" and "end" optional arguments.
    
    PiperOrigin-RevId: 208547915

[33mcommit 8ed7ff25584de5fd1d87369996e4dd1f372c872f[m
Author: tsudol <tsudol@google.com>
Date:   Mon Aug 13 12:56:17 2018 -0700

    Fix str.startswith signature to accept a tuple of prefixes.
    
    PiperOrigin-RevId: 208528404

[33mcommit fdf3c85adfddbaaf853d22bf1f2b73958064885b[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 10 15:27:52 2018 -0700

    Fix an incorrect parser argument description in analyze_project.
    
    PiperOrigin-RevId: 208278124

[33mcommit d1cb7537171106346956310462641657ec8ffdb1[m
Merge: eff72216 4af4243a
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Aug 10 09:22:35 2018 -0700

    Merge pull request #126 from google/dogfood
    
    Dogfood open-source pytype.

[33mcommit 4af4243a0ad67bbc2850f0df06530f25a99d3287[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 9 19:50:05 2018 -0700

    Dogfood open-source pytype.
    
    For now, I've piggy-backed on Travis as the easiest way to get this
    set up. Pytype failures will be reported as build failures.

[33mcommit eff72216440abbcac337e941cb218c798faf09a2[m[33m ([m[1;33mtag: 2018.08.10[m[33m)[m
Merge: 33703b98 95367276
Author: Martin DeMello <martindemello@gmail.com>
Date:   Fri Aug 10 01:32:25 2018 -0700

    Merge pull request #125 from google/google_sync
    
    Internal copy of https://github.com/google/pytype/pull/124.

[33mcommit 953672762df62cbf7bde7fffa91fbc5f3182e594[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 10 01:19:18 2018 -0700

    Internal copy of https://github.com/google/pytype/pull/124.
    
    PiperOrigin-RevId: 208175558

[33mcommit 33703b987ac5ee25e246b711bc6e78aac2741b6e[m
Merge: b176a40a d6b86244
Author: Martin DeMello <martindemello@gmail.com>
Date:   Fri Aug 10 00:02:21 2018 -0700

    Merge pull request #124 from google/exclude
    
    Support excluding files or directories from analyze_project.

[33mcommit d6b862441f75c34f712aba2cdff3d2406b8b2ec5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 9 23:50:53 2018 -0700

    Show a more helpful error message for no inputs.
    
    Uses the parser.error() method to print both a
    usage message and an error. Since pytype-single
    says 'need a filename', I went with 'need an input'.

[33mcommit b176a40a4ec39dd17edf60de9965a1c0d49afd89[m
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Fri Aug 10 14:30:32 2018 +0800

    Update the type annotations backporting patch. (#121)
    
    It can now be applied cleanly to CPython 2.7 HEAD.
    
    Tested by applying the patch on the current 2.7 HEAD and getting a clean
    run of the CPython test suite.

[33mcommit c4f742a4c14266dfbc957c8e6e1856912d9d557f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 9 18:58:11 2018 -0700

    Support excluding files or directories from analyze_project.
    
    * Supports an --exclude flag to make it easy to exclude parts of
      a directory that are not pytype-safe (e.g.,
      `pytype subpackage --exclude subpackage/*_test.py`)
    * Renames the filenames arg to inputs in preparation for adding
      it to the configuration file, since `filenames` is a bit of a
      misnomer when we allow directories as well.

[33mcommit 2977ac0ea9e812fcc25d1122620c5b1744e9636b[m[33m ([m[1;33mtag: 2018.07.13[m[33m)[m
Merge: 6130e250 458cfc4b
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Aug 9 16:21:30 2018 -0700

    Merge pull request #123 from google/google_sync
    
    Google sync

[33mcommit 458cfc4baf5046f0cd04f753bc2c6d2af3017008[m
Author: tsudol <tsudol@google.com>
Date:   Thu Aug 9 15:56:46 2018 -0700

    Fix a use-after-free in CFGNode names.
    
    PyObject_Str creates a new Python str object, but PyString_AsString returns a
    pointer to the Python object's internal buffer. That buffer is deallocated when
    the Python object is deallocated, leading to a use-after-free when the CFGNode
    is created. This was found by running ASAN on cfg_test.py, but was only found
    on the Python 3 version of the test.
    
    Also fixes a possible DECREF of a null pointer found by clang_tidy.
    
    PiperOrigin-RevId: 208125733

[33mcommit f43d69778c7342c7170e21742a18eb2b17250cc4[m
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Thu Aug 9 15:51:06 2018 -0700

    Fix compiler warnings due to assigning const char* values to char* variables. (#120)
    
    This change essentially makes the variables also of type const char*,
    
    Resolves #120
    
    PiperOrigin-RevId: 208124908

[33mcommit 6130e250fbfb237a8e9fcb5ec4fd50f99cb54e5a[m
Merge: 8619e988 2a77ff87
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Aug 9 14:40:23 2018 -0700

    Merge pull request #122 from google/google_sync
    
    Allow pytype to override an existing logging level. (#117)

[33mcommit 2a77ff871eb02b0063ce24d356fffee109ed3501[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 9 14:22:25 2018 -0700

    Allow pytype to override an existing logging level. (#117)
    
    When pytype is called from analyze_project, we need to be able to
    
    Resolves #117
    
    PiperOrigin-RevId: 208110379

[33mcommit 8619e98812b2714430210d240f1e6200fb5f4c7e[m
Merge: ae351128 4ea71207
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Aug 9 14:12:17 2018 -0700

    Merge pull request #119 from google/google_sync
    
    Google sync

[33mcommit 4ea712075f4aeed2a1f33513d79bb252226b5ab3[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 9 11:51:49 2018 -0700

    Move some generator tests to py3/.
    
    Test code with type annotations needs to be TargetPython3BasicTest.
    (It's unfortunate that we don't have a way to enforce this internally.)
    
    PiperOrigin-RevId: 208086510

[33mcommit 976d64ce6f8c174f10b67fdddee1f3e1d44a53e3[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 8 18:53:37 2018 -0700

    Rename get_type_parameter to get_instance_type_parameter.
    
    Renames get_type_parameter so it won't be confused with the new
    get_formal_type_parameter method. Also creates canonical docstrings
    for both methods on AtomicAbstractValue.
    
    PiperOrigin-RevId: 207982240

[33mcommit 157c85fb05bfb0bc5ba8f047fe822645dab5ea99[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 8 13:23:51 2018 -0700

    Prettify attribute handling code.
    
    In addition to a bunch of minor tweaks such as renamings, this change:
    * makes callself and callcls private fields.
    * Remove the now-unused clsvar from the return value of init_class.
    * Makes the get_(instance|class|module)_attribute methods private, and
    * rearranges attribute.py so all private methods come after public ones.
    * Changes
        var = <blah>
        return node, var
      to
        return node, <blah>
      in _get_module_attribute, and `3.mro` to `(3).mro` in a comment in
      _get_class_attribute. The rearranged methods are otherwise untouched.
    * Deletes the unused _get_candidates_from_var.
    
    PiperOrigin-RevId: 207936075

[33mcommit 215486558a86215500c2ced41cd7ef8ff0d150d3[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 8 13:09:16 2018 -0700

    Clean up two more TODOs related to attribute.py
    
    Resolves the remaining TODOs from my AtomicAbstractValue.cls change. Because
    the different parts of attribute handling are so tightly interconnected, I
    had to put all the behavior modifications in the same change; a follow-on one
    will do a bunch of small refactorings/aesthetic improvements.
    
    This change reduces the number of variables created while analyzing pytree.py
    by a further 20% (of the original count).
    
    Along the way, I tried to document as much as possible, since I came across a
    bunch of hidden assumptions (most of which were probably introduced by me...).
    
    * Changes property_get to accept one callself argument plus an is_class flag,
      rather than callself and callcls. The two were effectively mutually
      exclusive, which was unclear.
    * Changes BoundFunction and friends to no longer require a callcls
      parameter to their constructor.
    * Fixes a CallTracer.bind_method call that was passing in a binding instead
      of a variable for the instance parameter.
    * Deletes get_attribute_generic (now unused).
    * Gets rid of the valcls argument in attribute.py.
    * Replaces the logic of creating a value getter and passing it to
      _get_value_or_class_attribute with the simpler approach of having the latter
      method determine based on its inputs what the getter should be.
    
    Blacklists three files for which this change causes new findings. All of them
    appear to be issues that pytype already knew how to catch, so this change has
    probably fixed some subtle bug by simplifying our code.
    
    #Squeegee
    
    PiperOrigin-RevId: 207934024

[33mcommit 42aa5385186ecf94d58119c399cf616a05447062[m
Author: ahxun <ahxun@google.com>
Date:   Wed Aug 8 13:03:01 2018 -0700

    Enable Generator type check. Currently it can support to check:
     1) YIELD, SEND, RET type for Generator
     2) YIELD for Iterator and Iterable
    
    PiperOrigin-RevId: 207932948

[33mcommit 3e6e26eeb2da5c30494fdc3a4d5e89c0c8ca3766[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 8 08:55:59 2018 -0700

    Fix a bug in a map(None, ...) signature.
    
    Found while testing an unrelated change. Turns out pytype interprets
    Tuple[...] as Tuple[Any], a singleton tuple.
    
    PiperOrigin-RevId: 207892007

[33mcommit f7ba2c30f54ec7b092d1d85088c7f32cb68a8aca[m
Author: bhandarip <bhandarip@google.com>
Date:   Tue Aug 7 20:37:47 2018 -0700

    Run pytype for multiple file analysis, with importlab for sorting dependencies.
    
    The analysis of multiple files is done in sorted dependencies order that is generated by using third_party/py/importlab. This no more requires running pytype on a file twice as with previous method did.
    
    PiperOrigin-RevId: 207826658

[33mcommit efc79aeae579a390b814d847c7d883659179c717[m
Author: tsudol <tsudol@google.com>
Date:   Tue Aug 7 14:43:04 2018 -0700

    Add type hints for Py2's map(function=None, ...).
    
    Add special cases for one and two iterators. These are somewhat limited, since
    they don't handle the case when one iterator is shorter than the others. But
    the existing definitions don't handle that case either.
    
    PiperOrigin-RevId: 207782612

[33mcommit ae3511285e9b6e10367f86331f62f09ec7b103e2[m
Merge: baafe290 23356d75
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue Aug 7 12:07:03 2018 -0700

    Merge pull request #116 from google/google_sync
    
    Fix repeated "the" in CONTRIBUTING.md

[33mcommit 23356d75ebfa1854a55c085637d4638269404fd6[m
Author: Josh Holland <anowlcalledjosh@gmail.com>
Date:   Mon Aug 6 15:28:47 2018 -0700

    Resolves #67
    Import of GitHub PR #67: Fix repeated "the" in CONTRIBUTING.md
    https://github.com/google/pytype/pull/67
    
    Last section ("The small print") has a repeated "the":
    
    > they're covered by the the Software Grant
    
    This commit fixes that.
    Merge 57aead5d81540479dd598fd261029e216fe343d8 into 5fbe24a055fa22e973d946479e3e71ec0c4be086
    
    PiperOrigin-RevId: 207619395

[33mcommit baafe290219506e2b46509309259abc8819fef6c[m
Merge: 5fbe24a0 f61f2786
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue Aug 7 09:45:47 2018 -0700

    Merge pull request #114 from google/sivachandra_debug_build
    
    Add --debug option to the scripts build.py and run_tests.py

[33mcommit 5fbe24a055fa22e973d946479e3e71ec0c4be086[m
Merge: 0aa330fc 092a25a5
Author: Teddy Sudol <tsudol@google.com>
Date:   Mon Aug 6 13:26:35 2018 -0700

    Merge pull request #115 from google/google_sync
    
    Google sync.
    Resolves: #112

[33mcommit 092a25a5d2d563bf97e5b50c8571155f2552a3ae[m
Author: sivachandra <sivachandra@google.com>
Date:   Mon Aug 6 03:19:47 2018 -0700

    Put missing quotes around a CMake variable.
    
    This should unblock the github PR https://github.com/google/pytype/pull/113
    
    PiperOrigin-RevId: 207518595

[33mcommit 31f47d17808b0424c89a0822c13b56d881e8e4dd[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 6 03:09:58 2018 -0700

    Fix a matcher crash.
    
    PiperOrigin-RevId: 207517711

[33mcommit 87ced11a74f8b8233f99be081be4ab1f011b9d24[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 3 15:36:05 2018 -0700

    Fix a crash in matcher.py caused by ambiguous base classes.
    
    PiperOrigin-RevId: 207335329

[33mcommit 6757b82d576637307b5b8c7619107d7043bcfb22[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 3 15:22:05 2018 -0700

    Resolves 112
    Import of GitHub PR #112: Fix a typo in parser.py.
    https://github.com/google/pytype/pull/112
    
    Merge 768f19a44239da91bb1fb9a698f5821006bec5f5 into 3a45a603e06ea2f097d27b8b9189b4e12d2170b5
    
    PiperOrigin-RevId: 207333317

[33mcommit 0b427b1c0747962bf003a076c928570a0b0b0696[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 3 14:40:23 2018 -0700

    Use the `default` parameter of get_atomic_value in one more place.
    
    Turns out there was only one other call site that can use this new argument ^^;
    
    I also fixed a bug in get_atomic_value's `default` behavior and added some
    comments to make the function easier to follow.
    
    #Squeegee
    
    PiperOrigin-RevId: 207326615

[33mcommit b87f0b9480d78b830a070f55396f52115b248211[m
Author: tsudol <tsudol@google.com>
Date:   Fri Aug 3 13:08:27 2018 -0700

    Add pytd READMEs to copybara export.
    
    Also converts them to Markdown, which makes the export rule a little cleaner.
    
    PiperOrigin-RevId: 207312334

[33mcommit 23040d21f0b83be8190a5059886ce6c0c765a726[m
Author: tsudol <tsudol@google.com>
Date:   Fri Aug 3 12:54:15 2018 -0700

    Export test_data/*.pyi files.
    
    These files have apparently never been exported to GitHub, but main_test.py
    relies on them.
    
    PiperOrigin-RevId: 207310169

[33mcommit 71695c2f1ccf4b7717aef38d6f65e5d7788850e1[m
Author: sivachandra <sivachandra@google.com>
Date:   Fri Aug 3 11:02:58 2018 -0700

    Enable logging from C++ in "Debug" builds.
    
    This change only touches the CMake side. Ability to make debug builds via
    the build scripts will be done in a separate change.
    
    PiperOrigin-RevId: 207292323

[33mcommit 901ff5accadfc51bf3bb9ccda539df8da0bf16f2[m
Author: rechen <rechen@google.com>
Date:   Fri Aug 3 09:57:38 2018 -0700

    Replace get_full_name() with the full_name property in abstract.py.
    
    Completes one of the TODOs that came out of the cls change. Exposed a bug where
    Module.full_name and Module.get_full_name() were different.
    
    #Squeegee
    
    PiperOrigin-RevId: 207281530

[33mcommit 69cc4c0c4fa81a940f7ee59df321d09c0fd44013[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 2 14:57:21 2018 -0700

    Make --generate-builtins more deterministic.
    
    CanonicalOrderingVisitor was being called in the wrong place, so regular
    pickle files were canonically ordered, but the builtins weren't. The
    pickle files still aren't quite identical, though.
    
    PiperOrigin-RevId: 207170783

[33mcommit f61f2786764b08726347802231427d53c2839c2f[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon Aug 6 01:48:29 2018 -0700

    Fix doc string.

[33mcommit d2a10652b3e667092d37c427c9234ac879c656a0[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Sun Aug 5 12:13:16 2018 -0700

    Add --debug option to the scripts build.py and run_tests.py
    
    Specifying this option builds all Pytype targets in the debug mode. It
    is useful, for example, to enable C++ logging.

[33mcommit 0aa330fc105aa294be92e744cfdfe4b9e7fc43c9[m
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Sat Aug 4 14:22:34 2018 +0800

    Add a convenience script to build all pytype targets. (#109)
    
    Add a convenience script to build all pytype targets.
    
    This script will be expanded in a later pass to add options to build
    the executables like 'pytype' and 'pytype-single' with C++ logging
    enabled.

[33mcommit 3a45a603e06ea2f097d27b8b9189b4e12d2170b5[m
Merge: 2d10ec17 0ab66b87
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Fri Aug 3 10:11:11 2018 +0800

    Merge pull request #110 from google/google_sync
    
    Google sync

[33mcommit 0ab66b87b90161d5b8e5ee4346a9c1b290c2de16[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 2 09:11:21 2018 -0700

    Fix an if-splitting error.
    
    Fixes a buggy check in attribute.py for whether variable filtering needs to be
    done. This change makes no noticeable difference to the number of created
    variables, since the case it checks for is so rare.
    
    PiperOrigin-RevId: 207110396

[33mcommit 86001dbfbe2e5429b99470bd5a71cadcc0edc41f[m
Author: Pytype Team <pytype@googlegroups.com>
Date:   Wed Aug 1 18:16:19 2018 -0700

    Include the errorlog in the failure reason when failing a test with
    "Checker found N errors".
    
    This the errors show up with the message in the final failure report (and in
    []) without having to go scrolling around within the raw stdout/stderr logs
    themselves.
    
    PiperOrigin-RevId: 207029261

[33mcommit 3cd8322a699c1a265b2a57e54d24fa5d146613cb[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 1 10:56:52 2018 -0700

    Use typeshed's subprocess.pyi in Python 3.
    
    Moves subprocess.pytd from stdli[]and3/ to stdli[]/ and deletes the symlink
    to it from stdli[]/. This will cause pytype to use our .pytd file in Python 2
    and the typeshed .pyi file in Python 3.
    
    build_all_pytype_targets:
    target,failure,[]_link
    //video/youtube/logs/financial/data_explainer:formulas_lib,Findings,[]
    
    The good thing is that all of these errors are already present in pytype at
    HEAD. The bad thing is that they were caused by my previous change, and I
    failed to catch them at the time because I made the rookie mistake of omitting
    --define PYTYPE=DEV from the build_all run for that CL =/
    
    PiperOrigin-RevId: 206955504

[33mcommit 4ace3bec66fe48d6df28c0324824b90b24ee5116[m
Author: mdemello <mdemello@google.com>
Date:   Wed Aug 1 10:43:58 2018 -0700

    Have analyze_project set the return code.
    
    PiperOrigin-RevId: 206953188

[33mcommit df75455cd45961b6cfbb629c3753b3698e7074b2[m
Author: sivachandra <sivachandra@google.com>
Date:   Wed Aug 1 02:15:16 2018 -0700

    Add CMake py_binary target for pytype's main.py.
    
    PiperOrigin-RevId: 206899506

[33mcommit 66e11c29689d99494c944d2dc9ae29333c480fb2[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 31 14:03:16 2018 -0700

    Switch AtomicAbstractValue.cls from a variable to a value.
    
    The motivation for this change was to reduce the number of
    cfg.Variables per pytype run. Since solving typegraph queries
    is our main performance bottleneck, I figured that shrinking
    the graph might help a bit.
    
    The only reason for cls to be a variable was to support setting __class__,
    which is an extremely rare operation (done in .07% of Python files in Google).
    Making it a value not only reduces the number of variables created by about
    20% as measured on pytree.py but also considerably simplifies some code.
    
    This change does the bare minimum needed to make the switch from
    variable to value; I've left TODOs for further simplifications
    that this switch enables.
    
    I ran a build_all_pytype_targets and everything looks good:
    target,failure,[]_link
    //platforms/testing/infra/meetup/pyclient:demo,Findings,[]
    
    PiperOrigin-RevId: 206822962

[33mcommit e498a4e72907cbc0fa4ca931288b5f6189021a7c[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jul 31 13:19:50 2018 -0700

    Remove redundant code block in Variable::Prune.
    
    Not sure how this got in here in the first place, but I'm pretty sure the
    compiler would have eliminated it anyway. This shouldn't impact anything.
    
    PiperOrigin-RevId: 206815542

[33mcommit 2d10ec17fdd960fd79512dd76e496de38a578de7[m
Merge: 03db38af c4406f45
Author: Martin DeMello <martindemello@gmail.com>
Date:   Mon Jul 30 11:21:26 2018 -0700

    Merge pull request #106 from google/sivachandra_patches_director
    
    Make pytype/patches directory a toplevel directory.

[33mcommit 03db38af2aff26b00f781a46888aa4cbd0ba276f[m
Merge: 6bd85c75 992268d7
Author: Martin DeMello <martindemello@gmail.com>
Date:   Mon Jul 30 11:19:59 2018 -0700

    Merge pull request #104 from google/sivachandra_bin_script
    
    Add a script to generate Python executables.

[33mcommit c4406f45b18b9d5c830dd66e86fc576f7bcc5bc5[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon Jul 30 00:13:19 2018 -0700

    Make pytype/patches directory a toplevel directory.

[33mcommit 992268d70225732315bb91bb551d801e486765aa[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Sat Jul 28 21:45:26 2018 -0700

    Few cleanups.

[33mcommit 3cb887a3c6c1de020eb2820ca45b2783f7dfca8b[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Sat Jul 28 06:50:59 2018 -0700

    Add a script to generate Python executables.
    
    This script will be used by py_binary targets to generate executables
    like 'pytype-single', 'pytype', 'merge-pyi', etc.

[33mcommit 6bd85c75ad3d62bf36f988f5adcb8052b30bbb7f[m
Merge: 342e35b4 4cf86d6f
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Fri Jul 27 21:44:52 2018 +0800

    Merge pull request #103 from google/google_sync
    
    Google sync

[33mcommit 4cf86d6f774c3f80031a82f102499fddfab61b73[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 26 16:02:20 2018 -0700

    Fix a small bug in our README example of merge-pyi.
    
    I saw this typo while following along with the user study.
    
    PiperOrigin-RevId: 206237149

[33mcommit 0837eed3fa674625ae7a24cc9ecfd51e076ace70[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 26 14:19:49 2018 -0700

    Fix definitions of OSError and friends for Python 3.
    
    * EnvironmentError and IOError are now aliases for OSError
    * There are a bunch of new OSError subclasses.
    
    PiperOrigin-RevId: 206220352

[33mcommit aa87edf9485ac43bf0e2b3ea82d0e811673388a6[m
Author: sivachandra <sivachandra@google.com>
Date:   Thu Jul 26 09:10:10 2018 -0700

    Add a missing include of <functional>
    
    PiperOrigin-RevId: 206168517

[33mcommit 342e35b46204fd2be24a8ab65b4336e26d0569a9[m
Merge: 24216111 39a78c17
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Fri Jul 27 08:56:26 2018 +0800

    Merge pull request #102 from google/google_sync
    
    Google sync

[33mcommit 39a78c17a936f94f31229077cc4144423679ddb8[m
Author: sivachandra <sivachandra@google.com>
Date:   Wed Jul 25 19:12:06 2018 -0700

    Drop Python references to binding data when the Program instance goes away.
    
    In case of the cfg extension module, binding data are Python objects owned by C++
    Binding instances. The binding data can also be potentially shared between multiple
    Binding instances. With this CL, management of ownership and cleanup of such shared
    binding data (which in case of Python objects is to drop a reference to them) is done
    using std::shared_ptrs with custom deleters. The Python references to the bound
    Python objects are dropped when they are no longer needed.
    
    PiperOrigin-RevId: 206093558

[33mcommit cc7dc858454ddcef9f630025751623e93eaaf7e1[m
Author: sivachandra <sivachandra@google.com>
Date:   Tue Jul 24 16:59:43 2018 -0700

    Store weakrefs, and not references, to instances of the VirtualMachine class.
    
    This will break subtle reference cycles caused due to the ownership schemes present
    in the typegraph extension module.
    
    A more important benefit got from this change is in running functional tests: The VM
    instance, created for a test method of a functional test, is cleaned up at the end of
    the test method. This ensures that only one VM is alive while a test method is running
    (unless the test method itself creates more than one VM instances.) Previosly, the VM
    instances created by a test method were not getting cleaned up, leading to multiple
    live VM instances while a test method was running.
    
    PiperOrigin-RevId: 205916197

[33mcommit 238d4f428404448186215f41511b8efaea8880dd[m
Author: sivachandra <sivachandra@google.com>
Date:   Mon Jul 23 20:45:45 2018 -0700

    Do not let cached py objects hold reference to the "parent" py program object.
    
    This is required to prevent subtle reference cycles.
    
    PiperOrigin-RevId: 205770270

[33mcommit 0f281cb153d2ff95de4b3d8efb6cedeb510de56b[m
Author: mdemello <mdemello@google.com>
Date:   Fri Jul 20 12:22:16 2018 -0700

    Add a README for xref
    
    PiperOrigin-RevId: 205435547

[33mcommit 24216111e51d2df76ad74ac528e29dea7d3950c7[m
Merge: 2bac36d0 beea696c
Author: Martin DeMello <martindemello@gmail.com>
Date:   Fri Jul 20 12:43:18 2018 -0700

    Merge pull request #101 from google/google_sync
    
    Google sync

[33mcommit beea696ce03053b514db2997e796e79080a625ae[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 20 12:05:16 2018 -0700

    Internal change
    
    PiperOrigin-RevId: 205433152

[33mcommit f9be0530ca72acb3eca1407d384de1e934253346[m
Author: sivachandra <sivachandra@google.com>
Date:   Thu Jul 19 10:32:51 2018 -0700

    Fix few reference leaks around PyList_Append and PySet_Add.
    
    PiperOrigin-RevId: 205262734

[33mcommit dbe96e6b0cafc68cb9eeaacaa196853b52c375cb[m
Author: mdemello <mdemello@google.com>
Date:   Wed Jul 18 16:27:30 2018 -0700

    Add an 'xref' project to generate cross references from opcode traces.
    
    PiperOrigin-RevId: 205157129

[33mcommit 0dfac4d6107f36bcde801bed8d286ddca7f66ad8[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 17 20:28:27 2018 -0700

    Slight fix to copy.bara.sky to stop deleting build_scripts/.
    
    build_scripts/ was still getting deleted, and this change
    appears to make that stop.
    
    PiperOrigin-RevId: 205019656

[33mcommit 2bac36d049d81a5bae31ba593d1a436928d06cb0[m
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Wed Jul 18 15:06:01 2018 -0700

    Log cmake and ninja outputs, and add more diagnostic messages to stdout. (#100)

[33mcommit a36cf142f23c455366a547f0a90abd0df3e93727[m
Merge: a5ac6dcf 1ba23ab9
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 18 11:59:01 2018 -0700

    Merge pull request #99 from google/google_sync
    
    Google sync

[33mcommit 1ba23ab914fb69d3628b4399d4fc2ccfe7cc227c[m
Author: sivachandra <sivachandra@google.com>
Date:   Tue Jul 17 13:35:17 2018 -0700

    Fix a DECREF and add a few INCREFs in cfg.cc.
    
    PiperOrigin-RevId: 204965714

[33mcommit c3b2781a71c68cdef3a8fd8e09e57ddc87a62b6c[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jul 17 13:26:16 2018 -0700

    FIX: Fall back to None when tracing a value without data.
    
    PiperOrigin-RevId: 204964107

[33mcommit c39e9b4f62094bc89ae510d7d55b9dd2aee5ff2f[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jul 17 13:04:57 2018 -0700

    Define opcode variables for use in tests.
    
    PiperOrigin-RevId: 204960745

[33mcommit 1728d3c01e199c1d0bd9129ef1f6f8bc93be9f3d[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jul 17 11:19:28 2018 -0700

    Add the ability to record trace data during bytecode execution.
    
    Adds vm.traces and a record() method to append opcodes and arguments to it.
    
    PiperOrigin-RevId: 204942193

[33mcommit a5ac6dcf09884c11250a13550dc62cb9826c34ed[m
Merge: b3abb1b6 b92b1c8c
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 17 19:21:31 2018 -0700

    Merge pull request #98 from google/google_sync
    
    Google sync

[33mcommit b92b1c8c2b1f19e6a01f8a9be5aac077181e5aec[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 17 16:17:42 2018 -0700

    Restore build_scripts/

[33mcommit b5e2b851c94db75460b5dafe5529404341092723[m
Author: sivachandra <sivachandra@google.com>
Date:   Mon Jul 16 15:43:28 2018 -0700

    Let copybara ignore .travis.yml and the build_scripts directory.
    
    PiperOrigin-RevId: 204820483

[33mcommit f03e1e32846b4d71d444fa7193047e3b968ea656[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 16 15:18:08 2018 -0700

    Add test_base as a dependency for typeshed_test.
    
    After Martin's comment
    https://github.com/google/pytype/pull/95#issuecomment-405393939
    I realized that this dependency is missing. I don't know why this
    became a problem only just now, and I also don't know if fixing it
    will help with our test failures, but adding the dependency seems
    like the right move anyway.
    
    PiperOrigin-RevId: 204816392

[33mcommit 03477778711d6ac231e70faad39d0c54e0e14a0b[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 13 20:05:35 2018 -0700

    Move file generation into setup.py.
    
    Moves the code for creating the generated pyi files out of release into
    build_utils and calls it from setup.py.
    
    This change allows setup.py to do a complete pytype installation independent of
    the release script, which (1) is useful for testing and (2) will enable
    https://github.com/python/typeshed/blob/master/requirements-tests-py2.txt to go
    back to testing with pytype at HEAD.
    
    Also bumps the version number so that I can do a PyPI release and check that
    everything is working.
    
    Tested by running the release script at an old version number (as before) and
    with `pip install . -U --user`.
    
    PiperOrigin-RevId: 204563486

[33mcommit f9063cf0831fd5e0ba544ffab6e530980627a7b0[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 13 17:17:37 2018 -0700

    Cleanup: make the release script a little nicer.
    
    * Make release._run_cmd reusable.
    * Don't remove .gitignore when clearing a directory.
    * Remove pytype.egg-info during dist/ cleanup.
    
    The second and final cleanup CL. Tested in the same fashion as the previous one
    by making a release at an old version number.
    
    PiperOrigin-RevId: 204552378

[33mcommit 4d621cfa2e744cfe1e72047584289fae2ea7adad[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 13 17:03:20 2018 -0700

    Cleanup: move top-level setup.py code into functions; update maintainer_email.
    
    The first of two cleanup CLs split out of a change to pytype's installation
    process. Tested by running build_scripts/release.py with an old version number
    (so that nothing was actually uploaded to (Test)PyPI).
    
    PiperOrigin-RevId: 204550660

[33mcommit e5dc235e666e64ca85311e16121a330ee0db5a42[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 12 11:49:14 2018 -0700

    Allow generating a .pickled file without a corresponding .pyi.
    
    Previously, to generate pickled output, pytype had to be called as:
    
    pytype --output-pickled={blah.pickled} --output={blah.pyi}
    
    To allow generating the .pickled file by itself, I've changed the call to:
    
    pytype --output-pickled --output={blah.pickled}
    
    I've done this rather than switching to:
    
    pytype --output-pickled={blah.pickled}
    
    in order to preserve the assumption that pytype is in inference mode if and
    only if options.output is set.
    
    PiperOrigin-RevId: 204337054

[33mcommit c605d59e599d98c91e1c9134703d5f836965945d[m
Author: tsudol <tsudol@google.com>
Date:   Thu Jul 12 10:04:00 2018 -0700

    Internal change
    
    PiperOrigin-RevId: 204317478

[33mcommit 17f59464c1d16a9d9eb7fe08d509a300f29efa94[m
Author: sivachandra <sivachandra@google.com>
Date:   Wed Jul 11 18:52:25 2018 -0700

    Replace base/logging with a wrapper around the Python 'logging' module.
    
    PiperOrigin-RevId: 204228663

[33mcommit 5afd5a9800724840b0e373d436896943f274e001[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jul 10 16:38:38 2018 -0700

    Remove debug log hack from test_base.
    
    PiperOrigin-RevId: 204035105

[33mcommit a743134f77105c57da2efbe915bb573616277360[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jul 10 14:41:32 2018 -0700

    Rename typing.py to typing_overlay.py.
    
    Also fixes a lint error in output.py by adding a doc comment.
    
    PiperOrigin-RevId: 204015312

[33mcommit 2a26bbff5381eb7b151021241037b3348e7c71f0[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jul 10 13:49:22 2018 -0700

    Internal change
    
    PiperOrigin-RevId: 204005425

[33mcommit c3fb8b8768b75f3ff5adc59f7e48b73e7a3c2910[m
Author: sivachandra <sivachandra@google.com>
Date:   Wed Jul 4 16:18:35 2018 -0700

    Fix the header guards in Pytype's C++ header files.
    
    PiperOrigin-RevId: 203311649

[33mcommit 45c4d02c8d00352156df6e11c582fd90128a48d8[m
Author: tsudol <tsudol@google.com>
Date:   Tue Jul 3 14:20:44 2018 -0700

    Move stripped test documentation to internal-only files.
    
    PiperOrigin-RevId: 203182489

[33mcommit eafceb3348250ce52c8889c57747cf3e9f670c8b[m
Author: mdemello <mdemello@google.com>
Date:   Tue Jul 3 13:42:56 2018 -0700

    Add frozenset to primitive classes for Python3.
    
    PiperOrigin-RevId: 203176486

[33mcommit 4004b1266f1f408f884447530c1a7e906ca3658d[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 3 12:32:21 2018 -0700

    Internal change
    
    PiperOrigin-RevId: 203166070

[33mcommit 4d9fb0345bbcdd575d4ac18eb5aa6dc120ef9341[m
Author: sivachandra <sivachandra@google.com>
Date:   Tue Jul 3 10:29:47 2018 -0700

    Add the C++ cfg extension module to the CMake targets and use it.
    
    PiperOrigin-RevId: 203144506

[33mcommit ce68350ff9ea416a124fad68eedf673b3e28529d[m
Author: sivachandra <sivachandra@google.com>
Date:   Mon Jul 2 15:44:36 2018 -0700

    Add "#include <algorithm>" to solver.cc.
    
    PiperOrigin-RevId: 203025706

[33mcommit b20a5807fd3992f6db238f5afc1f8b26f8399258[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 2 15:44:22 2018 -0700

    Internal change
    
    PiperOrigin-RevId: 203025667

[33mcommit ac7e6b836d83f92104f0ee3becced38f01d4b1be[m
Author: tsudol <tsudol@google.com>
Date:   Mon Jul 2 14:26:23 2018 -0700

    Replace logging header stripping with cassert.
    
    PiperOrigin-RevId: 203012510

[33mcommit 55df9c4c6c900307c86d123c4f4777dc0c68bd62[m
Author: tsudol <tsudol@google.com>
Date:   Fri Jun 29 15:09:25 2018 -0700

    Temporarily strip base/logging.h.
    
    PiperOrigin-RevId: 202714735

[33mcommit 984ffaee541de2f76c3d55b747a290adf5f6b95f[m
Author: tsudol <tsudol@google.com>
Date:   Fri Jun 29 14:23:31 2018 -0700

    Delete cfg_assert.h.
    
    PiperOrigin-RevId: 202706889

[33mcommit e6e3015c3d3e99da7d93595e051e3941b88c69cc[m
Author: tsudol <tsudol@google.com>
Date:   Fri Jun 29 13:55:38 2018 -0700

    Remove stripping from output.py.
    
    PiperOrigin-RevId: 202702152

[33mcommit 073d443d43c9c9f91a16dece4b98abd1a07d2fe2[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 29 13:54:21 2018 -0700

    Noticed a leftover buildutils reference while investigating the Copybara issue.
    
    PiperOrigin-RevId: 202701950

[33mcommit b3abb1b60d349e69fd260e6fedfd236954225981[m
Merge: a552094c 2f4581c2
Author: Siva Chandra <sivachandra@gmail.com>
Date:   Tue Jul 17 13:42:04 2018 -0700

    Merge pull request #96 from sivachandra/master
    
    Install python3.5-dev and python3.6-dev.

[33mcommit 2f4581c2f8fadff4964d93cad756a1b2b6f3e5ef[m
Author: Siva Chandra <sivachandra@google.com>
Date:   Tue Jul 17 13:09:35 2018 -0700

    Install python3.5-dev and python3.6-dev.
    
    This is required so that Travis' virutalenvs can setup the include directory
    correctly. Pytype's extension modules can then be built pointing to the
    header files corresponding to the correct Python version.

[33mcommit a552094c37a82cb3ab3354ccda354a536ed12c51[m
Merge: 066cff56 cc535a1b
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 29 14:14:17 2018 -0700

    Merge pull request #93 from google/google_sync
    
    Project import generated by Copybara.

[33mcommit cc535a1bf9605c4a55bbd0392f44f843db037b10[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 29 12:48:06 2018 -0700

    Project import generated by Copybara.
    
    PiperOrigin-RevId: 202692385

[33mcommit 066cff5678d145869579ff910e0152ef153b452b[m
Merge: 0ae583e1 215079ef
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 21 12:46:12 2018 -0700

    Merge pull request #91 from google/google_sync
    
    Report import errors due to bad deps.

[33mcommit 215079ef5eef4b6df093e0a5392d12b1ee8c238c[m
Author: sivachandra <sivachandra@google.com>
Date:   Thu Jun 21 00:23:04 2018 -0700

    Report import errors due to bad deps.
    
    PiperOrigin-RevId: 201481602

[33mcommit 0ae583e15da3bec53df4771fcdad45c84f5c3351[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Jun 20 22:47:07 2018 +0000

    Fixes for copying generated files in setup.py
    
    --
    PiperOrigin-RevId: 201431116
    MOS_MIGRATED_REVID=201431116

[33mcommit 20fd24baa4304f468cb579b90afcee06a9d1751b[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Wed Jun 20 18:45:15 2018 +0000

    Allow the run_tests.py script to run tests under different Python versions.
    
    The Python version, under which the run_tests.py script itself is invoked, will be
    used to run the tests. This makes it convenient to run the tests with different
    Python versions on machines which have them.
    
    --
    PiperOrigin-RevId: 201389129
    MOS_MIGRATED_REVID=201389129

[33mcommit ae8b6505698ca18d1691c07b3848ec5583cd5ad9[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Wed Jun 20 18:42:58 2018 +0000

    Add pytype@googlegroups.com to Travis notifications.
    
    --
    PiperOrigin-RevId: 201388759
    MOS_MIGRATED_REVID=201388759

[33mcommit 5208258eb53240480445eec3244d23acdc051669[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Jun 20 18:15:32 2018 +0000

    We no longer call pytype in a subprocess from pytype_runner, so we needn't
    check that it's in path.
    
    --
    PiperOrigin-RevId: 201383270
    MOS_MIGRATED_REVID=201383270

[33mcommit 8a9d7a129ec81a40c76f073cc1bd4f2f1e77f5f0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 20 17:18:57 2018 +0000

    Change setup.py to use entry_points instead of scripts.
    
    As discussed in last week's pytype meeting, this change allows us to keep our
    main.py files instead of moving them to untestable scripts.
    
    * Got rid of the main.py -> scripts/ moves in both mos and copybara.
    * Changed pytype/main.main() to accept no arguments because that's what
      entry_points wants.
    * Replaced scripts in setup.py with entry_points.
    * Removed references to the scripts/ subdir from opensource/build_tar.sh.
    * Made the error message for analyze_project a bit more informative by printing
      the one-line usage message instead of "Nothing to do!".
    * Made the error message for merge-pyi prettier by getting rid of the custom
      program name (which on my computer was the absolute path to the executable).
    
    Tested by unpacking blaze-bin/third_party/py/pytype/opensource/public-tree.tar,
    removing the scripts/ subdir, and pip installing.
    
    --
    PiperOrigin-RevId: 201372905
    MOS_MIGRATED_REVID=201372905

[33mcommit b7eba9b0f069ad93e723887337320f2ac725894e[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Jun 19 23:51:08 2018 +0000

    Make Function.match_args public
    
    --
    PiperOrigin-RevId: 201265514
    MOS_MIGRATED_REVID=201265514

[33mcommit b227d322c40fc10c62c5688b2e0879f53f176022[m[33m ([m[1;33mtag: 2018.06.19[m[33m)[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 19 23:42:56 2018 +0000

    Update DESCRIPTION.rst.
    
    I forgot to make this change in my last CL.
    
    --
    PiperOrigin-RevId: 201264273
    MOS_MIGRATED_REVID=201264273

[33mcommit 189bbb326a91277fbf428994667433961a16b242[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 19 22:54:39 2018 +0000

    Tweak the installation instructions in the README; add a quickstart guide.
    
    Also bumped the version number so I can test out pushing a new version to PyPI.
    
    --
    PiperOrigin-RevId: 201256572
    MOS_MIGRATED_REVID=201256572

[33mcommit dcbc7d52a169c796a1af63baf8a9768dcdda5408[m[33m ([m[1;33mtag: 2018.06.18[m[33m)[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Jun 18 23:48:44 2018 +0000

    Document pytype's platform support, and bump the version number.
    
    --
    PiperOrigin-RevId: 201083269
    MOS_MIGRATED_REVID=201083269

[33mcommit 84535afeca10bb4cb54dc31f8c148d0d7d8d3371[m[33m ([m[1;33mtag: 2018.06.15[m[33m)[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Fri Jun 15 23:49:52 2018 +0000

    Fix pytype.pytd.typeshed_test outside of [].
    
    --
    PiperOrigin-RevId: 200795159
    MOS_MIGRATED_REVID=200795159

[33mcommit a57f55a051922467723b531fa32407e4e5272630[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Jun 15 22:20:15 2018 +0000

    Bump version number
    
    --
    PiperOrigin-RevId: 200782538
    MOS_MIGRATED_REVID=200782538

[33mcommit e95822ef03cbfda45ee3a65d169d75b25dc09b70[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Fri Jun 15 21:59:04 2018 +0000

    Add CMake targets for the tests which do not have one.
    
    --
    PiperOrigin-RevId: 200779035
    MOS_MIGRATED_REVID=200779035

[33mcommit 75304c124562645cb8daa14e83cbd96ea0b49c2f[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Fri Jun 15 21:40:44 2018 +0000

    Make pytd.typeshed_test work outside of [].
    
    --
    PiperOrigin-RevId: 200776071
    MOS_MIGRATED_REVID=200776071

[33mcommit e3b08f361271284a6b5283fee4aec6c1aa6cc689[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Jun 15 20:56:18 2018 +0000

    Rework the per-platform C++ args in setup.py
    
    * Fix for unistd not being supported on windows.
    
    See https://stackoverflow.com/questions/2793413/unistd-h-related-difficulty-when-compiling-bison-flex-program-under-vc for details
    
    * Explicitly detect 'darwin' and assume clang; trying to detect clang was not working.
    
    Updates the README to add windows C++ compiler download instructions.
    
    --
    PiperOrigin-RevId: 200768738
    MOS_MIGRATED_REVID=200768738

[33mcommit a7e5cd5d45f0c5ea4cb8f196b694cec033b2f1dd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 15 17:19:31 2018 +0000

    Move QualifyRelativeNames into the parser.
    
    The original motivation for this change was to mitigate what looked like
    a performance regression caused by my previous change to
    QualifyRelativeNames. I'm no longer sure whether this regression was real
    or random noise in the Kessel Run times, but this CL makes our code nicer,
    and removing the overhead of a visitor won't slow us down, at least.
    
    This change:
    * Replaces QualifyRelativeNames with a _qualify_name method in the parser.
      Note that the builtins rename was already being (accidentally) done by the
      visitor; we're just being more explicit about it now.
    * Gets rid of the now-unused TypeDeclUnit.is_package.
    * Fixes some lint errors.
    
    Tested with:
    * blaze test third_party/py/pytype/...
    * blaze build third_party/py/pytype:type_checked_lib --define PYTYPE=DEV
    * blaze test --define PYTYPE=DEV devtools/python/proto_to_pyi:all\
      devtools/python/clif_to_pyi:all devtools/python/blaze/pytype:all\
      devtools/python/blaze/pytype/scripts:all
    * Unpacking blaze-bin/third_party/py/pytype/opensource/public-tree.tar into
      a local copy of the pytype repository, pip installing from the repo, then
      running typeshed/tests/pytype_test.
    
    --
    PiperOrigin-RevId: 200734430
    MOS_MIGRATED_REVID=200734430

[33mcommit e12cb996c5ea2fc8815d2f4450289fdbe5feebf3[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Fri Jun 15 05:43:55 2018 +0000

    Add Python 3.5 to the Travis test matrix.
    
    --
    PiperOrigin-RevId: 200672274
    MOS_MIGRATED_REVID=200672274

[33mcommit 80287014e6bd145a2d795c84751943692d36aec4[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Fri Jun 15 00:25:32 2018 +0000

    Allow typeshed blacklist to be loaded even when TYPESHED_HOME is specified.
    
    --
    PiperOrigin-RevId: 200647025
    MOS_MIGRATED_REVID=200647025

[33mcommit a89ea9912364c4ad9154f7921a06c3680faa8a7f[m
Merge: f5341002 caf536e9
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 14 12:49:30 2018 -0700

    Merge pull request #88 from sivachandra/master
    
    Update typeshed.

[33mcommit caf536e9721538a04cfd74003549d9b550adb094[m
Author: Siva Chandra <sivachandra@google.com>
Date:   Thu Jun 14 11:40:14 2018 -0700

    Update typeshed.

[33mcommit f5341002db7a03e305ec9dbc8efa8e617d692188[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Thu Jun 14 17:18:47 2018 +0000

    Add Python 3.6 to the Travis test matrix.
    
    --
    PiperOrigin-RevId: 200576130
    MOS_MIGRATED_REVID=200576130

[33mcommit dd032ee972fa77bd0a156d69a2ff9753222b09c3[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Thu Jun 14 17:18:27 2018 +0000

    Protect against __dict__ changing when iterating over __dict__ items.
    
    --
    PiperOrigin-RevId: 200576059
    MOS_MIGRATED_REVID=200576059

[33mcommit 8ee4b56f4b2022d77b11e2b868d939244f283ab4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 14 01:28:47 2018 +0000

    Fix a pyi import bug.
    
    This bug was preventing us from pulling in an updated typeshed.
    Also improves an error message in load_pytd for easier debugging.
    
    --
    PiperOrigin-RevId: 200488994
    MOS_MIGRATED_REVID=200488994

[33mcommit 1b521ae7ed1609ab1e2fb10c5879c06001286b53[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Jun 14 01:18:23 2018 +0000

    FIX: Restore a util function that other projects depended on.
    
    --
    PiperOrigin-RevId: 200487959
    MOS_MIGRATED_REVID=200487959

[33mcommit 2a56a65fad8bb14057fbe2d38cfb73db7e0d7d41[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Jun 14 00:00:30 2018 +0000

    Refactor or remove a few more MOE-stripped blocks, to aid reversible stripping.
    
    * error urls: Point to the open-source errors.md if outside google
    
    * typeshed: Set a MISSING_FILE global to typeshed/google/missing.txt or None;
          expose the rest of the mechanism to the open source code.
    
    * pytype_source_utils: ResourceLoader is more general than just [], and we
          were already looking for one in list_pytype_files. Open source tests
          pass even if we always look for globals.__loader__
    
    --
    PiperOrigin-RevId: 200478222
    MOS_MIGRATED_REVID=200478222

[33mcommit a20d48aace489ea964002cb427dc52930199a7da[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 13 18:50:53 2018 +0000

    Back off from using unions for return types.
    
    Unfortunately, this broke too many things. Instead, we call Optimize() to merge
    return types without creating a union when possible, allowing us to retain some
    of the benefits of this change while avoiding the false positives.
    
    Also unskips some protocol inference tests and deletes
    BuiltinTests.testDivMod3, which was identical to testDivMod2.
    
    --
    PiperOrigin-RevId: 200428798
    MOS_MIGRATED_REVID=200428798

[33mcommit f6b52fd0bbc55801c8179dce28f82099ff85bd3d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 13 17:45:37 2018 +0000

    Support aliasing of class members in pyi files.
    
    Allows us to load 2and3/plistlib.pyi, 3/signal.pyi, and 3/re.pyi.
    
    --
    PiperOrigin-RevId: 200415903
    MOS_MIGRATED_REVID=200415903

[33mcommit 81566404b049540b6aa4309db6667e442a16488f[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Wed Jun 13 17:33:00 2018 +0000

    Add build status image to the main README.md file.
    
    --
    PiperOrigin-RevId: 200413747
    MOS_MIGRATED_REVID=200413747

[33mcommit 34871f43c9188c857004d49fa12caf885b6080f3[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Wed Jun 13 16:42:49 2018 +0000

    Add .travis.yml to the open source export whitelist.
    
    --
    PiperOrigin-RevId: 200405174
    MOS_MIGRATED_REVID=200405174

[33mcommit 453725b16c8b717f6e9ce48af77d8b5d8dad6208[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Wed Jun 13 00:10:26 2018 +0000

    Replace assertItemsEqual with six.assertCountEqual.
    
    --
    PiperOrigin-RevId: 200308089
    MOS_MIGRATED_REVID=200308089

[33mcommit 853291fe134ef9fe4c9b33b14b7f2cbc50453e51[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 12 23:32:16 2018 +0000

    Cleanup: rename ReplaceWithAnyReferenceVisitor to ReplaceModulesWithAny.
    
    The latter is both clearer and shorter.
    Also fixes a bug in the corresponding test.
    
    --
    PiperOrigin-RevId: 200301917
    MOS_MIGRATED_REVID=200301917

[33mcommit 33816acbbb21c66bd7f22f8dc42acdadc8d26f45[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Jun 12 23:19:31 2018 +0000

    Add the --version option to pytype-all.
    
    --
    PiperOrigin-RevId: 200300035
    MOS_MIGRATED_REVID=200300035

[33mcommit 5a005c62a03ab83f73d4e5deff7f9d5cfd8f57bc[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Tue Jun 12 22:59:58 2018 +0000

    Make scripts in buildutils/ Python 3 friendly.
    
    --
    PiperOrigin-RevId: 200296852
    MOS_MIGRATED_REVID=200296852

[33mcommit 92338c533990ad1b07b49df80653b95a5fa6c304[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Tue Jun 12 20:20:58 2018 +0000

    Lower the required version of a bunch of pytype deps.
    
    This is being done so that our build and scripts work on the Travis linux VMs.
    
    --
    PiperOrigin-RevId: 200268799
    MOS_MIGRATED_REVID=200268799

[33mcommit d9502a9789c4dea013557ef0f20c055480db9f43[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 12 17:16:01 2018 +0000

    Fix a crash caused by instantiating a TypeParameter with a bad container.
    
    The code that we crashed on was using AnyStr incorrectly, so I don't think we
    need to try too hard to do anything sensible, as long as we stop crashing.
    (We have [] open to catch these incorrect usages.)
    
    --
    PiperOrigin-RevId: 200236185
    MOS_MIGRATED_REVID=200236185

[33mcommit 0df66d5b383c04a180ae8a8c726b5ed58ab3bef5[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon Jun 11 21:50:11 2018 +0000

    Move a test to the appropriate bucket.
    
    --
    PiperOrigin-RevId: 200116875
    MOS_MIGRATED_REVID=200116875

[33mcommit 01ceae9e4ee61d4aba31f7080ae56f669db88ceb[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon Jun 11 21:10:54 2018 +0000

    MOE strip load_pytd_test.PickledPyiLoaderTest.testPickledBuiltins.
    
    See the associated bug for details.
    
    --
    PiperOrigin-RevId: 200110024
    MOS_MIGRATED_REVID=200110024

[33mcommit 1394af7983a62af4aa828b79c8182acfb443bcab[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon Jun 11 20:36:05 2018 +0000

    Assume that the python source is always utf-8 text - Take 2
    
    --
    PiperOrigin-RevId: 200103897
    MOS_MIGRATED_REVID=200103897

[33mcommit 8b86bf11ebdef14fe9fceb2da3de05bf4c9fa6e9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 11 18:46:43 2018 +0000

    Improve PyTDFunction._make_union_of_multiple_returns.
    
    * Uses pytd.Union instead of abstract.Union so that each option is
      converted to a separate binding. After the change in the diffbase,
      the performance impact of this is minimal, and it fixes the AnyStr
      matching bug that broke our build.
    * Includes only the return types from the matched signatures, rather
      than all of the PyTDFunction's signatures.
    * Expands usage of _make_union_of_multiple_returns to single returns,
      allowing us to get rid of our try/except hack and improving
      inference precision in some cases.
    
    The one unfortunate consequence of this change is that we don't
    detect [not-writable] for __setitem__ on a union, but that's actually
    consistent with our lack of strict checking for function calls.
    
    --
    PiperOrigin-RevId: 200087180
    MOS_MIGRATED_REVID=200087180

[33mcommit 066f066dfb56de05ed2b59e796e4ebf93a3985ae[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 11 18:26:06 2018 +0000

    Optimization: skip argument views that we've already seen.
    
    When we create variable->binding views for a function's arguments
    to analyze a call, we include every variable that may possibly be
    used, so we often generate a lot of redundant views.
    
    This change tracks which items in a view are actually used, so if
    we see another view that contains the same items, we can skip it.
    
    This optimization doesn't do much in the average case (no change
    in Kessel Run times, as far as I can tell), but it helps a lot in
    some pathological ones. For example, we can now check the file
    on the release blacklist in about 30s.
    
    --
    PiperOrigin-RevId: 200083493
    MOS_MIGRATED_REVID=200083493

[33mcommit ea7b451d1b5e58ef10202e4674ed8d95902483f9[m
Author: Googler <noreply@google.com>
Date:   Sat Jun 9 00:46:46 2018 +0000

    Rollback of commit 6d4856fcd63a3fb9ed5ce5473bb2cf3755e9170e.
    
    *** Reason for rollback ***
    
    Breaking []
    
    [] : []
    
    *** Original change description ***
    
    Assume that the python source is always utf-8 text.
    
    ***
    
    --
    PiperOrigin-RevId: 199876882
    MOS_MIGRATED_REVID=199876882

[33mcommit 6d4856fcd63a3fb9ed5ce5473bb2cf3755e9170e[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Fri Jun 8 22:41:30 2018 +0000

    Assume that the python source is always utf-8 text.
    
    --
    PiperOrigin-RevId: 199862449
    MOS_MIGRATED_REVID=199862449

[33mcommit dd943f35938a0975bf51516e35a82cf87e636e53[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 8 17:30:51 2018 +0000

    Add a _unique_parameters method to abstract.Union.
    
    Now that we can have unions of instances, a union needs to
    declare its options as its "children" for views to be
    computed properly. This fixes
    test_lists.ListTest.test_repeated_add.
    
    --
    PiperOrigin-RevId: 199813865
    MOS_MIGRATED_REVID=199813865

[33mcommit f63af2117cd25b0dfc7c2bc920ab4602f73197da[m
Author: Prashant Bhandari <bhandarip@google.com>
Date:   Fri Jun 8 00:36:13 2018 +0000

    Multiple matching signature will be combined together in a union type.
    
    - def __mod__(self, y: unicode) -> unicode
    - def __mod__(self, y) -> str
    if the matching signature are these,
    
    return type: Union[str, unicode]
    
    --
    PiperOrigin-RevId: 199724843
    MOS_MIGRATED_REVID=199724843

[33mcommit 8d99177916a0eeadf0f2bf465495c704cdb79b72[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 7 23:26:06 2018 +0000

    Always discard concrete values when creating a substitution.
    
    We used keep string values in order for *args/**kwargs unpacking to work
    correctly, but that's no longer needed because abstract.List and abstract.Dict
    define their own native implementations of __getitem__.
    Discarding the concrete values prevents list addition from blowing up the
    number of type paramater values and causing a timeout. (I'm not entirely sure
    why the addition of the __mod__ definition triggered the timeout, but it's
    gone after this change.)
    
    --
    PiperOrigin-RevId: 199715864
    MOS_MIGRATED_REVID=199715864

[33mcommit deeda87a32901e0a7a8b394befbd9d36b30fe223[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 7 22:18:22 2018 +0000

    Bring back pytype's --timeout option.
    
    I think I discovered why this option existed in the first place: there was a
    proposal to pytype all the things that stalled on pytype not having a timeout
    option (g/pytype-dev/9EB4MhpO_ss/uSQ804xLAwAJ). I'd like to try reviving this,
    so I restored the option.
    
    --
    PiperOrigin-RevId: 199705013
    MOS_MIGRATED_REVID=199705013

[33mcommit e687bb758a7d8c4aa426e33f711170c714dbc44f[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Jun 7 00:37:06 2018 +0000

    Add a new --return-success flag to report errors but return success.
    
    --
    PiperOrigin-RevId: 199561612
    MOS_MIGRATED_REVID=199561612

[33mcommit ea3b6f492f0f1522ee1050b4029a0682ab1df121[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Jun 6 05:20:25 2018 +0000

    Convert pytd-tool to argparse.
    
    Also reworks the parser slightly to be consistent with pytype (we now construct
    an argparse.ArgumentParser and then call parse_args() explicitly on it, rather
    than wrapping the call to parse_args() in our own function).
    
    --
    PiperOrigin-RevId: 199408651
    MOS_MIGRATED_REVID=199408651

[33mcommit 60ec52dae36a8bb780b9374ea6adb436ba8451e4[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue Jun 5 22:10:01 2018 +0000

    Move merge_pyi/testdata to merge_pyi/test_data.
    
    Pytype uses test_data, and it's easier if subprojects are consistent.
    
    --
    PiperOrigin-RevId: 199365525
    MOS_MIGRATED_REVID=199365525

[33mcommit 2ac6f98edcec464c2748abe8418ec3b5f8daf186[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Tue Jun 5 20:31:37 2018 +0000

    Move parts specific to [], in test_stdlib, in to a separate test module.
    
    --
    PiperOrigin-RevId: 199348865
    MOS_MIGRATED_REVID=199348865

[33mcommit f4fe4bf04657fc8e1e6e3ae494bef319ecdd7103[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Tue Jun 5 20:10:58 2018 +0000

    Sort couple of test modules into buckets.
    
    They were not completely sorted in the previous attempt. This sorting is now tested
    with the open source test script.
    
    --
    PiperOrigin-RevId: 199345960
    MOS_MIGRATED_REVID=199345960

[33mcommit 791baa80e96ef16f0b914fb7a2b72d2e107abb47[m[33m ([m[1;33mtag: 2018.06.05[m[33m)[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Jun 5 18:40:53 2018 +0000

    bump version number for release
    
    --
    PiperOrigin-RevId: 199332354
    MOS_MIGRATED_REVID=199332354

[33mcommit 79cc418c7ddf3b7b9e9da87f5599671c70e9194a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 5 01:23:54 2018 +0000

    Have pytype_runner print filenames as transient messages.
    
    Normal printing was too noisy with the addition of system imports.
    
    --
    PiperOrigin-RevId: 199228106
    MOS_MIGRATED_REVID=199228106

[33mcommit d0a357cd3b7bc59ebf425365cd243251bc98002f[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon Jun 4 23:22:57 2018 +0000

    Adjust the scrubber directive removing "from __future__ import google_type_annotations".
    
    The directive is now a regex directive which removes all spaces before the "from"
    keyword. Also, it keeps the ending newline character so that line numbers are
    preserved after the scrubber transformation. Preserving line numbers is required to
    ensure that we have errors on the same line numbers in [] and outside.
    
    --
    PiperOrigin-RevId: 199213284
    MOS_MIGRATED_REVID=199213284

[33mcommit 1f61ff109f9f44de9c108beb7e99ab3d6628f898[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Jun 4 22:39:32 2018 +0000

    Move functions depending on __file__ into their own module.
    
    --
    PiperOrigin-RevId: 199206707
    MOS_MIGRATED_REVID=199206707

[33mcommit 6b0e1de1c0631e88c11c73032333620ff606d851[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon Jun 4 21:26:12 2018 +0000

    Replace few assert* methods which are not part of the unittest module.
    
    In a previous change, I replaced assertItemsEqual with assertListEqual. A better
    replacement is assertCountEqual. This better replacement is also incorporated in this
    change.
    
    --
    PiperOrigin-RevId: 199194265
    MOS_MIGRATED_REVID=199194265

[33mcommit 3de774361b2481b55ef493391429e88571f7b9f2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 4 20:03:13 2018 +0000

    Rename pytype to pytype-single and pytype-all to pytype; update READMEs.
    
    * Updates README.md, merging it with Stewart's draft and the pytype-all
      README. The parts that I'm least confident about are:
      * Adding `pip install wheel` to the installation instructions, and
        using `pip install -U .` rather than `setup.py` to install from source.
      * Removing the `requests` example. Most of what it showed is obsolete, but
        maybe a real example is better than a toy one?
      * Should we mention our lack of support for some parts of PEP 484 and most
        Python 3-only features?
    * Regenerates DESCRIPTION.rst from README.md.
    * Moves documentation about opensource pytype into its own g3doc,
      opensource.md, and adds a 'Releasing to PyPI' section, which currently
      contains only a command for generating DESCRIPTION.rst.
    * Renames pytype to pytype-single, pytype-all to pytype.
    * Deletes the completely out-of-date README in the pytd directory.
    * Tweaks the merge-pyi README to reflect the name change from merge_pyi.
    
    --
    PiperOrigin-RevId: 199179870
    MOS_MIGRATED_REVID=199179870

[33mcommit 6bb4ff3448cc173657246956c4c0be892d49e37b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 4 18:20:04 2018 +0000

    Increase the maximum depth when using --output with --analyze-annotated.
    
    pytype-all uses --analyze-annotated to check and infer types in a single
    pass, so when we see both --analyze-annotated and --output, we need to
    use the (larger) checking maximum depth rather than the inference one.
    
    --
    PiperOrigin-RevId: 199163492
    MOS_MIGRATED_REVID=199163492

[33mcommit ebe9687723b908c54cd615b83b0ac1a7bf30a0c9[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Jun 4 17:57:57 2018 +0000

    Use the system and site package dependencies found by importlab in pytype.
    
    --
    PiperOrigin-RevId: 199159148
    MOS_MIGRATED_REVID=199159148

[33mcommit 50f7ed333b547af01b9adfa7f6d4ef64b69081fa[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sun Jun 3 23:53:48 2018 +0000

    Make pytype-all help message friendlier.
    
    Removes the lengthy list of options from the usage and
    replaces 'filenames' with 'inputs', since inputs can be files
    or directories. The beginning of the help message now looks
    like this:
    
    usage: pytype-all [options] input [input ...]
    
    positional arguments:
      input                 file or directory to process
    
    --
    PiperOrigin-RevId: 199064452
    MOS_MIGRATED_REVID=199064452

[33mcommit 761d57a64a40ab6ac4014f2009a1b98d60a84cf7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Jun 2 00:27:47 2018 +0000

    Allow pytype-single args to be specified in a config file.
    
    * Tweaks config.Postprocessor to make in-place processing easier.
    * Adds a SimpleNamespace class to datatypes, since multiple tests need the
      ability to quickly create namespaces.
    * Changes the way Config objects work so that all the variable processing
      happens on separate objects, then the final attributes are copied to Config.
      This makes it easier to do complex processing without, e.g., defaults and
      file options interfering with each other.
    * Creates a parse_args.Parser class to do parsing, postprocessing, and initial
      config file creation.
    
    The steps for constructing a Config object are now as follows:
    (1) Parser.parse_args() creates a new args object with all of the command-line
        values for config.ITEMS and the pytype-single args. config.ITEMS'
        converters are automatically called as part of parsing, and parse_args()
        calls postprocess() for the pytype-single args.
    (2) A new Config is created and populated with defaults by
        Parser.defaults_to_config(). Again, config.ITEMS' converters come for free,
        and the Parser method calls postprocess() for the pytype-single args.
    (3) File options are read into a FileConfig object. config.ITEMS' converters
        are called as part of read_from_file(), and main.py calls postprocess() for
        the pytype-single args. The FileConfig is merged into the Config object.
    (4) The args object from (1) is merged into the Config object.
    
    The reason I put the bulk of the new logic in parse_args.py rather than
    config.py is that config is imported by parse_args, and I didn't want to create
    a logical loop by passing the parser back to config.
    
    --
    PiperOrigin-RevId: 198950273
    MOS_MIGRATED_REVID=198950273

[33mcommit de1c53bb4c8f0acfd12fd0b1dbef5e78f27c527d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 1 23:44:00 2018 +0000

    Add merge_pyi to installed scripts as merge-pyi.
    
    Also blacklists some stuff from scrubbing, since the related error messages
    were cluttering up the test log and were just the scrubber complaining about
    not being able to parse various files.
    
    --
    PiperOrigin-RevId: 198945546
    MOS_MIGRATED_REVID=198945546

[33mcommit 815d5233ab1aabfcca01467677af93c05406d68b[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Fri Jun 1 23:17:43 2018 +0000

    Replace assertSameElements with assertListEqual.
    
    We cannot use assertSameElements as it is not available in the unittest module of the
    stdlib.
    
    --
    PiperOrigin-RevId: 198942383
    MOS_MIGRATED_REVID=198942383

[33mcommit cfb7b57d3c3be87555e0ea79b4e5c2e7b525a062[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Fri Jun 1 21:55:10 2018 +0000

    Add py_test CMake targets.
    
    This change does not add a corresponding py_test target for all of the existing
    py2and3_test targets. The CMake py_test rule should be extended (for example, add
    a MAIN option) to add test targets for all of them. It will be done in a future CL.
    
    Some numbers:
    To run all of the tests without ninja (which means sequentially) on my machine, it
    took around 35 minutes. With ninja running the tests in parallel,  it takes only a
    minute.
    
    --
    PiperOrigin-RevId: 198930725
    MOS_MIGRATED_REVID=198930725

[33mcommit 33c7cee60523fa68af0c403c4e9f2d0289639239[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Jun 1 18:30:08 2018 +0000

    Cleans up opensource failures.
    
    - remove lib2to3 from setup.py
    - remove link to PyCon 2016 slides from merge_pyi/README.md
    
    --
    PiperOrigin-RevId: 198901518
    MOS_MIGRATED_REVID=198901518

[33mcommit 3d4392f078809370af7087681580977a702619d9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 31 23:52:37 2018 +0000

    Exposes some pytype-single options to pytype-all.
    
    Splits the previously comment-based categories in make_parser() into separate
    functions, including an add_basic_options() that we reuse in pytype-all's
    parser. (As a side note, you were right that pulling --check and --output out
    of basic options into their own category is useful.)
    
    --disable, --no-report-errors, and --protocols can now be set from pytype-all's
    command line. While --quick and --analyze-annotated should also be available,
    they're not as easy to get and not as important as --disable, so I punted on
    them for now. The next step is to integrate the new variables into Config so
    that they can be set from a file.
    
    --
    PiperOrigin-RevId: 198801843
    MOS_MIGRATED_REVID=198801843

[33mcommit 24bb42c4cbf31672551d32b80e4815c2365b84fc[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Thu May 31 23:03:18 2018 +0000

    Add a script which runs pytype tests.
    
    This scripts lets one run tests without having to interact with CMake and Ninja
    explicitly.
    
    A new test target, which currently fails, has been added to illustrate how failures
    show up. The output generated by this script looks like this currently:
    
    $> python ./buildutils/run_tests.py
    Running CMake ...
    
    Building ...
    
    Running tests ...
    
    >>> PASS - pytype.tests.test_anystr
    
    >>> PASS - pytype.tests.test_abc
    
    >>> FAIL - pytype.tests.test_dict - /usr/local/google/home/sivachandra/LAB/public_tar/out/pytype/tests/test_dict.log
    
    >>> PASS - pytype.tests.test_match
    
    >>> PASS - pytype.tests.test_exceptions
    
    >>> PASS - pytype.tests.test_decorators
    
    >>> PASS - pytype.tests.test_basic
    
    >>> PASS - pytype.tests.test_functions
    
    
    1 module(s) failed:
    
    ** pytype.tests.test_dict - /usr/local/google/home/sivachandra/LAB/public_tar/out/pytype/tests/test_dict.log
    
    
    Also includes the following changes:
    
    Turn merge_pyi into lib + runner and add to setup.py.
    
    --
    PiperOrigin-RevId: 198795174
    MOS_MIGRATED_REVID=198795174

[33mcommit 6785bcaf7c057072b4569cc2ff6cbf4fb61514df[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu May 31 02:04:44 2018 +0000

    Move module_utils to their own file.
    
    Also clean up some leftover stuff from utils_test.
    
    --
    PiperOrigin-RevId: 198656512
    MOS_MIGRATED_REVID=198656512

[33mcommit 41c0789102ed617a919a1855d89bc205654291f4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 31 00:17:08 2018 +0000

    Move option postprocessing into a separate class.
    
    Separating the postprocessing from the Options class is cleaner and gives us
    more flexibility in argument parsing. In particular, it's now possible to
    (1) postprocess a subset of the arguments and (2) use arbitrary namespaces for
    the option holders.
    
    --
    PiperOrigin-RevId: 198645836
    MOS_MIGRATED_REVID=198645836

[33mcommit 3b27a22c838a2b9c9933f06916da2efd3aa86194[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed May 30 21:49:02 2018 +0000

    Convert pytype's argument parser from optparse to argparse.
    
    --
    PiperOrigin-RevId: 198623290
    MOS_MIGRATED_REVID=198623290

[33mcommit 4433187c82eb52d0a6eb5c7db0639c20312d41c4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 30 20:02:59 2018 +0000

    Deduplicate pytype_runner.infer_module_name and load_pytd.get_module_name.
    
    --
    PiperOrigin-RevId: 198605851
    MOS_MIGRATED_REVID=198605851

[33mcommit 253fc06b7fa24148eaae668e47c37a5bedc4d5a3[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Wed May 30 03:42:18 2018 +0000

    Add py_test rule and use it to create few CMake test targets.
    
    The script buildutils/copy.py has been renamed to buildutils/pytype_copy.py as its
    name conflicts with the builtin copy module.
    
    --
    PiperOrigin-RevId: 198500446
    MOS_MIGRATED_REVID=198500446

[33mcommit 2836242a0932b6a8f4b10a13fe4a056b42a60181[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 29 20:04:47 2018 +0000

    Always reanalyze functions when we can traverse them deeper.
    
    Previously, we only reanalyze functions when (1) we could
    traverse them deeper *and* (2) all of the previous return values
    were None. This second heuristic breaks down in a very simple
    example, so I've removed it.
    
    --
    PiperOrigin-RevId: 198444329
    MOS_MIGRATED_REVID=198444329

[33mcommit 41020fd7a93452a0283368e0d39dab6b14ac96f8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 29 20:00:17 2018 +0000

    Make our --quick/maximum_depth handling more sane.
    
    Adds the option to set --quick to all of our test methods, not
    just Infer.
    
    Simplifies the maximum_depth setting logic by putting all the
    defaults in one place and getting rid of the sys.maxint case.
    
    --
    PiperOrigin-RevId: 198443554
    MOS_MIGRATED_REVID=198443554

[33mcommit 1637dbb218fa20b97a204103a072226ac2fed0e6[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue May 29 19:47:35 2018 +0000

    Define is_lazy for all classes mixing in abstract.Class
    
    --
    PiperOrigin-RevId: 198441512
    MOS_MIGRATED_REVID=198441512

[33mcommit ffcfba02672e417bf2341d2ea0a3bda53b6ea9a5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 29 19:45:06 2018 +0000

    Allow Any as a TypeVar bound or constraint.
    
    Changes the way we fetch bounds and constraints so that
    Unsolvable is allowed in addition to abstract.Class objects.
    Requires some minor tweaks to convert.py and abstract.py so
    that tuples of types are handled properly in error messages.
    
    --
    PiperOrigin-RevId: 198441150
    MOS_MIGRATED_REVID=198441150

[33mcommit 28dfe65e7db90c9992377839e80291b43b96bc25[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 29 17:42:25 2018 +0000

    Get rid of the 'trace' logging level.
    
    This should fix the import loop caused by using cfg_py.
    
    --
    PiperOrigin-RevId: 198419475
    MOS_MIGRATED_REVID=198419475

[33mcommit bf755e39f5c3f4e07a4352071fa11e4525f24a6c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 29 17:38:05 2018 +0000

    Create convenience methods vm.PY2 and vm.PY3.
    
    A few weeks ago, I promised to do this in a "followup CL". A little
    late, but better than never?
    
    Adds convenience methods for quickly checking the target Python version.
    This change only makes it easier to check for major versions, not
    minor ones, and only for the VM's python version, but even so, it
    covers the majority of our version-checking.
    
    Also fixes a few lint errors and gets rid of a pointless tuple() call.
    
    --
    PiperOrigin-RevId: 198418654
    MOS_MIGRATED_REVID=198418654

[33mcommit 8d40142a916acf5bb1beea735fb1d12678e9bb1f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sun May 27 04:15:46 2018 +0000

    Allow specifiying config file variables for pytype-all on the command line.
    
    --
    PiperOrigin-RevId: 198196850
    MOS_MIGRATED_REVID=198196850

[33mcommit 61dc1c8a1d70f1e00b80eb2e76c3bd8ca22d692e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sun May 27 03:26:00 2018 +0000

    Tweak output_dir and pythonpath.
    
    * Renames output_dir to output, intentionally masking pytype-single's
      --output argument in order to make future filtering easier.
    * Makes pythonpath a ':'-separated string of paths. While I personally
      find this format a little ugly, it's widely used, is consistent with
      pytype-single's --pythonpath option, and will allow the user to specify a
      pythonpath the same way on the command line and in a config file.
    * Expands default paths relative to the cwd. It's better to expand the
      defaults so we don't end up with a mix of relative and absolute paths.
      I didn't do this in the last CL because it would've been a little extra
      work to handle pythonpath's previous format, and this CL changes the
      format anyway.
    
    --
    PiperOrigin-RevId: 198194961
    MOS_MIGRATED_REVID=198194961

[33mcommit 2bb9611e42f410ec78e9f1552d162c09d772da69[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sun May 27 02:53:22 2018 +0000

    Bug fix: don't expand default paths relative to a config file.
    
    Fixes a bug where if a config file was found, pythonpath and output_dir
    would be expanded relative to the file's directory regardless of whether
    they were specified in the file. Instead, we pass the expansion functions
    to ConfigSection's keymap so that only those paths that come from
    ConfigSection are expanded.
    
    This change also lays the groundwork for doing path expansion on command
    line args.
    
    --
    PiperOrigin-RevId: 198193828
    MOS_MIGRATED_REVID=198193828

[33mcommit 55b0d89eb678e4a846168b79e4b5486a41ddff16[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sun May 27 00:42:18 2018 +0000

    Bug fix: make --tree, --unresolved, and --generate-config mutually exclusive.
    
    --
    PiperOrigin-RevId: 198189364
    MOS_MIGRATED_REVID=198189364

[33mcommit 81ff8053a31d85d0452d79349ea74d7c304f15b7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sun May 27 00:15:24 2018 +0000

    Some code health improvements to pytype-all.
    
    A bunch of changes that don't affect pytype-all's behavior but make the code
    nicer/more well-tested/easier to debug.
    
    * Moves config.Item into analyze_project, where it's actually used.
    * Gets rid of the unused ConfigSection.to_hash().
    * Adds tests for tools/config.py.
    * Combines config.SAMPLE and config.DEFAULT into a single ITEMS dict.
    * Moves ConfigSection.populate_object() to Config.populate_from(). This change
      makes it possible to populate a config from any dict-like object.
    * Moves read_config_file() into config.py as read_config_file_or_die() and
      adds tests for it.
    * Gets rid of Config.read_from_setup_cfg() by folding it into
      read_config_file_or_die(), since the latter's new tests cover the
      setup.cfg finding logic.
    * Moves the parse_args() function into its own new file, parse_args.py, and
      adds tests.
    * Moves config creation before the empty filenames check to make it easier to
      generate configurations for debugging.
    
    --
    PiperOrigin-RevId: 198188478
    MOS_MIGRATED_REVID=198188478

[33mcommit e10ee418e352e9c72ff913533de7e86cae12f59a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 25 20:51:56 2018 +0000

    Fix an accidental logging level change in pytype_runner.
    
    pytype_config.Options() changes the logging level, so we need to save the
    original and restore it afterwards.
    
    --
    PiperOrigin-RevId: 198097342
    MOS_MIGRATED_REVID=198097342

[33mcommit 3a67c29c30e978dda11a44ef7f8867173053f2b8[m
Author: Googler <noreply@google.com>
Date:   Fri May 25 16:01:04 2018 +0000

    Make sure that pytype checks ancestry for abc.ABCMeta-ness.
    
    Core issue appeared to be that pytype would only check to see if the type was abc.ABCMeta. This meant that in cases where you created a child of abc.ABCMeta, pytype would complain. The fix is then pretty striaghtforward: look up the mro for each metaclass to see if it is a child of abc.ABCMeta.
    
    --
    PiperOrigin-RevId: 198055934
    MOS_MIGRATED_REVID=198055934

[33mcommit 0413418944eff22cfc6d888c82a860253aa2d59c[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Thu May 24 23:22:23 2018 +0000

    Add CMake equivalents of py_library and filegroup.
    
    CMake equivalents of existing py_library and filegroup targets have been added using the
    new rules. Another rule "add_package" has also been added to designate a directory as a
    Python package.
    
    --
    PiperOrigin-RevId: 197972945
    MOS_MIGRATED_REVID=197972945

[33mcommit 8e2e4e03b9b8d2a6e2ce4c0f3fa88c06a7cd40ca[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu May 24 01:08:41 2018 +0000

    Add a --version option to display the pytype version.
    
    --
    PiperOrigin-RevId: 197822719
    MOS_MIGRATED_REVID=197822719

[33mcommit c27f6158dd62684d179ef0211e1307d69962aced[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Wed May 23 18:38:00 2018 +0000

    Add a convenience script to run tests in a module.
    
    --
    PiperOrigin-RevId: 197760434
    MOS_MIGRATED_REVID=197760434

[33mcommit a849151fbfd8338d948230076bdfeca52dde0791[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Wed May 23 16:32:07 2018 +0000

    Add tests/*.md files to the opensource export list.
    
    --
    PiperOrigin-RevId: 197738193
    MOS_MIGRATED_REVID=197738193

[33mcommit aac10d565bc710f6d31e4068ea4de313ca858c82[m[33m ([m[1;33mtag: 2018.05.22.1[m[33m)[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue May 22 22:09:04 2018 +0000

    Use different flags when compiling with gcc or clang.
    
    --
    PiperOrigin-RevId: 197630785
    MOS_MIGRATED_REVID=197630785

[33mcommit 2c8c181da711f961daa6e6cfc89d8a1454f0697b[m[33m ([m[1;33mtag: 2018.05.22[m[33m)[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue May 22 19:59:42 2018 +0000

    Bump version number.
    
    --
    PiperOrigin-RevId: 197609200
    MOS_MIGRATED_REVID=197609200

[33mcommit 29330e39e5df1f891675b8dfd7da2e18e6db885d[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue May 22 19:40:48 2018 +0000

    Add flags for building with clang on mac osx.
    
    Details here:
    https://cplusplusmusings.wordpress.com/2012/07/05/clang-and-standard-libraries-on-mac-os-x/
    
    --
    PiperOrigin-RevId: 197606641
    MOS_MIGRATED_REVID=197606641

[33mcommit 9263c3ff0e303c4aa7bd5e4a731ae6b286a47465[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 22 18:36:05 2018 +0000

    Change pytype_runner to call pytype through io.process_one_file.
    
    This approach is faster than using subprocess by ~25% (measured
    with `time pytype-all requests/requests/adapters.py`). The
    tradeoffs are that we need to use --nofail to keep exceptions in
    pytype from crashing pytype-all, and there isn't an easy way to
    generate .errors files.
    
    --
    PiperOrigin-RevId: 197596480
    MOS_MIGRATED_REVID=197596480

[33mcommit 9df3718c86d99f831bf706f78d4d6aa9ab48d71d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 22 18:21:38 2018 +0000

    Pull out parts of pytype.main into a new module, pytype.io.
    
    This change gives pytype-all a way to call pytype without
    using subprocess.
    
    Also slightly improves the naming and documentation of the
    check_* functions.
    
    --
    PiperOrigin-RevId: 197593804
    MOS_MIGRATED_REVID=197593804

[33mcommit 1a405739cd8699ba0f49ae3def59a218b8be279b[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue May 22 01:18:02 2018 +0000

    Allow pytype-all to accept directories as input.
    
    Scans the list of args, filtering out non-.py files and collecting .py files
    recursively within any directory arguments.
    
    --
    PiperOrigin-RevId: 197494719
    MOS_MIGRATED_REVID=197494719

[33mcommit 174523202b15d92f516590fa5b4b2386fb2782cd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 22 00:18:44 2018 +0000

    Delete/consolidate some vm.VirtualMachine attributes.
    
    I got rid of two attributes that can be accessed as vm.options.{attr}, as well
    as module_name, which turned out to be unused (!).
    
    --
    PiperOrigin-RevId: 197487549
    MOS_MIGRATED_REVID=197487549

[33mcommit 8f35f6f1c2bb0a891f353f588639ebbdb7d0bf3e[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon May 21 23:20:22 2018 +0000

    Remove unnecessary imports of google_type_annotations.
    
    --
    PiperOrigin-RevId: 197478873
    MOS_MIGRATED_REVID=197478873

[33mcommit 3d62463cc91e14b0b2ea3f57e176064dbbc772dc[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon May 21 21:58:27 2018 +0000

    Deduplicate utility functions between tools/ and pytype
    
    * Move path functions from tools/utils to pytype/file_utils
    * Deduplicate split_version and path_to_module_name, clean up some other
    instances of path_to_module_name
    
    Leaves only the *_or_die functions in tools/utils (because we generally don't
    want that behaviour in pytype).
    
    --
    PiperOrigin-RevId: 197464561
    MOS_MIGRATED_REVID=197464561

[33mcommit 6eb2b951951de29696c25ac4636caa3bba6d1eca[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 21 17:37:15 2018 +0000

    Do more replacements of utils.Tempdir() with file_utils.Tempdir().
    
    I'm guessing that for unknown commit, the tests in the toplevel tests/ directory
    but not the subdirectories were run. With this change,
      blaze test third_party/py/pytype/...
    passes.
    
    --
    PiperOrigin-RevId: 197416151
    MOS_MIGRATED_REVID=197416151

[33mcommit 7f7a16389cbb2e4438c2850ea9b6ecf793472428[m
Author: Googler <noreply@google.com>
Date:   Sat May 19 02:21:17 2018 +0000

    Performing Modulus on string with unicode encoded string as a parameter results in an unicode type.
    i) Added the function signature.
    ii) Split the recovery tests into py2 and py3 to support this change.
    iii) Made changes to some tests broken by this change.
    
    --
    PiperOrigin-RevId: 197234103
    MOS_MIGRATED_REVID=197234103

[33mcommit 5593b9955e2d9ac8aca6539566c1fa748ede901a[m
Author: Martin DeMello <mdemello@google.com>
Date:   Sat May 19 01:47:44 2018 +0000

    Pull file and filepath utilities out into file_utils.py
    
    --
    PiperOrigin-RevId: 197232010
    MOS_MIGRATED_REVID=197232010

[33mcommit ebc28a3cf02f2406eb0a271d2594dd42eaaf5f47[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat May 19 00:55:04 2018 +0000

    Improve pytype-all's logging.
    
    I converted most of our print() statements to logging, with any print()
    preceding sys.exit(1) becoming logging.critical, and everything else being
    error, warning, or info as seemed appropriate. I did some reformatting along
    the way, since the fact that log messages are prefixed with the level means
    that multiline messages don't look as nice as they do with print().
    
    I left in print() statements for the following:
    * the output of --tree and --unresolved
    * a few progress updates for pytype_runner
    * pytype findings
    
    While testing the logging, I found some places where we could improve our
    corner case checking, so I fixed that up as well.
    
    --
    PiperOrigin-RevId: 197227736
    MOS_MIGRATED_REVID=197227736

[33mcommit 4963593d772c7c661ba46f20af486522cfb298cb[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri May 18 23:02:23 2018 +0000

    Move CFG-variable and CFG-node specific utilities to cfg_utils.
    
    Renamed existing functions in cfg_utils to be snake-case.
    
    Also removed a couple of unused prettyprinting functions in cfg_utils to break
    an import cycle (they were just wrapping equivalent functions in debug.py), and
    fixed a few existing lint errors.
    
    --
    PiperOrigin-RevId: 197214322
    MOS_MIGRATED_REVID=197214322

[33mcommit 5b3f89d6e7d7fc50e053d0a20d9cc29bc649e777[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Fri May 18 18:26:44 2018 +0000

    Make the unit tests executable via the command line unittest command.
    
    The unit tests cannot be run currently with a command like:
    
    python -m unittest ...
    
    This change enables one to execute the unit tests with the above command.
    
    Unit tests cannot be run with the above command currently because it does
    not run the main test module as a Python script. It imports the main test
    module and does its own magic over the tests defined in the module. This
    does not work for us as we want test_base.main() to be called.
    
    --
    PiperOrigin-RevId: 197175001
    MOS_MIGRATED_REVID=197175001

[33mcommit 0cd85d561d608db93cced0cd057901f80bd5d25b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 18 18:18:16 2018 +0000

    Skip unnecessary error checks when --no-report-errors is specified.
    
    Skips a few of the more time-intensive checks when error logging has been
    turned off via a config option. This change doesn't try to do any particularly
    clever optimizations; it just turns off the obviously expensive solver calls.
    
    Since files should typically be error-free, this probably doesn't gain us much.
    (I wasn't able to find an example in which it made us obviously faster.) But
    it's an incredibly simple change, and I don't see any reason to not do it.
    
    --
    PiperOrigin-RevId: 197173552
    MOS_MIGRATED_REVID=197173552

[33mcommit 40471d731cacc03dd098a8068997f95b1349d51f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 18 17:48:39 2018 +0000

    Don't move pytype/output.py to output.py
    
    The change to move the out/ subdir also moved this file.
    This CL is a guess at how to fix the issue; I haven't yet
    figured out how to test changes to the opensource export
    without submitting them first.
    
    --
    PiperOrigin-RevId: 197168469
    MOS_MIGRATED_REVID=197168469

[33mcommit 4dcd047dca4d295d47b3a3cd193beda2f739eb79[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 18 17:36:45 2018 +0000

    Make leak_test happy.
    
    Fixes some issues that leak_test was complaining about so that the log
    messages will stop showing up when I do `blaze test pytype/...`.
    
    * tsudol was missing from the username list. I also took this chance
      to remove pludemannn (three n's).
    * The scrubber doesn't like files with extensions that it doesn't
      recognize. I mapped what extensions I could by referencing
      []
      and told the scrubber to ignore the rest.
    * The word "sketchy" is considered sensitive (???).
    * I changed a couple of TODO(pytype) to TODO(rechen).
    
    --
    PiperOrigin-RevId: 197166488
    MOS_MIGRATED_REVID=197166488

[33mcommit f009b01cd7b96b1cf43e8887cd0fbe7d9fdf498a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 18 07:45:50 2018 +0000

    Update pytype_runner's behavior.
    
    Updates pytype_runner to report errors for a file it analyzes iff the file
    is in the filenames for which the user asked for type-checking. Combines the
    'projects' and 'deps' options into a single 'pythonpath' option, now that
    'projects' isn't needed to determine when to report errors.
    
    Changes pyi_dir to be pytype_output/ itself rather than pytype_output/pyi/,
    since pytype_output/ no longer contains a log file.
    
    Moves some logic out of run() and run_pytype() into yield_sorted_modules()
    for testing.
    
    For sanity's sake, changes pytype-all to do all of its path expansion
    upfront, so that pytype_runner doesn't need to worry about expanding paths,
    and tests know that they always have to do the expansion themselves.
    
    While updating the README, I noticed that the section on filling in a config
    file made it seem like the package directory itself should be in the
    pythonpath, so I tweaked the language and example to be clearer.
    
    --
    PiperOrigin-RevId: 197109460
    MOS_MIGRATED_REVID=197109460

[33mcommit 03adc696a722ecf2c462294beaf286fd0c34ef8a[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Fri May 18 06:48:27 2018 +0000

    Move the "out" directory to the right place in the open source tree.
    
    --
    PiperOrigin-RevId: 197105587
    MOS_MIGRATED_REVID=197105587

[33mcommit 68c61d81e55972b8007cb3fd46472c6d0181d372[m
Merge: 9fccaabf b1854cf5
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 17 23:47:03 2018 -0700

    Merge pull request #86 from sivachandra/master
    
    Update typeshed submodule to 6a080cd0db8fe800fd3cae8769fd5320a02cc7c6

[33mcommit b1854cf5f6fe448f6f5c4fb7f783c454e5d52282[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Thu May 17 23:41:50 2018 -0700

    Update typeshed submodule to 6a080cd0db8fe800fd3cae8769fd5320a02cc7c6

[33mcommit 9fccaabf9807efbc02bbe9f3bdba80c7d2ebfe43[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 18 00:36:22 2018 +0000

    Do some refactoring to make pytype_runner easier to test.
    
    Moves things around so that it's easy to create a PytypeRunner in a test and
    adds a test for PytypeRunner.infer_module_names. (I'm not testing
    get_cmd_options yet because I'm about to change it per go/pytype+importlab.)
    
    * Gets rid of the 'env' argument to the runner so that a PytypeRunner doesn't
      require a Typeshed object for initialization.
    * Moves logging to stderr so that (1) we don't need to create a log file and
      (2) we can log the source tree in main.py, which allows us to not pass the
      import graph to PytypeRunner. Adds a --verbosity option.
    * Creates the output directory before initializing PytypeRunner.
    * Passes PytypeRunner() sorted source files rather than the full import graph.
    * Removes --quiet, which isn't needed now that pytype errors get dumped to
      stderr by default.
    * Packages the output of infer_module_name() into a namedtuple.
    * Pulls out part of run_pytype() into helper method get_cmd_options() for
      easier future testing.
    
    --
    PiperOrigin-RevId: 197078678
    MOS_MIGRATED_REVID=197078678

[33mcommit 2b3570ee5acc27fdd485496359c5da090b5bdf6c[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri May 18 00:12:35 2018 +0000

    Move the custom dictionary classes out of utils.py.
    
    Starting to clean up the various utils files we have scattered around.
    
    --
    PiperOrigin-RevId: 197076135
    MOS_MIGRATED_REVID=197076135

[33mcommit cfe7e7b28a3252d841366be10aba51933e079bb1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 17 23:04:19 2018 +0000

    Make tools/config.py compatible with Python 2.
    
    --
    PiperOrigin-RevId: 197067130
    MOS_MIGRATED_REVID=197067130

[33mcommit 796c6143d82320c854de55a0b7f6576309e67878[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu May 17 21:32:10 2018 +0000

    Change pytype-all's config file to INI style, and fall back to setup.cfg
    
    --
    PiperOrigin-RevId: 197052856
    MOS_MIGRATED_REVID=197052856

[33mcommit 5fb9c855d2558bc464faf773b28a1947358273dd[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Thu May 17 20:12:55 2018 +0000

    Add a README.md file to the "out" directory.
    
    --
    PiperOrigin-RevId: 197039487
    MOS_MIGRATED_REVID=197039487

[33mcommit 599aecb632d83d540aaf3adc8d21089ed4c18639[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Thu May 17 17:37:47 2018 +0000

    Include the "out" directory in the open source export list.
    
    --
    PiperOrigin-RevId: 197014428
    MOS_MIGRATED_REVID=197014428

[33mcommit 1cc86128475b55c34a6a3e9c08fbaebac24bb84d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 16 22:41:56 2018 +0000

    Make analyze_annotated a command-line option.
    
    This option will allow pytype-all to do inference and checking in a single
    pass, rather than analyzing a file first with --output, then with --check.
    
    --
    PiperOrigin-RevId: 196901297
    MOS_MIGRATED_REVID=196901297

[33mcommit 2b785d810f0570aa0d4edad9afaf78ae730374e6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 16 22:37:22 2018 +0000

    Fix two bugs in pytd/typeshed.py.
    
    The _pytype_base attribute was only sometimes initialized.
    get_pytd_paths() requires it to always be available.
    
    Testing also uncovered an issue with _load_files() opening
    files in the wrong mode.
    
    --
    PiperOrigin-RevId: 196900640
    MOS_MIGRATED_REVID=196900640

[33mcommit cbe801ab5a1a5fa5504e50912831c733cc31c5f2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 16 20:17:46 2018 +0000

    Remove "-S" from the python executable.
    
    I originally started working on this due to Greg's report
    on the virtualenv issue. Although that's been closed, I
    discovered that -S doesn't seem to be necessary. Without it,
    all of pytype's own tests still pass, the Blaze integration
    tests pass, and //pyglib:retry (a pytype target that uses
    `from __future__ import google_type_annotations`) builds,
    with PYTYPE=DEV and with a pytype.par updated to this CL.
    
    --
    PiperOrigin-RevId: 196877286
    MOS_MIGRATED_REVID=196877286

[33mcommit 39abfff3bd47949325b019609477f373351e4b65[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 16 00:16:16 2018 +0000

    Add pythonpath guessing to pytype-all.
    
    Adds an environment.compute_pythonpath() function that loops over the input
    files and guesses the dependency path for each. For files in a directory with
    an __init__.py, we guess the path to the package; otherwise, we guess the path
    to the file itself.
    
    --
    PiperOrigin-RevId: 196755832
    MOS_MIGRATED_REVID=196755832

[33mcommit 670a79d327d5f426c40c5e261b40f74662bf11ff[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue May 15 23:32:52 2018 +0000

    Update installation instructions to point to pip install.
    
    --
    PiperOrigin-RevId: 196749521
    MOS_MIGRATED_REVID=196749521

[33mcommit f3d37791e2ffc60cc1c7cebfff7251616a09f71b[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Tue May 15 21:41:42 2018 +0000

    Add CMake rules genbison, genflex and py_extension and use them to build parser_ext.
    
    An "out" directory for the build outputs has also been added. One should now be able to
    build the extension module for the PYI parser with the following steps:
    
    $> cd out
    $> cmake ../ -G Ninja
    $> ninja
    
    The second and third steps can be modified to use Make as follows:
    
    $> cmake ../
    $> make
    
    --
    PiperOrigin-RevId: 196731776
    MOS_MIGRATED_REVID=196731776

[33mcommit 726f8424983e2968605595e971be05db3b1dd185[m[33m ([m[1;33mtag: 2018.05.15[m[33m)[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue May 15 20:28:21 2018 +0000

    Add a MANIFEST.in file for files that need to be packaged with the source
    distribution.
    
    --
    PiperOrigin-RevId: 196719647
    MOS_MIGRATED_REVID=196719647

[33mcommit 7e46d9c2a9f0e114781c562d9b96bccead048c15[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 15 18:40:18 2018 +0000

    Change a call to os.path.rm() to os.remove() in setup.py.
    
    --
    PiperOrigin-RevId: 196703275
    MOS_MIGRATED_REVID=196703275

[33mcommit cc84bcfbf2b5cdac0dd444860629348dc1093b7b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 15 05:42:53 2018 +0000

    Cleanup: organize pytype's config options into groups.
    
    We have many, many command-line options for pytype. Organize them into logical
    groups. This change came out of my trying to figure out which of these options
    should be configurable by a user of pytype-all.
    
    Also deletes the following options:
    target_name: unused and only questionably useful, since the Tricorder tool does
    its own patching of import error, and I can't think of other cases in which
    we'd want a "While building" message.
    timeout: unceremoniously kills pytype. While a time limit is an interesting
    idea, we'd need some way to, say, output a default pyi, and this approach
    doesn't allow that.
    
    --
    PiperOrigin-RevId: 196619287
    MOS_MIGRATED_REVID=196619287

[33mcommit fe595ba0217d55b491f3d7aadbba1655378870d8[m[33m ([m[1;33mtag: 2018.05.14[m[33m)[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue May 15 00:25:12 2018 +0000

    Fix setup.py install under windows.
    
    Copy the typeshed/ tree to pytype/typeshed if the symlink does not work.
    
    Fixes issue #78
    
    --
    PiperOrigin-RevId: 196594091
    MOS_MIGRATED_REVID=196594091

[33mcommit 9653ea65c546cb944b17999119452bed2e4ca580[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon May 14 22:52:12 2018 +0000

    Move the flex/bison generated files in to a "gen" directory.
    
    This is required so that these generated files do not interfere with the
    open source build.
    
    --
    PiperOrigin-RevId: 196580905
    MOS_MIGRATED_REVID=196580905

[33mcommit 66639e50b6dae9384b59ed340aab57c22b686d50[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon May 14 22:49:58 2018 +0000

    Preparations for updating pytype on pypi:
    
    * Add a long description file, excerpted from the README
    * Move the version number to __version__.py, make it date-based.
    * Add a dependency on importlab
    * Add some trove classifiers.
    
    --
    PiperOrigin-RevId: 196580602
    MOS_MIGRATED_REVID=196580602

[33mcommit c4dd4ccfe8719baa81b8721b79e67b2d6ec454f7[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri May 11 19:45:22 2018 +0000

    Update the pytype-all README
    
    --
    PiperOrigin-RevId: 196294445
    MOS_MIGRATED_REVID=196294445

[33mcommit b9b149fefccb78de72abc61f76f1e165b703165a[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu May 10 18:20:32 2018 +0000

    Remove the dependency on absl/memory/memory.h.
    
    We use make_unique in the most basic case, so we don't need the full power of
    memory.h.
    
    Also removes unnecessary dep in BUILD file for :reachable.
    
    --
    PiperOrigin-RevId: 196144058
    MOS_MIGRATED_REVID=196144058

[33mcommit 552b16f6ed5beae1339901a0df2ff6a4e7616d54[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu May 10 06:04:52 2018 +0000

    Add our pytd files to the importlab path for pytype-all
    
    --
    PiperOrigin-RevId: 196077210
    MOS_MIGRATED_REVID=196077210

[33mcommit bcdff0c7addf13c225b2b54a1227adaa56821569[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 9 23:50:58 2018 +0000

    Have pytype-all use pytype's Typeshed class.
    
    --
    PiperOrigin-RevId: 196050515
    MOS_MIGRATED_REVID=196050515

[33mcommit 1b3bd765eb7a0385f23a307b155836fa520e03c4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 9 23:07:19 2018 +0000

    Make pytype's Typeshed class return full paths to its subdirectories.
    
    This change is so that pytype-all can re-use this class instead of
    creating its own almost-copy. The pytype-all changes wil be in a later
    change, since this change needs to be checked in before the open-source
    export script will pick it up, and I need to export it to test changes
    to pytype-all.
    
    Also fixes a lint error and renames a couple things more sensibly
    (e.g., get_all_stdlib_module_names also grabbed module names from
    builtins and third_party, so it's now get_all_module_names).
    
    --
    PiperOrigin-RevId: 196044768
    MOS_MIGRATED_REVID=196044768

[33mcommit fbf2e2d9be244bbf38ff3b4048670a4ef8b73294[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 9 21:39:12 2018 +0000

    Replace ":=" with "=" in pytd files.
    
    The original motivation for this change was that I wanted to be able to get
    rid of the .pytd extension, which we're no longer planning on doing. But
    it's still nice to make our stub files use valid Python syntax.
    
    --
    PiperOrigin-RevId: 196031447
    MOS_MIGRATED_REVID=196031447

[33mcommit 8bda1476f31d37eae2e3e7c202c42d3e2726d2dd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 9 04:37:27 2018 +0000

    Fix a print_tree() call in pytype-all.
    
    --
    PiperOrigin-RevId: 195921711
    MOS_MIGRATED_REVID=195921711

[33mcommit 6918db37fd95b116098a27edbc15deb1e5ad576a[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon May 7 23:59:51 2018 +0000

    Fix leak_test.
    
    --
    PiperOrigin-RevId: 195745739
    MOS_MIGRATED_REVID=195745739

[33mcommit 5a2b4000ab7cdec710526d3e9b2aab6dcbc31976[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon May 7 23:30:40 2018 +0000

    Update pytype-all to reflect changes in importlab.
    
    
    Also includes the following changes:
    
    Add opensource filegroups to the new blaze packages in the tests directory.
    
    If a directory is a subpackage, then filegroup "srcs" in the parent package will not
    include files glob-ed from that directory. We need to add a filegroup target in the
    subpackage and list this target in the "srcs" field of the parent package filegroup.
    
    --
    PiperOrigin-RevId: 195741649
    MOS_MIGRATED_REVID=195741649

[33mcommit 140c99eae545928b909c1e79b9513900d0f9d837[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 7 18:39:27 2018 +0000

    Dedup the mutations we apply after a function call.
    
    A dictionary of tuples generates a lot of views during argument
    matching, which means that a dict.setitem call leads to the
    same mutation being applied repeatedly to a type parameter,
    creating a complicated CFG that pytype later chokes on.
    
    With this change, we'll build a set of mutations to apply instead
    of a list.
    
    In [], I noted that there's some problem with our C++
    solver that causes it to be much slower than cfg.py in rare cases.
    That was the case in [] as well, and I haven't figured out
    why it happens - this fix simply avoids creating the problematic CFG.
    
    --
    PiperOrigin-RevId: 195695384
    MOS_MIGRATED_REVID=195695384

[33mcommit a806418d97780c2c44f0781717cee80527f4d53d[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Sat May 5 06:19:44 2018 +0000

    Ensure that individual test methods cannot set the target python_version.
    
    --
    PiperOrigin-RevId: 195517709
    MOS_MIGRATED_REVID=195517709

[33mcommit 4ccb98ec37b602dc17386fcf6aef875f3253ce09[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri May 4 22:22:55 2018 +0000

    Allow instance attributes to shadow *visible* class attributes.
    
    --
    PiperOrigin-RevId: 195480206
    MOS_MIGRATED_REVID=195480206

[33mcommit 51113701d5cb1206060f049bad058315ead55129[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri May 4 19:14:55 2018 +0000

    Add a brief example of error suppression to errors.md.
    
    Strip out the link to the internal index.md doc.
    
    --
    PiperOrigin-RevId: 195452178
    MOS_MIGRATED_REVID=195452178

[33mcommit 94fedb0e3360296a2f8de9e2ca7fd60b3475de07[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 3 00:41:32 2018 +0000

    Fix a textwrap error in pytype-all's sample config generation.
    
    From the second line onward, comments weren't being prefixed with '# ', which
    meant that the sample config file was broken.
    
    --
    PiperOrigin-RevId: 195181543
    MOS_MIGRATED_REVID=195181543

[33mcommit 19e634292355b544a90648e52ab1913545f01ceb[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed May 2 23:49:42 2018 +0000

    Move docs/ up a level and add a link from the README.
    
    --
    PiperOrigin-RevId: 195174699
    MOS_MIGRATED_REVID=195174699

[33mcommit f992c2d7964de8c7fb7e4d31561a18b31447959c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 2 23:48:03 2018 +0000

    Return a version tuple instead of a version list in analyze_project.utils.
    
    In a Python interpreter:
    >>> 'python%d.%d' % [3, 6]
    Traceback (most recent call last):
      File "<stdin>", line 1, in <module>
    TypeError: %d format: a number is required, not list
    >>> 'python%d.%d' % (3, 6)
    'python3.6'
    
    --
    PiperOrigin-RevId: 195174456
    MOS_MIGRATED_REVID=195174456

[33mcommit 9b5acf963c9b15926068b1fdca097d6421059226[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 2 23:24:40 2018 +0000

    Add pytype/tools/analyze_project to setup.py's package list.
    
    Otherwise, I get errors about the module not being found when I try to run the
    pytype-all script.
    
    
    Also includes the following changes:
    
    Export errors.md to github.
    
    Adds a shell script that copies g3doc/errors.md to docs/errors.md and strips out the google-specific bits.
    
    --
    PiperOrigin-RevId: 195170936
    MOS_MIGRATED_REVID=195170936

[33mcommit f530069cc4a1a52f14ecdc3f13cc08185cbeecee[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 2 22:00:18 2018 +0000

    Change a for loop to a while loop.
    
    --
    PiperOrigin-RevId: 195157537
    MOS_MIGRATED_REVID=195157537

[33mcommit b13dde99591b9447c2edffd7015cb075b8a6d914[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Wed May 2 18:58:13 2018 +0000

    Sort test_quick.py in to buckets.
    
    --
    PiperOrigin-RevId: 195128453
    MOS_MIGRATED_REVID=195128453

[33mcommit 74602a65716656ae9579c33501fed868e701b0ff[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 2 18:08:49 2018 +0000

    Get rid of unnecessary MOE stripping.
    
    I got rid of anything that struck me as obviously safe to remove; this should
    allow us to focus on actual problem areas. Mostly I removed stripping around
    bug ids.
    
    Also fixes some lint errors.
    
    --
    PiperOrigin-RevId: 195119783
    MOS_MIGRATED_REVID=195119783

[33mcommit 1ac1f2cc063e16f249a40a511da22e7ba4f540af[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 2 16:32:02 2018 +0000

    Only analyze closures once.
    
    By saving the first opcode of previously analyzed functions, rather than the
    function object itself, we can avoid repeatedly analyzing the same closure.
    
    Also get rids of the is_closure() method, which is no longer used anywhere.
    
    --
    PiperOrigin-RevId: 195103697
    MOS_MIGRATED_REVID=195103697

[33mcommit 0aca58c53c8746177f7708d2b0b384c0d0c6b111[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 2 00:40:19 2018 +0000

    Trim down the opensource scrubber's replacements dict.
    
    We were using the scrubber both to make necessary code replacements and to
    sanitize comments. Removes everything that was in the latter category and
    disables scrub_sensitive_comments so that leak_test will yell at us if we
    write something that isn't safe for export. Also fixes a leaky comment that was
    previously being scrubbed.
    
    --
    PiperOrigin-RevId: 195026037
    MOS_MIGRATED_REVID=195026037

[33mcommit eb0c1e27c46bd525ed745f660524e52fcdee7182[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 1 22:00:27 2018 +0000

    Remove google-specific import.
    
    Ignores the google/ subdirs, since they aren't exported anyway.
    
    --
    PiperOrigin-RevId: 195002806
    MOS_MIGRATED_REVID=195002806

[33mcommit f95e340c6dba62b3afc7d3e9bc0d52fdc8431d71[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 1 21:15:32 2018 +0000

    Replace "third_party/py/pytype/typegraph/" with an empty string.
    
    This will (I think?) do the
    #include "third_party/py/pytype/typegraph/<name>.h" > #include "<name>.h"
    replacement mentioned in https://github.com/google/pytype/issues/79.
    
    --
    PiperOrigin-RevId: 194994890
    MOS_MIGRATED_REVID=194994890

[33mcommit a705d593668d866b16ba4dd15c3a75500b8a7d60[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Tue May 1 18:52:08 2018 +0000

    Sort test_slots.py in to buckets.
    
    A misssing __slots__ decl has been added to typing.pytd to get one of the tests
    passing in Python 3.
    
    --
    PiperOrigin-RevId: 194971132
    MOS_MIGRATED_REVID=194971132

[33mcommit 7ade5e17388eacc0f5a4392e8afa2b11baa4cc32[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Apr 30 21:44:39 2018 +0000

    Use setuptools rather than distutils in pytype's setup.py
    
    Not using "fallback to distutils if setuptools is not installed" because
    (among other things) packages installed via distutils cannot be uninstalled,
    which is a pretty bad user experience.
    
    --
    PiperOrigin-RevId: 194848397
    MOS_MIGRATED_REVID=194848397

[33mcommit 4153f46057f38f749879698af595b07cc8eea894[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon Apr 30 17:46:55 2018 +0000

    Sort test_methods.py in to buckets.
    
    --
    PiperOrigin-RevId: 194809076
    MOS_MIGRATED_REVID=194809076

[33mcommit 22b240897ec634bc9e7614e949753106e5ae6609[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Apr 28 02:36:47 2018 +0000

    Get rid of extraneous Variable.Data/Bindings calls.
    
    * Does all possible Data(node)->data and Bindings(node)->bindings replacements
      without breaking our tests.
    * Fixes lint errors in the files I touched.
    
    On pytree.py in our test data, this change reduces the number of Data/Binding
    calls from 25677 to 15595, a 40% decrease.
    
    The time pytype spends in Kessel Run goes from ~300s to ~240s.
    
    The time spent checking the file in the linked bug drops from 3 minutes 6s to 1
    minute 38 s.
    
    --
    PiperOrigin-RevId: 194625653
    MOS_MIGRATED_REVID=194625653

[33mcommit 60f48833822d2f2a4370cc95a0b7c2e37f67a70c[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Apr 27 23:03:14 2018 +0000

    Add a link to pytype-all from the pytype README
    
    --
    PiperOrigin-RevId: 194607305
    MOS_MIGRATED_REVID=194607305

[33mcommit 8df23c4afa884b9a3e141c17fcd2ba62a7e58864[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Apr 27 22:36:39 2018 +0000

    FIX: We want to open-source export everything under tools/, not just the python
    files.
    
    --
    PiperOrigin-RevId: 194603556
    MOS_MIGRATED_REVID=194603556

[33mcommit 559a5b5151d25de0649e95abb8e1bcd982aa3d07[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Apr 27 21:31:51 2018 +0000

    Minor cleanup in convert.py - check all named pytd.Class pyvals in a block.
    
    --
    PiperOrigin-RevId: 194593999
    MOS_MIGRATED_REVID=194593999

[33mcommit 183da9b436db072f4f958b4dffc6ca95a21cd627[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Apr 27 21:21:30 2018 +0000

    Treat ClassMethods as bound functions when matching.
    
    --
    PiperOrigin-RevId: 194592451
    MOS_MIGRATED_REVID=194592451

[33mcommit 1ff1a54bf1e4ad4626f5a35f2334cee9810d5733[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Apr 27 20:01:51 2018 +0000

    Finish separating out pytype and importlab.
    
    Uses importlab as a library, and sets up the pytype and typeshed dependencies
    from pytype-all by creating an importlab environment from individual paths.
    
    --
    PiperOrigin-RevId: 194580969
    MOS_MIGRATED_REVID=194580969

[33mcommit 0301bc7aa3ba159b87f1c5d06ef3b2f07ea8d7c6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 27 15:38:56 2018 +0000

    Fix an issue with finding rpcserver.pyi.
    
    Sorry for the second follow-up. I made a rookie mistake and
    forgot `--define PYTYPE=DEV` when running the Blaze integration tests,
    so I didn't notice that the file path was wrong.
    
    --
    PiperOrigin-RevId: 194545787
    MOS_MIGRATED_REVID=194545787

[33mcommit edd96c708fdedecf12e4a2265e0cf3295aae780a[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Apr 26 23:40:11 2018 +0000

    Output the underlying method's signature when converting a ClassMethod or
    StaticMethod from a pyi file.
    
    --
    PiperOrigin-RevId: 194473976
    MOS_MIGRATED_REVID=194473976

[33mcommit 7452ff42799f67a575e559b52a947889956c0ba0[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Thu Apr 26 21:31:40 2018 +0000

    Sort test_attributes.py in to buckets.
    
    --
    PiperOrigin-RevId: 194454819
    MOS_MIGRATED_REVID=194454819

[33mcommit 27402f226bdc04c4f898fac7d34fdb8f67d0b37b[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Wed Apr 25 22:17:27 2018 +0000

    Sort test_functions in to buckets.
    
    --
    PiperOrigin-RevId: 194306048
    MOS_MIGRATED_REVID=194306048

[33mcommit 81c4c64e2ba8b23f7fb8526502a612b6d5efdaf1[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Wed Apr 25 22:16:31 2018 +0000

    Change "string" to "std::string".
    
    --
    PiperOrigin-RevId: 194305904
    MOS_MIGRATED_REVID=194305904

[33mcommit cb5ed10baa0c1da31513575959bf64ea9ca78673[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 25 18:46:22 2018 +0000

    Stop excluding cfg.py from the open-source export.
    
    I *think* that if we just add this file back in, then it will be used for the
    cfg import and the .cc and .h files will be ignored (so they can stay).
    
    --
    PiperOrigin-RevId: 194273810
    MOS_MIGRATED_REVID=194273810

[33mcommit f039b108522da5d40cb0665e0ee3983bbeb1eb6a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 24 22:20:06 2018 +0000

    Fix a crash caused by a MissingParameter error in _call_with_fake_args.
    
    I'm not sure what the lines I deleted were for, given that all of the tests
    still pass.
    
    --
    PiperOrigin-RevId: 194154799
    MOS_MIGRATED_REVID=194154799

[33mcommit 0c14999390c67320fc5b9cdf8cd2a8d419ee86b6[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Apr 24 00:21:27 2018 +0000

    Add a pytype-analyze-project tool.
    
    Moves the pytype-specific code and main.py from importlab to pytype/tools.
    
    --
    PiperOrigin-RevId: 194011376
    MOS_MIGRATED_REVID=194011376

[33mcommit f8da745704d593a2ea0357a6934fb6aaabf4940a[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon Apr 23 20:55:08 2018 +0000

    Create buckets to group the functional tests according the target Python version.
    
    Two existing test files have been split into new groups.
    
    --
    PiperOrigin-RevId: 193979003
    MOS_MIGRATED_REVID=193979003

[33mcommit 61e214dd69f884a0c0170c1b415b18c24428195a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 20 23:05:07 2018 +0000

    Delete a stray space in a MOE:end_strip.
    
    --
    PiperOrigin-RevId: 193737556
    MOS_MIGRATED_REVID=193737556

[33mcommit dcabf54dce8006e7223866c7f20faa29a1dfd10c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 20 22:53:41 2018 +0000

    Export all typegraph/ files except cfg.py.
    
    I tried making various changes to opensource_export and none of them were
    picked up by the mos export script, so maybe we really do need to check in the
    change before it's picked up?
    
    --
    PiperOrigin-RevId: 193736078
    MOS_MIGRATED_REVID=193736078

[33mcommit ca771c8645734f610f4b30034feaea09f7974c5b[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Apr 20 20:25:48 2018 +0000

    Add some utilities for initializing and querying the environment.
    
    Initial functions cover typeshed and the python executable.
    
    --
    PiperOrigin-RevId: 193713842
    MOS_MIGRATED_REVID=193713842

[33mcommit a21a6f4baa24947d8301b6fdd36799749afbe64a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 20 18:07:51 2018 +0000

    Improve support for __builtin__.open.
    
    Fixes some bugs in our definition of open and adds a special builtin so that
    we can distinguish between text mode and bytes mode in Python 3.
    
    --
    PiperOrigin-RevId: 193694088
    MOS_MIGRATED_REVID=193694088

[33mcommit f169d81ff45ab191f51d98706535eb3371fec8d6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 20 17:37:24 2018 +0000

    Add a helper method for initializing subclasses of PyTDFunction.
    
    We do this all over the place, so it's better to have one canonical way. Also
    fixes a tiny inefficiency in typing.NamedTupleBuilder._getargs: we can re-use
    an existing function.Signature instead of creating a new one.
    
    --
    PiperOrigin-RevId: 193688829
    MOS_MIGRATED_REVID=193688829

[33mcommit 9c1339c87c06ae0f108fe8d46a626becf08b6d27[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 19 23:03:20 2018 +0000

    Make Text an alias for Union[str, unicode] and don't auto-promote unicode.
    
    PEP 484 calls Text 'a simple alias for [...] unicode' but also says that
    '[f]or parameters typed as Text, arguments of type str as well as unicode
    should be acceptable'. We've been treating the unicode annotation as
    equivalent to Union[str, unicode], which satisfies the spec but prevents users
    from ever specifying a type that is just unicode. Instead, make unicode
    just unicode and use Text for Union[str, unicode].
    
    --
    PiperOrigin-RevId: 193590017
    MOS_MIGRATED_REVID=193590017

[33mcommit c484d5b6327d576a7e47d8e2d38b50bb1a422c79[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 19 22:38:40 2018 +0000

    Rename Iterator.next to __next__ in Python 3.
    
    --
    PiperOrigin-RevId: 193586073
    MOS_MIGRATED_REVID=193586073

[33mcommit 5c3e05213c86d546e70ccffcf21808b56da6a487[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 19 22:26:54 2018 +0000

    Support sys and six version info checks.
    
    --
    PiperOrigin-RevId: 193584351
    MOS_MIGRATED_REVID=193584351

[33mcommit fdebcd77a50f7ab9150e99ae93d86941a344a6d4[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Apr 19 20:14:39 2018 +0000

    Add pytype/tools to setup.py
    
    --
    PiperOrigin-RevId: 193563213
    MOS_MIGRATED_REVID=193563213

[33mcommit 994c5f470f9ae8d9dd69554b155daf45fb1ed4fd[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Thu Apr 19 18:58:14 2018 +0000

    Add a blaze package for the "tests" directory.
    
    --
    PiperOrigin-RevId: 193552297
    MOS_MIGRATED_REVID=193552297

[33mcommit a2aa6240b0cfdce101a1be945e2d0b4d38e5efff[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Apr 19 18:47:04 2018 +0000

    Move some of the support utils for running pytype as an external tool from
    importlab to pytype.tools.
    
    --
    PiperOrigin-RevId: 193550356
    MOS_MIGRATED_REVID=193550356

[33mcommit bca46886ee73235797a56c2df9f58571f2e9e26a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 19 00:42:10 2018 +0000

    Fix some issues in our Python 3 __builtin__.pytd.
    
    --
    PiperOrigin-RevId: 193446043
    MOS_MIGRATED_REVID=193446043

[33mcommit f3f28e71d37184f76164bd5d10b077e201514942[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Apr 19 00:07:05 2018 +0000

    Expand the README with examples for the open source pytype.
    
    --
    PiperOrigin-RevId: 193442014
    MOS_MIGRATED_REVID=193442014

[33mcommit 022397819f0a7612be74415fc8e2093c6a5cb19f[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Wed Apr 18 22:50:01 2018 +0000

    Refactor BaseTest to make the test config options pivot around Pytype config options.
    
    After this change, tests only have to set their desired options and the loader
    gets configured automatically.
    
    This change paves way to make the PYTHON_VERSION attribute an instance
    attribute. Making it an instance attribute is required to create test classes
    which can run test methods for different target Python versions automatically.
    
    --
    PiperOrigin-RevId: 193430694
    MOS_MIGRATED_REVID=193430694

[33mcommit c16dc8994a550fce198d277e47f207f4b5e844e3[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Apr 18 22:32:30 2018 +0000

    Get rid of shortn url
    
    --
    PiperOrigin-RevId: 193427953
    MOS_MIGRATED_REVID=193427953

[33mcommit f1f03e539cdba9520209bc8b3539d96465fcf8b9[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Apr 18 22:01:19 2018 +0000

    Create a pytype/tools directory to contain open source tools.
    
    --
    PiperOrigin-RevId: 193422616
    MOS_MIGRATED_REVID=193422616

[33mcommit db194d13fffc9220fe20ca69b62934163654b92a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 18 16:34:04 2018 +0000

    Turn on type-checking for some more pytype source files.
    
    --
    PiperOrigin-RevId: 193369827
    MOS_MIGRATED_REVID=193369827

[33mcommit 860ace1989e8064e3ee5b562443fa8844eb78980[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 17 23:46:08 2018 +0000

    Fix a crash in analyze.py.
    
    --
    PiperOrigin-RevId: 193279205
    MOS_MIGRATED_REVID=193279205

[33mcommit c89c0eba6faf07705ec34da0a364f71613af2851[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 17 23:07:25 2018 +0000

    Make main.py re-raise exceptions intead of raising an AssertionError.
    
    Between Python 2 and 3, the three-argument raise syntax changed from
    
    raise E, V, T
    
    to
    
    e = E(V)
    e.__traceback__ = T
    raise e
    
    so 'raise E(V, T)' doesn't actually preserve the traceback as we want. The
    problem is that the old syntax isn't even parseable in Python 3, so we can't
    use it at all. Instead, re-raise the old exception with a modified message.
    
    --
    PiperOrigin-RevId: 193273291
    MOS_MIGRATED_REVID=193273291

[33mcommit bef1f234dd6c463f09d229678f38ff4beca82c23[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 17 21:51:16 2018 +0000

    Change another __nonzero__ method to __bool__.
    
    This wasn't covered by our tests but was caught by lib2to3.
    
    --
    PiperOrigin-RevId: 193260248
    MOS_MIGRATED_REVID=193260248

[33mcommit 7a29965f44f92547e0545a45bd03311a18648fd8[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Apr 17 20:48:13 2018 +0000

    Fixes for typeshed's travis:
    
    * Add a c++11 compiler arg for the parser extension.
    * Add back install_requires.
    
    
    Also includes the following changes:
    
    Tweak opcodes WITH_CLEANUP_START and WITH_CLEANUP_FINISH.
    
    The description of WITH_CLEANUP_START says: If TOS is ``NULL``, calls
    ``SECOND(None, None, None)``, removes the function from the stack, leaving TOS.
    I interpreted this to mean that the first popped None needs to be pushed back
    on after exit_func is popped.
    
    WITH_CLEANUP_FINISH only sets WHY_SILENCED when the stack represents an
    exception, which I don't think it ever does in our case because the top value
    is None. Deleting that line allows END_FINALLY to run and set things up so that
    the next block can execute.
    
    I also moved WITH_CLEANUP_START and WITH_CLEANUP_FINISH to be right next to
    WITH_CLEANUP in vm.py because I got tired of scrolling between them.
    
    --
    PiperOrigin-RevId: 193249710
    MOS_MIGRATED_REVID=193249710

[33mcommit 781bfb3f33851c6b0a09a6122f8d45e992ca92df[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Apr 17 18:03:05 2018 +0000

    FIX: Setting $TYPESHED_HOME wrong should generate a user-friendly error
    message, not an assertion failure.
    
    --
    PiperOrigin-RevId: 193223778
    MOS_MIGRATED_REVID=193223778

[33mcommit 652a02d1e8a2e604439b60f26ef5de37e63d4362[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Apr 16 22:49:18 2018 +0000

    Updates to reflect pytype's 2-and-3 status:
    
    * Change the README to note that pytype works with both versions
    * Change setup.py to add six as a requirement and python3.6 as a category
    * Get rid of --python_exe="HOST" (which was currently broken anyway)
    
    --
    PiperOrigin-RevId: 193112545
    MOS_MIGRATED_REVID=193112545

[33mcommit cbe145a080e10eafb5c19da91cc55fc01c54e784[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 16 22:22:21 2018 +0000

    Change map() and zip() to return iterators in Python 3.
    
    Also makes some small improvements to the Python 2 signatures.
    
    --
    PiperOrigin-RevId: 193108658
    MOS_MIGRATED_REVID=193108658

[33mcommit 29c64137a69ab5e843a1e444f23cf4c650d95be2[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Apr 16 21:36:11 2018 +0000

    FIX: load_pytype_file should return a bytestring.
    
    Only shows up in the open source version, since internally we use a different
    mechanism to load the file.
    
    --
    PiperOrigin-RevId: 193100766
    MOS_MIGRATED_REVID=193100766

[33mcommit cb49866cd1a150158bc1dd8fe937a06726f716f0[m
Author: Googler <noreply@google.com>
Date:   Mon Apr 16 21:12:53 2018 +0000

    pytype: Allow `TypeVar('T')` in files with `unicode_literals`
    
    Today, the following code fails unexpectedly:
      from __future__ import unicode_literals
      import typing
      T = typing.TypeVar('T')
    
    It raises this error:
      File "foo.py", line 3, in <module>: wrong arguments [invalid-typevar]
        Expected: (name: str, ...)
        Actually passed: (name: unicode)
    
    To fix it, let's annotate `TypeVar` as taking `Text` instead of `str`,
    and tweak `typing.py` to handle both types of constants.
    
    --
    PiperOrigin-RevId: 193097134
    MOS_MIGRATED_REVID=193097134

[33mcommit 61465f7f5771646e10cfa3fa82fa35804c5b9576[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon Apr 16 20:02:37 2018 +0000

    Update typeshed to a5429d25dc326b69116f958dcb0a43c6f82dadce
    
    --
    PiperOrigin-RevId: 193085993
    MOS_MIGRATED_REVID=193085993

[33mcommit 7300b47ff7edc6967c224d324c17b46bfe61fb0a[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Apr 16 18:55:08 2018 +0000

    Make test_namedtuple 2-and-3 compatible.
    
    Adds our own version of inspect.getcallargs so that we aren't relying on the
    underlying native collections.namedtuple() function.
    
    Also adds a fix for the namedtuple signature changing in 3.6.
    
    --
    PiperOrigin-RevId: 193075728
    MOS_MIGRATED_REVID=193075728

[33mcommit 8480859fcd784f2ead86c798c5323f532d998979[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon Apr 16 18:38:32 2018 +0000

    Analyze closures if they are not already analyzed.
    
    --
    PiperOrigin-RevId: 193072888
    MOS_MIGRATED_REVID=193072888

[33mcommit 3ed5861b8156b550c9b6fd3694a061fca2a2d1f3[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Mon Apr 16 16:39:19 2018 +0000

    Allow methods marked @staticmethod in pyi files to be passed as callables.
    
    Static methods in the file currently being analyzed end up as abstract.Function
    values, but the static methods in PYTD/PYI files end up as abstract.StaticMethod
    values. The abstract.StaticMethod values refer to the underlying abstract.Function.
    Hence, this change is essentially making use of the underlying value to perform
    argument matching.
    
    --
    PiperOrigin-RevId: 193052717
    MOS_MIGRATED_REVID=193052717

[33mcommit 070d3768b48c013c1202fcf19d480ed6fafbd1dc[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Apr 13 23:41:19 2018 +0000

    Make opcodes test 2-and-3 compatible.
    
    --
    PiperOrigin-RevId: 192842992
    MOS_MIGRATED_REVID=192842992

[33mcommit e4492c2e8639a87306f92316f6733facce56437f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 13 21:08:31 2018 +0000

    Delete pytd/parse/decorate.py.
    
    I think you're right that no one's using this file.
    
    --
    PiperOrigin-RevId: 192821241
    MOS_MIGRATED_REVID=192821241

[33mcommit f1b28665c2c9a96042442429d70200e7ac4939fc[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 13 20:50:22 2018 +0000

    Make main_test 2and3.
    
    --
    PiperOrigin-RevId: 192818283
    MOS_MIGRATED_REVID=192818283

[33mcommit 6f608dc46890828c2434fb92babf67c8b5b0ca00[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 13 19:56:58 2018 +0000

    Convert 15 more tests to 2and3.
    
    --
    PiperOrigin-RevId: 192810865
    MOS_MIGRATED_REVID=192810865

[33mcommit b54ce996844914b381b8ee4c233c3f13ea033063[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 13 19:00:55 2018 +0000

    Convert test_calls and test_checker to 2and3.
    
    Tweaks loadmarshal to return native strings from load_string() except when
    loading the code and lnotab fields of a CodeType object. That load_string()
    is used for both bytes and native strings is a problem I also ran into when
    converting test_slots, although that time I tried to fix the problem later on,
    by accepting bytes for slot names, which turned out to be the wrong solution.
    
    --
    PiperOrigin-RevId: 192802600
    MOS_MIGRATED_REVID=192802600

[33mcommit d490963e16b5f7adedb36d3415a0a9c8a322ee19[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Apr 13 18:28:13 2018 +0000

    Special-case match.groups() when called with default argument.
    
    The return type is Union[AnyStr, _T], where _T is the type of the default
    argument. We have to split this into 2 cases.
    
    --
    PiperOrigin-RevId: 192797563
    MOS_MIGRATED_REVID=192797563

[33mcommit e6fcf5670b7a32c1db4c7ea6dc2e4b3282b2b9be[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 13 17:48:04 2018 +0000

    Move a bunch more tests to 2and3.
    
    --
    PiperOrigin-RevId: 192790803
    MOS_MIGRATED_REVID=192790803

[33mcommit 6499da9ed90b5a3808919c7b51ab824e9a8539a2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 13 17:44:22 2018 +0000

    Make test_solver and test_slots 2and3.
    
    While mucking around in loadmarshal, I noticed a place where we could replace
    some code with compat.native_str(), so I went ahead and did that as well.
    
    --
    PiperOrigin-RevId: 192790205
    MOS_MIGRATED_REVID=192790205

[33mcommit a188879ab41db7ab51176eb856336d609824dd09[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Apr 12 23:48:50 2018 +0000

    Move imports_map and loader tests to py2and3.
    
    Also clean up a few instances of open(..., "rb"/"wb")
    
    --
    PiperOrigin-RevId: 192692895
    MOS_MIGRATED_REVID=192692895

[33mcommit 5341050d4652de2a64e49737ecec166200375d77[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 12 22:24:12 2018 +0000

    Four more 2and3 tests.
    
    test_splits, test_super, test_tuple, and test_tracebacks. For test_splits, I
    had to fix a bug in how we initialized primitive_class_names.
    
    --
    PiperOrigin-RevId: 192680489
    MOS_MIGRATED_REVID=192680489

[33mcommit dfe7f311abcc0085b35c6089c0923a25ecd98e94[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Thu Apr 12 22:11:18 2018 +0000

    Adjust the return type of Match.groups.
    
    --
    PiperOrigin-RevId: 192678336
    MOS_MIGRATED_REVID=192678336

[33mcommit 8b326956e321392e4ceec515649ed06c9a74eb64[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Apr 12 21:43:12 2018 +0000

    Convert the following tests to 2-and-3:
      basic, builtins-{1,2,3}, stdlib
    
    --
    PiperOrigin-RevId: 192673050
    MOS_MIGRATED_REVID=192673050

[33mcommit 17123d9ff458b9fe3c94fda084a621ca13e1ae82[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 12 20:19:41 2018 +0000

    Convert three more tests to 2and3.
    
    test_typing_methods and test_typevar needed no changes; test_type_comments
    required minor tweaks.
    
    --
    PiperOrigin-RevId: 192658978
    MOS_MIGRATED_REVID=192658978

[33mcommit 5a051437f03a37c5058687f5b381145f313062be[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 12 20:00:33 2018 +0000

    Make test_typing_namedtuple a 2and3 test.
    
    --
    PiperOrigin-RevId: 192655875
    MOS_MIGRATED_REVID=192655875

[33mcommit 713f376cde33915f98878874e382179f281ae89c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 12 18:22:42 2018 +0000

    Call RemoveUnknownClasses on any pytd types printed in error messages.
    
    --
    PiperOrigin-RevId: 192640427
    MOS_MIGRATED_REVID=192640427

[33mcommit ba25ae2426b761e9d6052ec73dd248076eea14a8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 12 01:24:05 2018 +0000

    Convert four tests to py2and3_test.
    
    Three of these required no changes; test_typing needed a small change to
    output.py and the addition of UnicodePy2.
    
    --
    PiperOrigin-RevId: 192541820
    MOS_MIGRATED_REVID=192541820

[33mcommit 3b312bc840e3fb1edcf8490dea087e3486b6ee4b[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Apr 12 00:33:33 2018 +0000

    Make test_special_builtins 2-and-3 compatible.
    
    --
    PiperOrigin-RevId: 192536512
    MOS_MIGRATED_REVID=192536512

[33mcommit 58252d94b9f0923a09179f785eb173c9d903d552[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 11 23:41:13 2018 +0000

    Make errors.py 2-and-3 compatible.
    
    --
    PiperOrigin-RevId: 192529949
    MOS_MIGRATED_REVID=192529949

[33mcommit c138c10718c02e9df9c1f4adf6a2736d1c9eb545[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Apr 11 23:06:00 2018 +0000

    Changes to main.py to get the commandline binary running under python3
    
    Existing unit tests pass, and you can now do
    
      blaze build --config=python3 :pytype
    
    to get a pytype binary running under python3, with which you can run
    command line tests.
    
    --
    PiperOrigin-RevId: 192524711
    MOS_MIGRATED_REVID=192524711

[33mcommit a40caa55463508189fec794d95f02757a8fdf7c9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 11 22:34:11 2018 +0000

    Fix our opensource leak test.
    
    --
    PiperOrigin-RevId: 192519847
    MOS_MIGRATED_REVID=192519847

[33mcommit cb5fc61cbb2733aceecef35d47af1ed29e8152e7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 10 22:22:56 2018 +0000

    Remove Exception.message in our Python 3 builtins.
    
    --
    PiperOrigin-RevId: 192355923
    MOS_MIGRATED_REVID=192355923

[33mcommit dbec6a64c5f44f8c731c66838eee02ce0c9dd3a4[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Apr 10 21:00:44 2018 +0000

    Get attribute.py tests running in 2 and 3.
    
    Makes several fixes to convert.py to support primitive classes that differ in 2
    and 3.
    
    --
    PiperOrigin-RevId: 192341810
    MOS_MIGRATED_REVID=192341810

[33mcommit ba098abf88ed8fd3a8c66713836cfcd74c20c5ed[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Apr 10 02:46:11 2018 +0000

    Add an option to the print visitor to print function arguments one to a line.
    
    --
    PiperOrigin-RevId: 192228008
    MOS_MIGRATED_REVID=192228008

[33mcommit 173a3cf597f5b33f10e59c08fffb2866659fa36d[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Apr 10 02:04:03 2018 +0000

    Mark state.py 2-and-3 compatible.
    
    Also replace sys.maxint with sys.maxsize throughtout (the two are equally
    suitable for our purposes).
    
    --
    PiperOrigin-RevId: 192225004
    MOS_MIGRATED_REVID=192225004

[33mcommit f74e24dfad606b2ac40985c4b3fadb7373fb3f4f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 10 00:01:36 2018 +0000

    Verify that debug.py is 2-and-3 compatible.
    
    Expands debug_test.py to cover all of debug.py and changes to a 2and3 test.
    
    --
    PiperOrigin-RevId: 192211670
    MOS_MIGRATED_REVID=192211670

[33mcommit 4a2b585b9e8d8429b330af586e45f42f51893295[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Apr 9 19:19:45 2018 +0000

    Add support for the LOAD_CLASSDEREF opcode (new in 3.4)
    
    --
    PiperOrigin-RevId: 192166032
    MOS_MIGRATED_REVID=192166032

[33mcommit c9b78e8b8b35bc23b9f19303ca36722e868192b6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 9 19:03:31 2018 +0000

    Make pytd/main.py 2-and-3 compatible. (Also adds pytd/main_test.py.)
    
    --
    PiperOrigin-RevId: 192163613
    MOS_MIGRATED_REVID=192163613

[33mcommit f66f8a004dbb9674827a9ebafdeafcd598c3b62f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 9 17:56:02 2018 +0000

    Make metrics 2-and-3-compatible.
    
    --
    PiperOrigin-RevId: 192151645
    MOS_MIGRATED_REVID=192151645

[33mcommit b0e16954991be10af2f8595c242be324ae34c999[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Apr 9 17:13:19 2018 +0000

    Make blocks.py 2-and-3 compatible.
    
    Also add a compat module for functions that help with version compatibility.
    
    --
    PiperOrigin-RevId: 192145033
    MOS_MIGRATED_REVID=192145033

[33mcommit 1524bb3fb3f2d31ebc0fd76085ee9891373a10c1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 6 23:47:52 2018 +0000

    Make pytd/slots.py and pytd/transforms.py 2-and-3 compatible.
    
    --
    PiperOrigin-RevId: 191959195
    MOS_MIGRATED_REVID=191959195

[33mcommit f0be1fc2199eaefbc5b507170147877711f5bfc7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 6 23:36:48 2018 +0000

    Make pytd/serialize_ast.py 2-and-3 compatible.
    
    This module accesses the message attribute on a builtin exception several
    times, so I created a utils.message() function for this access.
    
    I *think* it's better to use utils.message() everywhere rather than
    also having a mixin to do the same thing, but I don't feel strongly about this,
    so if one of you would prefer to keep the mixin, I'll add it back.
    
    --
    PiperOrigin-RevId: 191958081
    MOS_MIGRATED_REVID=191958081

[33mcommit c88f1f498f68af95eb5fb6a6cbd544887bde510a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 6 23:20:27 2018 +0000

    Mark pytd/type_match.py as 2-and-3 compatible and delete pytd/demo.py.
    
    I'm really confused what happened to my last change that was supposed to make
    type_match_test a py2and3_test - maybe I sent out the CL and then accidentally
    switched to working on something else in the same client. Anyway, this one
    should actually do what it says. Also deletes a really old file that isn't
    referenced anywhere in the BUILD file.
    
    --
    PiperOrigin-RevId: 191956267
    MOS_MIGRATED_REVID=191956267

[33mcommit 90bc8e0617aaf1aba06f99b962f01a3e0d69f52f[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Apr 6 22:34:14 2018 +0000

    Make directors.py 2-and-3
    
    --
    PiperOrigin-RevId: 191950308
    MOS_MIGRATED_REVID=191950308

[33mcommit 21559be84e980cd0348add099d15fe39f258f350[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Fri Apr 6 22:17:00 2018 +0000

    Make pytd/typeshed[_test].py python2-and-3 compatible.
    
    This makes pyi/parse_typeshed_test.py also python2-and-3 compatible.
    
    --
    PiperOrigin-RevId: 191947950
    MOS_MIGRATED_REVID=191947950

[33mcommit a4e8a1edb49483f4d1c8a170dbac880a5a76de90[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Apr 6 21:39:54 2018 +0000

    Add a small config test, assert 2-and-3 compatibility.
    
    --
    PiperOrigin-RevId: 191942209
    MOS_MIGRATED_REVID=191942209

[33mcommit 2fc4ce16c252eed9a2efc2efed3029721405f8d1[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Fri Apr 6 21:00:12 2018 +0000

    Make pyi/lexer_test.py python2-and-3 compatible.
    
    --
    PiperOrigin-RevId: 191936238
    MOS_MIGRATED_REVID=191936238

[33mcommit a565d3d321ee00b7f4b2bfc24744acf73c5002e5[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Fri Apr 6 20:38:57 2018 +0000

    Make pyi/parser[_test].py python2-and-3 compatible.
    
    A new mixin to be used with Pytype's custom exceptions has
    been added. This mixin gives us a convenience attribute
    'message' on the exception classes.
    
    --
    PiperOrigin-RevId: 191933121
    MOS_MIGRATED_REVID=191933121

[33mcommit 869812114486386189def5142e816d885adde3f6[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Fri Apr 6 16:51:54 2018 +0000

    Make pytd/booleq.py python2-and-3 compatible.
    
    This change adds __hash__ methods two classes which define
    their own __eq__ method. In Python3, if a class defines its
    own __eq__ method, then the __hash__ method of the class
    gets set to None.
    
    --
    PiperOrigin-RevId: 191900856
    MOS_MIGRATED_REVID=191900856

[33mcommit e2e47bebee6c283739cfda6527bd75d930c2b0ba[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 6 06:10:52 2018 +0000

    Improve BoundFunction.__repr__ for Python 3.
    
    Fixes a minor annoyance where repr() sometimes printed two parent classes for
    a method, e.g., Bar.Foo.__init__() rather than Bar.__init__().
    
    --
    PiperOrigin-RevId: 191849179
    MOS_MIGRATED_REVID=191849179

[33mcommit 4c07c7a43bb5ea6dad166c89ac2bac63e00d1f07[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 5 22:17:58 2018 +0000

    Add an abc_hierarchy_test and verify that abc_hierarchy is 2-and-3 compatible.
    
    --
    PiperOrigin-RevId: 191806713
    MOS_MIGRATED_REVID=191806713

[33mcommit a9f77fc95cfd97e3159ca79b7165887a468d4597[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 5 20:53:56 2018 +0000

    Make pytd/visitors.py 2-and-3 compatible.
    
    --
    PiperOrigin-RevId: 191793083
    MOS_MIGRATED_REVID=191793083

[33mcommit 713ca0a334fa36ee5229399d6bdae383620156fb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 5 20:11:18 2018 +0000

    Make pytd/pytd.py 2-and-3 compatible.
    
    --
    PiperOrigin-RevId: 191786413
    MOS_MIGRATED_REVID=191786413

[33mcommit fe6cca6f00b77d5d14aea35609b23d2fe86fa6c8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 5 19:00:24 2018 +0000

    Make pytd/optimize.py 2-and-3 compatible.
    
    --
    PiperOrigin-RevId: 191776795
    MOS_MIGRATED_REVID=191776795

[33mcommit 13b70bb84661cbea0fd223b4375deb661db076bb[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Thu Apr 5 18:38:15 2018 +0000

    Convert to pytype:(builtins|node|preconditions)_test to py2and3_test.
    
    --
    PiperOrigin-RevId: 191773275
    MOS_MIGRATED_REVID=191773275

[33mcommit b9a1c47154939702e8fe7274081d70074c97359e[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Apr 5 18:10:16 2018 +0000

    Make pyc/* 2-and-3 compatible.
    
    --
    PiperOrigin-RevId: 191768358
    MOS_MIGRATED_REVID=191768358

[33mcommit d2a5f496df6c5e817956d8a6a530fa4e0365b525[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 5 08:28:54 2018 +0000

    Make utils 2-and-3 compatible.
    
    I realized that there are very few things one can port without
    dealing with libvm (and therefore pyc.opcodes), so I bit the
    bullet and made all the miscellaneous changes needed to make
    utils_test a py2and3_test.
    
    --
    PiperOrigin-RevId: 191708500
    MOS_MIGRATED_REVID=191708500

[33mcommit 22006753aa30756cab435202e1a9f5ce08396144[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 4 23:56:08 2018 +0000

    Make pytd_utils 2-and-3-compatible.
    
    Makes all the necessary changes to convert pytd_utils_test to a py2and3_test.
    Also makes one change to utils, but I was blocked from looking for any more
    issues by the fact that utils_test depends on pyc.opcodes.
    
    --
    PiperOrigin-RevId: 191669972
    MOS_MIGRATED_REVID=191669972

[33mcommit 73f284b9e8f57175c045191b4add4e172ab048f3[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Wed Mar 28 16:58:03 2018 +0000

    Support Python3 super call without arguments.
    
    The implementation mimics CPython's bytecode and C code
    dance which makes it possible to call super without arguments
    in CPython. Comments have been added to explain this dance.
    
    --
    PiperOrigin-RevId: 190787120
    MOS_MIGRATED_REVID=190787120

[33mcommit 04b71a40b8826fbf358f6d49a9ded452fc3840c7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 28 01:02:04 2018 +0000

    Implement BoundFunction.to_pytd_def().
    
    --
    PiperOrigin-RevId: 190705269
    MOS_MIGRATED_REVID=190705269

[33mcommit 0323b5f7b8c9a1520a96675cdf2c5fc71a9bb76e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 27 23:16:15 2018 +0000

    Fix non-deterministic hashing in node.py.
    
    --
    PiperOrigin-RevId: 190692053
    MOS_MIGRATED_REVID=190692053

[33mcommit ae7cc42b7d44650fa44fe4fb185dd46929410e93[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Mar 27 18:13:43 2018 +0000

    Support del for local and global variables.
    
    --
    PiperOrigin-RevId: 190642570
    MOS_MIGRATED_REVID=190642570

[33mcommit e9c5c7932da53a5c6e9cc9bce42477c591bd2c70[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Mar 26 01:04:34 2018 +0000

    Don't conflate Empty and Deleted.
    
    --
    PiperOrigin-RevId: 190404928
    MOS_MIGRATED_REVID=190404928

[33mcommit 17f50d71866bb14b54070e9c89ec5cd9406ba0c4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 22 01:04:40 2018 +0000

    Make memoryview a ContextManager.
    
    --
    PiperOrigin-RevId: 189999933
    MOS_MIGRATED_REVID=189999933

[33mcommit 7a2263ca706b2f9d7db1f32a44ae7bd8b3abd210[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Mar 22 00:02:17 2018 +0000

    Add support for multiple item unpacking in python 3.5+
    
    Example:
    def fn(a, b, **kwargs):
      print(a, b, c, d)
    fn(**{'a': 1, 'c': 3}, **{'b': 2, 'd': 4}, **{'e': 'f'})
    
    --
    PiperOrigin-RevId: 189992704
    MOS_MIGRATED_REVID=189992704

[33mcommit a8da10fe37e9fa27db1f2ad1c25a08e92edf2ce8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 21 18:22:06 2018 +0000

    Print nested proto classes in a prettier way in error messages.
    
    Instead of printing foo_pb2._Class_DOT_NestedClass, print
    foo_pb2.Class.NestedClass. It's not great that we have to make pytype aware of
    this hack used by proto_to_pyi, but there doesn't seem to be any other way to
    make this change, and without it, error messages look really strange.
    
    --
    PiperOrigin-RevId: 189938326
    MOS_MIGRATED_REVID=189938326

[33mcommit 49858b0e8eb3d63bdcc3c1485ed6732496083506[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 20 20:37:45 2018 +0000

    Remove obsolete none-attr error.
    
    --
    PiperOrigin-RevId: 189800340
    MOS_MIGRATED_REVID=189800340

[33mcommit 033d8ad106bdaf7c1c8273b7bfeac41f592351a8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 20 20:28:06 2018 +0000

    When handling slot names, only encode bytes, not unicode strings.
    
    Also changes SlotsTest.testSlotWithUnicode to escape the unicode
    characters, to match what happens when such characters are read in
    from a file.
    
    --
    PiperOrigin-RevId: 189798628
    MOS_MIGRATED_REVID=189798628

[33mcommit 4204e61663983cc3cb4b3891e35d454a8382655a[m
Author: B Sivachandra Reddy <sivachandra@google.com>
Date:   Tue Mar 20 17:58:15 2018 +0000

    Add a special case for converting boolean constants.
    
    The marked bug is the motivation for this change. Consider this example:
    
    def f():
      return True
    
    In Python 2, the byte code sequence for the function f is:
    
    LOAD_GLOBAL ...
    RETURN_VALUE ...
    
    In Python 3, the byte code sequence for f is:
    
    LOAD_CONST ...
    RETURN_VALUE ...
    
    The LOAD_GLOBAL flow does not use convert.constant_to_value, whereas
    LOAD_CONST flow does. This change adds support for converting boolean
    constants to convert.constant_to_value.
    
    --
    PiperOrigin-RevId: 189769803
    MOS_MIGRATED_REVID=189769803

[33mcommit 3039156c13e245c1752f0787502e6ca48c952f34[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Mar 19 23:02:12 2018 +0000

    Add ResourceWarning to builtins.pytd.
    
    --
    PiperOrigin-RevId: 189656838
    MOS_MIGRATED_REVID=189656838

[33mcommit 3dbdbe58ac666280f993ae2931106a58baf29dcb[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Mar 19 22:00:37 2018 +0000

    Shadow typeshed:{re,signal} in python3.
    
    --
    PiperOrigin-RevId: 189647023
    MOS_MIGRATED_REVID=189647023

[33mcommit bf525d08bc0c7b412c2c2a435d09944102dc900c[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Mar 19 20:20:08 2018 +0000

    FIX: Don't crash when a class constructor was skipped due to maximum_depth.
    
    --
    PiperOrigin-RevId: 189630739
    MOS_MIGRATED_REVID=189630739

[33mcommit ce9dc6f84b6ff8919b7e14fe329996d1ac3e3233[m
Author: Googler <noreply@google.com>
Date:   Mon Mar 19 16:27:22 2018 +0000

    pytype: Support `unicode` annotations for Python 2/3 compatibility
    
    When porting code to support both Python 2 and Python 3, it is common to
    add various __future__ declarations, including:
    
      from __future__ import unicode_literals
    
    This makes Python 2 default to all string literals being `unicode`
    instead of `str`, because this better approximates the Python 3
    environment.
    
    Unfortunately, when "string" annotations are used for delayed evaluation
    of pytype annotations, we get an error from code like this:
    
      class Foo(object):
        @classmethod
        def MakeFoo() -> 'Foo': ...
    
    Because pytype doesn't think that annotations can be unicode, it reports:
    
      Invalid type annotation "u'Foo'" for return [invalid-annotation]
    
    As a fix, pytype needs to understand the `unicode` type in Python 2, and
    be able to recognize it when it is used as an annotation literal.
    
    This requires fixing the `namedtuple` code to actually handle unicode field names, instead of silently ignoring them as unparsable constants.
    
    --
    PiperOrigin-RevId: 189593330
    MOS_MIGRATED_REVID=189593330

[33mcommit e0b48bb378a432edef941698c5373c975c955b83[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Mar 16 21:36:41 2018 +0000

    FIX: STORE_DEREF can access both cell vars and free vars.
    
    Fixes crash on use of 'nonlocal'. Also adds partial support for calling del on
    a cellvar.
    
    --
    PiperOrigin-RevId: 189395103
    MOS_MIGRATED_REVID=189395103

[33mcommit c1fdb6e2b5ee6f3663a55fe0fa370c9bc4301dda[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 15 23:46:10 2018 +0000

    Add a regression test for abc.abstractproperty in Python 3.
    
    --
    PiperOrigin-RevId: 189267450
    MOS_MIGRATED_REVID=189267450

[33mcommit 6e73c5eee7f62ef603c139cd705da013f5dc579a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 15 23:41:43 2018 +0000

    Fix a test broken by the typeshed update.
    
    --
    PiperOrigin-RevId: 189266941
    MOS_MIGRATED_REVID=189266941

[33mcommit fa4bf8a5af1f31169915a5620d7ac46e76e17600[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Mar 15 22:56:54 2018 +0000

    Add a couple of new python3 exceptions to builtins.
    
    --
    PiperOrigin-RevId: 189260513
    MOS_MIGRATED_REVID=189260513

[33mcommit e022931292d69c7a9c325150d44a2efa3c6d881f[m
Author: Googler <noreply@google.com>
Date:   Thu Mar 15 17:16:52 2018 +0000

    Add support for NewType.
    
    --
    PiperOrigin-RevId: 189204594
    MOS_MIGRATED_REVID=189204594

[33mcommit 8164860a245041d1eb8a0488260dd333d1c9e909[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Mar 15 00:04:04 2018 +0000

    Fix path to typeshed in Open Source pytype.
    
    In both the Open Source version as well as within [], typeshed is always a
    directory below pytype/. (in [], this happens via a Fileset)
    
    --
    PiperOrigin-RevId: 189110217
    MOS_MIGRATED_REVID=189110217

[33mcommit df49562cb8b2825a475b692e64fda2acde65be17[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Mar 13 23:45:17 2018 +0000

    Hack to support implicit creation of function annotation dicts in python 3.6+.
    
    We cannot typically pass around TypeVars as values, but in this one instance we
    do need to store dicts like {'arg': TypeParameter('T')} for a function
    annotated def f(arg: T) -> T.
    
    The problem is that
    
      T = TypeVar('T')
      a = {'typevar': T}
    
    and
    
      T = TypeVar('T')
      f(typevar: T) -> T
    
    both generate the same BUILD_CONST_KEY_MAP opcode; we would either need to
    store some vm-level context that we were creating a const-key map to hold
    function annotations, or special case abstract.Dict.__setitem__ as here.
    
    --
    PiperOrigin-RevId: 188951479
    MOS_MIGRATED_REVID=188951479

[33mcommit 790dea85d8bf8853d089f0af8443cc431023eff8[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Mar 13 22:04:15 2018 +0000

    FIX: Function argument handling in python 3.6 crashes on a typevar
    
    We create a keyword map via
      dict = <abstract.dict variable>
      vm.call_function(dict, "__setitem__", name, type)
    
    which crashes when we pass a typevar to __setitem__.
    
    --
    PiperOrigin-RevId: 188936114
    MOS_MIGRATED_REVID=188936114

[33mcommit be86f5c37821be2f43f9dea4c73c8ed88b56d34e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Mar 12 17:38:54 2018 +0000

    Have pytype print the full path name in error messages.
    
    Changes pytype to print
      File "a/b/c.py" ...
    rather than
      File "c.py" ...
    in error messages, which both fulfills a feature request and fixes a bug in
    which []_patch sometimes tried to patch the wrong filename.
    
    --
    PiperOrigin-RevId: 188742832
    MOS_MIGRATED_REVID=188742832

[33mcommit 9ce475e4173ac25f4823b8090722d6f77fc6fb3a[m
Author: Googler <noreply@google.com>
Date:   Fri Mar 9 18:25:05 2018 +0000

    Improve parser_ext error handling
    
    Calling PyObject_CallObject with an error set triggers an assert under python3.
    
    Save and restore the error instead of bailing early.
    If we exit before calling the function, we don't set the line number.
    
    But if we restore the error unconditionally, and there wasn't an error before we called the object *and* the call raises an exception, we'd wind up clobbering the exception with the empty error we stored initially, causing a "SystemError: error return without exception set"
    
    Tested:
    
    --
    PiperOrigin-RevId: 188501817
    MOS_MIGRATED_REVID=188501817

[33mcommit 165cdf4b0dca9dbcabbe17790569d4bd23e6b65f[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Mar 9 00:21:29 2018 +0000

    FIX: Handle late annotations for python 3.6
    
    --
    PiperOrigin-RevId: 188408602
    MOS_MIGRATED_REVID=188408602

[33mcommit b0f9585b7c27446aaec955f4df65c793e7649801[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Mar 9 00:10:18 2018 +0000

    Merge base class's PYI into subclass's PYI if base class will not be outputted.
    
    This ensures that type information will not be lost when a base class is not in
    global scope, e.g. a subclass of NamedTuple.
    
    --
    PiperOrigin-RevId: 188406993
    MOS_MIGRATED_REVID=188406993

[33mcommit b97bf303f76536e288904dea51f9462eb72eb3b4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 8 18:27:56 2018 +0000

    Replace class types with bounded type params when necessary.
    
    Changes the CreateTypeParametersForSignatures visitor to replace
    occurrences of a class X with TypeVar(bound=X) in all signatures
    that match (self: X[, ...) -> X.
    
    The downside of doing this replacement in a visitor is that we
    sometimes replace things we shouldn't - this is an issue for
    classes that define a __copy__ method, since the two common ways
    of copying an instance of X are type(self)(...) and X(...), and
    the latter we'll no longer analyze correctly.
    
    The upsides are that
    (1) it's a simple, clean change, and
    (2) we start inferring the right signatures for both
        ContextManager.__enter__ and namedtuple._replace. (For the
        latter, what happened was that I had to tweak collections_overlay
        to unbreak a test, and then realized that my tweak actually
        improved the signature of _replace.)
    So I think this change is a net improvement.
    
    --
    PiperOrigin-RevId: 188351572
    MOS_MIGRATED_REVID=188351572

[33mcommit adf5e2ec29c44787d105fcb97ea646ac69ca632b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 8 18:08:04 2018 +0000

    Be more judicious in our use of AdjustSelf(force=True).
    
    Previously, we were indiscriminately using force=True in
    various places, which is problematic now that we we want
    to add annotations like
      def __enter__(self: T, ...) -> T
    since AdjustSelf would remove the custom annotation.
    
    This changed uncovered a couple of incorrect tests, which
    I've fixed.
    
    Also deletes an unnecessary call to CanonicalOrdering()
    that I noticed in test_base.
    
    --
    PiperOrigin-RevId: 188348139
    MOS_MIGRATED_REVID=188348139

[33mcommit 7d363f2050b500979de18fcf5d373242b95a94fc[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 8 00:06:05 2018 +0000

    Rollback of commit d834e6afebc2a93d594098f5b769af8fa7e501c2.
    
    *** Reason for rollback ***
    
    Breaks //third_party/py/pytype:parser_test.
    
    *** Original change description ***
    
    Improve parser_ext error handling
    
    If an exception occurs before PyObject_CallObject is called, an assert fires.
    Avoid this by bailing out before CallObject if an error is set.
    
    Before: []
    
    ***
    
    --
    PiperOrigin-RevId: 188250289
    MOS_MIGRATED_REVID=188250289

[33mcommit 82846f6df11d5f1b89d9a60f3c77496269847c21[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Mar 7 22:34:06 2018 +0000

    Fix for erroneous stray-type-comment error in function comments.
    
    --
    PiperOrigin-RevId: 188235205
    MOS_MIGRATED_REVID=188235205

[33mcommit 4869e7fcfd807dbe8821c07b4ab0ac6fbe6f2a86[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 6 02:06:38 2018 +0000

    Add a __hash__ method to the base class for pytd nodes.
    
    --
    PiperOrigin-RevId: 187954703
    MOS_MIGRATED_REVID=187954703

[33mcommit d834e6afebc2a93d594098f5b769af8fa7e501c2[m
Author: Googler <noreply@google.com>
Date:   Tue Mar 6 01:19:20 2018 +0000

    Improve parser_ext error handling
    
    If an exception occurs before PyObject_CallObject is called, an assert fires.
    Avoid this by bailing out before CallObject if an error is set.
    
    Before:
    
    --
    PiperOrigin-RevId: 187949520
    MOS_MIGRATED_REVID=187949520

[33mcommit 5c518b2e2a26056da2fba23f55505c1fb2e90b9e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Mar 5 19:11:23 2018 +0000

    Some test cleanup (mostly Python 3-related).
    
    * Moves some Python 3 tests to more sensible locations, now that we have the
      ability to specify the Python version on a per-test basis. I tried to only
      move tests that pretty obviously didn't belong in a separate file - for
      example, if it was one of a pair that test the same thing in Python 2 and 3.
    * Deletes unnecessary line breaks in test_import.
    * Adds a comment to test_stdlib that was supposed to be there all along but
      got lost in a past [] sync.
    * Adds a lint-required blank line to test_type_comments.
    * Changes assertTrue(... in ...) to assertIn(...) in load_pytd_test_py3 (which
      has been merged with load_pytd_test).
    
    --
    PiperOrigin-RevId: 187893058
    MOS_MIGRATED_REVID=187893058

[33mcommit fccd077aaa59226a8e256938fb939b1817b5a83a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Mar 3 01:43:36 2018 +0000

    Print Optional[X] instead of Union[None, X] in error messages.
    
    --
    PiperOrigin-RevId: 187693878
    MOS_MIGRATED_REVID=187693878

[33mcommit 38fb5d8fa66abceb15cf022c16e3d752c91a1eed[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Mar 3 01:28:59 2018 +0000

    Rollback of commit b87b4d7db18f976a87c911c39d96b659a23e0c26.
    
    *** Reason for rollback ***
    
    Apologies for the churn. I did another build_all_pytype_targets about an hour ago and discovered only a handful of issues, all of which I already have CLs out for, so this time I really think this change can be applied.
    
    This is a pure rollback.
    
    *** Original change description ***
    
    Automated [] rollback of commit a6538a0d630c9a2f87a758f53a8fa4032d08c425.
    
    *** Reason for rollback ***
    
    I jumped the gun on submitting this change, as I discovered two bugs that
    needed to be fixed before doing a release. Those have been fixed, now, and
    I did a build_all_pytype_targets with this rollback patched in to confirm
    that everything looks reasonable.
    
    Note that this isn't quite a pure rollback - the original change contained
    two lint changes, and I've kept those to keep pylint happy.
    
    *** Original change descripti...
    
    ***
    
    --
    PiperOrigin-RevId: 187692578
    MOS_MIGRATED_REVID=187692578

[33mcommit 35be9ce5180b761729932070b31d148fbf49497c[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Mar 2 16:51:30 2018 +0000

    REFACTOR: Search for and merge function type comments in blocks.py, in the same
    place we handle variable type comments.
    
    --
    PiperOrigin-RevId: 187625009
    MOS_MIGRATED_REVID=187625009

[33mcommit b87b4d7db18f976a87c911c39d96b659a23e0c26[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 2 14:24:49 2018 +0000

    Rollback of commit a6538a0d630c9a2f87a758f53a8fa4032d08c425.
    
    *** Reason for rollback ***
    
    I jumped the gun on submitting this change, as I discovered two bugs that
    needed to be fixed before doing a release. Those have been fixed, now, and
    I did a build_all_pytype_targets with this rollback patched in to confirm
    that everything looks reasonable.
    
    Note that this isn't quite a pure rollback - the original change contained
    two lint changes, and I've kept those to keep pylint happy.
    
    *** Original change description ***
    
    Make --strict_none the default again.
    
    I'll submit this as soon as we reach a state in which pytype looks ready for
    release (which is hopefully the current state, but I'm doing a
    build_all_pytype_targets to check).
    
    I've left none_attr in errors.py because I realized that we need to delete
    occurrences of it in [] before removing it from our errors, or users
    will be bombarded with error messages about an invalid directive.
    
    Also makes a couple of minor changes suggested by gpylint.
    
    ***
    
    --
    PiperOrigin-RevId: 187612510
    MOS_MIGRATED_REVID=187612510

[33mcommit 23f4bd6d3c743e024931095fd15d8a8508d3092b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 2 07:52:16 2018 +0000

    Special-case List against Mapping in protocol matching.
    
    Detecting that a list isn't a mapping is especially tricky because it has all
    of the right methods; as far as I can tell, we have to compare
    
    __getitem__(self, int) -> T (list)
    __getitem__(self, K) -> V (mapping)
    
    and
    
    __iter__(self) -> Iterator[T] (list)
    __iter__(self) -> Iterator[K] (mapping)
    
    and notice that T is mapped to both V and K, which is illegal. I'd like to
    insert this workaround for now because the previous code was preventing
    functools.partial from matching Callable, which generated at least 39 false
    positives when I tried to prepare a release.
    
    --
    PiperOrigin-RevId: 187587006
    MOS_MIGRATED_REVID=187587006

[33mcommit 0becac1458dd5e666e04bd9d6fe9ba73fbfd547f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 2 01:08:27 2018 +0000

    Remove the 'object' annotation on the first argument to getattr().
    
    --
    PiperOrigin-RevId: 187557754
    MOS_MIGRATED_REVID=187557754

[33mcommit 498714f963ff81880d1f952e3f188757d5fb4ab7[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Mar 2 00:47:03 2018 +0000

    Allow multiple pytype directives in one line.
    
    --
    PiperOrigin-RevId: 187554755
    MOS_MIGRATED_REVID=187554755

[33mcommit a6538a0d630c9a2f87a758f53a8fa4032d08c425[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 1 23:46:58 2018 +0000

    Make --strict_none the default again.
    
    I'll submit this as soon as we reach a state in which pytype looks ready for
    release (which is hopefully the current state, but I'm doing a
    build_all_pytype_targets to check).
    
    I've left none_attr in errors.py because I realized that we need to delete
    occurrences of it in [] before removing it from our errors, or users
    will be bombarded with error messages about an invalid directive.
    
    Also makes a couple of minor changes suggested by gpylint.
    
    --
    PiperOrigin-RevId: 187546313
    MOS_MIGRATED_REVID=187546313

[33mcommit 3f48a410055b0980f69e46447cc9da4c358c682b[m
Author: Googler <noreply@google.com>
Date:   Thu Mar 1 21:58:58 2018 +0000

    Use python3-compatible imports
    
    --
    PiperOrigin-RevId: 187529522
    MOS_MIGRATED_REVID=187529522

[33mcommit 69c105e26203513d34577403c5a74d49c0f59f2d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 1 21:46:46 2018 +0000

    Change get_element_type to handle non-parameterized tuples and dicts.
    
    As it turns out, when a pyi file uses the shortcut "..." to indicate *args,
    a PyTD(tuple) is used as the varargs annotation.
    
    --
    PiperOrigin-RevId: 187527620
    MOS_MIGRATED_REVID=187527620

[33mcommit 734a783848e1aa10b92b5d723e7ccde6d4981dbd[m
Author: Googler <noreply@google.com>
Date:   Thu Mar 1 21:26:17 2018 +0000

    Make parser_ext build with python3
    
    e.g.
    
    --
    PiperOrigin-RevId: 187524585
    MOS_MIGRATED_REVID=187524585

[33mcommit 16e0c829e183d4cf26f07749bd349172e7fa3375[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Mar 1 20:04:55 2018 +0000

    Return varargs/kwargs type for extra arguments in Signature.iter_args.
    
    This allows SignedFunctions to type check varargs and kwargs.
    
    --
    PiperOrigin-RevId: 187512934
    MOS_MIGRATED_REVID=187512934

[33mcommit 046fc40d0d63ba7838b3795f3492cb547886bfb7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 28 19:00:33 2018 +0000

    Change the result of type(self) in __init__ to Any.
    
    This is an imperfect solution - it only works for __init__, and it
    means that if-splitting will no longer work for things like:
    
    def __init__(self):
      if type(self) is Foo:
        self.x = ...
      else:
        self.x = ...
    
    However, extending the solution to methods other than __init__ would
    make the code more complicated, since we would no longer be able to
    to take advantage of the existing callself_stack attribute. I don't
    see a way to keep the if-splitting.
    
    --
    PiperOrigin-RevId: 187350630
    MOS_MIGRATED_REVID=187350630

[33mcommit 6dd31d9ab23c3e8e21521dd26679df4f3b51ab47[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 28 18:41:10 2018 +0000

    Clean up some TODOs in the pytype code base.
    
    Applies TODOs when it is easy to do so, deletes ones that are
    out-of-date, and updates the description of one.
    
    #Squeegee
    
    --
    PiperOrigin-RevId: 187346577
    MOS_MIGRATED_REVID=187346577

[33mcommit c831090914a96c02083cdac8edb644ba4bf769bd[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Wed Feb 28 17:19:52 2018 +0000

    Enable type checking for *args and **kwargs for InterpreterFunctions.
    
    Currently only works when you explicitly pass starargs and starstarargs to the
    function, e.g. by explicitly passing a kwargs dict.
    
    --
    PiperOrigin-RevId: 187334211
    MOS_MIGRATED_REVID=187334211

[33mcommit 477e8abe5f0ead02407dbecfe8be4a26df79fa30[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 27 21:52:52 2018 +0000

    Fix a crash that happens when output.py converts a TypeParameterInstance.
    
    Because a TypeParameterInstance's 'instance' parameter isn't considered one of
    its children, it doesn't appear in the view, so we need to set the view to
    None before converting the instance to a pytd type.
    
    --
    PiperOrigin-RevId: 187226930
    MOS_MIGRATED_REVID=187226930

[33mcommit 9dbc20007fc8e0e19e7d494661440fd87d405430[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 27 18:16:24 2018 +0000

    Relax the expected type for the 'fields' arg to typing.NamedTuple.
    
    --
    PiperOrigin-RevId: 187193441
    MOS_MIGRATED_REVID=187193441

[33mcommit 2868facee79ee62ba1a1b65d410d1e3cb492a218[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Feb 26 22:27:42 2018 +0000

    Fix our [attribute-error] messages so that 'Any' doesn't swallow other options.
    
    --
    PiperOrigin-RevId: 187080989
    MOS_MIGRATED_REVID=187080989

[33mcommit 2f44d613443d6dba5e410e689f4c1e5c7e8a9775[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 23 18:39:44 2018 +0000

    Handle out of range indices in List.getitem_slot.
    
    --
    PiperOrigin-RevId: 186789913
    MOS_MIGRATED_REVID=186789913

[33mcommit 44e625e3a4a7483e6d261c5f862d780dd56fac9c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 23 02:51:19 2018 +0000

    Improve our pyi output for descriptors.
    
    The type of a descriptor attribute is the return type of the descriptor's
    __get__ method, similar to how a property's type is the return type of fget.
    
    --
    PiperOrigin-RevId: 186710941
    MOS_MIGRATED_REVID=186710941

[33mcommit 8ba20208bc05289fb3a2626d929c5705df639f3e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 23 00:46:06 2018 +0000

    Add a 'vm' attribute to output.Converter.
    
    --
    PiperOrigin-RevId: 186696263
    MOS_MIGRATED_REVID=186696263

[33mcommit 12ab60b78a856ecd15bd9f7cee08aa5a3c6df2e4[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Feb 22 23:29:55 2018 +0000

    Adds __getitem__ and __getslice__ slots to abstract.List.
    
    Also changes convert.py:value_to_constant to act more like isinstance, i.e.
    take a tuple of types.
    
    --
    PiperOrigin-RevId: 186684588
    MOS_MIGRATED_REVID=186684588

[33mcommit 992ac9be4266808acac115f4d3270ac08dea67fb[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Feb 22 23:22:44 2018 +0000

    If a type comment is attached to a line with multiple opcodes, select the last
    STORE_* opcode to attach it to.
    
    --
    PiperOrigin-RevId: 186683467
    MOS_MIGRATED_REVID=186683467

[33mcommit 2b53d64bfe7a43eae5469bed9555996964c1f033[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 22 07:32:47 2018 +0000

    Fix a corner case in which Instance.__init__ could cause infinite recursion.
    
    For a class definition like
      class Foo(ContextManager[Foo], Iterable[bytes]): ...
    where ContextManager and Iterable share the same type parameter, we give the
    parameter a value of Any. Using merge_type_parameter() meant that we evaluated
    the parameter's value while overwriting it with Any, so Foo tried to
    instantiate ContextManager[Foo], crashing pytype.
    
    Instead, we'll overwrite the dict value directly, explicitly using
    dict.__setitem__ so that the type parameters dict doesn't complain about our
    replacing the variable (which is usually a bad idea).
    
    --
    PiperOrigin-RevId: 186573240
    MOS_MIGRATED_REVID=186573240

[33mcommit 6bbdd036f64c48d06bd94e5cfd9d7edc9c4343ef[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 21 21:36:18 2018 +0000

    Handle Instance(dict) more precisely in abstract.Dict.update().
    
    --
    PiperOrigin-RevId: 186511738
    MOS_MIGRATED_REVID=186511738

[33mcommit 2bd67eed228f506dfea805d71a226ac9fbc9bb0e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 20 20:52:16 2018 +0000

    Revert a change that caused a performance regression.
    
    This change caused our Kessel Run numbers to jump from ~250s to ~350s.
    
    --
    PiperOrigin-RevId: 186347785
    MOS_MIGRATED_REVID=186347785

[33mcommit 01f0f6a7df2ca46bad8cb9c43a6d3d462efc4860[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Feb 16 23:15:39 2018 +0000

    Define a common base class for special builtin classes.
    
    --
    PiperOrigin-RevId: 186053657
    MOS_MIGRATED_REVID=186053657

[33mcommit 6e82bbd95c0cd135e2348f32a4729b27992745e6[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Feb 16 19:57:44 2018 +0000

    Add a CFG node before and after storing a value in STORE_* bytecodes.
    
    --
    PiperOrigin-RevId: 186026902
    MOS_MIGRATED_REVID=186026902

[33mcommit 7e71aa31a5ad75ea2b855c1c2ededd42aa00994e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 16 19:56:44 2018 +0000

    Add bare-bones support for typing.ClassVar.
    
    Adds just enough support for pytype to handle ClassVar gracefully. We'll
    report [not-supported-yet] for usages of ClassVar in Python files, and we'll
    convert a ClassVar in a pyi file to its inner type.
    
    --
    PiperOrigin-RevId: 186026782
    MOS_MIGRATED_REVID=186026782

[33mcommit b6a5ff547fcbd935771aad7baf4638af773696bd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 16 18:53:49 2018 +0000

    Make attribute checking stricter around VirtualMachine._get_iter().
    
    While looking at _get_iter(), I noticed that it didn't handle attribute errors
    as strictly as a normal attribute lookup, so this change fixes that.
    
    --
    PiperOrigin-RevId: 186017505
    MOS_MIGRATED_REVID=186017505

[33mcommit 33929b9852c0b0892bff5a6768a28be6cf7e4007[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 16 18:49:24 2018 +0000

    Fix a bug in our implementation of GET_ITER.
    
    We were fetching "__iter__" from the object, when we should be getting it from
    the object's class.
    
    --
    PiperOrigin-RevId: 186016834
    MOS_MIGRATED_REVID=186016834

[33mcommit 6571daa06cea8a1bd0cf89fce627619a60cb8cb3[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 16 00:22:04 2018 +0000

    Don't check 'self' when matching protocol methods.
    
    We failed to match PyTD classes against parameterized protocols because we
    would, e.g., match
      def __iter__(self: Foo): ...
    against
      def __iter__(self: Iterable[T]): ...
    and pytype would try to enforce contravariance of the 'self' argument.
    
    Fixing this bug flushed out another that caused us to think that List
    satisfies the Mapping protocol, so I added a check in _match_against_protocol
    to prevent that.
    
    --
    PiperOrigin-RevId: 185920569
    MOS_MIGRATED_REVID=185920569

[33mcommit 92a2a4390c4d7e1d7b433dd94064d9d43bf66613[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Feb 15 23:29:48 2018 +0000

    Remove special handling of "object" in matcher.py.
    
    --
    PiperOrigin-RevId: 185912150
    MOS_MIGRATED_REVID=185912150

[33mcommit 4346106707ccd61c1e1fc8d7417b70c5e8e0b733[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Feb 15 23:17:33 2018 +0000

    Deque fixes:
    * Add an initializer for typing.Deque
    * Mark collections.deque as generic
    
    --
    PiperOrigin-RevId: 185910070
    MOS_MIGRATED_REVID=185910070

[33mcommit 0dbc1f7a5dcd59395d7b42a9f93ea35193da80a0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 15 22:03:22 2018 +0000

    Add a 'vm' attribute to matcher.AbstractMatcher.
    
    Always having to get the vm from one of the values being matched was getting a
    little silly.
    
    --
    PiperOrigin-RevId: 185896609
    MOS_MIGRATED_REVID=185896609

[33mcommit 613db58365f34b2308f32e20fb89dc65b22e2910[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Feb 15 21:40:17 2018 +0000

    Fix descriptor support for super().
    
    * Add an implementation of __get__ that delegates to the superclass's __get__.
    * Remove the default implementation of super().__set__ (raise an
        attribute-error instead)
    
    --
    PiperOrigin-RevId: 185892905
    MOS_MIGRATED_REVID=185892905

[33mcommit 0cb10c1fef728aaa5f0cd78676ec2b9f1056de3d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 15 20:00:27 2018 +0000

    Fix pytype's handling of list.extend(empty).
    
    There were two bugs here:
    * __builtin__.pytd contained two definitions of list.extend, so pytype didn't
      know which one to use.
    * When we matched empty against a container with type parameters, we mutated
      the parameters to unsolvable instead of empty.
    
    --
    PiperOrigin-RevId: 185877048
    MOS_MIGRATED_REVID=185877048

[33mcommit 801101262fbe846935e41db276224417889cf0d6[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Feb 15 13:56:41 2018 +0000

    Use "Any", not "object", for the default type of parameters.
    
    --
    PiperOrigin-RevId: 185826571
    MOS_MIGRATED_REVID=185826571

[33mcommit 42287ce295cf405417b812d8e57c07f927ae837b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Feb 14 22:24:31 2018 +0000

    Be more careful about matching type parameters against each other.
    
    --
    PiperOrigin-RevId: 185744669
    MOS_MIGRATED_REVID=185744669

[33mcommit 5dd526d9711943cd5fc03a961a0764d529fc4ced[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 14 02:33:29 2018 +0000

    Unbreak pytype tests.
    
    --
    PiperOrigin-RevId: 185622116
    MOS_MIGRATED_REVID=185622116

[33mcommit d125df6686c9c0900ef60a6d7084d95db0c6fe5b[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Feb 14 00:21:18 2018 +0000

    Rollback of commit 4ecff01f442b6118333ba14d4938e2407c470503.
    
    *** Reason for rollback ***
    
    Temporarily roll this back while releasing a new version of pytype.
    
    *** Original change description ***
    
    Turn on --strict_none by default.
    
    Our false positive rate for --strict_none is down to 10% - in my latest
    build_all_pytype_targets sample, pytype found 66 real user errors and 7 false
    positives (five of which I already knew about).
    
    ***
    
    --
    PiperOrigin-RevId: 185606624
    MOS_MIGRATED_REVID=185606624

[33mcommit 34f4782f9c5721542dde10650d9873381bf03380[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 13 20:06:55 2018 +0000

    Check for wrong ellipses in annotation container parameters.
    
    Previously, we tried to be as permissive as possible, either
    converting '...' to 'Any' or stripping it off the end of a
    parameter list. However, most of these variations cause runtime
    errors in Python 3, so make them pytype errors as well.
    
    --
    PiperOrigin-RevId: 185567014
    MOS_MIGRATED_REVID=185567014

[33mcommit e1aa5d5d989d6c9e8a7d43a0cf738c21c410e7a0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 13 19:24:09 2018 +0000

    Handle Python 3 bytestrings properly in loadmarshal.py.
    
    Create a str subclass, BytesPy3, to mark Python 3 bytestrings, and teach
    convert.py to convert BytesPy3 to an instance of __builtin__.bytes.
    
    Also changes loadmarshal_test.py to test both Python 2 and 3 when a version
    isn't specified for loadmarshal.loads(), and to check types when comparing
    strings, since assertEqual() treats "foo" and u"foo" as equal. This change
    catches a bug in the test - test_load_interned and test_load_unknown tested
    the same input but declared different expected outputs ('test' vs. u'test').
    
    Changes 'bytes("foo", "utf-8")' to 'b"foo"' in all of the Python 3 tests that
    used the former only because of this bug.
    
    --
    PiperOrigin-RevId: 185560192
    MOS_MIGRATED_REVID=185560192

[33mcommit 2124406422d9b4d2afde97e2d44c43c734c492ac[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Feb 13 01:16:24 2018 +0000

    Add support for the abc.abstractproperty decorator.
    
    Also fixes a bug where classes with abstract properties were not marked abstract.
    
    --
    PiperOrigin-RevId: 185461122
    MOS_MIGRATED_REVID=185461122

[33mcommit b13feaae0147d7c6da74bb04fe79025721ffcdf6[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue Feb 13 00:03:12 2018 +0000

    Use local namespace when evaluating type annotations and comments.
    
    --
    PiperOrigin-RevId: 185450801
    MOS_MIGRATED_REVID=185450801

[33mcommit cee0f8401bc73964c4523350abcdb616f0183e86[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Feb 12 19:48:34 2018 +0000

    Fix the definition of str.__new__ in our Python 3 version of __builtin__.pytd.
    
    --
    PiperOrigin-RevId: 185410956
    MOS_MIGRATED_REVID=185410956

[33mcommit 93697620fe756f7a384e10b5a493edf49d89047b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 9 23:05:38 2018 +0000

    Move collections tests from test_python36 to test_stdlib.
    
    --
    PiperOrigin-RevId: 185198808
    MOS_MIGRATED_REVID=185198808

[33mcommit 02cdae31abc101eb2e444cd38e85308be8a3d2ee[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 9 22:53:22 2018 +0000

    Add a python_version option to tests.
    
    Adds python_version as an optional argument to our test methods, and moves a
    test from test_python36 to test_exceptions to verify that the argument works.
    
    --
    PiperOrigin-RevId: 185197125
    MOS_MIGRATED_REVID=185197125

[33mcommit 817364cb202fd162b1737fc24c0c41a13ff345d5[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Feb 9 22:48:55 2018 +0000

    Make sure pythonpath is empty when generating and exporting builtins.
    
    --
    PiperOrigin-RevId: 185196533
    MOS_MIGRATED_REVID=185196533

[33mcommit 3b9186472b8cae3511e11ef385e9be7e3c076923[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 9 22:37:30 2018 +0000

    Refactor some code around the creation of the pytd loader.
    
    I'm adding a python_version option to tests. This change contains
    all the refactorings that will make that addition possible.
    
    * Move create_loader() and associated helpers to load_pytd.
    * Set module_name to the right value in config.py, instead of
      changing it in check/infer_types.
    * Set tests' PYTHON_EXE attribute in setUpClass so that
      subclasses can override just PYTHON_VERSION.
    * Do all loader creation in test_base in a new _CreateLoader() method.
    * Get rid of the (unused) version argument to assertTypesMatchPytd.
    
    --
    PiperOrigin-RevId: 185194943
    MOS_MIGRATED_REVID=185194943

[33mcommit 5bef1b114917ef458b5c282b16036ba153cc259a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Feb 9 21:24:52 2018 +0000

    fix ambiguous "cls" parameter in @classmethod
    
    --
    PiperOrigin-RevId: 185184082
    MOS_MIGRATED_REVID=185184082

[33mcommit 0197629214c878974d47faa5591eaea6eecbb3e0[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Feb 9 19:27:12 2018 +0000

    Don't crash if matching a method on a generic class against a Callable.
    
    --
    PiperOrigin-RevId: 185168504
    MOS_MIGRATED_REVID=185168504

[33mcommit 63bcc2d3a4523aa7424123f6e847a08f661d057f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 9 07:26:38 2018 +0000

    Fix some behavior involving dict views.
    
    dict_{keys, items, values} should inherit from the appropriate MappingView
    subclasses. In Python 3, iter/view{keys, items, values} don't exist and the
    regular keys, items, and values methods return views.
    
    --
    PiperOrigin-RevId: 185103640
    MOS_MIGRATED_REVID=185103640

[33mcommit ad6fdb88db8b7d68dc6bb36d5c40a1238d08d47d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 9 07:22:36 2018 +0000

    Alias classes in collections.pytd to the corresponding ones in typing.pytd.
    
    --
    PiperOrigin-RevId: 185103457
    MOS_MIGRATED_REVID=185103457

[33mcommit eb4432e147f7b0ddf03e33b8e964b1a3078476c4[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Feb 9 00:09:30 2018 +0000

    Pretty print a cfg tree with a list of bindings at each node.
    
    Useful when trying to debug solver issues with few variables.
    
    --
    PiperOrigin-RevId: 185068389
    MOS_MIGRATED_REVID=185068389

[33mcommit e06ef8868170317c1880cb4f5e70f07950520eab[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 8 22:54:03 2018 +0000

    Add more function parameter information to init_class's instance cache.
    
    Adds the current function's first opcode and the current parameter's name to
    the key used by init_class() so that identical-looking parameters don't share
    an instance.
    
    Also gets rid of analyze.py's create_argument() method. The arguments it
    created were being overwritten by InterpreterFunction.call() anyway.
    
    --
    PiperOrigin-RevId: 185056571
    MOS_MIGRATED_REVID=185056571

[33mcommit 06bfd1d1c78c040674a3188c23ee36fb4b535ccf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 8 19:29:06 2018 +0000

    Make our test files more consistent in using snake_case vs. camelCase.
    
    I don't care which is used, but it's a small pet peeve of mine when there's a
    mix of both in the same file. When this occurs, switch everything to the style
    that's more common in that file.
    
    --
    PiperOrigin-RevId: 185024797
    MOS_MIGRATED_REVID=185024797

[33mcommit 4d5b78c6df13b373b23cf36d605927155430a2d5[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Feb 8 17:50:48 2018 +0000

    Prevent containers with TypeVars from being passed to functions.
    
    Raises an error if a value containing a TypeVar (a formal value) is passed to a
    function.
    
    --
    PiperOrigin-RevId: 185009131
    MOS_MIGRATED_REVID=185009131

[33mcommit 7d2b284369e57a0ed80ec4c6aa4cd9e62d8914cc[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 7 23:53:50 2018 +0000

    Output Generator[X, None, None] instead of Generator[X, nothing, nothing].
    
    In Python 3, the send and return types can be non-None, but I checked and we
    don't support send and return at all, so it doesn't make sense to worry about
    what types we generate in those cases just yet.
    
    --
    PiperOrigin-RevId: 184910368
    MOS_MIGRATED_REVID=184910368

[33mcommit fa7d0bb9a04ebf28d0fbee598323bc5dd23979e9[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Feb 7 23:51:41 2018 +0000

    Fix for extended arg handling.
    
    An EXTENDED_ARG opcode should be marked as the start of the opcode it applies
    to.
    
    --
    PiperOrigin-RevId: 184910081
    MOS_MIGRATED_REVID=184910081

[33mcommit 01d8f3a565c8f4c6bf77c730c47da6ba6febc75e[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Feb 7 23:18:14 2018 +0000

    Don't expand variable options directly into the MRO chain.
    
    Pick an arbitrary (but deterministic) element instead.
    
    --
    PiperOrigin-RevId: 184905025
    MOS_MIGRATED_REVID=184905025

[33mcommit 8b3474492090259a0d73c3f7338d64dad0165bf4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 7 22:47:49 2018 +0000

    Don't confuse module aliases with classes with the same name.
    
    LookupExternalTypes is used on both asts parsed from pyi files
    (which can contain module aliases) and the ast inferred by pytype
    (which cannot). In the latter case, if the Python file contains:
      from foo import bar
      class foo: ...
    pytype puts 'foo' in the module map, so - even though module foo
    isn't in the namespace - pytype confuses module foo and class foo.
    Avoid this problem by introducing a module alias only when we're
    actually inside an alias and the name is fully-qualified (which
    means the ast was parsed).
    
    --
    PiperOrigin-RevId: 184899701
    MOS_MIGRATED_REVID=184899701

[33mcommit 939c6de2fbfc4c8cac16438e9781acff609d8eb8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 7 22:40:48 2018 +0000

    Improve how output.py converts type parameter values.
    
    When a type parameter value is `unsolvable`, output.py should check the class
    to see if there is a more specific type there.
    
    --
    PiperOrigin-RevId: 184898522
    MOS_MIGRATED_REVID=184898522

[33mcommit cacb7fe668f485d087810d55fe41fb733a2f9ce1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 7 01:57:12 2018 +0000

    Remove full_names option from LookupExternalTypes.
    
    This option was always set to True, except in test code, so massage our test
    code to work with full_names=True and then remove the option.
    
    --
    PiperOrigin-RevId: 184770734
    MOS_MIGRATED_REVID=184770734

[33mcommit a80578d2786a49bdeed2f64ff59b1292d2d9f111[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Feb 6 23:07:12 2018 +0000

    Inherit has_dynamic_attributes from superclasses.
    
    --
    PiperOrigin-RevId: 184747476
    MOS_MIGRATED_REVID=184747476

[33mcommit d8a40d3f63e95763270631e160365347bdd7a757[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Feb 6 22:29:30 2018 +0000

    Fix for setup.py - paths for package_data need to be relative to pytype/
    
    --
    PiperOrigin-RevId: 184740760
    MOS_MIGRATED_REVID=184740760

[33mcommit 8c367076f13074e29f847104e5f2765d1891436f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 6 21:03:54 2018 +0000

    Delete init_type_parameters() and make initialize_type_parameter() private.
    
    The first method is no longer necessary, now that we already initialize unbound
    type parameters to empty variables in Instance.__init__.
    
    The second method shouldn't need to be public, since after __init__ there
    won't be any uninitialized type parameters left to use this method on.
    
    --
    PiperOrigin-RevId: 184726056
    MOS_MIGRATED_REVID=184726056

[33mcommit 6d5e9196299c9bca002f1639c11bcc9bfdaa1024[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Feb 6 19:32:28 2018 +0000

    Add support for six.with_metaclass.
    
    --
    PiperOrigin-RevId: 184712540
    MOS_MIGRATED_REVID=184712540

[33mcommit e9dae2fd56097626d8871f29fa45726a262de14f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 6 19:13:37 2018 +0000

    Always initialize unbound type parameters in Instance.__init__.
    
    Our previous isinstance(cls, InterpreterClass) check was a workaround.
    * Removes the isinstance() check so that unbound params are always initialized.
    * Uses merge_type_parameter() instead of initialize_type_parameter() in a
      bunch of places, since the param is now previously initialized. Removes
      initialize_type_parameter() calls that simply set the type parameter to an
      empty variable.
    * Initializes unspecified type parameters in convert.py - we should have been
      doing this all along, and now that the type parameters are initially set to
      an empty variable, we get `nothing` parameters intead of `Any` if we forget
      this initialization.
    * Changes tests to reflect that we now infer Generator[X, nothing, nothing]
      instead of Generator[X, Any, Any] in a bunch of places. The new inference
      is more correct.
    
    --
    PiperOrigin-RevId: 184709327
    MOS_MIGRATED_REVID=184709327

[33mcommit 3aa76e6164869fc5eaafad0d2bec6350715f14d7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 6 19:11:05 2018 +0000

    Handle TypeParameter.bound in output.py.
    
    We were masking this problem by initializing type parameters to their upper
    bound, when we should be handling the bound when converting to a pytd type.
    
    --
    PiperOrigin-RevId: 184708938
    MOS_MIGRATED_REVID=184708938

[33mcommit 672638c943f939bc1e6ddc173410657811f0271f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 6 19:02:25 2018 +0000

    Fix a bug in our error message printing.
    
    Found while trying to change how abstract.List initializes its type parameter.
    For
      lst = [str]
      lst[0] = [int]
    we printed '[str or int]', which deceptively looks correct, but we don't
    actually do position-aware __setitem__ on lists - what's happening is that
    we're adding an int binding to the pyval entry (which is also a bug - to be
    fixed in an upcoming change). The best pytype can do in this case is
    'instance of List[Type[int or str]]'.
    
    --
    PiperOrigin-RevId: 184707359
    MOS_MIGRATED_REVID=184707359

[33mcommit f0f143e8a5bd7ffb7dec0c3411a869575b21f446[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Feb 6 18:57:31 2018 +0000

    Handle type annotations for assignment to a cell variable.
    
    (Cell variables compile to STORE_DEREF rather than STORE_NAME)
    
    --
    PiperOrigin-RevId: 184706462
    MOS_MIGRATED_REVID=184706462

[33mcommit 01ca4ef96d44d520d06e34e388f71a39b1e6647b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 6 17:39:21 2018 +0000

    Delete a bit of obsolete code.
    
    In convert.py, we had
      if isinstance(cls, pytd.Class) and cls.template:
        ...
      elif isinstance(cls, pytd.Class):
        ...
        instance.make_template_unsolvable(cls.template, ...)
    The call to make_template_unsolvable is unnecessary. Since
    this call is the only one, the method itself can be deleted.
    
    --
    PiperOrigin-RevId: 184693543
    MOS_MIGRATED_REVID=184693543

[33mcommit 4394cffee2736cc8e270782acd09f4092422a3ca[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Feb 6 00:07:56 2018 +0000

    Fix the path search for pytd files in setup.py
    
    --
    PiperOrigin-RevId: 184601966
    MOS_MIGRATED_REVID=184601966

[33mcommit 284f4f29d6f2c1c816c7fd6a3ab2c0e5b00bfa2a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Feb 5 19:51:25 2018 +0000

    Use annotations_util to handle edge cases in NamedTuple field types.
    
    Pulls out part of convert_function_annotations() into a new utility function
    that we use for NamedTuple field types.
    
    Tweaks the assertion error that we triggered in attribute.py to print the
    actual class, to make future debugging easier.
    
    Uses pytd.Module.Lookup(), pytd.Print(), and assertMultiLineEqual() instead of
    assertTypesMatchPytd() in tests so that we can check a function signature
    without type-checking the entire NamedTuple definition as well.
    
    --
    PiperOrigin-RevId: 184562716
    MOS_MIGRATED_REVID=184562716

[33mcommit d66daf988a45c55eaf03eee9379fb358a1b991ac[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Feb 3 19:36:03 2018 +0000

    Clean up some skipped tests.
    
    * Unskips tests that can be unskipped.
    * Moves Python 3 tests to test_python3.
    * Deletes tests for our old non-protocol inference.
    
    --
    PiperOrigin-RevId: 184404479
    MOS_MIGRATED_REVID=184404479

[33mcommit 7a04b2ea514731d7e0b479e9a8eaceaf4b540383[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 2 17:54:57 2018 +0000

    Take non-method class attributes into account in protocol matching.
    
    list.__hash__ is defined in Python as a constant with value None, so we
    should do that in our pytd file as well. Also updates our protocol matching
    to handle constants.
    
    --
    PiperOrigin-RevId: 184295798
    MOS_MIGRATED_REVID=184295798

[33mcommit cc7494af491cc20ead9fc2274238e637c0a27783[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Fri Feb 2 14:47:51 2018 +0000

    Remove non-determinism from pytypes saving file functionality.
    
    From:
    "The mtime argument is an optional numeric timestamp to be written to the stream when compressing. All gzip compressed streams are required to contain a timestamp. If omitted or None, the current time is used. This module ignores the timestamp when decompressing; however, some programs, such as gunzip, make use of it. The format of the timestamp is the same as that of the return value of time.time() and of the st_mtime attribute of the object returned by os.stat()."
    
    This CL passes the mtime parameter to an old but stable value.
    As we use gzip to unzip the files and the value is therefore never read this is not a problem.
    
    I used three runs of /google/data/ro/projects/devtools/blaze/check_determinism.par -- devtools/python/blaze/pytype:precompiled_builtins_2 to check that this fix works. The actual test used some more patches to make check_determinsm behave like --define PYTYPE=DEV would have been passed.
    
    Also unknown commit was patched in.
    
    --
    PiperOrigin-RevId: 184278615
    MOS_MIGRATED_REVID=184278615

[33mcommit 0100595d6b12edaae56c8967169f6f78a80021d2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 2 00:06:16 2018 +0000

    Make our attribute error messages a little nicer.
    
    "No attribute 'foo' on None" is pretty unhelpful when it's not
    obvious from the attribute name what the type should be. Since
    it's more common for None to be one among multiple options than
    the only option, we can be more helpful by printing the full type:
    
    No attribute 'foo' on None
      In Optional[X]
    
    Also fixes a small bug where we used attribute_error instead of
    attribute_or_module_error when logging attribute errors for
    __iter__, and renames attribute_or_module_error to attribute_error
    to make such bugs less likely in the future.
    
    --
    PiperOrigin-RevId: 184210218
    MOS_MIGRATED_REVID=184210218

[33mcommit 4ecff01f442b6118333ba14d4938e2407c470503[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 2 00:01:31 2018 +0000

    Turn on --strict_none by default.
    
    Our false positive rate for --strict_none is down to 10% - in my latest
    build_all_pytype_targets sample, pytype found 66 real user errors and 7 false
    positives (five of which I already knew about).
    
    --
    PiperOrigin-RevId: 184209450
    MOS_MIGRATED_REVID=184209450

[33mcommit 7f30379fcd8943645b445997b0d0f8c1ae50783e[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Feb 1 23:44:21 2018 +0000

    Adds support for typing.NamedTuple.
    
    --
    PiperOrigin-RevId: 184207070
    MOS_MIGRATED_REVID=184207070

[33mcommit 503fe9857e74183d11c87a290bd88aaf1399ba36[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 1 23:34:56 2018 +0000

    Rollback of commit 9fb9d2e890c4dba8796916ac252867610eb14ff9.
    
    *** Reason for rollback ***
    
    try/except needed for typeshed.
    
    *** Original change description ***
    
    Remove the try/except around the tracemalloc import in metrics.py.
    
    ***
    
    --
    PiperOrigin-RevId: 184205559
    MOS_MIGRATED_REVID=184205559

[33mcommit 7781feb36226e884cc1b003edad8238bd81c3295[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Wed Jan 31 20:35:08 2018 +0000

    Fix unnecessary typing.Any import when **kwargs is annotated with Any.
    Also remove extra pytd.Print call from main.py.
    
    --
    PiperOrigin-RevId: 184030666
    MOS_MIGRATED_REVID=184030666

[33mcommit 4f6c5d9c545447522853ed10180808b95c25cdca[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 31 20:26:27 2018 +0000

    Remove some redundant __len__ methods from 3/__builtin__.pytd.
    
    --
    PiperOrigin-RevId: 184029667
    MOS_MIGRATED_REVID=184029667

[33mcommit 3ec374e108fc5f63ec9a9596d741d41fe6b6a9a2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 31 20:21:46 2018 +0000

    Add __setitem__ to __builtin__.bytearray.
    
    Bytearrays are mutable, which means they should have __setitem__ and
    (in Python 2) __setslice__.
    
    Also fixes a couple bugs in memoryview, does a version check before defining
    __setslice__ on MutableSequence, makes the definition of __setslice__ a little
    more precise, and corrects some inconsistent indentation in typing.pytd.
    
    --
    PiperOrigin-RevId: 184029095
    MOS_MIGRATED_REVID=184029095

[33mcommit 872c92f0ce1c7c5b9183ee3db693aa1afe86b81a[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Jan 31 20:16:10 2018 +0000

    Mark NamedTypes imported from external modules so we do not prefix them with
    the current module's name.
    
    --
    PiperOrigin-RevId: 184028265
    MOS_MIGRATED_REVID=184028265

[33mcommit 6c3af4fd0fdbbdeec2c4a675a7aba747e5efe2af[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 31 20:01:28 2018 +0000

    Remove buffer, which doesn't exist in Python 3, from 3/__builtin__.pytd.
    
    --
    PiperOrigin-RevId: 184025812
    MOS_MIGRATED_REVID=184025812

[33mcommit fb1c7c4268703c916ac00aab831d2dd556347888[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 30 21:55:28 2018 +0000

    Add a pop slot to abstract.Dict so that if-splitting works after a pop.
    
    --
    PiperOrigin-RevId: 183886465
    MOS_MIGRATED_REVID=183886465

[33mcommit bf5af02bf9624b217068314cfdd2f0d3b3b13fe0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 30 19:47:53 2018 +0000

    Add __len__ to various builtin classes.
    
    Sized.__len__ is an abstract method, so we need to add a concrete __len__ to
    instantiable classes; otherwise, it's possible to use multiple inheritance to
    trick pytype into thinking subclasses of some builtins aren't instantiable.
    
    Also adds __getitem__ to Dict for the same reason, and removes Iterable from
    the parents of buffer because buffer implements __getitem__, not __iter__, and
    that confuses pytype.
    
    --
    PiperOrigin-RevId: 183867061
    MOS_MIGRATED_REVID=183867061

[33mcommit 082a67f47a8b7a65397bf763bf68bc49ac8d2a46[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue Jan 30 17:38:28 2018 +0000

    Add abstract.SignedFunction and abstract.SimpleFunction classes, needed for typing.NamedTuple.
    
    --
    PiperOrigin-RevId: 183844463
    MOS_MIGRATED_REVID=183844463

[33mcommit 7b78db0d7ae15f4a91277b72be1c14e2d0ff673d[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Jan 30 00:05:57 2018 +0000

    FIX: Shift-reduce conflict around parsing tuple literals in pyi files.
    
    --
    PiperOrigin-RevId: 183744361
    MOS_MIGRATED_REVID=183744361

[33mcommit 6f2473d71a247062abe5d0b3652104923993fa32[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Mon Jan 29 22:43:11 2018 +0000

    Fix InterpreterFunction._build_signature.
    
    function.Signature is supposed to have tuples for param_names and kwonly.
    
    --
    PiperOrigin-RevId: 183730677
    MOS_MIGRATED_REVID=183730677

[33mcommit 85e43442940e6d236d2b6ed655181c0fd44850d9[m
Author: Googler <noreply@google.com>
Date:   Mon Jan 29 22:32:19 2018 +0000

    Cleanups for lexer
    
    Fix usage of a deprecated bison option.
    Fix a missing semicolon that was masked by bison 2.x, but shows up when building under bison 3+
    
    --
    PiperOrigin-RevId: 183728642
    MOS_MIGRATED_REVID=183728642

[33mcommit 9fb9d2e890c4dba8796916ac252867610eb14ff9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jan 29 19:25:36 2018 +0000

    Remove the try/except around the tracemalloc import in metrics.py.
    
    --
    PiperOrigin-RevId: 183697278
    MOS_MIGRATED_REVID=183697278

[33mcommit 34ffdb4ce9eed35faff1dad4e804d80664bf4c5f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jan 29 18:26:31 2018 +0000

    Delete pytd/explain.py.
    
    This code is unused and outdated.
    
    --
    PiperOrigin-RevId: 183686462
    MOS_MIGRATED_REVID=183686462

[33mcommit 42ce25c650f090e6fd64c748586e989a7c06fa1c[m
Author: Martin DeMello <mdemello@google.com>
Date:   Sat Jan 27 00:29:49 2018 +0000

    Add the ConnectionError hierarchy to 3/builtins.pytd
    
    Used by typeshed's http libraries.
    
    --
    PiperOrigin-RevId: 183464058
    MOS_MIGRATED_REVID=183464058

[33mcommit 3d4e2a51de5b7ac54e41d52ce2615542cbafd700[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Jan 26 23:45:11 2018 +0000

    Add typeshed/third_party/{2,3} to the stdlib search path.
    
    --
    PiperOrigin-RevId: 183457602
    MOS_MIGRATED_REVID=183457602

[33mcommit c53bf0c1797b5d3ead98d013cc91e9ee5b0d25f1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 26 21:40:57 2018 +0000

    Add the Sized protocol to AbstractSet.
    
    Makes pytype stop complaining about __len__ not being present on sets.
    Also removes a bunch of redundant __len__ definitions from __builtin__.pytd.
    
    Another error I'm seeing is that people are annotating parameters as Iterable
    and then calling len() on them, but that looks like a user error - an Iterable
    isn't actually Sized. Perhaps we should be redirecting users to Collection.
    
    --
    PiperOrigin-RevId: 183438008
    MOS_MIGRATED_REVID=183438008

[33mcommit 43210c9a6b4e99c5bb27421af2349538a41512b4[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Jan 26 00:34:52 2018 +0000

    Add constructor function.Signature.from_params(name, params)
    
    Lets us easily create minimal signatures for error reporting.
    
    --
    PiperOrigin-RevId: 183311291
    MOS_MIGRATED_REVID=183311291

[33mcommit b4742de888ad59e184cf0ed86aa94ef1b71c41c6[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Jan 26 00:28:31 2018 +0000

    Add support for the @six.add_metaclass decorator.
    
    * Add pyi files from typeshed to third_party/py/six
    * Add an overlay for six.add_metaclass
    * Defer checking for a class with abstract methods inheriting from ABCMeta
      until after class decorators are applied.
    
    --
    PiperOrigin-RevId: 183310501
    MOS_MIGRATED_REVID=183310501

[33mcommit 5f468fdb31b1916c9505fc5abd7f4bec00195176[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Jan 26 00:09:30 2018 +0000

    Friendlier error message for builtin functions.
    
    Replaces "function __builtin__.foo" with "built-in function foo".
    
    --
    PiperOrigin-RevId: 183307911
    MOS_MIGRATED_REVID=183307911

[33mcommit 742ce759deee8eda6011ece882b3af106f1470ba[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Jan 25 21:15:17 2018 +0000

    Add support for type tuple literals in pyi files.
    
    Example (from typeshed):
      string_types = (str, unicode)
    
    which we parse as
      string_types = ...  # type: tuple
    
    --
    PiperOrigin-RevId: 183278996
    MOS_MIGRATED_REVID=183278996

[33mcommit afc2146647487f37bb84258dc46d309920551a4f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 25 17:44:09 2018 +0000

    Restrict the types of objects that pytype accepts for len().
    
    --
    PiperOrigin-RevId: 183251698
    MOS_MIGRATED_REVID=183251698

[33mcommit 7a042606b97036d7c7360faefa963f3b79b6610c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 25 01:34:27 2018 +0000

    Don't check NoReturn against a return type annotation.
    
    The original motivation for adding this check was a misunderstanding, and it's
    causing a lot of trouble.
    
    --
    PiperOrigin-RevId: 183169664
    MOS_MIGRATED_REVID=183169664

[33mcommit 1dbf7f3d2dd8aab08d32589be16448c10501bd4e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 24 21:28:01 2018 +0000

    Do an isinstance() check before accessing the is_abstract attribute.
    
    --
    PiperOrigin-RevId: 183131897
    MOS_MIGRATED_REVID=183131897

[33mcommit ec41271cd7382afb931014fd09d2b42dc3ae5bf0[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Jan 24 19:44:30 2018 +0000

    Fix a corner case in pyi imports for an unused `from . import foo`.
    
    --
    PiperOrigin-RevId: 183117600
    MOS_MIGRATED_REVID=183117600

[33mcommit aae1cd94839f6b8b14dbb5cac6b93ca589c2af7a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 24 18:16:43 2018 +0000

    Discard the concrete values of module constants when analyzing functions.
    
    --
    PiperOrigin-RevId: 183102615
    MOS_MIGRATED_REVID=183102615

[33mcommit 550e8183feaee135648dc71da6a0eb7d1fc99847[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 24 05:33:15 2018 +0000

    Cleanup: use tempfile.mkdtemp() instead of googletest.GetDefaultTestTmpdir().
    
    mkdtemp() is nicer because it generates a new temporary directory every time,
    meaning that we don't need to worry about what to do with the directory
    between tests.
    
    --
    PiperOrigin-RevId: 183038217
    MOS_MIGRATED_REVID=183038217

[33mcommit 3251262cdd04f2b88eb944a41830b0da06dc2de1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 24 05:20:35 2018 +0000

    When filtering attribute errors, take into account the current function.
    
    --
    PiperOrigin-RevId: 183037463
    MOS_MIGRATED_REVID=183037463

[33mcommit 6a1fea578a3f0549d3d8369dba7bec4001f5aaa0[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Jan 23 22:04:04 2018 +0000

    Add exec to builtins.pytd
    
    --
    PiperOrigin-RevId: 182988638
    MOS_MIGRATED_REVID=182988638

[33mcommit b0b6a27a071a93830f93c37cbfb06a19a7178f68[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 23 18:31:33 2018 +0000

    Give an abstract method a default return value of Any.
    
    --
    PiperOrigin-RevId: 182955168
    MOS_MIGRATED_REVID=182955168

[33mcommit 4f7ea125cb9cbb47a409e422a6bf1a582af9fd51[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 23 03:36:03 2018 +0000

    Cleanup: Use Infer, not InferWithErrors, when the errorlog should be empty.
    
    --
    PiperOrigin-RevId: 182875135
    MOS_MIGRATED_REVID=182875135

[33mcommit 3f4871902b3abfc61ca80456abefdc17afec0f55[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jan 22 18:44:08 2018 +0000

    Remove --strict_none check from _filter_none_and_paste_bindings.
    
    This fixes a bug that arises due to an interaction between late initialization
    and NoReturn:
    
    class Foo(object):
      def __init__(self):
        self.foo = None
      def get_foo(self) -> int:
        if self.foo:
          return 42
        else:
          raise ValueError()
    
    Without this change, pytype reports [bad-return-type] for get_foo because it
    thinks that 'return 42' is unreachable.
    
    The change to main_test is necessary because a (real) attribute error in
    pytree.py was hidden by a similar late initialization pattern.
    
    --
    PiperOrigin-RevId: 182801442
    MOS_MIGRATED_REVID=182801442

[33mcommit eec320fcdc12a922bd9f5f55c2e48095349427c3[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Jan 19 23:19:43 2018 +0000

    Add support for module aliases.
    
    --
    PiperOrigin-RevId: 182596944
    MOS_MIGRATED_REVID=182596944

[33mcommit 1798af07f9f748d21ed07bf848ad3e02f541137f[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jan 19 21:30:08 2018 +0000

    Add --timeout option to pytype
    
    --
    PiperOrigin-RevId: 182580462
    MOS_MIGRATED_REVID=182580462

[33mcommit b490159024c33eb7c9f05509c749cb2f29edd7db[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 19 19:13:13 2018 +0000

    Don't report bad-return-type if NoReturn is one among many options.
    
    I previously put the return type checking for NoReturn immediately after an
    exception was raised, so that we'd have the right frame and traceback. An
    unintentional side effect was that we'd report a bad return type even if we
    also found an acceptable return value. Instead, save the stack information and
    do the checking after we know that NoReturn is the only option.
    
    --
    PiperOrigin-RevId: 182560984
    MOS_MIGRATED_REVID=182560984

[33mcommit c03455d4e4706e2bc1b228917353da07069f6c2c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 19 00:02:55 2018 +0000

    Make it an error to not return from a function with an annotated return type.
    
    Moves some of the logic in byte_RETURN_VALUE into a reusable function that
    checks the return value and, if applicable, replaces it with the return
    annotation. This function is then used by byte_RAISE_VARARGS and the various
    function call opcodes (through call_function_from_stack).
    
    Deletes a test for
      class Foo(object):
        def __new__(cls) -> "Foo":
          assert cls is not Foo, "not instantiable"
    I added this test because I saw this pattern in pytree.py in our test data and
    thought we might want to support it, but on further thought, anyone who wants
    a non-instantiable base class should just use abc.ABCMeta.
    
    --
    PiperOrigin-RevId: 182453578
    MOS_MIGRATED_REVID=182453578

[33mcommit 377c92c80a0efc3b45e135d254b2b47854b54447[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 18 01:46:25 2018 +0000

    Print NoReturn instead of nothing in bad-return-type.
    
    Makes the error message slightly prettier. Also adds a few more (unrelated)
    NoReturn tests.
    
    --
    PiperOrigin-RevId: 182297947
    MOS_MIGRATED_REVID=182297947

[33mcommit 28cb48633ab0500376836c6b7c578d3022a964bb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 17 23:11:32 2018 +0000

    Partially support typing.NoReturn.
    
    Adding NoReturn allows pytype to type-check the following:
    
    x = ...  # type: None or X
    if not x:
      function_that_raises_exception()
    x.attribute_of_X
    
    Otherwise, pytype does not realize that x cannot be None at the last line.
    This CL
    * Adds NoReturn to typing.pytd.
    * Infers a type of NoReturn if a function always raises an exception.
    * Sets state.exception to True if a function calls another that cannot return.
    We get type-checking against NoReturn for free.
    
    The only part of NoReturn that this CL doesn't implement is verifying that
    NoReturn doesn't appear in places other than as the return type of a function.
    
    --
    PiperOrigin-RevId: 182277755
    MOS_MIGRATED_REVID=182277755

[33mcommit 465022225ab6d26ac164f0d67cf139c5ad0634a6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 17 21:04:53 2018 +0000

    Remove abstract.Nothing in favor of abstract.Empty.
    
    This cleanup is long overdue and will also keep the number of "nothing"s from
    increasing again, now that we're adding the concept of NoReturn.
    
    --
    PiperOrigin-RevId: 182257517
    MOS_MIGRATED_REVID=182257517

[33mcommit fc0985b939451d19fcba96aef4f379a676f445ff[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 17 17:22:55 2018 +0000

    Cleanup: Move visitors.py from pytype/pytd/parse/ to pytype/pytd/.
    
    This has bothered me ever since I saw it in the refactoring doc.
    
    Also fixes a few linting issues.
    
    --
    PiperOrigin-RevId: 182224802
    MOS_MIGRATED_REVID=182224802

[33mcommit edf3f07466420677fe0cf1a94aaa9f52804fd045[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 16 19:41:45 2018 +0000

    Make the test naming in test_flow.py consistent.
    
    I noticed that some tests were in snake_case and some in camelCase, so I
    changed all of them to snake case.
    
    --
    PiperOrigin-RevId: 182087730
    MOS_MIGRATED_REVID=182087730

[33mcommit 1e138fb3fccc2a80a86871d578e4be90812e8b85[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 16 18:22:42 2018 +0000

    Get rid of exceptions.py.
    
    The only ByteCodeException still in use was ByteCodeTypeError, which was raised
    in two places:
    * In abstract.py, ByteCodeTypeError was raised when we should just be using
      a failed assert.
    * In vm.py, ByteCodeTypeError was raised whenever a no-argument raise was
      encountered. It looks like the intention was to catch "raise None", which
      should be a type error, but all that actually happened was that
      state.exception and state.why were set when the error was caught in
      run_instruction, rather than being set in RAISE_VARARGS.
    Removing these uses of ByteCodeTypeError lets us delete exceptions.py.
    
    --
    PiperOrigin-RevId: 182075142
    MOS_MIGRATED_REVID=182075142

[33mcommit c587d33248f479517cbb26a1a42f40b79458ad1c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 16 17:46:45 2018 +0000

    Get rid of CopyVarApprox and use AssignToNewVariable instead.
    
    To be honest, I don't know why CopyVarApprox is no longer necessary (maybe
    because of the solver rewrite?), but all of the tests that used to require it
    are happy with AssignToNewVariable now, and switching over also
    fixes/simplifies some other things.
    
    --
    PiperOrigin-RevId: 182069178
    MOS_MIGRATED_REVID=182069178

[33mcommit 8aaa96dfdba2427ba80c442d4b1eb0e323fd271f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Jan 13 00:30:08 2018 +0000

    Get rid of unused method push_last_exception.
    
    --
    PiperOrigin-RevId: 181808372
    MOS_MIGRATED_REVID=181808372

[33mcommit 339eef27acb790be74499eb81436819620714a37[m
Author: Matthias Kramm <kramm@google.com>
Date:   Sat Jan 13 00:19:29 2018 +0000

    Fix if splitting bug that assumed that a subclass of int can never equal an instance.
    
    --
    PiperOrigin-RevId: 181807361
    MOS_MIGRATED_REVID=181807361

[33mcommit bcc8f85bec7f52bed6fdac32269af2d04ca83b63[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 12 23:05:46 2018 +0000

    Filter container elements more carefully during inference.
    
    --
    PiperOrigin-RevId: 181798775
    MOS_MIGRATED_REVID=181798775

[33mcommit c7b0ee82125c6383f760fd79dce3f8b441e9c758[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jan 12 20:29:57 2018 +0000

    Fix AssertionError.
    
    --
    PiperOrigin-RevId: 181777838
    MOS_MIGRATED_REVID=181777838

[33mcommit abf80986c803bff456b2569eefa8b79eab54d863[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 12 18:29:49 2018 +0000

    When changing a None to Any, keep the None binding as an origin.
    
    --
    PiperOrigin-RevId: 181761056
    MOS_MIGRATED_REVID=181761056

[33mcommit 469769739f67dbcd89454a548edc4b4537bc64c0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 12 18:29:38 2018 +0000

    Fix a MOE:strip_line.
    
    leak_test was complaining, presumably because the directive was inside a string.
    
    --
    PiperOrigin-RevId: 181761035
    MOS_MIGRATED_REVID=181761035

[33mcommit ebc5795bebbfe40c9afc09da180d503f3df71f20[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jan 12 17:11:02 2018 +0000

    Make instances of classes with baseclass 'Any' match against everything.
    
    Now that type_match.py has been repurposed and the old nominal matcher is dead,
    there's no reason to stick to the broken logic.
    
    
    Also includes the following changes:
    
    Add --parse-pyi flag to pytype.
    
    This replaces the --convert-to-pickle flag, which was removed in
    commit e804295d09ce747d3f62d9fe6cfde10aa9719860, but some form of which we still need for typeshed testing.
    
    --
    PiperOrigin-RevId: 181751695
    MOS_MIGRATED_REVID=181751695

[33mcommit d5d47b523b94d86e6488cd3996d741aa8a7adc76[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 12 00:09:31 2018 +0000

    Reuse property return values when possible.
    
    --
    PiperOrigin-RevId: 181676501
    MOS_MIGRATED_REVID=181676501

[33mcommit 65149f2ce73bdf561f9eed9057748fc8860271c3[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Jan 11 15:51:03 2018 -0800

    add --parse-pyi command-line flag

[33mcommit 33d67eb008076ea120e00860f4037afaa356aee7[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Jan 10 22:11:42 2018 +0000

    Add a modules section to pytd.TypeDeclUnit
    
    --
    PiperOrigin-RevId: 181515293
    MOS_MIGRATED_REVID=181515293

[33mcommit 2be5a6b72c327acc97c9a1a89dc05d4b51cf1d0c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Jan 10 21:50:10 2018 +0000

    Remove references to 'unicode' in Python 3 builtins/stdlib.
    
    --
    PiperOrigin-RevId: 181511987
    MOS_MIGRATED_REVID=181511987

[33mcommit aaf7a69ce6dcc4b27485cd7181060a732e4e5f22[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Jan 10 21:49:39 2018 +0000

    Remove 'unicode' from Python 3 version of __builtin__.pytd.
    
    Also, make annotations on str/bytes more precise.
    
    --
    PiperOrigin-RevId: 181511910
    MOS_MIGRATED_REVID=181511910

[33mcommit 908533de4eebafadbfd902a720bc5b5b6c5203bd[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Jan 9 20:35:43 2018 +0000

    Discard type comments embedded in larger whole-line comments.
    
    --
    PiperOrigin-RevId: 181357930
    MOS_MIGRATED_REVID=181357930

[33mcommit b562f5c8067b13e6cdbdec79d6e266bc80adeebf[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jan 9 00:22:05 2018 +0000

    Support __loader__ in list_pytype_files.
    
    In particular, this enables --generate-builtins from a Python archive.
    
    --
    PiperOrigin-RevId: 181235596
    MOS_MIGRATED_REVID=181235596

[33mcommit 768b5f98f4b0111c99ba5ef23561901a59d3fc7d[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Jan 8 21:08:58 2018 +0000

    Fix file path for assertion in setup.py
    
    See https://github.com/google/pytype/pull/68
    
    
    Also includes the following changes:
    
    Make CollectDependencies visitor also report dependencies of FunctionType.
    
    --
    PiperOrigin-RevId: 181207167
    MOS_MIGRATED_REVID=181207167

[33mcommit b5f99cbfcdca068e2eadef29bd98d67ff7bcc539[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Jan 8 15:56:43 2018 +0000

    Roll back "Support module aliases and reexports in pyi files"
    
    We need a different approach for this. Problems with the previous change:
    
    1.) Data duplication: Module dependencies should not be stored both
      implicitly in the NamedTypes as well as in TypeDeclUnit.modules.
    2.) Data duplication: Module dependencies should not be both an alias
      as well as a module. This is causing confusion in tests and debugging.
    3.) Conceptually wrong: Dependencies need to be resolved during
      lookup, but "from ... import" dependencies stayed ambiguous
      even after LookupExternalTypes.
    4.) Incomplete implementation: E.g. CanonicalOrderingVisitor throws away the
      modules member.
    5.) Performance regression: The previous change causes a load
      of all typeshed modules to take almost twice as much time.
      See below for measuring code.
    
    --
    PiperOrigin-RevId: 181165580
    MOS_MIGRATED_REVID=181165580

[33mcommit 280e092b6624760df6d7ed4786b369663ce1b6ff[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jan 8 02:09:12 2018 +0000

    Keep content origins when creating a list.
    
    When an abstract.List is created, we need to keep the origins for the contents
    instead of copying the values to the root node.
    
    A side effect of this change is that we can get rid of both the node and
    keep_origins arguments to initialize_type_parameter.
    
    This change also exposed a mistake in a test in test_typing.py, which is fixed.
    
    --
    PiperOrigin-RevId: 181108104
    MOS_MIGRATED_REVID=181108104

[33mcommit 637ab3d5c964a2cb621250eeb3a13dc82b172e64[m
Author: Matthias Kramm <kramm@google.com>
Date:   Sat Jan 6 00:44:40 2018 +0000

    Remove more dead code.
    
    --
    PiperOrigin-RevId: 180992006
    MOS_MIGRATED_REVID=180992006

[33mcommit b45d9224aa3904669bd9028cfc90e2d820e4e69e[m
Author: Matthias Kramm <kramm@google.com>
Date:   Sat Jan 6 00:08:20 2018 +0000

    Fix two issues pytype found on itself.
    
    1.) You can't do some_set[x:y]
    2.) We do an "exec code in namespace" and afterwards expect namespace to
        contain a name. Added a disable for that.
    
    --
    PiperOrigin-RevId: 180988149
    MOS_MIGRATED_REVID=180988149

[33mcommit cdb35e6b3dec8c2d61f274b1e16a6c800ab255f5[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jan 5 23:58:06 2018 +0000

    Get rid of parsing functions in pytd/parse/builtins.py.
    
    --
    PiperOrigin-RevId: 180986837
    MOS_MIGRATED_REVID=180986837

[33mcommit db73aadb84ab3f2719a091ccd9c160db0b280129[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 5 22:49:36 2018 +0000

    Don't throw away origin information in initialize_type_parameter.
    
    --
    PiperOrigin-RevId: 180978429
    MOS_MIGRATED_REVID=180978429

[33mcommit b933a9b5d8c46a5da2b962b6eb4b6d8049295b48[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 5 21:25:52 2018 +0000

    Add a test for a bug fixed by the diffbase changes and do a bit of cleanup.
    
    The previous two changes in this chain fixed an if-splitting bug, and this one
    adds a test for it. Also fixes a typo in solver_test.cc and changes a
    misleading variable name in vm.py.
    
    --
    PiperOrigin-RevId: 180967224
    MOS_MIGRATED_REVID=180967224

[33mcommit a4172555cc0e08ca458b34888d303aa70517e36e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 5 21:08:05 2018 +0000

    Rewrite the solver to recurse through origins rather than goals.
    
    --
    PiperOrigin-RevId: 180965275
    MOS_MIGRATED_REVID=180965275

[33mcommit e804295d09ce747d3f62d9fe6cfde10aa9719860[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jan 5 19:38:49 2018 +0000

    Remove stale code from previous implementation of typeshed pickling.
    
    --
    PiperOrigin-RevId: 180954595
    MOS_MIGRATED_REVID=180954595

[33mcommit af9c0b1cb534bf8b9f3edaaa55beb57ab063737e[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jan 5 19:38:22 2018 +0000

    Take blacklist into account when precompiling builtins.
    
    --
    PiperOrigin-RevId: 180954539
    MOS_MIGRATED_REVID=180954539

[33mcommit 761b6fd3f23edaedb17433414eefae6ad5e93f28[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jan 5 19:37:55 2018 +0000

    Add members to collections.pytd, for Python 3
    
    --
    PiperOrigin-RevId: 180954496
    MOS_MIGRATED_REVID=180954496

[33mcommit 34d13c9f7d457c326dc9bac616222c58c8cd0772[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jan 5 19:37:29 2018 +0000

    In Python 3, symlink builtins.pytd to __builtin__.pytd.
    
    
    Also includes the following changes:
    
    Pickle builtins and typeshed.
    
    Make --generate-builtins pickle all the builtins and
    typeshed (instead of only __builtin__.pyi and typing.pyi).
    Similarily, make --precompiled-builtins assume that we pickled
    the entire standard library.
    
    --
    PiperOrigin-RevId: 180954435
    MOS_MIGRATED_REVID=180954435

[33mcommit efebe3f23dfd64f99ff4c58814d19ead4984dfc0[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Jan 4 22:18:37 2018 +0000

    Add support for compressed files to SavePickle/LoadPickle.
    
    --
    PiperOrigin-RevId: 180844847
    MOS_MIGRATED_REVID=180844847

[33mcommit c0078a20be191d68405a297ad109abf15bfed07b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Jan 4 19:03:53 2018 +0000

    New utility functions get_all_stdlib_module_names, path_to_module.
    
    --
    PiperOrigin-RevId: 180820084
    MOS_MIGRATED_REVID=180820084

[33mcommit ebf0d651d92a738349bef050779999655219f24d[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Jan 4 19:00:15 2018 +0000

    Fix for "class Foo(f())" where f() returns a Union of a type and a non-type.
    
    --
    PiperOrigin-RevId: 180819481
    MOS_MIGRATED_REVID=180819481

[33mcommit 246284bd3e5ce32995721276d9fdf6cd5dbc85e6[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Jan 4 18:56:45 2018 +0000

    Make the pickle code in serialize_ast aware of FunctionType.
    
    We didn't process these at all. The only reason this didn't cause crashes is
    because serialize_ast.PrepareForExport swipes a lot of issues under the rug
    by doing the "print and reparse" hack.
    We'll soon be pickling typeshed, however, which won't do "print and reparse",
    so we need more stable behavior for function pointers.
    
    --
    PiperOrigin-RevId: 180818957
    MOS_MIGRATED_REVID=180818957

[33mcommit 21ef50d78e705bef3a117976905a5ca850e594ba[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Jan 4 18:52:16 2018 +0000

    Fix for e.g. using "collections.Iterable" as a type annotation.
    
    --
    PiperOrigin-RevId: 180818243
    MOS_MIGRATED_REVID=180818243

[33mcommit 7f36ca755a11245280c53debc31cc401f724c16a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Sat Dec 23 20:41:04 2017 +0000

    MOE-strip import of []_overlay.
    
    See https://github.com/google/pytype/issues/70
    
    --
    PiperOrigin-RevId: 180014320
    MOS_MIGRATED_REVID=180014320

[33mcommit 99403866daccbfa0a9d2712facb7950dfdf035b5[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Dec 22 22:52:29 2017 +0000

    Minor refactoring for imported module handling.
    
    --
    PiperOrigin-RevId: 179966468
    MOS_MIGRATED_REVID=179966468

[33mcommit b685d67d24703b879277b8647f72289b61192d87[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Dec 22 22:13:02 2017 +0000

    Simplify CollectDependencies logic.
    
    --
    PiperOrigin-RevId: 179962438
    MOS_MIGRATED_REVID=179962438

[33mcommit f0e7aa70ffe6fd5a4e16d39795924afcdbac3555[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jan 9 06:16:57 2018 -0800

    upgrade typeshed

[33mcommit bddf0d70966c15ec920de185a5e78fbbc7aecb00[m
Author: Matthias Kramm <kramm@google.com>
Date:   Sat Dec 23 06:31:21 2017 -0800

    remove broken line

[33mcommit 4b9921375a1177e09b1cc671ceecf1f35a20f09c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Dec 21 19:51:51 2017 +0000

    Remove usages of GetBuiltinsAndTyping. Require a Loader instead.
    
    Make code use load_pytd.Loader.{builtins, typing} instead of the statically
    cached ASTs in builtins.
    
    --
    PiperOrigin-RevId: 179840605
    MOS_MIGRATED_REVID=179840605

[33mcommit ad2414624c1eda6cdc0deeb0cbe3204a23b9d2d6[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Dec 21 19:23:51 2017 +0000

    Shadow stdli[]/asyncio/tasks from typeshed.
    
    Lets pytype import asyncio and add basic support for the new async features.
    
    --
    PiperOrigin-RevId: 179837177
    MOS_MIGRATED_REVID=179837177

[33mcommit fa8d7079037b02bff11531ac14a43b45f757e725[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Dec 21 00:19:33 2017 +0000

    Add support for mutually recursive imports.
    
    Tracks the stack of in-progress imports, and does a final resolution and
    verification pass once everything is completed. Fixes the case of two modules
    importing symbols from each other, where verification fails because neither
    module's symbols can be completely resolved until they are both loaded.
    
    --
    PiperOrigin-RevId: 179747902
    MOS_MIGRATED_REVID=179747902

[33mcommit 1110eec3a7a6bea23d460e63c0c8721088b9f82b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Dec 19 19:58:13 2017 +0000

    Allow a leading underscore for HAS_DYNAMIC_ATTRIBUTES.
    
    --
    PiperOrigin-RevId: 179584830
    MOS_MIGRATED_REVID=179584830

[33mcommit 337c201ef5c6e56fc8072418b3f53d9f4ca49525[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 19 19:53:32 2017 +0000

    Define __getitem__(slice) and __getslice__ on bytearray.
    
    --
    PiperOrigin-RevId: 179584301
    MOS_MIGRATED_REVID=179584301

[33mcommit 3dbcd683f4f8c2df4df1acf10e1c22c3bd927acb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 19 18:46:04 2017 +0000

    Define argcount() on AtomicAbstractValue.
    
    --
    PiperOrigin-RevId: 179574630
    MOS_MIGRATED_REVID=179574630

[33mcommit eb46e595d42ec6ea948506aab0b1bf36b4044925[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Dec 18 19:32:14 2017 +0000

    Add current authors and pytype alumni to AUTHORS file.
    
    --
    PiperOrigin-RevId: 179448800
    MOS_MIGRATED_REVID=179448800

[33mcommit 6879b217ae5203cfe025e43a04899e8e728123e6[m
Author: Martin DeMello <mdemello@google.com>
Date:   Sat Dec 16 00:40:15 2017 +0000

    Rename fields in pytd.Module for consistency.
    
    --
    PiperOrigin-RevId: 179255649
    MOS_MIGRATED_REVID=179255649

[33mcommit d74a756ffd5f2ac377e5823b14542634e4137a9a[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Dec 15 23:49:23 2017 +0000

    Support the metaclass argument to the class constructor in python3.
    
    * Fix for the changed calling convention in python3.6
    * Check for a 'metaclass' keyword argument when constructing python3 classes.
    
    --
    PiperOrigin-RevId: 179250025
    MOS_MIGRATED_REVID=179250025

[33mcommit d616536f0fedc9a94f726a6691856be3f95a356f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 14 05:16:31 2017 +0000

    Fix a bug in how solver.cc checks for goal conflicts.
    
    When checking for conflicts in removed goals, we need to also include the
    current goals. The reason is that if we have two goals, one of which has an
    origin that conflicts with the other, and that origin is removed by
    RemoveFinishedGoals(), then the only way to find the conflict is to call
    GoalsConflict() with both the removed origin and the conflicting other goal.
    
    --
    PiperOrigin-RevId: 178998550
    MOS_MIGRATED_REVID=178998550

[33mcommit fe732991610ef40283a5407675ab65615fc7d9c5[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Dec 13 22:39:04 2017 +0000

    Support module aliases and reexports in pyi files.
    
    --
    PiperOrigin-RevId: 178960029
    MOS_MIGRATED_REVID=178960029

[33mcommit 2250aa306373146bed37474c2e4654bbc788d661[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 11 19:31:41 2017 +0000

    Have special builtins use the matcher's match_from_mro.
    
    Special builtins such as isinstance() had their own (incomplete) mro matching
    function. We should instead use the one in matcher.py. Also renames
    _match_from_mro to match_from_mro to allow public use, moves it closer to the
    top of the file to be next to the other public matcher methods, and adds an
    allow_compat_builtins flag so that pytype doesn't mistakenly think that, for
    example, isinstance(42, float) is True.
    
    --
    PiperOrigin-RevId: 178647239
    MOS_MIGRATED_REVID=178647239

[33mcommit d0dabcdda02405ad04ed400faa135f0ba8aa75a1[m
Author: Googler <noreply@google.com>
Date:   Sat Dec 9 10:25:53 2017 +0000

    Fix misleading use of .assertItemsEqual() on dicts in //third_party/py/pytype
    
    Context: unknown commit
    
    Code actually does seem to use .assertItemsEqual() correctly, but is hard to tell apart automatically from the situation described in aforementioned CL's description (we do not want to risk False Negatives by relaxing the check). So, we would like to change this here.
    
    --
    PiperOrigin-RevId: 178476579
    MOS_MIGRATED_REVID=178476579

[33mcommit 5cd920e0571632dc52ea65b85497f29ee65ec8b8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Dec 8 18:13:13 2017 +0000

    Update cfg.py and cfg_utils.py so that we can switch between cfg.cc/py.
    
    I've found it useful for debugging to switch back to cfg.py in order to be
    able to add print statements or run pdb. Adds Program.is_reachable to cfg.py
    and changes set.union(...) to itertools.chain(...) in cfg_utils.py to be
    compatible with both sets and frozensets.
    
    --
    PiperOrigin-RevId: 178391563
    MOS_MIGRATED_REVID=178391563

[33mcommit 4fd2ab886ffe5c0a22367afb9e3ca9ff900bf5b7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 7 21:37:58 2017 +0000

    Add a skipped test for a bug in generating function arg combinations.
    
    I can't figure out how to fix this bug without killing our performance, so
    add a skipped test for now.
    
    --
    PiperOrigin-RevId: 178287657
    MOS_MIGRATED_REVID=178287657

[33mcommit e2e334a4bae29342820e41d43e24c17826a7f8b0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 7 00:47:01 2017 +0000

    Add an overlay for [].TYPE_CHECKING.
    
    --
    PiperOrigin-RevId: 178173416
    MOS_MIGRATED_REVID=178173416

[33mcommit 774778326cd4a8d637fd58627ca21b02ef646cc8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 7 00:20:52 2017 +0000

    Clean up some of the special-casing for None in vm.py.
    
    When --strict_none is on, we can report the actual errors on None instead of
    none-attr. This also means that we can get rid of some of the methods for
    detecting None. (We can't delete them yet, but I've marked them deprecated.)
    
    --
    PiperOrigin-RevId: 178170196
    MOS_MIGRATED_REVID=178170196

[33mcommit a0e7cf88cd8aa51159097669aebc3e83baa7d578[m
Author: Googler <noreply@google.com>
Date:   Wed Dec 6 22:04:00 2017 +0000

    Rollback of commit 9812e5131cb552c67408d8a9faf27fd08aaeba8d.
    
    *** Reason for rollback ***
    
    ERROR: pyglib/thread_pool/BUILD:800:1 Checking types for pyglib/thread_pool/thread_pool.py failed (Exit 1) pytype.par failed: error executing command tools/python/pytype/pytype.par --check '--touch=blaze-out/k8-fastbuild/bin/pyglib/thread_pool/pytype-aspect/thread_pool@pytype@check/thread_pool.check' ... (remaining 8 argument(s) skipped) [forge_remote_host=ixkm3].
    File "thread_pool.py", line 942, in _StartWorkers: No attribute 'moves' on module 'six' [module-attr]
    
    *** Original change description ***
    
    Add support for the @six.add_metaclass decorator.
    
    * Add a pyi file from typeshed to third_party/py/six
    * Add an overlay for six.add_metaclass
    * Defer checking for a class with abstract methods inheriting from ABCMeta
      until after class decorators are applied.
    
    ***
    
    --
    PiperOrigin-RevId: 178149221
    MOS_MIGRATED_REVID=178149221

[33mcommit 9812e5131cb552c67408d8a9faf27fd08aaeba8d[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Dec 6 21:33:23 2017 +0000

    Add support for the @six.add_metaclass decorator.
    
    * Add a pyi file from typeshed to third_party/py/six
    * Add an overlay for six.add_metaclass
    * Defer checking for a class with abstract methods inheriting from ABCMeta
      until after class decorators are applied.
    
    --
    PiperOrigin-RevId: 178144453
    MOS_MIGRATED_REVID=178144453

[33mcommit 3bbe8bae3629f694fd89400b3a667cdfe6cf7647[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Dec 6 19:28:06 2017 +0000

    Shadow typeshed's stdli[]/importlib/__init__.pyi
    
    * Add support for pkg/__init__.pytd
    * Add stdli[]/importlib/__init__.pytd
    
    --
    PiperOrigin-RevId: 178126337
    MOS_MIGRATED_REVID=178126337

[33mcommit d080c98662a91a18c63f242ee3b628dbec006548[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 6 00:45:47 2017 +0000

    Use --strict_none to filter retrieved attributes instead of errors.
    
    Previously, --strict_none had the problem that when pytype infers types for
    something like:
      x = None
      def f():
        return x
    we lose the information that the return type of f() comes from a module level
    constant, so we get false positives again if we put
      def f() -> None
    in the pyi file.
    
    We should filter the return type of the function and output
      def f() -> Any
    . But if we try to do the filtering in, say, byte_RETURN_VALUE or
    InterpreterFunction.call(), we run into all sorts of issues with generators,
    containers, etc. Instead, I've change load_from() and _retrieve_attr() to
    filter the attribute values they return.
    
    The nice thing about this change is that we no longer need to call
    has_strict_none_origins() during error logging, since we've already filtered
    out the false positives.
    
    --
    PiperOrigin-RevId: 178031468
    MOS_MIGRATED_REVID=178031468

[33mcommit ef8592303a990a3844cf9aa286e1a0e0d5f8b6a3[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 6 00:44:13 2017 +0000

    Merge _get_none_origin_nodes() into has_strict_none_origins().
    
    There's no need to collect all of the origin nodes and then iterate through
    them again. This change doesn't actually speed anything up, as far as I can
    tell, but it makes the code nicer.
    
    --
    PiperOrigin-RevId: 178031261
    MOS_MIGRATED_REVID=178031261

[33mcommit 941f257d49d218b096c067888dd4bcd8b454131d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 5 20:04:30 2017 +0000

    Copy the function defaults to new variables in InterpreterFunction._map_args.
    
    For --strict_none to know that default argument values are visible, we need
    them to originate at each call site.
    
    --
    PiperOrigin-RevId: 177990774
    MOS_MIGRATED_REVID=177990774

[33mcommit 105731aad630dd520791d86e2e4a5023d6a9d561[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 5 20:00:37 2017 +0000

    Don't use --strict_none until we enter CallTracer.analyze().
    
    --
    PiperOrigin-RevId: 177990007
    MOS_MIGRATED_REVID=177990007

[33mcommit 49a97c5267ae9adc7e80bf5af36a4834bd2cc245[m
Author: Matthias Kramm <kramm@google.com>
Date:   Sat Dec 2 00:24:42 2017 +0000

    Allow to create a load_pytd.Loader without an options data structure.
    
    We use load_pytd in a lot of places, including several that don't have a natural
    way to create an option dictionary. It's cleaner to explicitly pass the
    parameters to the loader. In particular, this will enable us to get rid of
    GetBuiltinsAndTyping and instead retrieve builtins/typing from the loader.
    
    --
    PiperOrigin-RevId: 177656233
    MOS_MIGRATED_REVID=177656233

[33mcommit 6ca224cb5ec5772adf1619d9d21994f6bda73eaa[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Dec 1 21:15:41 2017 +0000

    Typeshed overlays:
    * Remove os.pytd (we can import the typeshed version now)
    * Add 3/multiprocessing/pool.pytd
    
    --
    PiperOrigin-RevId: 177631250
    MOS_MIGRATED_REVID=177631250

[33mcommit 67cf9138c552a9b008586899e7b7f55327fe1356[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Dec 1 19:28:13 2017 +0000

    Store is_dir in pytd.TypeDeclUnit.
    
    Record is_dir along with the AST at parse_time rather than passing it
    around in load_pytd.
    
    This is purely a refactoring CL; any additional changes needed to support
    pickled/serialised modules will be done in another CL.
    
    --
    PiperOrigin-RevId: 177617387
    MOS_MIGRATED_REVID=177617387

[33mcommit 38d2da9836c90725b4b8109a385e7c9251acf44e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Dec 1 17:59:42 2017 +0000

    Copy cached return values more carefully in InterpreterFunction calls.
    
    When we re-use a cached return value, we need to be more thoughtful about how
    we copy the origins. This bug has been in pytype for a while - --strict_none
    just exposes it. For the longest time we simply threw the origins away, and
    recently I switched to naively copying all of them, neither of which works.
    Instead, we should throw away the origins that are within the cached call but
    keep the ones from outside it.
    
    --
    PiperOrigin-RevId: 177604133
    MOS_MIGRATED_REVID=177604133

[33mcommit b5fc97e7f5ad6ef53f9357fde243a46f10d8f94d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Dec 1 17:31:48 2017 +0000

    Change our --strict_none logic to filter out fewer true positives.
    
    My previous attempt at --strict_none failed to report some obvious errors like:
    
    def f():
      pass
    def g():
      return f().upper()
    
    and:
    
    def f(x):
      return x
    def g():
      return f(None).upper()
    
    The problem was that the None binding can have other bindings in its
    source sets that we need to be able to pass through the Analyze node to find.
    So this change specifically blocks only the None bindings.
    
    test_attributes.TestStrictNone.testReturnValue is still skipped due to an
    unrelated bug that I'll fix separately.
    
    --
    PiperOrigin-RevId: 177601079
    MOS_MIGRATED_REVID=177601079

[33mcommit 448b350ba80bc5bcc81add1e56bf6386469cb6e5[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Dec 1 17:28:25 2017 +0000

    Add integration test for --precompiled-builtins.
    
    --
    PiperOrigin-RevId: 177600714
    MOS_MIGRATED_REVID=177600714

[33mcommit 2affd1b2f3da8ca07e491a2379addd4e15a2ade3[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Nov 28 21:53:44 2017 +0000

    Allow duplicate type parameters in templated classes, as long as there are no
    duplicates in Generic[].
    
    --
    PiperOrigin-RevId: 177212309
    MOS_MIGRATED_REVID=177212309

[33mcommit ad32a7af6864b8e99f1e9683cb9274bb092fc7a4[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Nov 28 03:10:43 2017 +0000

    When importing a pyi file, resolve external types before local ones.
    
    Fixes cases like:
      from foo import * # brings foo.X into scope as X
      a = ...  # type: X
    
    --
    PiperOrigin-RevId: 177105163
    MOS_MIGRATED_REVID=177105163

[33mcommit 324cf34899dab2c9422a0485d83d932a823f6937[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Nov 28 00:34:01 2017 +0000

    FIX: Fix a corner case when importing a subdirectory with the same name as the toplevel package.
    
    --
    PiperOrigin-RevId: 177089521
    MOS_MIGRATED_REVID=177089521

[33mcommit cdddc41c0af65924d61c9e8431461893164fd596[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Nov 22 22:40:01 2017 +0000

    Fork __builtin__.pytd for python2 and python3.
    
    Add a couple of new classes to 3/__builtin__ to get past some typeshed errors.
    
    --
    PiperOrigin-RevId: 176703099
    MOS_MIGRATED_REVID=176703099

[33mcommit 1b74f923b5d1b7b240474838f98692dfcb675250[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Nov 22 21:44:47 2017 +0000

    Rewrite builtins to __builtin__ when importing pyi files.
    
    Fixes an issue with importing typeshed files that reference 'builtins'
    explicitly.
    
    --
    PiperOrigin-RevId: 176696161
    MOS_MIGRATED_REVID=176696161

[33mcommit dab7f029df62cdf4ca030e34ff22aeea7c5942b0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 21 23:44:00 2017 +0000

    Copy a variable's origins when reusing a cached function return value.
    
    I'm pretty sure I was mistaken in thinking that the old origins needed to be
    thrown away. Since we're reanalyzing the call in the same environment, those
    origins should still be valid.
    
    This change is needed for --strict_none, which depends on origins being
    correct, but I can't formulate a test until some other issues with
    --strict_none are worked out.
    
    --
    PiperOrigin-RevId: 176573030
    MOS_MIGRATED_REVID=176573030

[33mcommit a4b3722f0990a8b5b4ca7b9092a7fcf8c99bcdcb[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Nov 20 23:25:50 2017 +0000

    Have per-python-version pytd/stdlib.
    
    --
    PiperOrigin-RevId: 176426818
    MOS_MIGRATED_REVID=176426818

[33mcommit 7bed492477861790145f9928e9306063ccce5506[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Nov 20 22:23:14 2017 +0000

    Add the SupportsBytes protocol to typing.pytd
    
    --
    PiperOrigin-RevId: 176416183
    MOS_MIGRATED_REVID=176416183

[33mcommit 4c80ff93a883618a827be76e2ff30aa3ebd63c20[m
Author: Googler <noreply@google.com>
Date:   Mon Nov 20 21:23:59 2017 +0000

    Remove the references to these files, they do not exist anymore.
    
    --
    PiperOrigin-RevId: 176406787
    MOS_MIGRATED_REVID=176406787

[33mcommit 44e0d0ac147a12a7b4d5ea938703eada0bc1294c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 20 20:50:15 2017 +0000

    Handle the filename = None case in load_pytd.Loader.load_file().
    
    --
    PiperOrigin-RevId: 176402028
    MOS_MIGRATED_REVID=176402028

[33mcommit 7d3b0649cfb57fdf2dd21b3ce3ea921f9f4c12c1[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Nov 20 18:49:16 2017 +0000

    Fix some issues with module imports.
    
    * Set the package name correctly when importing a directory-level module
    * Handle relative module names in aliases when looking up types
    * Allow an entity to be imported through multiple paths without raising a
      name clash error
    
    --
    PiperOrigin-RevId: 176383502
    MOS_MIGRATED_REVID=176383502

[33mcommit 6be3914c1ab6df8f7d3087638d3edae4b4161dba[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 16 21:05:17 2017 +0000

    Add a --strict_none flag to pytype.
    
    Adds a --strict_none flag that turns on strict attribute checking for None.
    When ths flag is on, pytype reports attribute errors on None even if other
    possible types are present. We filter out false positives by not reporting
    errors for which the path back to the None assignment passes through the
    inference supernode. This filtering strategy fails in one obvious case:
    
    def f():
      pass
    def g():
      f().upper()  # Clearly should be an error.
    
    for which I've added a skipped test. I think we can fix this problem by
    adding a node for byte_RETURN_VALUE, connecting the fake inference supernode
    to it, and blocking off the node before it, but I still need to flesh that
    idea out.
    
    --
    PiperOrigin-RevId: 176006696
    MOS_MIGRATED_REVID=176006696

[33mcommit 09501b4cfcabbbaf946502954a800d4b93cdb2c1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 16 01:00:51 2017 +0000

    Remove mutations from methods in output.py.
    
    Removes all mutations from methods when getting the pytd definition of an
    InterpreterClass in output.py.  This approach doesn't work for generic classes,
    but handling those seems more complicated, and since we don't support inline
    generic classes yet anyway, let's punt on that for now.
    
    --
    PiperOrigin-RevId: 175903747
    MOS_MIGRATED_REVID=175903747

[33mcommit 4f1a77775085ad4ad5f6c529f57b3d095e69fdba[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Nov 16 00:13:13 2017 +0000

    Minor tweak to blocks.py.
    
    --
    PiperOrigin-RevId: 175897360
    MOS_MIGRATED_REVID=175897360

[33mcommit 34098d4216f31b0d882fac055e257d6c8f143752[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Nov 15 22:15:14 2017 +0000

    Fix for "for ... else" loops that only pass control via "break".
    
    --
    PiperOrigin-RevId: 175878665
    MOS_MIGRATED_REVID=175878665

[33mcommit 2c999106202f5e3ec1b184f1b78495b369ba68b4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 15 18:35:17 2017 +0000

    Don't allow type parameters in the constants created from properties.
    
    --
    PiperOrigin-RevId: 175845665
    MOS_MIGRATED_REVID=175845665

[33mcommit 39f3015e5017569392405c8582d59ed75814a16a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 15 18:31:10 2017 +0000

    Handle circular tuple types in _value_to_parameter_types().
    
    As odd as it is, when you stick a tuple inside another tuple, then create an
    enumerate object followed by a closure of the tuple, pytype ends up with a
    tuple representation that contains itself. With this change, we'll set all of
    the tuple's element types to Any when we detect this case.
    
    --
    PiperOrigin-RevId: 175844954
    MOS_MIGRATED_REVID=175844954

[33mcommit d2a8f72f09f6c4e5ce1dd0f9ec9b87754d710639[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Nov 15 16:56:09 2017 +0000

    Disable return type checking for @abc.abstractmethod inside a @property.
    
    --
    PiperOrigin-RevId: 175831772
    MOS_MIGRATED_REVID=175831772

[33mcommit 83f580415c3a1b92cd4d75ee0d0a85ae4b6a19f8[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Nov 15 01:01:22 2017 +0000

    Fill in unbound type parameters when instantiating a parametrised class.
    
    --
    PiperOrigin-RevId: 175757535
    MOS_MIGRATED_REVID=175757535

[33mcommit 80a1cb92cf0e78ab33d88798d9489281044c10fb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 14 23:00:45 2017 +0000

    Allow property to accept any kind of function for fget.
    
    --
    PiperOrigin-RevId: 175740769
    MOS_MIGRATED_REVID=175740769

[33mcommit 9ccec98a05a250b557a4a6db2d726d13fc48c29d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 14 22:35:51 2017 +0000

    Implement to_type() for abstract.TypeParameter.
    
    --
    PiperOrigin-RevId: 175736950
    MOS_MIGRATED_REVID=175736950

[33mcommit 0c35ad0ba1435a27c242e1c7b0d476e4c57b590f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 14 21:25:41 2017 +0000

    Make typing.Collection, typing.Hashable, and typing.Reversible protocols.
    
    PEP 544 has the following list of typing classes that should be protocols:
    https://www.python.org/dev/peps/pep-0544/#id38
    Out of this list, we hadn't marked Collection, Hashable, or Reversible as
    protocols. With this change, these three all work in protocol checking,
    although inference won't work for Collection or Hashable.
    
    --
    PiperOrigin-RevId: 175725952
    MOS_MIGRATED_REVID=175725952

[33mcommit 653ff04be38d5d10b73c8e748afbc3e45246bf32[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 14 21:17:30 2017 +0000

    Make our instantiation of generic types a little more precise.
    
    While playing around with generic types, I noticed that we were instantiating
    constrained and bounded type params to Any. We can be more precise than that.
    
    --
    PiperOrigin-RevId: 175724895
    MOS_MIGRATED_REVID=175724895

[33mcommit eeb5b5ce67b3b7d86178abb685ec30896010f063[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 14 16:57:44 2017 +0000

    Have the int class inherit from SupportsAbs[int] instead of redefining __abs__.
    
    test_builtins1 already tests int.__abs__(). Also renames BuiltinTests2 to
    BuiltinTests3 in test_builtins3.py - the name was originally copied from
    test_builtins2 without updating the number.
    
    --
    PiperOrigin-RevId: 175686754
    MOS_MIGRATED_REVID=175686754

[33mcommit f81461a2aedcf6a0414a985960cb822c35eb646c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 14 01:39:51 2017 +0000

    Remove the "builtins" node, since we no longer have __builtin__.py.
    
    --
    PiperOrigin-RevId: 175615629
    MOS_MIGRATED_REVID=175615629

[33mcommit 23af349fb47b6b97b83f545b7ea34ba71f243ff4[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Nov 14 00:14:55 2017 +0000

    Fix scoping of SETUP_LOOP.
    
    --
    PiperOrigin-RevId: 175604769
    MOS_MIGRATED_REVID=175604769

[33mcommit 47a661b21a24f6f72026e27c35ccb0dc8f5ac481[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Nov 13 21:36:29 2017 +0000

    Make blocks.py process code only reachable from SETUP_EXCEPT.
    
    --
    PiperOrigin-RevId: 175580183
    MOS_MIGRATED_REVID=175580183

[33mcommit ba7703af2c0850063a0320d78a2632b6a12f7d43[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Nov 13 20:06:51 2017 +0000

    Make pytd matcher aware of LateType.
    
    --
    PiperOrigin-RevId: 175567829
    MOS_MIGRATED_REVID=175567829

[33mcommit d7c8663631ebca73ca1caa20a19a46b0bcc75492[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 10 21:07:16 2017 +0000

    Don't allow the 'self' argument in __init__ to be annotated.
    
    Report [invalid-annotation] if we find an annotation on 'self' in __init__ in
    a Python file. Such an annotation doesn't really make sense, since __init__ is
    used specifically for initializing the class it's defined by. This change is
    safe for us to make - there isn't currently any code in [] that would run
    afoul of the new error: []
    
    Once we've reported the error, we delete the annotation. This way, an __init__
    call with fake args always succeeds, so we can remove the problematic
    try/except (context: []#comment4).
    
    --
    PiperOrigin-RevId: 175325965
    MOS_MIGRATED_REVID=175325965

[33mcommit 5e55eeefa72c2331e5ae57fe2e48d3b82025f397[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 10 20:25:06 2017 +0000

    Don't analyze the function used to build a class.
    
    To build a class, Python first creates and runs a function to set up all of
    the locals, and then uses the last frame from that call to make the class.
    pytype was analyzing that function in the loop in analyze_toplevel() that
    goes through not-yet-analyzed interpreter functions. Class methods were
    sometimes recreated as unbound functions as part of this analysis, leading
    to weird behavior. Let's just stop analyzing these class-building functions.
    
    In Python 2, we detect a class-building function by the presence of the
    LOAD_LOCALS opcode. In Python 3, it's the function that BUILD_CLASS runs.
    
    --
    PiperOrigin-RevId: 175321657
    MOS_MIGRATED_REVID=175321657

[33mcommit 4099b52aa0f0cd9ae9041dcfb3ac5f7024fbfe02[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 10 19:23:40 2017 +0000

    Don't hardcode 'self' into the caller_is_abstract check for abstract methods.
    
    --
    PiperOrigin-RevId: 175314248
    MOS_MIGRATED_REVID=175314248

[33mcommit 1fab00340c42f847f0f7d78863cb4d44bfcd185b[m
Author: Matthias Kramm <kramm@quiss.org>
Date:   Wed Dec 13 15:07:15 2017 -0800

    Upgrade typeshed.

[33mcommit a86093f79e5b63a081339ed814e50c4da27459c5[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Dec 6 10:45:37 2017 -0800

    update typeshed

[33mcommit 0964db4d6683324035486109a5ea6c210d8b131c[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Fri Nov 10 14:19:34 2017 +0000

    Add pytype/typegraph to the packages list.
    
    --
    PiperOrigin-RevId: 175284713
    MOS_MIGRATED_REVID=175284713

[33mcommit b8ed178cac72073172db77362d1e662e8191ccfa[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 9 22:37:01 2017 +0000

    Remove the obsolete 'raises' keyword to test_base.BaseTest.Check().
    
    --
    PiperOrigin-RevId: 175214282
    MOS_MIGRATED_REVID=175214282

[33mcommit 1418f8c3d66477248984f1896a7aca0182c759ab[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 9 20:04:52 2017 +0000

    Switch the default for the 'deep' argument from False to True for Infer().
    
    For each call to Infer():
    * If the call used deep=False, I left it as-is.
    * If it used deep=True, I deleted the argument.
    * If it didn't specify the value of 'deep', I added deep=False.
    To make these changes, I wrote and ran a (slightly buggy) Python script:
    []
    and then went in and fixed the cases in which the script failed. For example,
    it mistakenly turned
    self.Infer("""
      ...
    """.format(...))
    into
    self.Infer("""
      ...
    """, deep=True.format(...))
    
    --
    PiperOrigin-RevId: 175192642
    MOS_MIGRATED_REVID=175192642

[33mcommit 9a1b5c14455d8a7ab6c4431b2473cd281b1ad91e[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Nov 9 19:59:29 2017 +0000

    Update documentation and other small fixes.
    
    - Updated documentation in cfg.cc to be closer to cfg.py
    - Removed extraneous "AddBindings" method and test (replaced by PasteVariable)
    - Changed deprecated "MakeUnique" with "make_unique" in typegraph.cc
    
    --
    PiperOrigin-RevId: 175191788
    MOS_MIGRATED_REVID=175191788

[33mcommit cf8b00f1d775f37431aeff881d8998b51899e164[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 9 18:43:45 2017 +0000

    Add a 'method' argument to assertNoCrash.
    
    With 'method', the caller can specify whether assertNoCrash should
    run Check() or Infer().
    
    --
    PiperOrigin-RevId: 175179483
    MOS_MIGRATED_REVID=175179483

[33mcommit 38d78134c6c67a2e23db0e87f1269d10e2b0ee51[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 9 18:38:32 2017 +0000

    Add a CheckWithErrors() test method.
    
    Adds CheckWithErrors() and replaces
    test_checker.CheckerTest.get_checking_errors() with it.
    Renames py_src and py_filename in check_types' parameters to src and filename,
    respectively, so that CheckWithErrors and InferWithErrors can share some
    common code.
    
    --
    PiperOrigin-RevId: 175178607
    MOS_MIGRATED_REVID=175178607

[33mcommit 53fd2e23a474cbdd7769f0e112bb7924eea8f133[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Nov 9 16:12:21 2017 +0000

    (try to) fix opensource export
    
    --
    PiperOrigin-RevId: 175159532
    MOS_MIGRATED_REVID=175159532

[33mcommit 0692b92cbc9a6755e965428e8498e21bf585af2f[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Thu Nov 9 14:33:35 2017 +0000

    Always set the preconditions.
    
    --
    PiperOrigin-RevId: 175150139
    MOS_MIGRATED_REVID=175150139

[33mcommit 4f17bf772abbf9fad02eb01cd7d3121a7ff69bab[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Thu Nov 9 14:00:34 2017 +0000

    Apply DisablePreconditionCheck to convert_to_pyi.
    
    --
    PiperOrigin-RevId: 175147126
    MOS_MIGRATED_REVID=175147126

[33mcommit c5afcce62bbf25ac7ec463e5d753a25e8eef15dd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 9 01:25:00 2017 +0000

    Rename InferAndCheck to InferWithErrors.
    
    --
    PiperOrigin-RevId: 175091651
    MOS_MIGRATED_REVID=175091651

[33mcommit 10ef1d7fe9f0f1e43be8166e37f3b6de2ffceada[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 9 01:21:40 2017 +0000

    Rename assertNoErrors to Check.
    
    Also deletes test_checker.CheckerTest.check(), replacing its uses with Check().
    
    --
    PiperOrigin-RevId: 175091318
    MOS_MIGRATED_REVID=175091318

[33mcommit 03598dec2a8c6bed97466be8aa167aa81441d701[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 9 01:05:13 2017 +0000

    Make trace_unknown trace unknown bindings rather than variables.
    
    --
    PiperOrigin-RevId: 175089153
    MOS_MIGRATED_REVID=175089153

[33mcommit c1fb9e5eb1a8390b8de0e7f370fdb72e847474b1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 9 00:06:21 2017 +0000

    Change how we compute abstract methods to support multiple inheritance.
    
    For computing a class's abstract methods, we need to go through its entire
    MRO, not just look at its immediate parent. Also changes the abstract_methods
    attribute to a set.
    
    --
    PiperOrigin-RevId: 175080893
    MOS_MIGRATED_REVID=175080893

[33mcommit 86e316a60fd10bbe082ceec11e16bea420ae4e63[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 8 21:30:47 2017 +0000

    Rename test_inference to test_base and InferenceTest to BaseTest.
    
    --
    PiperOrigin-RevId: 175055161
    MOS_MIGRATED_REVID=175055161

[33mcommit aaaf9564a29fa29e7858460cd54da6f30661b4bf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 8 20:51:10 2017 +0000

    Rename infer.py to analyze.py.
    
    infer.py has been doing both checking and inference for a while now. If this
    rename seems reasonable, I'll also go ahead and change test_inference to
    something like analyze_test_base (in a follow-up CL).
    
    Since [] doesn't show the changes I made to infer.py and infer_test.py,
    due to their being renamed, here are the changes:
    
    In analyze.py:
    * The calls to snapshotter.take_snapshot() now prefix their string argument
      with "analyze:" instead of "infer:".
    * The docstring was changed from
      "Code for generating and storing inferred types." to
      "Code for checking and inferring types."
    
    In analyze_test.py, the word infer was changed to analyze everywhere.
    
    --
    PiperOrigin-RevId: 175049130
    MOS_MIGRATED_REVID=175049130

[33mcommit 0e8401778a875c35f3fa79fc3d746caa7fa720b7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 8 18:38:43 2017 +0000

    Fix an indentation error in matcher.py.
    
    _match_parameterized_protocol was returning prematurely without checking all
    of the abstract methods thanks to a return statement accidentally being put
    inside a loop. Fixing this bug also exposed one in get_method(), which
    neglected to ascend the MRO to find the desired method.
    
    --
    PiperOrigin-RevId: 175028124
    MOS_MIGRATED_REVID=175028124

[33mcommit a024c73dddde5227e3f2154e3b3f1b83dc926909[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Wed Nov 8 16:46:13 2017 +0000

    Enable cfg.cc as the default typegraph implementation.
    
    --
    PiperOrigin-RevId: 175011925
    MOS_MIGRATED_REVID=175011925

[33mcommit 3a36b6af95ae433c975f831eae4dd10c028cab71[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Nov 8 14:07:03 2017 +0000

    In tests, allow to not pass a pythonpath if we pass an imports_map.
    
    This simplifies some self.Infer() calls.
    
    --
    PiperOrigin-RevId: 174996050
    MOS_MIGRATED_REVID=174996050

[33mcommit fa592b022d5082876f64dafbd7abe4cd3865085e[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Tue Nov 7 15:00:32 2017 +0000

    Add various python 3 symbols to os.pytd.
    
    Some drive by ordering of the imports.
    
    --
    PiperOrigin-RevId: 174849413
    MOS_MIGRATED_REVID=174849413

[33mcommit fa19f0b1eb80e6d3bf5c3fbfe7e4547de99852dd[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Mon Nov 6 21:46:41 2017 +0000

    Remove reference to AtomicAbstractValue.id in debug.py.
    
    --
    PiperOrigin-RevId: 174755460
    MOS_MIGRATED_REVID=174755460

[33mcommit aa1230419620f3be62d6bedcf7fe3e643027b8e3[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Fri Nov 3 14:55:41 2017 +0000

    Add infrastructure to generate pickle files from pyi files and consume pickled typeshed files.
    
    Most of the pytype runtime is spend parsing and processing PYI files from typeshed. This change allows pytype to instead read pickled ASTs which are easier to consume.
    
    Details:
    * Add a flag to pass the location of the typeshed directory
    * Add a flag to convert PYI files to pickled ASTs.
    * Add infrastructure to generate pickled ASTs from PYI files.
    
    --
    PiperOrigin-RevId: 174461305
    MOS_MIGRATED_REVID=174461305

[33mcommit 37661df599517968e2a7ba05d306c4f9e51b5b9e[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Nov 2 18:12:21 2017 +0000

    Allow late types to exist during the optimization passes.
    
    --
    PiperOrigin-RevId: 174352281
    MOS_MIGRATED_REVID=174352281

[33mcommit 15082938401e65ba00f2ce17ca985e441d9bc6dc[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Nov 1 23:47:22 2017 +0000

    Introduce late type resolution.
    
    --
    PiperOrigin-RevId: 174256997
    MOS_MIGRATED_REVID=174256997

[33mcommit 8f0b9e22911b481a3d24245324c21b6144180396[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Nov 1 22:25:28 2017 +0000

    Fix: Missed one call to LoadPrecompiled when the signature changed.
    
    --
    PiperOrigin-RevId: 174245026
    MOS_MIGRATED_REVID=174245026

[33mcommit 2e22d51a1fa0edcbc1ba95e269d7e62a1ea89802[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Nov 1 20:06:58 2017 +0000

    Create per-python-version subdirectories of pytd/builtins.
    
    This will be easier to maintain than ifdefs within the pytd files, and will
    more closely mirror what typeshed is doing.
    
    The current CL copies the same files into builtins/2 and builtins/3, which
    preserves existing behaviour; we will replace the files in builtins/3 in
    later CLs.
    
    --
    PiperOrigin-RevId: 174224195
    MOS_MIGRATED_REVID=174224195

[33mcommit 4d9030a65e655a6108be3da5e5d6bd27da4180c0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 31 00:32:31 2017 +0000

    Fix a corner case in which we still printed Any for inner classes in errors.
    
    --
    PiperOrigin-RevId: 173975922
    MOS_MIGRATED_REVID=173975922

[33mcommit 4a9cbf799cce713391d745f3e0d0fb49685b7d3c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 30 22:56:50 2017 +0000

    Print a typevar's bound in its string representation.
    
    --
    PiperOrigin-RevId: 173963466
    MOS_MIGRATED_REVID=173963466

[33mcommit cea1de29c52b7797577616d3b9b6acee8e4257ee[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Oct 27 18:22:40 2017 +0000

    Rename pytd/utils to pytd_utils.
    
    Also move dictionary invert function from abc_hierarchy to utils.
    
    --
    PiperOrigin-RevId: 173695204
    MOS_MIGRATED_REVID=173695204

[33mcommit 6de602a32039ddae14f8f44a566fa7ff28bcd98e[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Oct 25 17:51:00 2017 +0000

    Add some missing test coverage for main() and canonical_pyi()
    
    --
    PiperOrigin-RevId: 173419099
    MOS_MIGRATED_REVID=173419099

[33mcommit cbe1197e10b2ccee0b5037233a9eb897e25e0081[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Oct 25 16:19:36 2017 +0000

    Add pickle integration tests.
    
    --
    PiperOrigin-RevId: 173406425
    MOS_MIGRATED_REVID=173406425

[33mcommit 45f3f78f35a2f110538d01caf463673ac2a4d3a6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 24 20:05:01 2017 +0000

    Fix the return type of Mapping.iteritems().
    
    --
    PiperOrigin-RevId: 173299641
    MOS_MIGRATED_REVID=173299641

[33mcommit 2739125b032fa97342959e95e0b271b0d4b2c9b6[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Tue Oct 24 15:53:42 2017 +0000

    Fix pickle representation of FunctionType.
    
    This would fail on pickling. The case appears not to be common, so was probably hidden behind nofail.
    
    --
    PiperOrigin-RevId: 173263260
    MOS_MIGRATED_REVID=173263260

[33mcommit b75ba4655baab773d009ff68437c25051199f425[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 23 22:08:23 2017 +0000

    Add a chart showing the statuses of pytype tests.
    
    Shows the statuses of the tricorder guitar test, the python_static_analysis
    [] project, and the stable and unstable canary tests.
    
    Dashboard:
    
    --
    PiperOrigin-RevId: 173177201
    MOS_MIGRATED_REVID=173177201

[33mcommit 144d8a543bbad2fbb159e7c35051bf3f3179c739[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Oct 21 05:05:07 2017 +0000

    Fix a couple of bugs in --output-cfg and --output-typegraph.
    
    * Escape '{' and '"'.
    * Output a parsing error instead of crashing when --output-cfg and
      --output-typegraph are both provided.
    * Make both options available in checking mode.
    
    Because generating the graph uses /usr/bin/dot, we can't do much testing in
    main_test, but I did verify manually that the options are working as expected.
    
    --
    PiperOrigin-RevId: 172972162
    MOS_MIGRATED_REVID=172972162

[33mcommit ad50cb2e4065cb58c3c94cb808cfac4066d9ea67[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Oct 21 04:41:11 2017 +0000

    Cleanup: Use self.tmp_dir instead of utils.Tempdir() in main_test.
    
    --
    PiperOrigin-RevId: 172970978
    MOS_MIGRATED_REVID=172970978

[33mcommit 441aa72bbad33f276a8cdf824cab9cea7132f22c[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Fri Oct 20 15:10:18 2017 +0000

    Add a todo as todo/warning.
    
    --
    PiperOrigin-RevId: 172885273
    MOS_MIGRATED_REVID=172885273

[33mcommit 1f03ff98279fb23ddf0c701d5dd541e0b0f76ca7[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Fri Oct 20 15:01:52 2017 +0000

    Add infrastructure to use precompiled_builtins in proto_to_pyi.
    
    The new dependency on precompiled_builtins was missed during development of the proto_to_pyi tool.
    
    --
    PiperOrigin-RevId: 172884381
    MOS_MIGRATED_REVID=172884381

[33mcommit b3466274199b16d9a2e28566cd90b83e1280aa48[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Oct 19 22:06:52 2017 +0000

    Add a --show-config option to pytype, to print the full config and exit.
    
    This is both to help with debugging and to add a "mock" mode for testing.
    
    --
    PiperOrigin-RevId: 172805159
    MOS_MIGRATED_REVID=172805159

[33mcommit b7fd61d09d27f31b454f79923995b8df2a9feabc[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Wed Oct 18 15:02:47 2017 +0000

    Remove unused import.
    
    --
    PiperOrigin-RevId: 172602489
    MOS_MIGRATED_REVID=172602489

[33mcommit bc47da1a50d818e023502c45c27e2f04c70a88df[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Wed Oct 18 09:25:49 2017 +0000

    Change the imports_map_loader to use str.split(" ", 1) instead of shlex.
    
    The first string is a python module name. It is not allowed to contain whitespaces, therefore we can split on the first whitespace from the left.
    
    This approach has the benefit of being simpler and backwards compatible.
    
    --
    PiperOrigin-RevId: 172578257
    MOS_MIGRATED_REVID=172578257

[33mcommit d63dd7d11267b84e02c313821326694c77bfc18f[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Wed Oct 18 09:05:26 2017 +0000

    Mark precompiled modules as clean. The local pointers have already been set for them.
    
    This avoids some unnecessary Visitor calls.
    
    --
    PiperOrigin-RevId: 172576814
    MOS_MIGRATED_REVID=172576814

[33mcommit b640a5fc8519b483a871259290f742f78ef5dd75[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Oct 17 19:38:03 2017 +0000

    Support one level of nested tuples of types for isinstance and issubclass.
    
    --
    PiperOrigin-RevId: 172497378
    MOS_MIGRATED_REVID=172497378

[33mcommit 70274645ed028d3077786c54ce5f899de4b38a45[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Tue Oct 17 15:39:38 2017 +0000

    This provides a code path around shlex.
    
    Shlex has a large performance impact. For big imports_info files (>2k lines), this becomes one of the dominant sources of spend runtime.
    
    This change provides a way for callers to provide a separator strings. Which is used to split key and values in the imports info file. This split can be done with string.split, which is free compared to the state machine used by shlex.
    
    --
    PiperOrigin-RevId: 172470484
    MOS_MIGRATED_REVID=172470484

[33mcommit 460933d46dda203a9fec9c222a7869cfe8c5cf05[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Oct 12 23:50:16 2017 +0000

    Move some version checking and validation code to utils, so it can be reused
    when setting the version via different entry points.
    
    --
    PiperOrigin-RevId: 172032925
    MOS_MIGRATED_REVID=172032925

[33mcommit c7b3d17b0bf3878e789ea21d565a47b2359069eb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 12 18:34:07 2017 +0000

    Fix a bug caused by incorrectly reusing the seen set in output.py.
    
    In the test case, because we set the list contents to the tuple twice, the
    tuple is added to the seen set twice, and the second time, pytype mistakenly
    thinks it's encountered a recursive definition. Copying `seen` fixes the
    problem because the tuple is now added once to each copy.
    
    --
    PiperOrigin-RevId: 171987807
    MOS_MIGRATED_REVID=171987807

[33mcommit 57404f35774da4d7c216ec049d3b99e5069f27cd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 11 23:20:20 2017 +0000

    Document --verbosity=5.
    
    --
    PiperOrigin-RevId: 171891576
    MOS_MIGRATED_REVID=171891576

[33mcommit 4f470a09b2dbb9590630cc758f36f3482a51d26f[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Oct 11 22:23:05 2017 +0000

    Print an error if somebody uses --output-pickled without --output.
    
    --
    PiperOrigin-RevId: 171883940
    MOS_MIGRATED_REVID=171883940

[33mcommit 3d80c08dd12affff50cee8359be2f333626b177d[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Oct 11 20:30:50 2017 +0000

    Add debug.root_cause().
    
    --
    PiperOrigin-RevId: 171866572
    MOS_MIGRATED_REVID=171866572

[33mcommit 9827e39b9709af03a079672777b666623249c1df[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Oct 11 20:12:52 2017 +0000

    Forward CFG node before applying inplace operators.
    
    Only do this for emulated inplace operators (__iadd__ mapping to __add__,
    etc.). These act similarily to mutations (see abstract.py), but unlike them
    didn't yet get an extra CFG node.
    
    --
    PiperOrigin-RevId: 171864197
    MOS_MIGRATED_REVID=171864197

[33mcommit 8fcbd8eec457671dad2830edcd7dfd03f31584d6[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Oct 11 20:08:41 2017 +0000

    Start a new CFG node after BUILD_LIST.
    
    Also, print empty lists as <list '[]'>, not <list []>. The latter is confusing
    since instances are printed as <name [class]>.
    
    --
    PiperOrigin-RevId: 171863697
    MOS_MIGRATED_REVID=171863697

[33mcommit 489fa95a3ac7c61a7bb5f9a212dc1f75c055a1c9[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Oct 11 18:47:18 2017 +0000

    Support pyi files with type: ignore comments on decorators.
    
    Needed for typeshed interoperability with mypy.
    
    --
    PiperOrigin-RevId: 171853110
    MOS_MIGRATED_REVID=171853110

[33mcommit 917fcb53c055e239013b04457a9c93032e29023e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 11 18:07:00 2017 +0000

    Make make_class handle an abstract members dictionary correctly.
    
    --
    PiperOrigin-RevId: 171846161
    MOS_MIGRATED_REVID=171846161

[33mcommit 3cf940d5066171dcf9bc42572cb48f9abb3883ac[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 11 00:23:04 2017 +0000

    Fix a crash in _call_with_fake_args.
    
    --
    PiperOrigin-RevId: 171758762
    MOS_MIGRATED_REVID=171758762

[33mcommit 53095acc62896fa5a8dd5f3c02283aac636bc724[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Oct 11 00:04:14 2017 +0000

    Add support for 0.0 as a float literal in pyi files.
    
    x = 0.0
    
    reads better than
    
    x = ...  # type: float
    
    and is consistent with
    
    x = 0
    
    for an int literal, which is nice for classes with a list of mixed int and
    float constants.
    
    --
    PiperOrigin-RevId: 171756521
    MOS_MIGRATED_REVID=171756521

[33mcommit c5fd84a6df0adc516eacc27837cebb0523151335[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Oct 10 22:31:13 2017 +0000

    Fix: decorator is @coroutines.coroutine, not @coroutine.coroutine
    
    --
    PiperOrigin-RevId: 171744099
    MOS_MIGRATED_REVID=171744099

[33mcommit e124dcb0ecfa1ea3dff8d0e604374f016e094daa[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 10 21:46:26 2017 +0000

    Fix a bug in matcher.unimplemented_protocol_methods().
    
    We were looking for methods on the left instance, when we should be looking at
    its class, which caused us to print out nonsensical protocol error details.
    
    --
    PiperOrigin-RevId: 171737233
    MOS_MIGRATED_REVID=171737233

[33mcommit fabe340a1fd69f39f0893d78b700d170db0d497a[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Oct 10 20:34:58 2017 +0000

    FIX: pytd_tool needs a python_version option.
    
    --
    PiperOrigin-RevId: 171726542
    MOS_MIGRATED_REVID=171726542

[33mcommit 6db0334e7310e129fc1eacc9dd655876f44305d9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 10 18:49:56 2017 +0000

    Cleanup: remove __builtin__.iterator.
    
    --
    PiperOrigin-RevId: 171711902
    MOS_MIGRATED_REVID=171711902

[33mcommit a7a79aa14ba27e6b9bffdcf20e49ae8bb08531e8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 10 17:48:00 2017 +0000

    Fix a bug in typing.Iterator protocol matching.
    
    Since typing.Iterator is automatically converted to __builtin__.iterator, we
    need the result of _get_protocol() in order to get the abstract methods in
    _match_parameterized_protocol().
    
    --
    PiperOrigin-RevId: 171700778
    MOS_MIGRATED_REVID=171700778

[33mcommit 32405c239fd684aa741bceeddfe3b93e2947a27b[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Oct 10 00:09:00 2017 +0000

    Add support for "from . import module" in pyi files.
    
    --
    PiperOrigin-RevId: 171609404
    MOS_MIGRATED_REVID=171609404

[33mcommit c3e3bcaabc4ba014d6a3af7cc26c327d86affc86[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Oct 9 23:14:15 2017 +0000

    Adjust the phrasing of protocol errors.
    
    Don't ask the user to implement methods on arbitrary classes. We don't know
    what code they control or don't control.
    
    --
    PiperOrigin-RevId: 171602427
    MOS_MIGRATED_REVID=171602427

[33mcommit 2eed314501b3870c02e75dde1b93ce9c41579e4b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Oct 9 19:30:27 2017 +0000

    Get rid of the 'id' field of AtomicAbstractValue.
    
    I haven't yet seen a case where this id was useful for debugging, and the "v%d"
    notation was confusing since it made it look like "variable %d".
    
    --
    PiperOrigin-RevId: 171571459
    MOS_MIGRATED_REVID=171571459

[33mcommit cf7015706c0ab2e932e49892b3b3ac708e6baa0c[m
Author: Martin DeMello <mdemello@google.com>
Date:   Sat Oct 7 00:25:29 2017 +0000

    Fix breakages caused by adding a python version to the pytd parser.
    
    --
    PiperOrigin-RevId: 171369531
    MOS_MIGRATED_REVID=171369531

[33mcommit 311df98fdcf48e9ce0f8e045af8c2adde864a232[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Oct 6 21:04:01 2017 +0000

    Have the pytd builtins keyed by python version.
    
    * Enforce passing in a python version to all parsing entry points.
    * Add some typing.* builtins from python3 with a version guard.
    
    --
    PiperOrigin-RevId: 171340890
    MOS_MIGRATED_REVID=171340890

[33mcommit 9a029fbbbcba2e9e002abcb96d0f92ae94b2c688[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Oct 4 21:59:26 2017 +0000

    Add stubs for a few python3 typing.* classes.
    
    Aliases everything to Any, does not yet have version guards because our
    builtins loader does not support then.
    
    --
    PiperOrigin-RevId: 171068196
    MOS_MIGRATED_REVID=171068196

[33mcommit ed42a3b187e5156959a38f5351289f30095f8099[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Oct 4 20:17:55 2017 +0000

    Allow typing.Any to take type parameters that are silently dropped.
    
    Motivation: We have python3 features like typing.Future in typeshed that we do
    not yet support in pytype. Adding a shim that aliases them to Any will let us
    parse pyi files containing them, and not infer anything about the types
    involved.
    
    --
    PiperOrigin-RevId: 171052578
    MOS_MIGRATED_REVID=171052578

[33mcommit 63cbad5ff2a0d24d14f0245114997561b20c3685[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Oct 3 19:20:58 2017 +0000

    Support type: ignore in the first line of a multiline function definition.
    
    --
    PiperOrigin-RevId: 170894088
    MOS_MIGRATED_REVID=170894088

[33mcommit 88e1160cbe04059bf83826d9a605952e3c323505[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Oct 3 18:12:12 2017 +0000

    Support #type: ignore comments for empty classes.
    
    Specifically, add support for the pattern
    
      class A: ... # type: ignore
    
    which is used in typeshed.
    
    --
    PiperOrigin-RevId: 170883010
    MOS_MIGRATED_REVID=170883010

[33mcommit c58db2559ea8e3b4cde5646471c15b5b13a25b1b[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Oct 2 22:47:19 2017 +0000

    Allow a trailing comma in function param lists in pyi files.
    
    --
    PiperOrigin-RevId: 170766255
    MOS_MIGRATED_REVID=170766255

[33mcommit 0bcbe67c00ca0b5672706bdd5fc3a667213c45ea[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Oct 2 21:59:42 2017 +0000

    FIX: Guard against callers passing in None for an empty module name.
    
    --
    PiperOrigin-RevId: 170758488
    MOS_MIGRATED_REVID=170758488

[33mcommit 071ad915ad9a25a5fbf48d3009e190aafc1fef3f[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Oct 2 19:15:54 2017 +0000

    Add @overload decorators when writing out pyi files.
    
    This is for compatibility with mypy, and will help the eventual goal of using
    pytype to generate files for typeshed.
    
    --
    PiperOrigin-RevId: 170734217
    MOS_MIGRATED_REVID=170734217

[33mcommit a9ef8c66403d0359f4dedb659d66a77a3d206ef4[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Oct 2 18:02:56 2017 +0000

    Add support for package-relative imports in pyi files.
    
    Supports declarations of the form
      from .foo import Bar
    
    where .foo is resolved relative to the package of the current pyi file.
    
    --
    PiperOrigin-RevId: 170724274
    MOS_MIGRATED_REVID=170724274

[33mcommit 7e691ff2a8430dd7fb7214292047ab13b6a44972[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Sep 28 17:58:18 2017 +0000

    Parse @coroutine decorators in pyi files.
    
    Very basic support to
    * parse pyi files with @coroutine and @async.coroutine
    * check function overloads are consistent over the decorator
    * preserve the decorator when writing the pyi back out.
    
    --
    PiperOrigin-RevId: 170367134
    MOS_MIGRATED_REVID=170367134

[33mcommit 740fc54968239f5d40d4710ba77e2c2202e69c28[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Sep 28 16:28:44 2017 +0000

    Fix issues blocking integration of typegraph.
    
    This includes changes on both sides, i.e. C++ API changes and changing how
    Python interacts with cfg.
    
    --
    PiperOrigin-RevId: 170353600
    MOS_MIGRATED_REVID=170353600

[33mcommit 6be8151f6642e183a7fc7aab2bd40645b2540ba8[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Sep 26 00:04:43 2017 +0000

    Make subscript operations behave the same as function calls.
    
    We used to special-case subscript in that it complains if any of its operations
    are invalid, which are different from how we (currently) do function calls.
    Have both function calls and subscript only display an error if *none* of the
    combinations would work.
    
    --
    PiperOrigin-RevId: 169984299
    MOS_MIGRATED_REVID=169984299

[33mcommit 9d0b8df22faf5ca7c0b2b8defcead5cb161ede2c[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Sep 25 20:35:47 2017 +0000

    Fix a couple of MOE directives.
    
    Also add https://www.gnu.org to the leakchecker whitelist
    
    --
    PiperOrigin-RevId: 169953661
    MOS_MIGRATED_REVID=169953661

[33mcommit 8870a6437271e07368732c555fdf5b9dfd057c59[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Sep 22 21:41:11 2017 +0000

    Fix a subtle import issue.
    
    If a module (package) is called "foo.bar", and is implemented in
    "foo/bar/__init__.py", then it can reference modules that *start* with
    "foo.bar" (e.g. "foo.bar.baz", implemented in foo/bar/baz.py). Make sure that
    when we rename the local module, we don't rename references to modules below
    the current package. (In this example, do not rename "foo.bar.baz", but do
    rename "foo.bar")
    
    
    Also includes the following changes:
    
    Convert properties to constants at the module rather than class level.
    
    Lets us have a more precise notion of when a property type depends on a type
    variable (in which case we have to leave it as a method to be resolved at use
    time).
    
    Also cleans up a lot of property/method splitting code in build_class.
    
    --
    PiperOrigin-RevId: 169739601
    MOS_MIGRATED_REVID=169739601

[33mcommit 77c52c62f2c6de9d2e2f90249e6e5f7b734f56a7[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Sep 21 16:10:37 2017 +0000

    Add `import pytype.debug` back to cfg.py.
    
    One of the linting tools had complained about an unused import, but it turns
    out debug.py monkeypatches logging.
    
    --
    PiperOrigin-RevId: 169551368
    MOS_MIGRATED_REVID=169551368

[33mcommit 8b27ee973b2f300b227e420fed7b21b836cfbafd[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Sep 21 15:20:49 2017 +0000

    Remove debug function from CFGNode.
    
    --
    PiperOrigin-RevId: 169545973
    MOS_MIGRATED_REVID=169545973

[33mcommit 8a6d171aa03181c7150e3afdd325c4ae33989186[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Sep 20 23:30:39 2017 +0000

    Fix slice bug.
    
    We weren't correctly falling back to __getitem__ after trying __getslice__.
    
    --
    PiperOrigin-RevId: 169469411
    MOS_MIGRATED_REVID=169469411

[33mcommit fabfe29878d363b224f8163940740b9fd923d145[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Wed Sep 20 22:37:43 2017 +0000

    Add cfg_utils for cfg functions that don't need to be in main CFG API.
    
    These functions are for debugging purposes or are rarely used.
    This change is in preparation for moving cfg.py to C++.
    
    --
    PiperOrigin-RevId: 169461850
    MOS_MIGRATED_REVID=169461850

[33mcommit cc822765339389ae4112f41ae296132452a2d03d[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Sep 20 21:48:12 2017 +0000

    Add support for generic properties and classmethods in pyi files.
    
    Supports getters and classmethods of type foo(self: T, ...) -> X[T], where the
    return type depends on the type of the class.
    
    --
    PiperOrigin-RevId: 169454204
    MOS_MIGRATED_REVID=169454204

[33mcommit 9c6c50231de3b3126b5a2ac752f2478fa02291ca[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Sep 20 20:34:22 2017 +0000

    Explain why a type didn't match a protocol.
    
    This puts more information into error messages, explaining why we failed to
    match a protocol. It only does this for parameters, and only for the top
    level type. (So e.g. passing a List[X] argument for a List[Iterable] parameter
    will *not* complain about a missing "__iter__" on X)
    
    --
    PiperOrigin-RevId: 169442089
    MOS_MIGRATED_REVID=169442089

[33mcommit 419cb68bf3924800a4b4b2a9b6de6949264ef7fa[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Wed Sep 20 20:27:58 2017 +0000

    Adds tests for cfg.py's API.
    
    --
    PiperOrigin-RevId: 169441022
    MOS_MIGRATED_REVID=169441022

[33mcommit 2275d3c00f52bda9bb80a76e2a804049ec2c0f10[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Sep 19 22:36:27 2017 +0000

    Enable not-writable error.
    
    --
    PiperOrigin-RevId: 169312100
    MOS_MIGRATED_REVID=169312100

[33mcommit 56a5614957ec769dc5acea5d073ff23b01e63677[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Sep 19 18:20:50 2017 +0000

    Make logging of errors a bit nicer.
    
    When logging the location of an error message, only display the relevant part
    of the stack trace.
    
    --
    PiperOrigin-RevId: 169270221
    MOS_MIGRATED_REVID=169270221

[33mcommit 38aab63b3f9bb7243b88aca3a42965300a5127cd[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Sep 19 18:12:11 2017 +0000

    Add directive "# pytype: skip-file".
    
    --
    PiperOrigin-RevId: 169268647
    MOS_MIGRATED_REVID=169268647

[33mcommit 6ded1e4eedcc7e7ecbc226d206febb625147f467[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Sep 19 18:07:03 2017 +0000

    Allow classes with __getitem__ to match against the Iterable protocol.
    
    --
    PiperOrigin-RevId: 169267746
    MOS_MIGRATED_REVID=169267746

[33mcommit a040ff5cd955251f1879ec8e2394792ea33be2cf[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Sep 19 15:51:29 2017 +0000

    Add utility method "DummyMethod".
    
    (Needed for protocols, in an upcoming change)
    
    --
    PiperOrigin-RevId: 169247091
    MOS_MIGRATED_REVID=169247091

[33mcommit cc7930bd5bcf2f5d9b8b61a67140d65a8f50dc6d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 18 22:25:17 2017 +0000

    Remove the VM's reading_builtins attribute.
    
    --
    PiperOrigin-RevId: 169156191
    MOS_MIGRATED_REVID=169156191

[33mcommit 0527627ec506737d9679b38132bc1dc909f524ed[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 18 22:13:02 2017 +0000

    Make the AdjustTypeParameters visitor a little prettier.
    
    * Merge the bound_typeparams and bound_by_class attributes.
    * Rename bound_typeparams to class_typeparams and template_typeparams to
      function_typeparams, for clarity.
    
    
    Also includes the following changes:
    
    Add support for name-mangling in conjunction with __slots__.
    
    See https://docs.python.org/2/tutorial/classes.html#private-variables-and-class-local-references
    
    --
    PiperOrigin-RevId: 169154105
    MOS_MIGRATED_REVID=169154105

[33mcommit ba78da172949c8772f0a92c5f7e0ad380c0b7604[m
Author: Matthias Kramm <kramm@google.com>
Date:   Sat Sep 16 02:12:34 2017 +0000

    Minor tweaks to the phrasing in README.md.
    
    --
    PiperOrigin-RevId: 168920784
    MOS_MIGRATED_REVID=168920784

[33mcommit 75d9d5f565e650c25f9181db2e42329e8ee4c957[m
Author: Matthias Kramm <kramm@google.com>
Date:   Sat Sep 16 01:58:16 2017 +0000

    Remove the --no-native-builtins option.
    
    
    Also includes the following changes:
    
    Automatically infer and use the python exe under pytype/google/
    
    --
    PiperOrigin-RevId: 168919638
    MOS_MIGRATED_REVID=168919638

[33mcommit 717e479b88f4d790dc5ff13982dcc4822d619f47[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 15 22:30:34 2017 +0000

    Fix attribute setting on TypeParameterInstance.
    
    --
    PiperOrigin-RevId: 168898095
    MOS_MIGRATED_REVID=168898095

[33mcommit aa62b4b9a34f3a93cfa4b826a20ecb1c16613924[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 15 22:21:49 2017 +0000

    Report not-writable for attempts to set an attribute on a super instance.
    
    --
    PiperOrigin-RevId: 168896717
    MOS_MIGRATED_REVID=168896717

[33mcommit f9ffa42363c1ec9066b0ae864e346161960505b1[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Sep 15 22:16:28 2017 +0000

    Get rid of cache_unknowns option/parameter.
    
    This used to be True for the command line, but False in tests, possibly causing
    some confusion. Hardcode it to True, and remove the option.
    
    --
    PiperOrigin-RevId: 168895822
    MOS_MIGRATED_REVID=168895822

[33mcommit a2c0a2cf97b31c8355b0402b684be289940f7217[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Sep 15 22:03:32 2017 +0000

    Temporarily disable not-writable checks, outside of tests.
    
    Also clean up some configuration passthrough, by relying more on **kwargs.
    
    
    Also includes the following changes:
    
    Don't complain about not-writable in the presence of __setattr__ or descriptors.
    
    --
    Add empty __slots__ to (almost) all builtin classes.
    
    This now catches bugs like "foo".bar = 42.
    
    --
    Add __slots__ declarations to namedtuples.
    
    --
    Check __slots__ before assigning attributes.
    
    --
    PiperOrigin-RevId: 168893671
    MOS_MIGRATED_REVID=168893671

[33mcommit 71c03b197e1cbdf014e199b5c87054d384e01f38[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 15 20:19:24 2017 +0000

    Improve the exception definitions in __builtin__.pyi.
    
    * Add some missing attributes (merged from stdli[]/exceptions.pyi).
    * Remove redundant occurrences of __init__, __getslice__, and __unicode__.
    
    --
    PiperOrigin-RevId: 168878153
    MOS_MIGRATED_REVID=168878153

[33mcommit edea523579e194d5d0c0d32880c17265f1d14fec[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 15 18:12:34 2017 +0000

    Take could_contain_anything into account when extracting a PythonConstant.
    
    --
    PiperOrigin-RevId: 168859469
    MOS_MIGRATED_REVID=168859469

[33mcommit f58a5cf0fba01249ec3a35c555386ce920341029[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 14 23:35:02 2017 +0000

    Fix a bug where _get_literal_sequence treated plain tuples as heterogeneous.
    
    --
    PiperOrigin-RevId: 168765080
    MOS_MIGRATED_REVID=168765080

[33mcommit eb810a0080bbc071d3eb930b94513341e64a7651[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Sep 14 21:31:32 2017 +0000

    Add method aliases to the pyi parser.
    
    --
    PiperOrigin-RevId: 168745818
    MOS_MIGRATED_REVID=168745818

[33mcommit 58958c8f7199386882b5f9703fe8c3d6da134d1a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 14 21:26:05 2017 +0000

    Add an error for unpacking a tuple into the wrong number of variables.
    
    --
    PiperOrigin-RevId: 168744834
    MOS_MIGRATED_REVID=168744834

[33mcommit 3868937c49ee97460d76669a1fa380587da6c1fa[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 14 18:49:21 2017 +0000

    Make ObjectPredicate inherit from BuiltinFunction.
    
    Fixes the crash in matcher.py, since the code that can't handle a bare
    abstract.Function knows how to handle abstract.PyTDFunction.
    
    Also moves BuiltinFunction, Abs, and Next earlier in the special_builtins file
    to group them with the object predicate classes.
    
    Now that isinstance is a PyTDFunction, pytype is able to infer a bit more about
    it, and a couple of tests have been tweaked to reflect that.
    
    --
    PiperOrigin-RevId: 168721113
    MOS_MIGRATED_REVID=168721113

[33mcommit 302d9a92740afd9d552851b3f3d32c93d0df63d8[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Sep 13 22:11:19 2017 +0000

    Add callable() to special_builtins.
    
    * Also rearrange special_builtins.py to group similar classes.
    
    --
    PiperOrigin-RevId: 168602492
    MOS_MIGRATED_REVID=168602492

[33mcommit 049d859891d84a8a76c142c73fd29e48320f0888[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Sep 13 18:59:40 2017 +0000

    FIX: When unifying type parameters with constraints, don't copy the pyval
    between two instances of the parameter.
    
    --
    PiperOrigin-RevId: 168573981
    MOS_MIGRATED_REVID=168573981

[33mcommit 6263503de9a262845f7cc6ec0a29a1ba75904799[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 12 16:45:29 2017 +0000

    Remove variable callbacks.
    
    Computes a changestamp from the sum of the number of variables and the number
    of variable bindings in a MonitorDict, so that the changestamp changes whenever
    a variable or binding is added.
    
    Fixes a test in test_tracebacks that, as far as I can tell, only worked
    previously because we made some unnecessary change to the changestamp that
    caused f() to be called twice with the same argument.
    
    --
    PiperOrigin-RevId: 168388414
    MOS_MIGRATED_REVID=168388414

[33mcommit ea3f2b5a075ee8346e468724eb89a981c3d649e7[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Sep 12 13:08:50 2017 +0000

    Make protocols work even if the interface is implemented by a superclass.
    
    --
    PiperOrigin-RevId: 168366161
    MOS_MIGRATED_REVID=168366161

[33mcommit 29969505998cd5bc06c09b486ffbdf8c1d105120[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Sep 11 20:15:39 2017 +0000

    FIX: When looking up class attributes for a single binding, we should not pass
    in the full variable as valself.
    
    --
    PiperOrigin-RevId: 168274238
    MOS_MIGRATED_REVID=168274238

[33mcommit 9383601348d40bc6fbc28aa1e351c19e92521a49[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 11 20:10:14 2017 +0000

    Start checking for [not-indexable] in a tuple test.
    
    --
    PiperOrigin-RevId: 168273552
    MOS_MIGRATED_REVID=168273552

[33mcommit 0e18e87c94fd5e022e7fd69c14a1c6a076743b6a[m
Author: Martin DeMello <mdemello@google.com>
Date:   Sat Sep 9 00:37:23 2017 +0000

    FIX: Don't crash on reraise in python3 code.
    CLEANUP: We treat state.exception purely as a boolean, simplify the code to reflect that.
    
    --
    PiperOrigin-RevId: 168069915
    MOS_MIGRATED_REVID=168069915

[33mcommit d674c47e81326c7571d0b23451dbf539130dc979[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Sep 8 23:18:08 2017 +0000

    Add a new usage-error error class, to report errors in the command line
    invocation of pytype.
    
    --
    PiperOrigin-RevId: 168061509
    MOS_MIGRATED_REVID=168061509

[33mcommit 40110da53eb15d752b6ff7734a862d95ed7d5d1e[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Sep 8 21:57:59 2017 +0000

    Split protocol matching tests and protocol inference tests into different files.
    
    --
    PiperOrigin-RevId: 168050652
    MOS_MIGRATED_REVID=168050652

[33mcommit 9b2e6186477eb38d7c41ffb2f9e2acda295a8eca[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 7 20:30:11 2017 +0000

    Cleanup: Add a to_binding() method to AtomicAbstractValue.
    
    --
    PiperOrigin-RevId: 167903026
    MOS_MIGRATED_REVID=167903026

[33mcommit a1c7aed2ddeec3ae9089c43bcb8ad657f303d279[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Sep 7 19:28:02 2017 +0000

    FIX: Add get_class to special builtin instances.
    
    There are some code paths where the matcher will call get_class on instances of property() etc., which was causing an assert failure.
    
    
    Also includes the following changes:
    
    Output __slots__ information into pyi.
    
    This stores "inferred" __slots__ information into the generated pyi. We don't
    actually use the __slots__ yet, but this makes sure they make it through the
    pipeline.
    
    --
    PiperOrigin-RevId: 167895230
    MOS_MIGRATED_REVID=167895230

[33mcommit cecc622b54561fe88e48cf3fb349e48e6fc4e74a[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Sep 1 23:21:13 2017 +0000

    Remove support for external code functions.
    
    We were only using this for __builtin__.py, which is now removed.
    
    --
    PiperOrigin-RevId: 167338898
    MOS_MIGRATED_REVID=167338898

[33mcommit 1bd55f48ac6432a9dc7c805b70f27a00e54d047a[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Sep 1 23:18:41 2017 +0000

    Remove pytd/builtins/__builtin__.py
    
    --
    PiperOrigin-RevId: 167338614
    MOS_MIGRATED_REVID=167338614

[33mcommit f2b9118c7d4bd01be4c2c8dbccc03e09e6b34202[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Sep 1 23:11:52 2017 +0000

    Port classmethod() from pytd/builtins to special_builtins
    
    --
    PiperOrigin-RevId: 167337785
    MOS_MIGRATED_REVID=167337785

[33mcommit a2fbde7810f488ecef8c08ca8f1036ad8fec4ff2[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Thu Aug 31 20:33:31 2017 +0000

    Unresolved classes could escape from the pickling code.
    
    This could happen if
    A ClassType in module1, used for say a Signature, references something in module2.
    Visitors.LookupExternalTypes could not resolve something and instead replaced the ClassType with AnythingType.
    If a local reference in module1 pointed to Signature, the local reference would point to an unresolved ClassType instead of AnythingType.
    
    --
    PiperOrigin-RevId: 167182863
    MOS_MIGRATED_REVID=167182863

[33mcommit fc76d1079c870484c6d3e830087fc397fa38ca7b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Aug 31 01:27:13 2017 +0000

    Support __slots__ in pyi.
    
    --
    PiperOrigin-RevId: 167081078
    MOS_MIGRATED_REVID=167081078

[33mcommit f7c8b5d8726710cfcf34fbd1e25ba222027da607[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Aug 30 22:27:25 2017 +0000

    Cleanup: constructing a PropertyInstance shouldn't need a source set.
    
    --
    PiperOrigin-RevId: 167058993
    MOS_MIGRATED_REVID=167058993

[33mcommit 910c7c4ce953426f0d77a3d7cff6a4b5599939f2[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Aug 30 20:29:09 2017 +0000

    Port @staticmethod from pytd/builtins to special_builtins
    
    --
    PiperOrigin-RevId: 167040673
    MOS_MIGRATED_REVID=167040673

[33mcommit 6c13d1d8d3bd3bad91e90607321c8880e017a5c1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 30 20:07:23 2017 +0000

    Remove NotImplementedType from the return types of Counter operations.
    
    --
    PiperOrigin-RevId: 167037392
    MOS_MIGRATED_REVID=167037392

[33mcommit d99b79e3c0a40b3adae1e208ac68f0b3a726f69b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Aug 29 22:19:22 2017 +0000

    Add a 'slots' attribute to pytd.Class.
    
    This doesn't yet do anything.
    
    --
    PiperOrigin-RevId: 166912040
    MOS_MIGRATED_REVID=166912040

[33mcommit 1c8852407382835cab93b84acb461a7bba148a6a[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Aug 29 20:56:40 2017 +0000

    Port property() from pytd/builtins to special_builtins.
    
    Combines a couple of rolled-back CLs into a single CL to reapply. Also adds a workaround for [] in matcher.py
    
    --
    PiperOrigin-RevId: 166898414
    MOS_MIGRATED_REVID=166898414

[33mcommit 38cd8ce7d3f1f86c77819776c161f81588a6054e[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Mon Aug 28 20:13:09 2017 +0000

    During conversion, reinstantiate pytd.Class objects that have templates.
    
    --
    PiperOrigin-RevId: 166746384
    MOS_MIGRATED_REVID=166746384

[33mcommit 9ae80ac1bad1fa51b5fa98c16c1190665413ca3b[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Aug 24 21:04:07 2017 +0000

    Add typing.Collection to Pytype's builtin typing.pytd.
    
    --
    PiperOrigin-RevId: 166390943
    MOS_MIGRATED_REVID=166390943

[33mcommit 2ee690368d67223d96f2bcb92207d0b250b0d5b0[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Aug 23 22:18:21 2017 +0000

    Add a better test case for next(x) with x possibly not having a "next" attribute.
    
    --
    PiperOrigin-RevId: 166262723
    MOS_MIGRATED_REVID=166262723

[33mcommit 3782b3f7279fb307596adfa711f2c2d3f8173e39[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 23 21:37:37 2017 +0000

    Make the LookupLocalTypes, LookupExternalTypes visitors more robust.
    
    --
    PiperOrigin-RevId: 166256347
    MOS_MIGRATED_REVID=166256347

[33mcommit e31de0c1e9136692a5276d2c2599a1f85b0c017c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Aug 22 23:11:15 2017 +0000

    Fix abs(x) with x having no "__abs__", and next(x) with x having no "next".
    
    Root cause of the latter still unclear, since we check the parameter to next() before trying to retrieve "next".
    
    --
    PiperOrigin-RevId: 166129289
    MOS_MIGRATED_REVID=166129289

[33mcommit 2e8b0c598030d61061c4c49aa3758573d345feac[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Aug 22 20:02:17 2017 +0000

    FIX: clean up breakage caused by CL rollbacks
    
    --
    PiperOrigin-RevId: 166101964
    MOS_MIGRATED_REVID=166101964

[33mcommit fc7e427e0802e3c9d896923ce0d8b21cf80d638a[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Aug 22 18:17:00 2017 +0000

    Rollback of commit c728bfb930d087152b9d7c84c5eff7ef8f9f32d0.
    
    *** Reason for rollback ***
    
    blocking release
    
    *** Original change description ***
    
    Move the property() handler from pytd/builtins to special_builtins.
    
    ***
    
    --
    PiperOrigin-RevId: 166086575
    MOS_MIGRATED_REVID=166086575

[33mcommit 4d87d849875445158b7fe0fc21ceac410c0bb7c2[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Aug 22 18:04:22 2017 +0000

    Rollback of commit 0f647479e38a03cd548a66ae20f948c0f26ba740.
    
    *** Reason for rollback ***
    
    blocking release
    
    *** Original change description ***
    
    Minor refactoring: property() doesn't need to go through convert.py
    
    ***
    
    --
    PiperOrigin-RevId: 166084538
    MOS_MIGRATED_REVID=166084538

[33mcommit dbaac1a090bbe68365989d9cd77780bf3a30e71b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Aug 21 23:59:46 2017 +0000

    Always import cfg as "cfg".
    
    --
    PiperOrigin-RevId: 165995668
    MOS_MIGRATED_REVID=165995668

[33mcommit 0f647479e38a03cd548a66ae20f948c0f26ba740[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Aug 21 20:38:38 2017 +0000

    Minor refactoring: property() doesn't need to go through convert.py
    
    --
    PiperOrigin-RevId: 165968539
    MOS_MIGRATED_REVID=165968539

[33mcommit f0202f88144be6a3c0c4cee6cadba5769067624d[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Aug 18 22:43:11 2017 +0000

    Port next() from pytd/builtins to special_builtin
    
    --
    PiperOrigin-RevId: 165763111
    MOS_MIGRATED_REVID=165763111

[33mcommit e5e1636b137b3091c92def12f02d8a8d27e0f40a[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Aug 18 22:37:35 2017 +0000

    Optimisation: remove an unnecessary set operation from CanHaveCombination.
    
    From a quick profile, drops the total running time over 35k calls from 35.8s to
    27s.
    
    --
    PiperOrigin-RevId: 165762477
    MOS_MIGRATED_REVID=165762477

[33mcommit 31b26f864a1bc4b1c8afdcc40c506abb7bde093c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 18 22:31:54 2017 +0000

    Take DUMMY_CONTAINER into account in TupleClass.instantiate().
    
    --
    PiperOrigin-RevId: 165761819
    MOS_MIGRATED_REVID=165761819

[33mcommit 6f66800fb09a83bff0b5ece2d048e357fcc92b37[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Aug 18 22:27:18 2017 +0000

    Remove broken staticmethod(__init__()) test.
    
    Accidentally added it when fixing no-argument __init__s.
    
    --
    PiperOrigin-RevId: 165761259
    MOS_MIGRATED_REVID=165761259

[33mcommit 542d97b7fafac6a3a9f378fadfb49143d0fb0a58[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Aug 18 21:56:04 2017 +0000

    Don't add `self` arg if function takes no arguments. Also formalize `argcount`.
    
    BoundFunction used underlying.argcount(), which only InterpreterFunction and
    NativeFunction supported. Added it to the Function base class and to
    PyTDFunction.
    
    --
    PiperOrigin-RevId: 165756825
    MOS_MIGRATED_REVID=165756825

[33mcommit d083798f8f5a323891951bed6de56e44da402f5b[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Aug 18 18:44:13 2017 +0000

    Move abs() from pytd/builtins to special_builtins.
    
    --
    PiperOrigin-RevId: 165732281
    MOS_MIGRATED_REVID=165732281

[33mcommit c728bfb930d087152b9d7c84c5eff7ef8f9f32d0[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Aug 17 23:35:50 2017 +0000

    Move the property() handler from pytd/builtins to special_builtins.
    
    --
    PiperOrigin-RevId: 165646557
    MOS_MIGRATED_REVID=165646557

[33mcommit a59dd7049fe51c693560f49187a891a94bbe1a21[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Aug 17 18:41:43 2017 +0000

    Raise a python-compiler-error rather than an uncaught exception when the input
    file cannot be read.
    
    --
    PiperOrigin-RevId: 165606261
    MOS_MIGRATED_REVID=165606261

[33mcommit e1ae197d732cbc0bb57892c125586ae9cf2dd351[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 17 18:39:58 2017 +0000

    Check the format of the expected errors list passed to assertErrorLogIs.
    
    --
    PiperOrigin-RevId: 165605987
    MOS_MIGRATED_REVID=165605987

[33mcommit 97090f518aad96264cc4519edaa431ddeb24efe7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 14 21:30:56 2017 +0000

    Fix main.py exception handling.
    
    Previously, pytype crashed if the exception constructor took more than one
    argument. Now instead of trying to construct another instance of the caught
    exception, we'll report its name and message, and raise an AssertionError.
    So where we previously would've logged:
    
    TypeParameterError: T
    File: foo.py
    
    we'll now have:
    
    AssertionError: T
    Exception: TypeParameterError
    File: foo.py
    
    --
    PiperOrigin-RevId: 165229816
    MOS_MIGRATED_REVID=165229816

[33mcommit daec17fd1e3e07b23dc0321b0aee287496db239b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Aug 14 16:51:38 2017 +0000

    Fix node bug in converter.py.
    
    When converting the parameters of a GenericType, we need to use the current
    node, since they might be type parameters, referring to concrete
    instances declared at a non-root node. We wouldn't be able to reach these
    from the root node.
    Also fixed a typo found by pylint.
    
    --
    PiperOrigin-RevId: 165190425
    MOS_MIGRATED_REVID=165190425

[33mcommit 04be7ed75f3a294ace0029cded6786f631606821[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Aug 14 16:46:07 2017 +0000

    During solving, if the starting CFG node is blocked, treat it as such.
    
    --
    PiperOrigin-RevId: 165189744
    MOS_MIGRATED_REVID=165189744

[33mcommit e21970190f6d0454544b6b0193641191b771efd2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Aug 12 19:13:46 2017 +0000

    Analyze decorated classes.
    
    --
    PiperOrigin-RevId: 165082362
    MOS_MIGRATED_REVID=165082362

[33mcommit e9e702de4f1ca6f786c9148b97c691d52cd9b6ca[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Aug 12 19:08:17 2017 +0000

    Handle unknown and unsolvable values in _lookup_from_mro.
    
    --
    PiperOrigin-RevId: 165082228
    MOS_MIGRATED_REVID=165082228

[33mcommit 4378e98f827cc64f67f9d5706f9a2ff19413cb30[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue Aug 8 22:06:19 2017 +0000

    Fix _match_args adding an extra name to function call error messages.
    
    --
    PiperOrigin-RevId: 164650938
    MOS_MIGRATED_REVID=164650938

[33mcommit cbd671b96a4fd48b99e49d2d5cfff5f31fb7dcc8[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Aug 8 19:48:13 2017 +0000

    Fix common annoyance when trying to log an uninitialised Dict.
    
    --
    PiperOrigin-RevId: 164631286
    MOS_MIGRATED_REVID=164631286

[33mcommit 9b2c8d095f2efc2365dc4ca8a5f80735094efd53[m
Author: Paige Kordas <kordas@google.com>
Date:   Tue Aug 8 19:46:30 2017 +0000

    Added common stringlike protocols.
    
    --
    PiperOrigin-RevId: 164631025
    MOS_MIGRATED_REVID=164631025

[33mcommit e25665f74687fb9a932a16ef09e713499aeb6e29[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 8 04:01:56 2017 +0000

    Add a repr() method to function.Signature.
    
    --
    PiperOrigin-RevId: 164549848
    MOS_MIGRATED_REVID=164549848

[33mcommit 4282465a6c990a7eef27e0c0c3ca5743c810de6d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 7 16:50:37 2017 +0000

    Rename assertEquals and assertNotEquals (drop the 's').
    
    I got tired of seeing the lint warning about deprecation in every
    other test file I touched, so I went and changed all of them at once.
    
    --
    PiperOrigin-RevId: 164471786
    MOS_MIGRATED_REVID=164471786

[33mcommit 21c67b142f35cd4a9a795ad95c34fc8106af0ab5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 7 16:41:05 2017 +0000

    Move mro-related logic into its own file.
    
    This refactoring accomplishes two things:
    * MergeSequences is no longer in visitors.py, which was an awkward place for a
      utility function to be.
    * Removes a circular import in VerifyContainers.
    
    --
    PiperOrigin-RevId: 164470656
    MOS_MIGRATED_REVID=164470656

[33mcommit e29ec01a04b1a0c78ca7eeda17a8eaa0bd5cd762[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 4 23:03:28 2017 +0000

    Add a test for "and" in pyi version check.
    
    Looks like this was already done while implementing IntersectionType,
    so I just added a test for it.
    
    --
    PiperOrigin-RevId: 164322689
    MOS_MIGRATED_REVID=164322689

[33mcommit 195f6cdf26f5a79d5b4e3fd301e865055fe20842[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Aug 4 22:41:29 2017 +0000

    Adds class name when reporting function call errors on methods.
    
    Instead of "append", display "list.append" in the error message, for example.
    
    --
    PiperOrigin-RevId: 164320188
    MOS_MIGRATED_REVID=164320188

[33mcommit 6acfdee0e70e9053a91da88b69b9ada99f273bdc[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 4 03:47:21 2017 +0000

    Report an error for a definition like class B(A[T], A[int]): ...
    
    Report an error when a type parameter in a class's template is also given a
    concrete value.  Changes AliasingDict to allow turning a name with a value into
    an alias, so that class B(A[int], A[T]): ... is an error rather than a crash.
    
    Also renames some asserts and corrects a typo, at the direction of gpylint.
    
    --
    PiperOrigin-RevId: 164220880
    MOS_MIGRATED_REVID=164220880

[33mcommit ad2a8138f7366cae388c2ca26440a2d845af2284[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 3 20:10:47 2017 +0000

    Fix a crash by instantiating type parameters with a container argument.
    
    --
    PiperOrigin-RevId: 164169808
    MOS_MIGRATED_REVID=164169808

[33mcommit 4595c3439433f941ddc69739c005763754c7351b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 3 17:43:09 2017 +0000

    Log an error when @abstractmethod is used in a non-abstract InterpreterClass.
    
    --
    PiperOrigin-RevId: 164145577
    MOS_MIGRATED_REVID=164145577

[33mcommit 9ee51455df5eb2e985f405f603bd4302b4f413ce[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 3 17:38:44 2017 +0000

    Infer return type in the presence of parameter annotations.
    
    --
    PiperOrigin-RevId: 164144835
    MOS_MIGRATED_REVID=164144835

[33mcommit 613a914fea174a3273c9eb52cc6feabc964653c2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 3 17:36:20 2017 +0000

    Take is_abstract into account in the RemoveInheritedMethods visitor.
    
    --
    PiperOrigin-RevId: 164144422
    MOS_MIGRATED_REVID=164144422

[33mcommit ee7cc5cde54163b15a4bda8e6c98a18d763975e3[m
Author: Paige Kordas <kordas@google.com>
Date:   Wed Aug 2 23:12:25 2017 +0000

    Added support for checking parameterized protocols to pytype.
    
    --
    PiperOrigin-RevId: 164054024
    MOS_MIGRATED_REVID=164054024

[33mcommit f761afe20f4d8bbf90eb097e42db7f14e74e0a94[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 2 23:09:36 2017 +0000

    Don't let abstract classes be instantiated.
    
    --
    PiperOrigin-RevId: 164053599
    MOS_MIGRATED_REVID=164053599

[33mcommit 0b64a23d8aa5a0ac85c02b2239101d1f7ef06beb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Aug 2 21:46:25 2017 +0000

    Allow "abc.abstractmethod" as a decorator in pyi files.
    
    Also fixes some lint issues.
    
    --
    PiperOrigin-RevId: 164041275
    MOS_MIGRATED_REVID=164041275

[33mcommit 80852c7341dd35af1a74251b252cf4123fe2f4fa[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Aug 1 21:49:31 2017 +0000

    Allow both "has_dynamic_attributes" and "HAS_DYNAMIC_ATTRIBUTES".
    
    Before, we used has_dynamic_attributes for classes, but HAS_DYNAMIC_ATTRIBUTES
    for modules, which had the potential to cause confusion.
    
    --
    PiperOrigin-RevId: 163890683
    MOS_MIGRATED_REVID=163890683

[33mcommit 4b4f142f144fa425da0a90496f1961911d2a8bf3[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Aug 1 20:19:03 2017 +0000

    Fix a small bug in TypeParameterInstance matching.
    
    --
    PiperOrigin-RevId: 163875649
    MOS_MIGRATED_REVID=163875649

[33mcommit e536a0ceaee44fa7af3b22bcad023e84c53aaa90[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Aug 1 19:51:56 2017 +0000

    Remove _csv.pytd, in favor of _csv.pyi from typeshed.
    
    --
    PiperOrigin-RevId: 163872188
    MOS_MIGRATED_REVID=163872188

[33mcommit 9daf80cc02d297146685639f361d6a5e593ed8d5[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue Aug 1 00:21:10 2017 +0000

    Improves parameter ordering in error messages by using signature's ordering.
    
    _iter_actual looks more complicated than it actually is, because it needs to
    take into account starargs when following the signature's ordering.
    
    --
    PiperOrigin-RevId: 163772571
    MOS_MIGRATED_REVID=163772571

[33mcommit c3bf2ce47fa2ffa153ed1d98ef584d4b0ffb13ad[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 31 22:55:29 2017 +0000

    Rename type_param_error to unbound_type_param.
    
    I have no idea why I didn't name the error unbound_type_param
    in the first place. Also fixes the import order in errors.py.
    
    --
    PiperOrigin-RevId: 163761181
    MOS_MIGRATED_REVID=163761181

[33mcommit fe00b820a7e077ed4e013cf92efe8b64fdda5733[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Mon Jul 31 19:07:08 2017 +0000

    Adds type checking for arguments to builtin functions.
    
    Uses _match_args to check arguments to isinstance, hasattr and issubclass.
    
    --
    PiperOrigin-RevId: 163728173
    MOS_MIGRATED_REVID=163728173

[33mcommit 5e7ac8978b71ece67ab078f4173e4ab88180ddf1[m
Author: Paige Kordas <kordas@google.com>
Date:   Mon Jul 31 17:32:07 2017 +0000

    Corrected docstring for pytd.Signature
    
    --
    PiperOrigin-RevId: 163712262
    MOS_MIGRATED_REVID=163712262

[33mcommit 851cbe1553c39b3bd3688ee037663894cb87c096[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 31 17:19:34 2017 +0000

    Don't create a TypeParameterInstance directly.
    
    Uses TypeParameter.instantiate() instead.
    
    --
    PiperOrigin-RevId: 163710290
    MOS_MIGRATED_REVID=163710290

[33mcommit 9e79a408b8d4775048c03909770c01ae52b7fe06[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Jul 28 22:33:23 2017 +0000

    Adds "typing.TypeVar" and "typing.NamedTuple" as keywords to lexer.
    
    A small quality-of-life change to prevent a couple rare ParseErrors.
    
    --
    PiperOrigin-RevId: 163527406
    MOS_MIGRATED_REVID=163527406

[33mcommit bf159802a91ae4e66c8f39e631f27090097ed73f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jul 28 22:30:02 2017 +0000

    Fix a bug in reporting not-supported-yet for inline generic classes.
    
    We were reporting [not-supported-yet] for both
      class Foo(List[T]): ...
    and
      class Foo(List[str]): ...
    even though pytype can already handle the latter.
    
    --
    PiperOrigin-RevId: 163526989
    MOS_MIGRATED_REVID=163526989

[33mcommit 46c6bc1d280b3d744ee73b38dbcdf7907e25d0d4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jul 28 19:57:48 2017 +0000

    Delete time.pytd.
    
    We made a copy of time.pyi as a temporary workaround until
    the upstream version was changed to use __new__ instead of
    __init__ for initializing struct_time. This change has been
    made, so our copy can go.
    
    --
    PiperOrigin-RevId: 163506771
    MOS_MIGRATED_REVID=163506771

[33mcommit 36fb9e6fde1c1486b688c8ab771e5c1895c3945b[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Jul 28 19:56:42 2017 +0000

    Fix crash when calling a ParameterizedClass object.
    
    --
    PiperOrigin-RevId: 163506659
    MOS_MIGRATED_REVID=163506659

[33mcommit 694d66c26bfb29bc571475fb13d4e41d32dba6d0[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Fri Jul 28 13:49:31 2017 +0000

    Enable cython for pytype.
    
    The build implementation is one way, another possibility would be to put marker files (cfg.pyx, node.pyx) next to the py files.
    
    Change in behavior: The possibility of Nodes to supply their own VisitNode implementation is removed. This functionality is unused at this time.
    
    --
    PiperOrigin-RevId: 163463667
    MOS_MIGRATED_REVID=163463667

[33mcommit 7041921d302696913b8c9d8001e9cc6dacd898bb[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Jul 27 21:50:17 2017 +0000

    Slightly improves use of .pyi files in imports map.
    
    The file being analyzed doesn't need to rely on its own imports map entry,
    because that information needs to be updated.
    
    --
    PiperOrigin-RevId: 163391394
    MOS_MIGRATED_REVID=163391394

[33mcommit 4f28ec20caff0a7c42495ada9c575957a5c112a1[m
Author: Paige Kordas <kordas@google.com>
Date:   Thu Jul 20 01:12:11 2017 +0000

    Added capability to type-check against non-parameterized protocols.
    
    --
    PiperOrigin-RevId: 162564130
    MOS_MIGRATED_REVID=162564130

[33mcommit 682722e8eaad1b218fd9977b269ed2276f218068[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Wed Jul 19 22:25:17 2017 +0000

    Adds support for typing.Deque.
    
    --
    PiperOrigin-RevId: 162544329
    MOS_MIGRATED_REVID=162544329

[33mcommit 11f15031692e1686e4c7036b7229d3d1c056d4f1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 19 20:26:27 2017 +0000

    Fix our logic for deciding when to type-check an abstract method.
    
    We were depending on the is_attribute_of_class attribute of functions, but
    this attribute isn't set properly when (1) the method's return type is a
    namedtuple, or (2) when the skip_repeat_calls flag is set to False.
    
    Also changes assertEquals to assertEqual in a few places to make lint happy.
    
    --
    PiperOrigin-RevId: 162526974
    MOS_MIGRATED_REVID=162526974

[33mcommit d5f3765fb7ccc9e02f6fb1f59064c08f1c61c3bf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 19 18:10:39 2017 +0000

    Add missing attributes to __builtin__.slice.
    
    --
    PiperOrigin-RevId: 162508652
    MOS_MIGRATED_REVID=162508652

[33mcommit 4c20b3ba4b2bee43639828dc93d2002bcfbd5cc1[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Jul 17 19:07:40 2017 +0000

    Debug logging fixes/enhancements:
    * Limit recursion depth when printing out nested binding source sets.
    * Add a stack trace to log.debug when logging error creation.
    
    --
    PiperOrigin-RevId: 162248972
    MOS_MIGRATED_REVID=162248972

[33mcommit be377fa92f41e33f61516c7b30cbf827a87b15bf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 17 19:03:25 2017 +0000

    Change "if __any_object__" to "if __random__".
    
    For a while I was incorrectly using __any_object__ instead of __random__ for
    conditions in tests. __any_object__ creates an unknown, whereas __random__
    creates a bool.
    
    --
    PiperOrigin-RevId: 162248264
    MOS_MIGRATED_REVID=162248264

[33mcommit e6bb706ed4cca690c9f589cee462c42ed778bc46[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Jul 17 18:13:53 2017 +0000

    Rename testAbortOnComplex to testDontTimeoutOnComplex and add a comment.
    
    --
    PiperOrigin-RevId: 162240014
    MOS_MIGRATED_REVID=162240014

[33mcommit 4534f3f745e784afc319f996b43d2fda120bc4ef[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Jul 15 03:33:45 2017 +0000

    Fix a bug in vm._yield_subclass_superclass_pairs.
    
    When we get a ParameterizedClass, we need to return its base class.
    
    --
    PiperOrigin-RevId: 162042509
    MOS_MIGRATED_REVID=162042509

[33mcommit 23ff26d871fcf3f5213d493662f2ee30ca7349c1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Jul 15 02:48:40 2017 +0000

    When Instance(object) matches a type parameter, set it to Any.
    
    --
    PiperOrigin-RevId: 162040312
    MOS_MIGRATED_REVID=162040312

[33mcommit 3d61fe30ed864543eb06899f2c83dae573860635[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 13 23:01:08 2017 +0000

    Improve our handling of AliasingDictConflictError.
    
    The referenced bug was caused by a small cluster of loosely related issues:
    * When computing the bad names to be set to Any after an
      AliasingDictConflictError, we forgot to include the name that the
      ambiguous alias originally referred to. This is fixed.
    * We allowed the Any value to be overwritten later. This is fixed.
    * InterpreterFunction.call() doesn't know how to handle the case when a type
      parameter has a value set at the root node that is overwritten later during a
      cached function call. However, I'm now convinced that this case doesn't need
      to be handled, since the only way I've been able to hit it is through the
      buggy handling of AliasingDictConflictError that this change fixes.
    
    --
    PiperOrigin-RevId: 161878971
    MOS_MIGRATED_REVID=161878971

[33mcommit f6a21e8af73cb9f4f0f7149e3299099d3bd7b5bf[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Jul 13 21:30:44 2017 +0000

    Adds support for issubclass().
    
    --
    PiperOrigin-RevId: 161865318
    MOS_MIGRATED_REVID=161865318

[33mcommit f548173357139e4e8c2eaf1f90e85c3a5a0004db[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Thu Jul 13 21:15:33 2017 +0000

    Make the pytype pickle cache stable.
    
    --
    PiperOrigin-RevId: 161862810
    MOS_MIGRATED_REVID=161862810

[33mcommit 89f854f98ef49e5d94b7b8994af11a8ec0098ce4[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Jul 13 18:56:24 2017 +0000

    We no longer support commenting out type comments; remove the test for it.
    
    --
    PiperOrigin-RevId: 161842141
    MOS_MIGRATED_REVID=161842141

[33mcommit 60ab17a25078cf1762e10fba4e9ecaa50ed56273[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Jul 13 18:55:42 2017 +0000

    Add PyTDClass(tuple) to the mro for TupleClass
    
    Supports isinstance(obj, tuple) checks.
    
    --
    PiperOrigin-RevId: 161842035
    MOS_MIGRATED_REVID=161842035

[33mcommit 6b0b2f325cf2fa3714b45824a86900029ee124e1[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Jul 13 15:44:46 2017 +0000

    Find Pytype directives anywhere in a comment.
    
    Previous behavior required Pytype directives (e.g. type comments and
    disable=error) to be the first part of the comment. This allowed "commenting
    out" directives, which has now been deprecated.
    
    --
    PiperOrigin-RevId: 161812235
    MOS_MIGRATED_REVID=161812235

[33mcommit 026cf67b09cc3e8de1786beba7a38b3751981ae5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 12 23:28:44 2017 +0000

    Call __init__ on return values instantiated during matching.
    
    matcher.py uses instantiate() rather than init_class(), which in most cases is
    correct, since it creates a lot of throwaway instances for matching. But
    occasionally one of these instances ends up being the return value, so we
    need to call __init__ on it.
    
    Also defines a dummy call_init() in vm.py to make abstract_test and vm_test
    happy, and fixes a bug in special_builtins that this change exposes. (We were
    sometimes calling get_class_attribute() without first checking that the
    abstract value was in fact an abstract.Class.)
    
    --
    PiperOrigin-RevId: 161735655
    MOS_MIGRATED_REVID=161735655

[33mcommit ba61bd56a178fefcea36780e20d095295443d202[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed Jul 12 19:23:53 2017 +0000

    Create a debug library to collect inspection and logging code in one place.
    * Move some existing code to debug.py
    * Add a couple of functions to inspect bindings.
    
    --
    PiperOrigin-RevId: 161699529
    MOS_MIGRATED_REVID=161699529

[33mcommit 25ddfea9d318edf44c8fa6f19d39bda2e919bc9d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 11 22:51:15 2017 +0000

    Check whether the "cls" attribute on a self value is None before using it.
    
    --
    PiperOrigin-RevId: 161594539
    MOS_MIGRATED_REVID=161594539

[33mcommit 3cdcb05f33a026d7922527e04c49b11d972bc39a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jul 11 22:47:32 2017 +0000

    Make sure an argument combination is valid before complaining about it.
    
    --
    PiperOrigin-RevId: 161593977
    MOS_MIGRATED_REVID=161593977

[33mcommit 482c76c8d9e90dc5fb2111e6ee48092c6f92ba70[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 11 22:47:27 2017 +0000

    Fix the isinstance tests in abstract_test.
    
    --
    PiperOrigin-RevId: 161593963
    MOS_MIGRATED_REVID=161593963

[33mcommit 69ea4b6e3d818af6667a672a6e72e5f91523711b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jul 11 22:42:34 2017 +0000

    Ignore typeshed's stdli[]/builtin.pytd.
    
    --
    PiperOrigin-RevId: 161593259
    MOS_MIGRATED_REVID=161593259

[33mcommit 87a6bc600efbe42cb0057aed4bbdebf74ae515b6[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue Jul 11 22:14:44 2017 +0000

    Handle non-constant tuples when setting function __defaults__.
    
    Something like `X.__new__.__defaults__ = (None,) * len(X._fields)` is still a
    tuple, so don't emit a warning even though we don't know how many params to
    make optional.
    
    --
    PiperOrigin-RevId: 161589240
    MOS_MIGRATED_REVID=161589240

[33mcommit 2905e9626ed36c77b3c6adb9a76690da28d725fd[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Jul 11 21:56:42 2017 +0000

    Add a new CFG node for some special builtins (ininstance, hasattr).
    
    Fixes a bug with if-splitting on isinstance(a, b, c...).
    
    --
    PiperOrigin-RevId: 161586468
    MOS_MIGRATED_REVID=161586468

[33mcommit 83af9921e5af85109b0f27c917d23f75b3844b94[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jul 11 21:22:28 2017 +0000

    Allow HAS_DYNAMIC_ATTRIBUTES on the module level.
    
    --
    PiperOrigin-RevId: 161580880
    MOS_MIGRATED_REVID=161580880

[33mcommit 8fdf04be88f640ad93d222e0dd114d1ea7b03dc6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 11 18:21:58 2017 +0000

    Fix one Callable-related attribute error; add a skipped test for another.
    
    --
    PiperOrigin-RevId: 161555488
    MOS_MIGRATED_REVID=161555488

[33mcommit 930ccf5da93878f95e56c2a8f43f9b1aa69a77c4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jul 11 17:47:50 2017 +0000

    Update go/pytype-errors and add a test verifying that the page is current.
    
    --
    PiperOrigin-RevId: 161549673
    MOS_MIGRATED_REVID=161549673

[33mcommit 190e64d1a3531f1a2649dd535eb5705038d91dd2[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Mon Jul 10 22:56:39 2017 +0000

    Adds __file__ special global variable.
    
    --
    PiperOrigin-RevId: 161453995
    MOS_MIGRATED_REVID=161453995

[33mcommit 15e0b3eb6e3a3b9e0f4b36e8274ec2e1bbc5bde1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 10 22:50:57 2017 +0000

    Be more careful about type-checking abstract methods.
    
    * Instead of skipping analysis altogether for abstract methods, only skip
      checking the return type, so that other classes of errors are still caught.
    * Skip checking the return type only if both the method and its caller are
      abstract. To be abstract, a class has to both be an instance of abc.ABCMeta
      and have an abstract method.
    
    --
    PiperOrigin-RevId: 161453156
    MOS_MIGRATED_REVID=161453156

[33mcommit 3f535a22a39a9415f6542ec597ba1616dfbb11d9[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Mon Jul 10 21:58:49 2017 +0000

    Adds support for setting  __defaults__ on PyTDFunctions.
    
    No one should ever use this, but we have to assume some code will.
    There is no plan to support __defaults__ on non-PyTDFunctions.
    
    --
    PiperOrigin-RevId: 161445911
    MOS_MIGRATED_REVID=161445911

[33mcommit 2700db2f97b0e7bd51139ad3db27f042bd15c50f[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Jul 10 21:49:01 2017 +0000

    Nicer binding.PrettyPrint().
    
    --
    PiperOrigin-RevId: 161444281
    MOS_MIGRATED_REVID=161444281

[33mcommit a5f85c9e050d91992f392754658e3aa5ab999b05[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jul 10 20:59:27 2017 +0000

    Add an "abstract_methods" attribute to classes.
    
    --
    PiperOrigin-RevId: 161436146
    MOS_MIGRATED_REVID=161436146

[33mcommit e938de0953e9e37afc85100c8b29ae2a14dc6a86[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Jul 10 18:33:19 2017 +0000

    Don't report none-attr on code paths that cause empty bindings.
    
    --
    PiperOrigin-RevId: 161418058
    MOS_MIGRATED_REVID=161418058

[33mcommit ca2f78ab236d39c514bea92ae7e7e4f975d3cd7c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Jul 10 18:04:48 2017 +0000

    Fix bug in solver which caused spurious none-attr errors.
    
    --
    PiperOrigin-RevId: 161414343
    MOS_MIGRATED_REVID=161414343

[33mcommit 0aee6bec45083f0685510f5b74dec77a199804e1[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Jul 10 13:06:34 2017 +0000

    Fix template-related bug in CanonicalOrderingVisitor. Run it on builtins/typing.
    
    --
    PiperOrigin-RevId: 161385779
    MOS_MIGRATED_REVID=161385779

[33mcommit 7b7f542ed3bfbb783060c77491c9acff1b3abb63[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jul 7 22:31:18 2017 +0000

    Preserve the value of is_abstract when converting back to pytd for output.
    
    --
    PiperOrigin-RevId: 161254196
    MOS_MIGRATED_REVID=161254196

[33mcommit b71465367073b55afa187feed2074ae5d297a725[m
Author: Martin DeMello <mdemello@google.com>
Date:   Fri Jul 7 21:29:27 2017 +0000

    Raise not-supported error for typing.NewType
    
    --
    PiperOrigin-RevId: 161246358
    MOS_MIGRATED_REVID=161246358

[33mcommit 53c6e76db95b1f73ca0cfa9d3bed655d63932e4a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jul 7 19:51:19 2017 +0000

    Improve VirtualMachine.call_binary_operator.
    
    Changes call_binary_operator to loop over the left and right side bindings so
    that we can determine individually for each pair of values whether to call the
    operator or the reverse operator. (Sometimes we have to try both, to emulate
    the behavior of builtins that return NotImplemented.)
    
    The reverse operator should be tried first when the right side is a subclass
    of the left and overrides or newly defines a reverse operator. So for example,
    in this case, Bar.__radd__ will be called:
    
    class Foo(object):
      def __add__(self, other): ...
    class Bar(Foo):
      def __radd__(self, other): ...
    Foo() + Bar()  # Bar.__radd__ used
    
    But in this case, since Bar doesn't touch __radd__, Foo.__add__ is called:
    
    class Foo(object):
      def __add__(self, other): ...
      def __radd__(self, other): ...
    class Bar(Foo): ...
    Foo() + Bar()  # Foo.__add__ used
    
    --
    PiperOrigin-RevId: 161234012
    MOS_MIGRATED_REVID=161234012

[33mcommit 2cc4ef71423755f2580b13000acaf5c31f2182b0[m
Author: Paige Kordas <kordas@google.com>
Date:   Fri Jul 7 16:27:16 2017 +0000

    Modified convert.py so is_abstract field is carried over to abstract function.
    
    --
    PiperOrigin-RevId: 161209566
    MOS_MIGRATED_REVID=161209566

[33mcommit 006d8e221e51ff1aa37b8fd5130d393a6ca5fe8f[m
Author: Paige Kordas <kordas@google.com>
Date:   Fri Jul 7 01:09:39 2017 +0000

    Modified protocol logic to only check for methods marked abstractmethod.
    
    --
    PiperOrigin-RevId: 161156731
    MOS_MIGRATED_REVID=161156731

[33mcommit 17d7d40d6bbaaeb605cdfd6d3464a59743522318[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 6 23:41:49 2017 +0000

    Add a test for attribute lookup on a TypeParameterInstance of a namedtuple.
    
    --
    PiperOrigin-RevId: 161148257
    MOS_MIGRATED_REVID=161148257

[33mcommit f9185154817d9d95e7a1df972b7cec463942e7fd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 6 21:27:44 2017 +0000

    Add a test for binary operators on TypeParameterInstance.
    
    --
    PiperOrigin-RevId: 161131027
    MOS_MIGRATED_REVID=161131027

[33mcommit c4a154e70de75c5524484196ccdc4fbbfd2a0cc3[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 6 21:11:11 2017 +0000

    Implement attribute lookup for TypeParameterInstance.
    
    --
    PiperOrigin-RevId: 161128518
    MOS_MIGRATED_REVID=161128518

[33mcommit a7f1380bb4a38b36a472e90dc9cced684960fe2b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jul 6 21:04:24 2017 +0000

    Allow local definitions to shadow '*' imports.
    
    --
    PiperOrigin-RevId: 161127510
    MOS_MIGRATED_REVID=161127510

[33mcommit f1f150b4b68b3a01fedc710e0439915938a70984[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jul 5 23:22:30 2017 +0000

    Change all convert.x_type attributes from variables to to abstract values.
    
    This makes it impossible to accidentally change the types of builtins. Also
    changes abstract.Instance to take a class value rather than a class variable,
    so that we don't have to call to_variable() to initialize builtins.
    
    --
    PiperOrigin-RevId: 161020420
    MOS_MIGRATED_REVID=161020420

[33mcommit cc3b674be4f98ff442abe44c784d1f10d24c009f[m
Author: Paige Kordas <kordas@google.com>
Date:   Wed Jul 5 22:40:35 2017 +0000

    Separated logic for solving protocol and partial equations and added logic to
    join the two results.
    
    --
    PiperOrigin-RevId: 161015366
    MOS_MIGRATED_REVID=161015366

[33mcommit f812d965af4960ec91fb49eb1e4dd0b609f4135c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Jul 5 20:31:18 2017 +0000

    Straighten out some CFG node logic in infer.py.
    
    * Never throw CFG node return values away.
    * If we modify a CFG node var, use "node". If we assign to a new var, use
      "node1", "node2", ...
    
    --
    PiperOrigin-RevId: 160997847
    MOS_MIGRATED_REVID=160997847

[33mcommit 1c30dceaa27f035f97c8cbe7cff64fd5d44e61ec[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Jun 30 22:51:00 2017 +0000

    Clean up CFG created during analysis by eliminating redundant edges and adding
    nodes for beginning of functions.
    
    New nodes:
    Previous implementation polluted first analysis with the first few opcodes of
    the functions being analyzed. This could cause issues if e.g. a binding is
    added early in the function and is later changed -- the later binding will be
    shadowed by the earlier binding instead of vice versa.
    
    Redundant edges:
    - call_function_with_args adds edge from last node of function body to the node
      passed in, but functions that call call_function_with_args also add this
      edge.
    - analyze_class and analyze_function modify the node given as an argument, then
      return that node. There's no reason for analyze_toplevel to then add an edge
      to it.
    (The only function that *doesn't* return the node given is
    maybe_analyze_method, and even then it sometimes does.)
    
    --
    PiperOrigin-RevId: 160698697
    MOS_MIGRATED_REVID=160698697

[33mcommit c228eb22cc8648e83bc245b7095bfba680f3f814[m
Author: Paige Kordas <kordas@google.com>
Date:   Fri Jun 30 21:40:35 2017 +0000

    Added support for @abstractmethod decorator. Note that @abstractmethod is not
    counted against the single decorator that pytype allows per function.
    
    --
    PiperOrigin-RevId: 160690661
    MOS_MIGRATED_REVID=160690661

[33mcommit 7eccaac6dae0157eab083737cf7af6bbb4c5aba7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 30 15:46:10 2017 +0000

    Use the current node when returning from init_class, rather than in the cache.
    
    --
    PiperOrigin-RevId: 160650245
    MOS_MIGRATED_REVID=160650245

[33mcommit d40a81e5d99a808e31b70babd93ea2f1065022dd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 29 21:45:12 2017 +0000

    Revert change to init_class caching.
    
    This change caused a new canary test failure, which I distilled down to the
    included test case. (The failure was a spurious name error on the last line
    of Bar.bar().)
    
    --
    PiperOrigin-RevId: 160576054
    MOS_MIGRATED_REVID=160576054

[33mcommit b8f17c078dba61db3daa36e9627fe90d2eb26fbb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 29 20:20:36 2017 +0000

    Implement tuple unpacking for typing.NamedTuple.
    
    --
    PiperOrigin-RevId: 160564441
    MOS_MIGRATED_REVID=160564441

[33mcommit d079f82198baff790f1e42a4567c6fbcfc6956b0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 29 18:40:36 2017 +0000

    Change the naming format for pyi namedtuples.
    
    Changes the format from ~name_count to namedtuple-name-count so that the
    names of pyi namedtuples are cleaned before being put into error messages.
    
    --
    PiperOrigin-RevId: 160552424
    MOS_MIGRATED_REVID=160552424

[33mcommit 0bc4b06b002e1f1ac2a9f6f86aa9e06ee69fae34[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 29 17:55:26 2017 +0000

    Remove consecutive duplicate line numbers from error message tracebacks.
    
    --
    PiperOrigin-RevId: 160546225
    MOS_MIGRATED_REVID=160546225

[33mcommit 6a0da847687572e3b00dcd1bf4bf6f041a7e1f92[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Jun 29 16:16:01 2017 +0000

    Changes init_class caching to use current opcode instead of current node.
    
    --
    PiperOrigin-RevId: 160533352
    MOS_MIGRATED_REVID=160533352

[33mcommit 90152e4e17fab9c5a374a05b519b01672282a8c0[m
Author: Paige Kordas <kordas@google.com>
Date:   Thu Jun 29 15:40:40 2017 +0000

    Added intersection type.
    
    --
    PiperOrigin-RevId: 160529722
    MOS_MIGRATED_REVID=160529722

[33mcommit 35753ca32824f2eed79ccaba63895a07e3e3c500[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 29 07:47:49 2017 +0000

    Don't let load_from return an empty variable.
    
    --
    PiperOrigin-RevId: 160496605
    MOS_MIGRATED_REVID=160496605

[33mcommit 376453a855df08cae15c3d13a3056d67ad215fb5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 29 00:11:02 2017 +0000

    Add a call() method to TypeParameterInstance.
    
    --
    PiperOrigin-RevId: 160470087
    MOS_MIGRATED_REVID=160470087

[33mcommit c4b96986c2eeaf90578d29cd1317eb00bc9fd0e4[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Jun 28 20:22:46 2017 +0000

    Add debug method "reveal_type".
    
    Use reveal_type(x) to print out the type of "x".  Named the same as in mypy.
    
    --
    PiperOrigin-RevId: 160443515
    MOS_MIGRATED_REVID=160443515

[33mcommit fae823e16deb13319c113d873533cfa4fd37a96c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 28 17:06:23 2017 +0000

    Fix two "unused value" warnings.
    
    If you change parser.y and rebuild pytype, the following messages appear:
    
    third_party/py/pytype/pyi/parser.y:331.5-334.5: warning: unused value: $3
    third_party/py/pytype/pyi/parser.y:335.5-338.5: warning: unused value: $3
    
    Moving BYTESTRING and UNICODESTRING to a list of tokens without PyObject
    values fixes the problem.
    
    --
    PiperOrigin-RevId: 160421241
    MOS_MIGRATED_REVID=160421241

[33mcommit 1dad95c288c78eac277d3e9d0fac813399d065cb[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jun 27 22:26:18 2017 +0000

    Make int subclass SupportsInt.
    
    --
    PiperOrigin-RevId: 160335250
    MOS_MIGRATED_REVID=160335250

[33mcommit 5f302d835dcfa6d57c9349f1bad72345737c9a4c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jun 27 22:23:00 2017 +0000

    Complain about things like tuple[0] or Foo[0].
    
    --
    PiperOrigin-RevId: 160334799
    MOS_MIGRATED_REVID=160334799

[33mcommit 1fd25940fee444a01cd251ff334f7d631c6fe689[m
Author: Paige Kordas <kordas@google.com>
Date:   Tue Jun 27 21:56:19 2017 +0000

    Added parameterized protocols from typing.pytd.
    
    --
    PiperOrigin-RevId: 160331067
    MOS_MIGRATED_REVID=160331067

[33mcommit c5fc99e8f9870f3566617db89011ffb14668f2a8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 27 20:50:27 2017 +0000

    Make ItemsView take two type parameters.
    
    xml.etree.ElementTree (as well as other typeshed stubs) expects ItemsView to
    accept two type parameters.
    
    --
    PiperOrigin-RevId: 160320938
    MOS_MIGRATED_REVID=160320938

[33mcommit 0956f8c23d24148e8bff08ec99a937500cedebb6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 27 19:56:53 2017 +0000

    Make FillInModuleClasses also fill in functions.
    
    --
    PiperOrigin-RevId: 160313715
    MOS_MIGRATED_REVID=160313715

[33mcommit 2c2b227a91310a951bd0c3177ee741d283088748[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 27 19:53:53 2017 +0000

    Make FunctionType mutable.
    
    The reason for the unreplaced NamedType in xml.etree.ElementTree is that
    FillInModuleClasses fills in ClassType pointers, replacing old versions of
    classes, but leaves FunctionType nodes unchanged, even though they can
    similarly point to old versions of functions.
    
    Makes FunctionType mutable so that the "function" attribute can be overwritten
    by FillInModuleClasses (not done in this change).
    
    --
    PiperOrigin-RevId: 160313366
    MOS_MIGRATED_REVID=160313366

[33mcommit 58ccf9894ce998138167741e2fb61d67833d1310[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 27 16:39:43 2017 +0000

    Implement "import *" for pyi files.
    
    --
    PiperOrigin-RevId: 160285940
    MOS_MIGRATED_REVID=160285940

[33mcommit 481fc5598fa1e23f23f93bfbf9f6f23f3a924945[m
Author: Paige Kordas <kordas@google.com>
Date:   Fri Jun 23 21:14:29 2017 +0000

    Added non-parameterized protocols from typing.pytd to protocols.
    
    --
    PiperOrigin-RevId: 159992226
    MOS_MIGRATED_REVID=159992226

[33mcommit ad35a8bc3d2a799e5cdfc425ad37b87647e63cc9[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Jun 23 21:10:26 2017 +0000

    Using Empty gives more Emptys, not Unsolvables.
    
    Calling or using an Empty value should return another Empty value, not
    unsolvable. Fixes testCallEmpty in test_containers.
    
    --
    PiperOrigin-RevId: 159991698
    MOS_MIGRATED_REVID=159991698

[33mcommit 3ee60dd192f98cfe7d582f158ca012779a40d78e[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Jun 23 20:49:44 2017 +0000

    Add a node to the CFG to mark the beginning of nodes added during analysis.
    
    Motivation: Makes the CFG somewhat easier to read.
    
    --
    PiperOrigin-RevId: 159988516
    MOS_MIGRATED_REVID=159988516

[33mcommit 8eb9eb5d511ed99df18041636abbed6ddaa8b4a8[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Jun 23 20:49:16 2017 +0000

    Move creation of CFG node for new block to after the block has been executed.
    
    --
    PiperOrigin-RevId: 159988452
    MOS_MIGRATED_REVID=159988452

[33mcommit f7339b577f9cd416065c070e80122dcffdce530f[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Jun 23 20:34:22 2017 +0000

    Clarify testSet in test_annotations and add additional example.
    
    It's easy to forget that {} builds an empty dictionary, not an empty set.
    
    --
    PiperOrigin-RevId: 159986666
    MOS_MIGRATED_REVID=159986666

[33mcommit d0599897faae3761709bacaf684e145a42bff0c6[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Jun 23 20:34:09 2017 +0000

    Adds logging for error creation.
    
    Sometimes you really need to know when an error is creatd. Now it'll show up in
    the debug log!
    
    --
    PiperOrigin-RevId: 159986646
    MOS_MIGRATED_REVID=159986646

[33mcommit 57a017d06c972264b9271b22422d1170941dc3c0[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Jun 23 15:33:15 2017 +0000

    Adjust defaultdict.__init__ entries for better typing.
    
    The older entries would be broken by the changes to type parameters.
    - Mapping is a subtype of Iterable, so it should come first.
    - Entries that change the element type parameter should union with V.
    
    --
    PiperOrigin-RevId: 159951520
    MOS_MIGRATED_REVID=159951520

[33mcommit 89b97b5b78b6685cc1841c03cb23978f70c2e230[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 22 21:25:46 2017 +0000

    Don't allow setting the module on an abstract.Module.
    
    I noticed while investigating testTemplateConstruction that sometimes the
    full name of the builtins module was "__builtin__.__builtin__", which is
    silly. Changes abstract.Module to always return None when its module attribute
    is accessed and to ignore attempts to set its module (after making sure that
    that the attempted new value is something reasonable).
    
    --
    PiperOrigin-RevId: 159876625
    MOS_MIGRATED_REVID=159876625

[33mcommit 4ab6002d651b1668a925b8b0afebdbbcaf73f0b6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 22 20:42:42 2017 +0000

    Have abstract.Instance.__init__ check for multiple type parameter values.
    
    Although we no longer allow multiple conflicting type parameter values in pyi
    files, abstract.Instance can still see multiple values for the same type
    parameter when unrelated containers happen to use the same type parameter
    name. We can't handle this case yet, so we set the type parameter to Any.
    
    --
    PiperOrigin-RevId: 159869917
    MOS_MIGRATED_REVID=159869917

[33mcommit f3cfd0afd37e36d306f6f6134a710646b9ea57d3[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Jun 22 18:47:13 2017 +0000

    Rollback of commit 05d867da033d0cfb57eda8e436020f41455b8de1.
    
    *** Reason for rollback ***
    
    skipped the broken test, reapplying the original cl
    
    *** Original change description ***
    
    Automated [] rollback of commit 17cae5007ad2b2e78c5e36044e0220abfef5114c.
    
    *** Reason for rollback ***
    
    breaks third_party/py/pytype/tests/test_generic.py : testTemplateConstruction()
    
    *** Original change description ***
    
    Base the hash key of a Module on the set of its member names.
    
    The previous strategy was to hash the set of lazily loaded members, which meant
    that the act of accessing module.member could have unexpected side effects.
    
    ***
    
    ***
    
    --
    PiperOrigin-RevId: 159855464
    MOS_MIGRATED_REVID=159855464

[33mcommit 168d7f486094adef03cb3f3b7e421612868a6bdb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 22 18:40:30 2017 +0000

    Skip test_generic.py's testTemplateConstruction and add a working test.
    
    --
    PiperOrigin-RevId: 159854427
    MOS_MIGRATED_REVID=159854427

[33mcommit 9348694faa77b0122483e9cb9355e32fb6be32de[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 22 08:25:44 2017 +0000

    Detect when a TypeVar has conflicting values in a pyi file.
    
    --
    PiperOrigin-RevId: 159798987
    MOS_MIGRATED_REVID=159798987

[33mcommit 05d867da033d0cfb57eda8e436020f41455b8de1[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Jun 22 01:41:23 2017 +0000

    Rollback of commit 17cae5007ad2b2e78c5e36044e0220abfef5114c.
    
    *** Reason for rollback ***
    
    breaks third_party/py/pytype/tests/test_generic.py : testTemplateConstruction()
    
    *** Original change description ***
    
    Base the hash key of a Module on the set of its member names.
    
    The previous strategy was to hash the set of lazily loaded members, which meant
    that the act of accessing module.member could have unexpected side effects.
    
    ***
    
    --
    PiperOrigin-RevId: 159775283
    MOS_MIGRATED_REVID=159775283

[33mcommit 23fbbdc066ee0edd635fe75fbb73f36a20b363f8[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Jun 21 20:51:47 2017 +0000

    Make tuple unpacking work with if-splitting.
    
    BUG: 62867188
    FIXED: 62867188
    
    --
    PiperOrigin-RevId: 159738006
    MOS_MIGRATED_REVID=159738006

[33mcommit 17cae5007ad2b2e78c5e36044e0220abfef5114c[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Jun 20 21:16:38 2017 +0000

    Base the hash key of a Module on the set of its member names.
    
    The previous strategy was to hash the set of lazily loaded members, which meant
    that the act of accessing module.member could have unexpected side effects.
    
    --
    PiperOrigin-RevId: 159612161
    MOS_MIGRATED_REVID=159612161

[33mcommit 5cb1b9a517d100903324ce949a4f0cec242dc838[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jun 20 18:47:23 2017 +0000

    Unskip (and extend) a test that works now.
    
    --
    PiperOrigin-RevId: 159591215
    MOS_MIGRATED_REVID=159591215

[33mcommit 57465e6f7c47a619649b76e17d3af61d6faf5002[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jun 20 17:59:40 2017 +0000

    Create a new CFG node at the start of every block.
    
    Also, fix a bug in the node passing of attribute.py that was exposed by this.
    
    --
    PiperOrigin-RevId: 159583509
    MOS_MIGRATED_REVID=159583509

[33mcommit 0b9b36451758e1accdf188c32fa850d76d2c7f7b[m
Author: Paige Kordas <kordas@google.com>
Date:   Tue Jun 20 17:23:30 2017 +0000

    Unskipped tests that are already passing
    
    --
    PiperOrigin-RevId: 159577807
    MOS_MIGRATED_REVID=159577807

[33mcommit 7e6793680a28a187c9589438c32bcbcca5ad9a15[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 20 00:03:59 2017 +0000

    Make AliasingDict.add_alias() work properly when the dict is non-empty.
    
    Since we've been using AliasingDict in combination with LazyDict, add_alias is
    usually called before any of the lazy values have been evaluated, so
    "assert alias not in self" in add_alias() always passes, even though the
    condition is too strict. Modifies the assertion to allow the alias to be
    present as long as it's a key in the alias map. Also fixes a lint warning
    about special methods having the wrong signature by adding unused varargs and
    kwargs to a bunch of unimplemented methods.
    
    --
    PiperOrigin-RevId: 159500240
    MOS_MIGRATED_REVID=159500240

[33mcommit 4cdc0e5bb47527402ef2641f507550e1b71f44ab[m
Author: Paige Kordas <kordas@google.com>
Date:   Mon Jun 19 22:00:02 2017 +0000

    Added option to solve for unknown types using protocols.
    
    --
    PiperOrigin-RevId: 159483707
    MOS_MIGRATED_REVID=159483707

[33mcommit fd1b60c3a39833b42fdd3d6be3a0bd21cdc82fe9[m
Author: Matthias Kramm <kramm@quiss.org>
Date:   Wed Jun 21 10:33:10 2017 -0700

    upgrade typeshed

[33mcommit 010f38c627708afa8b612f5ec41c07ca200bb9a2[m
Merge: 023e53ef 3bd12f43
Author: Martin DeMello <martindemello@gmail.com>
Date:   Tue Jun 20 11:32:27 2017 -0700

    Merge pull request #52 from JelleZijlstra/patch-1
    
    fix installation instructions

[33mcommit 023e53efec55370e94add777dd77fd95611f4138[m
Author: Googler <noreply@google.com>
Date:   Mon Jun 19 20:58:40 2017 +0000

    Global cleanup change.
    
    --
    PiperOrigin-RevId: 159473551
    MOS_MIGRATED_REVID=159473551

[33mcommit 0be95902f088be8dacc93a0a331082f7e68c9664[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Jun 19 19:00:29 2017 +0000

    Teach the parser about b'' and u''.
    
    These are used in typeshed as a shortcut for defining bytes and unicode
    string types.
    
    --
    PiperOrigin-RevId: 159457253
    MOS_MIGRATED_REVID=159457253

[33mcommit 69053fa07bb7b4643d49cf49872a24a4a9416380[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Jun 19 18:55:00 2017 +0000

    Treat an exception as a "return", for the purposes of CFG creation.
    
    --
    PiperOrigin-RevId: 159456533
    MOS_MIGRATED_REVID=159456533

[33mcommit 8c15f9f4f2e55c2e641fb8531831c8b2af5a0fdf[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Mon Jun 19 15:52:54 2017 +0000

    Add cases for min and max to handle multiple argument types for certain common
    cases.
    
    --
    PiperOrigin-RevId: 159432050
    MOS_MIGRATED_REVID=159432050

[33mcommit 4fb4651f760a9595bdc3259c019f3bc6f080d66e[m
Author: Matthias Kramm <kramm@google.com>
Date:   Sat Jun 17 01:33:51 2017 +0000

    Downgrade the "Setting * to ?" log message to a warning.
    
    This message appears e.g. if we refer to an inner class in the output.
    
    --
    PiperOrigin-RevId: 159300682
    MOS_MIGRATED_REVID=159300682

[33mcommit 08bacdfaced155681483ac097324757e67f6a7cc[m
Author: Matthias Kramm <kramm@google.com>
Date:   Sat Jun 17 01:30:58 2017 +0000

    Speed up load_from().
    
    Since we always retrieve locals, globals and builtins from the same data
    structure, we can do a direct retrieval instead of going through attribute.py.
    
    --
    PiperOrigin-RevId: 159300537
    MOS_MIGRATED_REVID=159300537

[33mcommit ed3fc38dc56c43680f215a8d685d05d15d763d2a[m
Author: Googler <noreply@google.com>
Date:   Sat Jun 17 00:14:44 2017 +0000

    Modified existing pytype tests to remove solve_unknowns functionality.
    
    --
    PiperOrigin-RevId: 159295509
    MOS_MIGRATED_REVID=159295509

[33mcommit 2eb7c7ac3d1a1ee99d85cd63d7a17f25991356af[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jun 16 23:44:10 2017 +0000

    Create a new CFG node before mutating type parameters.
    
    --
    PiperOrigin-RevId: 159292638
    MOS_MIGRATED_REVID=159292638

[33mcommit 58aecd56685620e60da97c084e19f6ed38467c91[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri Jun 16 22:49:55 2017 +0000

    Report an error if typing module is not available in target.
    
    --
    PiperOrigin-RevId: 159286922
    MOS_MIGRATED_REVID=159286922

[33mcommit 2f5d1137c4cf8e9987ab8bc35ab07565f547a216[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jun 16 19:30:13 2017 +0000

    Create a new CFG node after a STORE_FAST.
    
    This fixes the "test_loop_and_if" test case in test_flow.py.
    It prevents the solver from "single-stepping" over variable assignments inside
    that loop.
    Note that this triggers another bug (in tests/test_splits.py) if APPROXIMATE
    is set to "True" in cfg.py. So we need to make strict-attr-checking the default
    before applying this.
    
    --
    PiperOrigin-RevId: 159260865
    MOS_MIGRATED_REVID=159260865

[33mcommit 65debc72ecfed54a46a2717b8e4f32b13e37ac04[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jun 16 19:24:19 2017 +0000

    Make --strict-attr-checking the default.
    
    --
    PiperOrigin-RevId: 159260244
    MOS_MIGRATED_REVID=159260244

[33mcommit fd5f0a77df73085beafba5dfaefd621b1c6398fe[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 16 19:14:09 2017 +0000

    Don't allow formal types to be passed to functions.
    
    When we encounter a function argument that is a formal type, log an
    invalid_typevar error and change the argument to an unsolvable, so that
    the matcher doesn't crash.
    
    This covers the case of typevars being passed to typing.cast, so we no
    longer need to specially check for that in typing.Cast.call().
    
    Allows us to use setitem_slot instead of setitem for setting up a kwargs
    dictionary, since we no longer have to worry about setitem_slot's call to
    call_pytd crashing with an assertion error.
    
    Also fixes a couple of lint warnings in test_typing.py.
    
    --
    PiperOrigin-RevId: 159259060
    MOS_MIGRATED_REVID=159259060

[33mcommit 05cf2f3f7c77aa90d97a853fb21306b42c58d419[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 15 21:18:41 2017 +0000

    Alias public classes instead of copying them in pyi.
    
    --
    PiperOrigin-RevId: 159153195
    MOS_MIGRATED_REVID=159153195

[33mcommit be442fda5cd11c7fb1e2bb78080e7463775c99ad[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Jun 15 19:47:29 2017 +0000

    Fix some corner cases in inference of module from filepath.
    
    --
    PiperOrigin-RevId: 159140256
    MOS_MIGRATED_REVID=159140256

[33mcommit e0dbb3e2b5258152fb8a4dfe92470d9fdfde0274[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 15 18:42:24 2017 +0000

    Handle unbound super instances better.
    
    Changes Super.call() to always check the type of the first argument.
    
    Fixes attribute lookup so that the lookup is on PyTDClass(super) when the
    super instance is unbound. Based on the error message that the interpreter
    gives for super(cls).__new__(cls) ('<cls> is not a subtype of super'), I
    think the __new__ method being called here is super.__new__, which is why
    I think the lookup needs to be on PyTDClass(super).
    
    --
    PiperOrigin-RevId: 159131784
    MOS_MIGRATED_REVID=159131784

[33mcommit edebbed791f9f268c72abc435ba5a2654cb500ec[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu Jun 15 18:12:38 2017 +0000

    Don't try to resolve module aliases in LookupExternalTypes.
    
    --
    PiperOrigin-RevId: 159127413
    MOS_MIGRATED_REVID=159127413

[33mcommit f519e1c0183aef407a0f44a5c95b9c3078b1998e[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Wed Jun 14 21:54:05 2017 +0000

    Changes how generated namedtuple class names are displayed in error messages.
    
    For `X = namedtuple("X", "each field name")`, display just "X" in error messages instead of the full "X-each-field-name" name that is generated.
    
    --
    PiperOrigin-RevId: 159029641
    MOS_MIGRATED_REVID=159029641

[33mcommit e6a759ef2ae1160270770fc0b0b0062cc00a6502[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Jun 14 21:28:59 2017 +0000

    Rollback of commit aadeb5f37f5e6f21817f34a9e2ca1e7c28213288.
    
    *** Reason for rollback ***
    
    Broke a test in test_splits.py.
    
    *** Original change description ***
    
    Create a new CFG node after a STORE_FAST.
    
    This fixes the "test_loop_and_if" test case in test_flow.py. It prevents the solver from "single-stepping" over variable assignments inside a loop.
    
    ***
    
    --
    PiperOrigin-RevId: 159026042
    MOS_MIGRATED_REVID=159026042

[33mcommit c4c1cca973ebeee0df86dcedfad4c8656a915932[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 14 21:12:24 2017 +0000

    Include the names of inner classes in error messages.
    
    --
    PiperOrigin-RevId: 159023525
    MOS_MIGRATED_REVID=159023525

[33mcommit aadeb5f37f5e6f21817f34a9e2ca1e7c28213288[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Jun 14 20:19:34 2017 +0000

    Create a new CFG node after a STORE_FAST.
    
    This fixes the "test_loop_and_if" test case in test_flow.py. It prevents the solver from "single-stepping" over variable assignments inside a loop.
    
    --
    PiperOrigin-RevId: 159015577
    MOS_MIGRATED_REVID=159015577

[33mcommit 54301ca6259644024f8f66da263e79b61ae4ff19[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jun 14 18:09:02 2017 +0000

    Improve a couple of error messages.
    
    There were two error messages that were using to_type and get_instance_type
    directly instead of going through the errorlog print methods; fix that.
    
    --
    PiperOrigin-RevId: 158997573
    MOS_MIGRATED_REVID=158997573

[33mcommit 419c27d3507f6214f139061490e088a2a064746c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jun 13 23:18:02 2017 +0000

    If X.__new__ returns extraneous types that are not instances of X, ignore them.
    
    --
    PiperOrigin-RevId: 158914939
    MOS_MIGRATED_REVID=158914939

[33mcommit 4a0624d09927be5e7d8bad190732ba4ff6f38068[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Jun 13 22:59:52 2017 +0000

    Fix: Trying to iterate over None should report none-attr, not attribute-error.
    
    --
    PiperOrigin-RevId: 158912560
    MOS_MIGRATED_REVID=158912560

[33mcommit 31efb3730708e50739c5b28cb8ab7fd6ab466307[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Jun 13 22:26:26 2017 +0000

    Fix for attribute checking on None: Call HasCombinations when checking
    is_only_none, so we do the right thing in branches where None is the only
    possibility.
    
    --
    PiperOrigin-RevId: 158907876
    MOS_MIGRATED_REVID=158907876

[33mcommit 32164f13770ab8921d9ef1854db527804fb834fc[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jun 13 22:22:37 2017 +0000

    Add missing attributes to int, float, complex.
    
    --
    PiperOrigin-RevId: 158907364
    MOS_MIGRATED_REVID=158907364

[33mcommit 62730265b32c8646d753ea29b61fe4ba131e74ea[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 13 21:25:40 2017 +0000

    Handle bad inplace operator calls properly.
    
    When a call to an inplace operator fails, log the error and set the return
    value to an unsolvable.
    
    Also moves testCustomReverseOperator into the right test class.
    
    --
    PiperOrigin-RevId: 158898565
    MOS_MIGRATED_REVID=158898565

[33mcommit f95f8560db0db8620f5ffebb31fbc78c9e5a2885[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 13 21:18:46 2017 +0000

    Set type params to unsolvable when matching an ambiguous or empty value.
    
    --
    PiperOrigin-RevId: 158897364
    MOS_MIGRATED_REVID=158897364

[33mcommit fed034cdb657429c4e588e6c9d59a16be9096af8[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue Jun 13 19:37:16 2017 +0000

    Cleans up defaultdict.__init__ to more closely match documentation.
    
    - default_factory has a default value of None.
    - Properly assign types from arguments, e.g. an argument of  Mapping[K, V]
      means the resulting defaultdict has keys of K and values of V.
    
    --
    PiperOrigin-RevId: 158882486
    MOS_MIGRATED_REVID=158882486

[33mcommit 098fb89fe2db8647a2ca537bb569aa4368fce094[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Mon Jun 12 22:48:50 2017 +0000

    Changes defaultdict.__init__ to take default_factory as Optional.
    
    This change is already present in the typeshed version of collections.
    
    --
    PiperOrigin-RevId: 158776601
    MOS_MIGRATED_REVID=158776601

[33mcommit cc100eae292a9c6d9232d224198f72370d6cf3a7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 12 22:33:55 2017 +0000

    Catch recursion in __init__ after the fact rather than detecting beforehand.
    
    Instead of trying to guess before __init__ is called whether the call will lead
    to a vm.RecursionException, simply do the call and catch the error. When we
    guessed beforehand, we could detect simple cases but missed more complicated
    ones involving subclasses.
    
    --
    PiperOrigin-RevId: 158774431
    MOS_MIGRATED_REVID=158774431

[33mcommit 6f4167313fd7ce9e243f622766150ac0410b367d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jun 12 21:03:18 2017 +0000

    Don't call an __init__ method if we can tell it'll lead to a recursion error.
    
    If we try to initialize a second instance of a class at the same node as a
    first one, while the first instance is incomplete, then we know that calling
    __init__ on the second instance will cause the vm to raise a
    RecursionException. So instead of calling __init__, we'll set
    maybe_missing_members to True on the second instance and return early from
    call_init. Also factors out the code for setting maybe_missing_members to
    True on an instance and its type parameters into a helper method, and moves
    the v.maybe_missing_members = True line instead the
    isinstance(v, abstract.SimpleAbstractValue) check, since only
    SimpleAbstractValue and its subclasses have the maybe_missing_members attribute.
    
    --
    PiperOrigin-RevId: 158760579
    MOS_MIGRATED_REVID=158760579

[33mcommit 82fcf36246f44229654e56a784630eeaca346094[m
Author: Googler <noreply@google.com>
Date:   Mon Jun 12 14:33:40 2017 +0000

    Remove mention of 'NoCaseKeysDict' which makes no sense in this test.
    
    Also, I found that adding a call to f() fixes the test, like in the testInheritMethodsFromObject that follows
    (Got explanations from kramm@: This is because we call Infer() with "deep=False", so it's necessary to call this method manually)
    
    --
    PiperOrigin-RevId: 158710922
    MOS_MIGRATED_REVID=158710922

[33mcommit 9f1db3d23608e9d2d7fcb3378be5091f2e7c5114[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 9 23:58:35 2017 +0000

    Pass 'container' to super(InterpreterClass).instantiate().
    
    In a previous change, I accidentally dropped the 'container' argument.
    
    --
    PiperOrigin-RevId: 158581150
    MOS_MIGRATED_REVID=158581150

[33mcommit 7fca89ec5ea7c54c631a4bda2a4319d05eac6cec[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 9 23:42:04 2017 +0000

    Fix main_test.
    
    Adds two import errors caused by the removal of lib2to3 to the expected errors
    for pytree.py; prints the actual errors to stderr when an assert regarding
    the errorlog fails.
    
    --
    PiperOrigin-RevId: 158579479
    MOS_MIGRATED_REVID=158579479

[33mcommit 736034442e1243cff307b89b0d3ed435a754bcdc[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jun 9 22:57:59 2017 +0000

    Make the parser ignore a '# type: ignore' after a class.
    
    This is needed for some files on typeshed, which have the '# type: ignore' so that mypy can parse them.
    
    --
    PiperOrigin-RevId: 158574507
    MOS_MIGRATED_REVID=158574507

[33mcommit 1f1889c27efd93c4fdd4212c144714817388bc68[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 9 21:40:07 2017 +0000

    Split the "seen" arg to the analyze_x methods into two CallTracer attributes.
    
    This argument was doing double-duty as a set of seen instances and a set of
    seen functions, so split it into two private attributes on CallTracer.
    
    
    Also includes the following changes:
    
    Adds method to ensure __init__ and __new__ calls always succeed.
    
    If an __init__ or __new__ call fails, report the error and call it again with
    made-up arguments. For simplicity, it chooses the first possible function
    signature available.
    
    Adds a test for this behavior.
    
    This should eventually be expanded to all functions, not just __new__ and __init__. See related bug for discussion about why this can't be expanded already. (Short version: no support for keyword-only arguments, tests assume calls will fail.)
    
    --
    PiperOrigin-RevId: 158564577
    MOS_MIGRATED_REVID=158564577

[33mcommit 26bc65635886223143f1ef42504dc74f823797b4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 9 18:23:05 2017 +0000

    Use InterpreterClass's instance cache for instantiate().
    
    Types in type comments are instantiated via instantiate().
    For performance, have InterpreterClass.instantiate() use
    the instance cache already maintained by call().
    
    --
    PiperOrigin-RevId: 158540401
    MOS_MIGRATED_REVID=158540401

[33mcommit 49739eb72c5a116d731e5bc4b4a11c34afb67654[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 9 18:10:54 2017 +0000

    Convert types.ModuleType to __builtin__.module.
    
    We have def __getattr__(self, name) -> Any in __builtin__.module, which allows
    attribute lookup to always succeed. We can't add a __getattr__ to
    types.ModuleType because of mypy, so we'll just convert ModuleType to module.
    
    --
    PiperOrigin-RevId: 158538836
    MOS_MIGRATED_REVID=158538836

[33mcommit aa7ab4bb7c18f595664146321b59343ce9430ab4[m
Author: Googler <noreply@google.com>
Date:   Fri Jun 9 17:27:35 2017 +0000

    Added Protocol class to typing.pytd. Added comment and corrected naming.
    
    --
    PiperOrigin-RevId: 158533066
    MOS_MIGRATED_REVID=158533066

[33mcommit 5ed263dbc4226b5ff3febfd07c75c5f07886ecff[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 9 02:23:57 2017 +0000

    Do an isinstance check before calling get_full_name() in cmp_eq.
    
    get_full_name() is defined only on abstract.Instance.
    
    
    Also includes the following changes:
    
    Don't try to call hasattr with non-string constants.
    
    --
    PiperOrigin-RevId: 158473263
    MOS_MIGRATED_REVID=158473263

[33mcommit 41a6d1c0fac7570f24ed3bd7e9382277168061f9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 8 23:16:31 2017 +0000

    Tie up some loose ends involving namedtuple.
    
    * Get rid of invalid-namedtuple-name (no longer used).
    * Add an entry for invalid-namedtuple-arg at go/pytype-errors.
    * Get rid of NamedTupleInstance - vm._generated_classes removed the need for
      a namedtuple instance to protect its official name from being changed.
    * Convert NamedTupleBuilder to a PyTDFunction.
    
    --
    PiperOrigin-RevId: 158456608
    MOS_MIGRATED_REVID=158456608

[33mcommit ff2b7282dc5ac2042e820cb57954435f5871a763[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 8 22:39:41 2017 +0000

    Add a few missing tests.
    
    Adds some tests for recently introduced code paths that I realized after
    submission I hadn't added tests for.
    
    
    Also includes the following changes:
    
    Add support for namedtuple subclassing.
    
    Adds support for things like
      class X(namedtuple("X", [])): ...
    This requires two changes:
    1) Giving the subclass and the namedtuple the same name is common, so we have
       to rename the namedtuple. This also means that instead of generating
         class X(tuple): ...
       for a namedtuple whose official name is X, we now generate
         class X-: ...
         X = X-
       so the official name and the class name no longer need to be the same.
    2) The namedtuple is hidden inside the subclass definition, so for it to
       appear in the pyi, we have to add namedtuples to a list of generated
       classes that we separately add to the computed types.
    
    --
    Add a PrimitiveInstance class, to capture the fact that in certain cases we can
    make stronger guarantees about an object if it is a builtin primitive.
    (Specifically, here, we add a cmp_eq method that takes into account primitives
    can't override __eq__).
    
    --
    PiperOrigin-RevId: 158452106
    MOS_MIGRATED_REVID=158452106

[33mcommit 57b52b4ae25cce66368ab45b5fc5951b73216b31[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 8 22:08:45 2017 +0000

    Use parse_string in collections_overlay.NamedTupleBuilder.
    
    We can use parse_string to create the namedtuple instance from a string as
    long as we fill in the class types afterwards.
    
    Some of the namedtuple tests are now a little silly, since they essentially
    check that the generated ast equals itself, so most of their remaining value
    is in verifying the absence of crashes or unexpected errors.
    
    --
    PiperOrigin-RevId: 158447678
    MOS_MIGRATED_REVID=158447678

[33mcommit 58a6ff31681cfab90599a8f02c5122a976f12af7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 8 20:15:43 2017 +0000

    Add a couple of namedtuple parsing tests.
    
    Adds a couple of parser tests for typing.NamedTuple use cases that appear in
    typeshed. Our parser already does the right thing; this is just to increase
    test coverage. Also fixes a couple of typos in error messages.
    
    --
    PiperOrigin-RevId: 158432091
    MOS_MIGRATED_REVID=158432091

[33mcommit af9d56c97e57d9377c0de6faf3f05c1575ea5b3f[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Jun 7 00:52:48 2017 +0000

    Make IO.write() accept bytearray.
    
    --
    PiperOrigin-RevId: 158216183
    MOS_MIGRATED_REVID=158216183

[33mcommit c86eff18be0e8db4f4e5a43ae447e4cb5eec9e61[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jun 6 23:21:10 2017 +0000

    Implement has_dynamic_attributes.
    
    --
    PiperOrigin-RevId: 158206313
    MOS_MIGRATED_REVID=158206313

[33mcommit 42141b67537425b96c9129480ab65b3e8ce7a746[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 6 23:11:21 2017 +0000

    Make a template for namedtuple definitions in test_namedtuple.
    
    --
    PiperOrigin-RevId: 158205149
    MOS_MIGRATED_REVID=158205149

[33mcommit 8af5cefbc9d6de86646bc4ca076042e5c8a119d8[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue Jun 6 22:47:51 2017 +0000

    Fixes crash when setting an attribute on __new__.
    
    Motivated by setting __new__.__defaults__. This CL does not add support for
    __defaults__, it just fixes the crash. See [] for supporting
    __defaults__.
    
    --
    PiperOrigin-RevId: 158202223
    MOS_MIGRATED_REVID=158202223

[33mcommit b4868b37316d1fdd0b927e5e15427c2fac8dd59a[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue Jun 6 22:40:08 2017 +0000

    Moves is_lazy into Overlay instead of being set in subclasses.
    
    Every Overlay has is_lazy = True, so it should really be in the base Overlay
    class. Also adds a comment explaining the purpose of is_lazy.
    
    --
    PiperOrigin-RevId: 158201226
    MOS_MIGRATED_REVID=158201226

[33mcommit 5f7458882e5470b01df9b79fc24ac8c497d3d390[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 6 21:19:33 2017 +0000

    Add __new__ back to namedtuple instances.
    
    Turns out that we need __new__ after all, since subclasses often want to
    override it.
    
    Also adds a time.pytd, since typeshed's time.pyi defines __init__ instead
    of __new__ on struct_time (a namedtuple), which pytype is now unhappy with
    because the __new__ and __init__ signatures don't match.
    
    --
    PiperOrigin-RevId: 158189031
    MOS_MIGRATED_REVID=158189031

[33mcommit 92db770e643c64fa75c549c0f55275dd306cb527[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jun 6 20:49:40 2017 +0000

    Generate type parameters for __new__.
    
    Previously, when a class defined its own __new__ method that called
    object.__new__ via super(), it ended up with a definition like this:
    
    class X(object):
      def __new__(cls) -> X
    
    The issue is that if X is subclassed in another module, that
    subclass can't be instantiated, since __new__ only produces instances
    of X. This is particularly troublesome for namedtuple because
    
    class X(namedtuple("_X", ...)):
      def __new__(cls, ...): ...
    
    is a common pattern, and a namedtuple instance is a PyTDClass, so
    X.__new__ behaves as if _X.__new__ is from another module.
    
    This is fixed by inserting bounded type parameters into the generated
    pyi for __new__. (The namedtuple pattern still doesn't work, for reasons
    unrelated to this change.)
    
    
    Also includes the following changes:
    
    Add hasattr() to special_builtins, to support if-splitting.
    
    --
    Adds overlay for abc module, implements abc.abstractmethod decorator. Adds a
    check to avoid analyzing abstract methods unless they are called using super.
    
    --
    PiperOrigin-RevId: 158184267
    MOS_MIGRATED_REVID=158184267

[33mcommit 24d9b3675d8d5752d8714544178dc9a729df8752[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Mon Jun 5 19:26:53 2017 +0000

    Adds exception handling for errors raised by tokenize.generate_tokens
    
    Emit python-compiler-errors for IndentationError and tokenize.TokenError, which
    are raised by tokenize.generate_tokens.
    
    --
    PiperOrigin-RevId: 158046419
    MOS_MIGRATED_REVID=158046419

[33mcommit f77a62a8431482d3b868a347a2f3927beae8c12a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jun 2 15:39:51 2017 +0000

    Say that 'typing.NamedTuple' is unsupported, not just 'NamedTuple'.
    
    --
    PiperOrigin-RevId: 157834126
    MOS_MIGRATED_REVID=157834126

[33mcommit dec8e700059212a94a3574e7568d12b685130cc7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jun 2 00:34:54 2017 +0000

    Handle classes better in is/is not comparisons.
    
    --
    PiperOrigin-RevId: 157786892
    MOS_MIGRATED_REVID=157786892

[33mcommit d6b058ad1799c43cd57ce9ef92a0afa067758379[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jun 2 00:25:57 2017 +0000

    Allow to initialize int, float and complex with a unicode string.
    
    --
    PiperOrigin-RevId: 157786056
    MOS_MIGRATED_REVID=157786056

[33mcommit d477fa0d98fd4d0ceb5adedb33bc4819d19f40ed[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 1 23:37:25 2017 +0000

    Add missing attributes to namedtuples generated from pyi files.
    
    Adds a proper __init__, as well as placeholder constants (e.g.,
      _fields = ...  # type: Any
    ) for all of the other attributes.
    
    
    Also includes the following changes:
    
    Allows Union of types as bases for classes.
    
    e.g. class C(Union[A,B]), C should be considered the subclass of both A and B.
    
    --
    PiperOrigin-RevId: 157780577
    MOS_MIGRATED_REVID=157780577

[33mcommit f2cc0dc2542242c3f96f9b033925e8b62fd77ded[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Thu Jun 1 21:03:03 2017 +0000

    Changes the class used for namedtuples to ensure matching works.
    
    Due to how caching in convert_to_value works, namedtuple classes were not
    matching. This CL adds a kludge that allows caching to work while still giving
    all the benefits of the specialized namedtuple class.
    
    --
    PiperOrigin-RevId: 157758782
    MOS_MIGRATED_REVID=157758782

[33mcommit 2317d379b7941f6e5fd3fb1445908a49624dae50[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Jun 1 20:56:01 2017 +0000

    Fix crash when retrieving an attribute from Callable.
    
    Also, add func_name to our pytd definition of Callable, since all functions,
    even lambda, seem to have this.
    
    --
    PiperOrigin-RevId: 157757727
    MOS_MIGRATED_REVID=157757727

[33mcommit e377017c3ddc4401333ca51ff1f3d069d7b2aa08[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jun 1 20:19:10 2017 +0000

    Make collections.namedtuple use __init__ instead of __new__.
    
    tuple actually overrides __new__ (not __init__, as __builtin__.pytd pretends),
    but changing how tuple is constructed is tricky, due to this definition:
    
    def __init__(self, p0: Iterable[_T2]) -> None:
      self := tuple[_T2, ...]
    
    If we write this as
    
    def __new__(cls, p0: Iterable[_T2]) -> tuple[_T2, ...]
    
    then pytype mistakenly creates tuples when instantiating subclasses of
    tuple that don't override __new__. On the other hand,
    
    def __new__(cls: Type[_T], Iterable[_T2]) -> _T
    
    causes us to lose _T2. Instead, we'll pretend that namedtuple uses __init__.
    
    --
    PiperOrigin-RevId: 157752672
    MOS_MIGRATED_REVID=157752672

[33mcommit 04a0a82b052c14c74d52d4bc72d35f5f71ae17c4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 31 23:33:07 2017 +0000

    Directly fill in subst when matching an unknown.
    
    When the abstract matcher has an AMBIGUOUS_OR_EMPTY value on the left, it
    was previously instantiating the type on the right and continuing with
    matching in order to fill in subst. This caused problems because, e.g.,
    Tuple[str or unicode, str or unicode] doesn't match Tuple[AnyStr, AnyStr].
    Instead, use annotations_util's get_type_parameters method to find the
    type parameters that need to be added to subst without doing further matching.
    
    
    Also includes the following changes:
    
    Handle super(...).__new__/__init__ more carefully.
    
    When object.__new__ or object.__init__ is called via super(), the method
    accepts and ignores (any number of) extra arguments iff the other one of the
    methods is overridden. For example, the following is legal:
    
    class Foo(object):
      def __new__(cls):
        return super(Foo, cls).__new__(cls, 1, 2, 3, 4, 5, 6)  # ok
      def __init__(self):
        pass
    
    but the following is not:
    
    class Foo(object):
      def __new__(cls):
        return super(Foo, cls).__new__(cls, 1, 2, 3, 4, 5, 6)  # error!
    
    This change adds a special_builtins.Object class that uses
    get_special_attribute to return either the normal pytd definition of
    object.__new__/__init__ or a NativeFunction implementation that swallows
    extra arguments.
    
    Also adds a skipped test for generating and reloading a namedtuple definition.
    This doesn't work yet because our tuple definition overrides object.__init__.
    We need to either switch tuple over to __new__ and fix everything that the
    switch breaks (which would be the principled thing to do), or add an __init__
    definition to NamedTupleBuilder (incorrect, but easy and maybe good enough).
    
    --
    PiperOrigin-RevId: 157652139
    MOS_MIGRATED_REVID=157652139

[33mcommit 9985bd0c2d526056ae2493b9fee51a4d7df9760b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 31 21:48:42 2017 +0000

    Fix a syntax error in typing.py.
    
    --
    PiperOrigin-RevId: 157638267
    MOS_MIGRATED_REVID=157638267

[33mcommit 196e358dbb67688aa2ad7f25b7dd1c23d7fb6588[m
Author: Martin DeMello <mdemello@google.com>
Date:   Wed May 31 21:41:17 2017 +0000

    Fix for tuples contained in containers.
    
    If a tuple element's type parameter is in the container's type parameters, pass
    the container as an argument when instantiating the element, otherwise do not.
    (Earlier, we were always passing the container.)
    
    --
    PiperOrigin-RevId: 157637195
    MOS_MIGRATED_REVID=157637195

[33mcommit fb0d8bfbdb13bbcd9f735c75b4bfac65a46bbcf8[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Wed May 31 21:28:40 2017 +0000

    Fixes bug related to multiple bindings in arguments to typing.cast
    
    --
    PiperOrigin-RevId: 157635350
    MOS_MIGRATED_REVID=157635350

[33mcommit 67cb2c3ad674e463ee2495ae8289d7e5c3eef46d[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Wed May 31 20:20:50 2017 +0000

    Adds a check against using TypeVars as arguments to typing.cast
    
    --
    PiperOrigin-RevId: 157625665
    MOS_MIGRATED_REVID=157625665

[33mcommit e395d98b49066f8b761fc3d57fb0942ec408a755[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 31 16:40:03 2017 +0000

    Cut useless information out of annotation error messages.
    
    --
    PiperOrigin-RevId: 157596566
    MOS_MIGRATED_REVID=157596566

[33mcommit 8a93ce49c0c9fad1af7f6289d709b399d07a6636[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Wed May 31 12:02:23 2017 +0000

    Create an index of ClassType nodes to avoid AST visits.
    
    Create a list of all ClassType nodes in an AST during serialization. This list is used during deserialization to avoid a visit to the whole AST, instead only the ClassType nodes are visited to fill the .cls pointers.
    If one of the ClassTypes is found to have changed its type during the visit, which can happen if serialization and deserialization use different ASTs for the dependencies, the whole AST is visited. This visit is necessary because we can't exchange a node without visiting the parent.
    
    --
    PiperOrigin-RevId: 157574451
    MOS_MIGRATED_REVID=157574451

[33mcommit c08ddf963532fe9b2cd6cd9430c0196b32e24fcb[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue May 30 20:32:37 2017 +0000

    Adds typing.ContextManager to Pytype's builtin typing.pytd
    
    --
    PiperOrigin-RevId: 157504407
    MOS_MIGRATED_REVID=157504407

[33mcommit 2c0364f3636f779931cdc7fb4bbcbd1cf01ea076[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Tue May 30 17:17:26 2017 +0000

    Adds "newlines" field to typing.IO.
    
    --
    PiperOrigin-RevId: 157478421
    MOS_MIGRATED_REVID=157478421

[33mcommit 70398b3a180b88fd290ab5757445ddbebaf42c52[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat May 27 01:16:04 2017 +0000

    Analyze a class even when its __new__ method contains an error.
    
    Sometimes when __new__ returns something besides an instance of the current
    class, it's unintentional. (The method contains a type error.) In those
    cases, we still want to call __init__ and analyze the class's methods.
    
    --
    PiperOrigin-RevId: 157284210
    MOS_MIGRATED_REVID=157284210

[33mcommit 699131d6361efc6a4ea8b7fc2067f06c7b4abd60[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 26 23:29:06 2017 +0000

    Simplify TypeNew.call().
    
    When _match_args raised FailedFunctionCall, we were catching it and then
    calling PyTDFunction.call() which again invokes _match_args and raises
    FailedFunctionCall again. Instead, just don't catch it the first time.
    
    
    Also includes the following changes:
    
    Move builtins in abstract.py to their own file.
    
    Ideally, we'd make a single builtins overlay, but things are pretty messy
    right now, as we have three types of builtins: a dictionary of normal builtins,
    preloaded builtins from __builtin__.py, and special builtins in
    vm.special_builtins. I'd like to clean this up at some point, but for now, I'm
    just moving the definitions that go in vm.special_builtins (plus TypeNew) into
    a separate file.
    
    Also fixes a few simple lint errors in vm.py.
    
    --
    PiperOrigin-RevId: 157276552
    MOS_MIGRATED_REVID=157276552

[33mcommit c9c8dcf5570f717ecfd17f7dcb0f31ea93cfb60f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 26 17:29:38 2017 +0000

    Call __new__ when instantiating a class for analysis.
    
    Changes CallTracer.instantiate(...) to call a class's __new__ method for
    instantiation when the class (or a superclass) has overridden object.__new__.
    
    Most of the code needed for this already exists, and just needed to be pulled
    out into helper methods:
    * The logic in AtomicAbstractValue._call_new_and_init to detect whether a
      __new__ method equals object.__new__ is now in get_special_new().
    * The parts of CallTracer.maybe_analyze_method() that created dummy method
      arguments and called the method with those arguments now live in
      create_method_arguments() and call_function_with_args(), respectively.
    
    The 'seen' argument has been added to a few more places to prevent __new__
    from being analyzed twice.
    
    The type of the 'cls' argument to X.__new__ is no longer printed in pyi files,
    when that type is Type[X].
    
    --
    PiperOrigin-RevId: 157235182
    MOS_MIGRATED_REVID=157235182

[33mcommit 0e26c4a3cfc001edd4f7ad21aeda44d2769f4db2[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Fri May 26 15:18:28 2017 +0000

    Mark deserialized modules as clean.
    
    This removes calls to FillModuleClasses visitor later in the control flow, which cause a large percentage of VisitNode runs (>30%) for modules with many imports (>100).
    
    
    Also includes the following changes:
    
    Stop treating TypingOverlay as a special case.
    
    - Add typing: TypingOverlay to overlays map in vm.py
    - Change infer.py to stop using convert.typing
    - Remove convert.Converter.typing_overlay
    - Add ast attribute to abstract.Module
    
    --
    PiperOrigin-RevId: 157221926
    MOS_MIGRATED_REVID=157221926

[33mcommit 26f2a5b67b3dfcc6b72734d03cb033db84799df8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 25 20:39:02 2017 +0000

    Improve the definition of __builtin__.int.
    
    int() can't take more than two arguments, and when a base is specified, the
    first argument has to be str or unicode.
    (https://docs.python.org/2/library/functions.html#int)
    
    
    Also includes the following changes:
    
    Adds Overlay class to generalize overlay pattern in Pytype.
    
    Overlays act as a layer between Pytype and underlying modules, providing
    support for members of modules that can't be easily expressed in pytd files.
    
    --
    PiperOrigin-RevId: 157146772
    MOS_MIGRATED_REVID=157146772

[33mcommit b8ee983fc6b10ff94c99458f4b9c3d2a59c894fa[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu May 25 04:04:16 2017 +0000

    Warn if code imports "NamedTuple" from typing.
    
    --
    PiperOrigin-RevId: 157074451
    MOS_MIGRATED_REVID=157074451

[33mcommit 374a8fb903543b1da21ab228a6f378608bde26c9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 24 21:49:55 2017 +0000

    Do a bit of clean-up in infer.py.
    
    * Delete the unused 'method_name' arg to create_argument.
    * Always put the 'node' argument first in methods.
    * Remove an unused method (_create_call_arg).
    
    --
    PiperOrigin-RevId: 157040724
    MOS_MIGRATED_REVID=157040724

[33mcommit 5eef528d945397437ba75e1cab83cdec5555bf8b[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Wed May 24 20:21:54 2017 +0000

    Fix test_namedtuple.py:test_bad_initialize
    
    
    Also includes the following changes:
    
    Add support for collections.namedtuple.
    
    - Add collections_overlay to intercept calls to collections.namedtuple
    - Updated vm.py, attribute.py, etc. to use collections_overlay
    - Added error about mismatched namedtuple names
    - Fixed bug in output.py related to outputting abstract.PyTDFunction objects
    - Updated tests
    
    --
    Make attribute-error on modules into a module-attribute error.
    
    --
    PiperOrigin-RevId: 157028182
    MOS_MIGRATED_REVID=157028182

[33mcommit 182492ece771b005adb5807b2457ea5563821833[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 23 21:44:31 2017 +0000

    Set an '_error_subst' attribute instead of raising BadTypeParameterSubstitution.
    
    Raising an exception caused us to abort matching early when type-checking
    unions, so make the substitution that we stored in the error an attribute on
    the matcher instead.
    
    --
    PiperOrigin-RevId: 156913762
    MOS_MIGRATED_REVID=156913762

[33mcommit 6b85c8c8f9abe8467f6e96683fd780ab42f372ed[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue May 23 20:51:59 2017 +0000

    Allow to call AssignToNewVariable() with no CFG node.
    
    --
    PiperOrigin-RevId: 156906028
    MOS_MIGRATED_REVID=156906028

[33mcommit 951b3e2366224b991d54570095dc59c6cd847d87[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 23 02:08:29 2017 +0000

    Use 'bound' to rewrite a couple of __builtin__.pytd definitions.
    
    --
    PiperOrigin-RevId: 156817233
    MOS_MIGRATED_REVID=156817233

[33mcommit 30c494ff57ca3860d16ebbd0d75884bfd85233bc[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 23 02:05:56 2017 +0000

    Check the "bound" argument to typing.TypeVar.
    
    "bound" is useful for defining __new__ (e.g.,
    T = TypeVar("T", bound=X)
    class X(object):
      def __new__(cls: T) -> T
    ), which I think we'll need to do on some builtins in order to fix a bug
    involving __new__/__init__ arg counts.
    
    --
    PiperOrigin-RevId: 156817064
    MOS_MIGRATED_REVID=156817064

[33mcommit 5f619e2256def4dcbd9d36df785d7dbaef8815cd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 22 19:26:44 2017 +0000

    Don't instantiate unbound type parameters during argument-checking.
    
    --
    PiperOrigin-RevId: 156770000
    MOS_MIGRATED_REVID=156770000

[33mcommit 4272c80a69f54d5abb769830caf47869c112c0bf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 19 23:06:35 2017 +0000

    Check the types of *args and **kwargs arguments in pytd functions.
    
    When a function in a pyi file is defined as, e.g.,
      def f(*args: int, **kwargs: float)
    we have been ignoring the argument types. We now use these types in two ways:
    1) For a function call like f(1, key=2.0), we check that the positional args
       are ints and the named args are floats.
    2) For a call like f(*[1], **{"key": 2.0}), we check that args.starargs is an
       Iterable[int] and args.starstarargs is a Mapping[str, float].
    
    Also fixes a mistake in our definition of dict.update exposed by this change.
    
    --
    PiperOrigin-RevId: 156608803
    MOS_MIGRATED_REVID=156608803

[33mcommit 8a754126c8bf6ffdd453ef709c9ed040a8f40905[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 19 19:24:44 2017 +0000

    Split abstract.PyTDSignature.match_args into several methods.
    
    Some refactoring in preparation for doing better type-checking of
    *args and **kwargs arguments.
    
    Moves some of the code in match_args into helper methods, moves each function
    tested in test_pyi.py's testSignature into its own test.
    
    --
    PiperOrigin-RevId: 156582948
    MOS_MIGRATED_REVID=156582948

[33mcommit 717e636c9856704e3abb09c9dbbff7ca2a71d037[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 19 18:54:57 2017 +0000

    Always print keyword arguments in the same order in error messages.
    
    --
    PiperOrigin-RevId: 156579475
    MOS_MIGRATED_REVID=156579475

[33mcommit 36e04ea786238f072b59c7b2174e5766d0585746[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 19 18:41:23 2017 +0000

    Define one canonical regexp for anonymous parameters.
    
    We had r"_[0-9]" in errors.py and r"_[0-9]+" in pytd/type_match.py.
    
    --
    PiperOrigin-RevId: 156577872
    MOS_MIGRATED_REVID=156577872

[33mcommit 91c41826e7c829aa3445f6b02f51cb92127f2145[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu May 18 00:34:56 2017 +0000

    Add a testcase for a failing pytype check.
    
    --
    PiperOrigin-RevId: 156378531
    MOS_MIGRATED_REVID=156378531

[33mcommit 1ee88c8d6f623a032f5b2f3e43ae9c039170109d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 17 22:45:00 2017 +0000

    Print types for varargs and kwargs.
    
    Changes output.py's _function_to_def to include the types of varargs and
    kwargs, tweaks PrintVisitor so that Tuple and Dict aren't unnecessarily
    imported in pyi files.
    
    --
    PiperOrigin-RevId: 156365263
    MOS_MIGRATED_REVID=156365263

[33mcommit a8600524a65387eda458e8770cb7285b78415f8b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 17 20:04:58 2017 +0000

    Handle ParameterizedClass better in compute_mro().
    
    * Defines __eq__ and __ne__ on ParameterizedClass so that compute_mro() will
      work properly.
    * Fixes a couple of MRO errors in tests.
    * Fixes a bug where convert.py crashed on trying to create a ParameterizedClass
      when the base class has circular inheritance.
    
    --
    PiperOrigin-RevId: 156343264
    MOS_MIGRATED_REVID=156343264

[33mcommit 73b8b90f679f0896fcdea76f72b2989e4a7dd781[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 17 18:31:42 2017 +0000

    Fix a bug in function.Signature.from_pytd.
    
    from_pytd needs to set postprocess_annotations=False because the parser
    already changes the argument types for starargs, starstarargs, and arguments
    with default None.
    
    --
    PiperOrigin-RevId: 156331768
    MOS_MIGRATED_REVID=156331768

[33mcommit 8f623fdd59b444b1d9545a66e7bca3a3c4947e8d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 17 17:58:56 2017 +0000

    Add stack traces to Tricorder messages.
    
    --
    PiperOrigin-RevId: 156327269
    MOS_MIGRATED_REVID=156327269

[33mcommit de5ecddf674efc6ef1ae27f5c85f0d7037416376[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 17 17:33:43 2017 +0000

    Stop specifying the filename in tests in test_type_comments.
    
    It used to be the case that omitting the filename in tests could cause
    spurious name errors due to type comments being attributed to the wrong file.
    This was fixed a while ago, so we can stop specifying 'filename="test.py"'.
    There was a test (testTypeCommentUsesFilename) that depended on this 'feature',
    so that test has been removed entirely.
    
    --
    PiperOrigin-RevId: 156323834
    MOS_MIGRATED_REVID=156323834

[33mcommit 23ab2fe7e2dac0d4aafdce6e600867fe054a5da5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 17 17:30:03 2017 +0000

    Remove assertErrorLogContains and assertErrorLogDoesNotContain.
    
    Switches uses of assertErrorLogContains over to assertErrorLogIs and
    deletes the former. Also deletes assertErrorLogDoesNotContain, since its
    one use was obviated by the switch.
    
    --
    PiperOrigin-RevId: 156323383
    MOS_MIGRATED_REVID=156323383

[33mcommit d79255cd32aa1645ebadcf45ec3d980004ad6620[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 15 23:47:23 2017 +0000

    Add stack traces to error messages.
    
    --
    PiperOrigin-RevId: 156122153
    MOS_MIGRATED_REVID=156122153

[33mcommit 41f5a0474c3b5c2e8aed3ae59d8661359d17201d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 15 22:26:46 2017 +0000

    Remove mro.py.
    
    One of the functions in this file was not used anywhere, and the other is short
    enough that it can be put in abstract.py. Also removes mro_test.py, which only
    tested the unused function.
    
    --
    PiperOrigin-RevId: 156112491
    MOS_MIGRATED_REVID=156112491

[33mcommit f1353f1a5558ce484d18407907e629a4cc942827[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 15 22:21:02 2017 +0000

    Some minor cleanup on errors.ErrorLog.
    
    * Delete the error_names() method and inline its one use.
    * Make sorted_errors() private.
    * Use the filename and lineno properties in sorted_errors() instead of
      accessing the private attributes directly.
    
    --
    PiperOrigin-RevId: 156111701
    MOS_MIGRATED_REVID=156111701

[33mcommit 4d2afe187044dfac8a53f016940f53c643adb699[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 15 19:51:38 2017 +0000

    Remove two unused attributes from errors.Error.
    
    --
    PiperOrigin-RevId: 156090994
    MOS_MIGRATED_REVID=156090994

[33mcommit 4efc19797b0c626516dca6258c434698fb3eae9f[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon May 15 19:33:49 2017 +0000

    Add support for all the new opcodes in Python3.6.
    
    --
    PiperOrigin-RevId: 156088858
    MOS_MIGRATED_REVID=156088858

[33mcommit 22f3684703ca31c2b81ae3e9e7a68119cf1d60a4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 15 18:38:52 2017 +0000

    Fix how assertErrorLogIs handles multiple errors with the same name and line.
    
    Changes assertErrorLogIs so that it can handle an errorlog with two different
    errors that happen to share a name and line number. Also switches from
    iterating through all the errors to using unique_sorted_errors() to better
    match actual pytype output, and makes some of the assertion error messages
    a little prettier.
    
    --
    PiperOrigin-RevId: 156081481
    MOS_MIGRATED_REVID=156081481

[33mcommit ea6ca355ab9c9499eb82d4445ff7a856ba575f81[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 12 23:45:57 2017 +0000

    Fix caching in InterpreterFunction.call(), and a bug in BuildClass.call().
    
    Fixes caching of locals in InterpreterFunction.call(). This change exposes
    a bug in our implementation of Python 3's LOAD_BUILD_CLASS: when a class 'X'
    is built, a new locals dictionary is created for X's members, but the
    'f_locals' attribute of InterpreterFunction(X) still points to the old
    locals (which happen to be the globals when X is a top-level class), so when
    InterpreterFunction(X) is analyzed by CallTracer.maybe_analyze_method, all of
    X's members are added to the globals. We fix this bug by having
    BuildClass.call() set the interpreter function's 'f_locals' to the new locals.
    
    --
    PiperOrigin-RevId: 155927074
    MOS_MIGRATED_REVID=155927074

[33mcommit de7d4549a382d2778676a2cd33f637317e878b4e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 12 22:15:19 2017 +0000

    Generate a traceback string from the frames passed to Error.with_stack.
    
    Generates a traceback string with information about up to three of the frames
    in the stack. Saves the string as a "_traceback" attribute (unused for now, but
    it will later be added to Error.__str__ and ErrorLogBase.print_to_csv_file).
    
    I previously thought we would need to save the method name as a new attribute
    on the frame, but it turns out that frame.current_opcode.code.co_name is the
    method name.
    
    --
    PiperOrigin-RevId: 155917612
    MOS_MIGRATED_REVID=155917612

[33mcommit 89f856d5fa86d6c5db092c79390920b0634317d4[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri May 12 19:39:20 2017 +0000

    Add additional nested lambda testcase.
    
    --
    PiperOrigin-RevId: 155898745
    MOS_MIGRATED_REVID=155898745

[33mcommit e6281d3e2b12322d0b0b0359f1fb9268511c6fb4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 12 19:16:49 2017 +0000

    Improve abstract.Dict.update and __builtin__.dict.update.
    
    * Improves abstract.Dict.update() by setting could_contain_anything only when
      necesssary and handling non-dictionary values better. Removes the boolean
      return values, which weren't used for anything.
    * Adds a slot to abstract.Dict for __builtin__.dict.update. The slot calls our
      custom update() when possible and otherwise falls back to call_pytd().
    
    --
    PiperOrigin-RevId: 155896428
    MOS_MIGRATED_REVID=155896428

[33mcommit fc87024a233811641d008d4022956492c18e539c[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Fri May 12 19:03:00 2017 +0000

    Fix hashing of frame local members in make_function, and make Unknowns produce
    same fullhash if they have the same members. Add infinite loop as testcase.
    
    Old hash method was incorrect, and only non-argument and non-local variable
    members of f_locals should be hashed.
    
    --
    PiperOrigin-RevId: 155894846
    MOS_MIGRATED_REVID=155894846

[33mcommit 23214bbc0841135d50600f60f29f152ab9f6ade1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 12 01:11:47 2017 +0000

    Handle the DictKeyMissing error in VirtualMachine.call_function().
    
    --
    PiperOrigin-RevId: 155822159
    MOS_MIGRATED_REVID=155822159

[33mcommit bce1de7969079732aa85faa8e99a6af97bfe86ae[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 12 00:27:59 2017 +0000

    Get rid of two more unittest.skip's.
    
    These slipped through the cracks the first time around because
    I was breaking a large change into several parts and forgot to
    include this file.
    
    --
    PiperOrigin-RevId: 155818726
    MOS_MIGRATED_REVID=155818726

[33mcommit e54eeca6b92432d20c70b5a5ce53a3343bff6043[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri May 12 00:02:31 2017 +0000

    Make LookupExternalTypes work for constants.
    
    --
    PiperOrigin-RevId: 155816169
    MOS_MIGRATED_REVID=155816169

[33mcommit 2178062dbbd91371cff8b3b1dc2381bd26892780[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 11 21:22:18 2017 +0000

    Fix some skipped tests.
    
    --
    PiperOrigin-RevId: 155796137
    MOS_MIGRATED_REVID=155796137

[33mcommit 73109e905903b6ecdf5b2b5a9f465a6f1cf6ba32[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 11 19:14:58 2017 +0000

    Remove errors.Error.from_csv_row.
    
    --
    PiperOrigin-RevId: 155779857
    MOS_MIGRATED_REVID=155779857

[33mcommit 91c2fbc237b19421e92f2023c84e7447550fa9f2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 10 23:23:16 2017 +0000

    Give @classmethod and @staticmethod full pyi output.
    
    --
    PiperOrigin-RevId: 155689849
    MOS_MIGRATED_REVID=155689849

[33mcommit f4e97a8655c88bd6db913aa6211c4575a126970a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 10 18:08:29 2017 +0000

    Make errors take a stack of frames instead of an opcode.
    
    Every error that previously took an opcode now takes a
    stack of frames; for now, we simply get the opcode from
    the last frame and throw away the rest of the information.
    
    We're able to pass in vm.frames for the stack almost
    everywhere. Exceptions:
    * When the opcode for the error is not the same as the
      current opcode, we make a dummy stack containing a
      single frame with the error opcode.
    * LateAnnotation has to make its own copy of the stack,
      since vm.frames is mutable.
    
    --
    PiperOrigin-RevId: 155650470
    MOS_MIGRATED_REVID=155650470

[33mcommit ef76ca2ac864e946e05001ce8f15ea4867c8ad04[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 10 07:27:32 2017 +0000

    Turn properties into constants when generating pyi.
    
    * Turns properties into constants, using the return type of the getter function.
    * Assumes that abstract.Function always converts to pytd.Function, which lets
      us simplify some existing code in _class_to_def.
    * Pulls some code related to return type conversion out of _function_to_def
      into standalone methods so that we can reuse it.
    
    --
    PiperOrigin-RevId: 155599708
    MOS_MIGRATED_REVID=155599708

[33mcommit 8730da6e156780471bc94ed4519f2bfd0f957bcd[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue May 9 23:29:12 2017 +0000

    FIX: When running compile_to_pyc in a subprocess, returning an error threw an encoding exception.
    
    --
    PiperOrigin-RevId: 155568862
    MOS_MIGRATED_REVID=155568862

[33mcommit b44e5d2e8ba9c0e70244634110d3e58b41284a12[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 9 20:35:00 2017 +0000

    Improve the way parser.py computes property types.
    
    Previously, if our parser saw
    
    @foo.setter
    def foo(self, x: str) -> None: ...
    
    it assumed that 'foo' has type str, but we don't actually know
    what the body of the method does with argument x.
    
    Change the parser to get property types only from @property and
    @foo.getter, and use a union of all the property types it sees
    rather than taking the last one.
    
    --
    PiperOrigin-RevId: 155545055
    MOS_MIGRATED_REVID=155545055

[33mcommit 3756d7d98ab5f4eba8e6713663317b20dfff46da[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 9 20:07:59 2017 +0000

    Simplify parser.py's code for handling methods and properties.
    
    Changes _NameAndSig to store at most one decorator (rather than a list),
    breaks out pieces of _merge_signatures into helper functions. Doesn't
    affec the parsing output.
    
    --
    PiperOrigin-RevId: 155541959
    MOS_MIGRATED_REVID=155541959

[33mcommit cb9bd27085e42993ff0911fac753a48f5fcb64ba[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue May 9 18:13:37 2017 +0000

    Support the new wordcode format from python3.6
    
    --
    PiperOrigin-RevId: 155528082
    MOS_MIGRATED_REVID=155528082

[33mcommit d7e4103cc2847cce87ff2e6c4fcc30afcb5c3d2a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon May 8 21:16:32 2017 +0000

    Rollback of commit 5274e45f11204e46ad30ad670270c532fdaa2677.
    
    *** Reason for rollback ***
    
    Caused several timeouts and OOMs.
    
    *** Original change description ***
    
    Copy bindings directly if we can, instead of making them an origin.
    
    In other words, when creating variable chains, throw away old variables if we
    don't need them anymore. This should lower the number of variables we keep in
    memory.
    
    ***
    
    --
    PiperOrigin-RevId: 155425948
    MOS_MIGRATED_REVID=155425948

[33mcommit fbdadc4f66f0de745623ba273bb36a0f82d8a420[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon May 8 21:15:01 2017 +0000

    Rollback of commit d473f6feb50dd02386d1b4981543d465b0d8a381.
    
    *** Reason for rollback ***
    
    Caused, together with 155260644, several timeouts + OOMs.
    
    *** Original change description ***
    
    Remove "node" from several PasteVariable and AssignToNewVariable calls.
    
    ***
    
    --
    PiperOrigin-RevId: 155425715
    MOS_MIGRATED_REVID=155425715

[33mcommit f024377294428f312e6b52674b035ee77129e4ac[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon May 8 17:49:55 2017 +0000

    Move cmp() and repr() from __builtin__.py to __builtin__.pytd.
    
    --
    PiperOrigin-RevId: 155398038
    MOS_MIGRATED_REVID=155398038

[33mcommit 00dc97d6c13aaa1d7f5c54ec96f0375a5a659ea7[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon May 8 13:42:19 2017 +0000

    Speed up tests: Break builtins2.py into pieces.
    
    --
    PiperOrigin-RevId: 155373330
    MOS_MIGRATED_REVID=155373330

[33mcommit d473f6feb50dd02386d1b4981543d465b0d8a381[m
Author: Matthias Kramm <kramm@google.com>
Date:   Sat May 6 00:45:07 2017 +0000

    Remove "node" from several PasteVariable and AssignToNewVariable calls.
    
    --
    PiperOrigin-RevId: 155260742
    MOS_MIGRATED_REVID=155260742

[33mcommit 5274e45f11204e46ad30ad670270c532fdaa2677[m
Author: Matthias Kramm <kramm@google.com>
Date:   Sat May 6 00:43:32 2017 +0000

    Copy bindings directly if we can, instead of making them an origin.
    
    In other words, when creating variable chains, throw away old variables if we
    don't need them anymore. This should lower the number of variables we keep in
    memory.
    
    --
    PiperOrigin-RevId: 155260644
    MOS_MIGRATED_REVID=155260644

[33mcommit 3e3983d3d31e688f02753337cb7f21ece3d565a0[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Fri May 5 13:32:03 2017 +0000

    Fix serialize_ast handling for __init__.py files and relative imports.
    
    Pytype expects __init__.py files to be inferred with the module name suffix .__init__ this marker is needed for resolution of relative imports.
    During reference resolution __init__.py files are expected to have to have the name of the module, e.g. "foo" instead of "foo/__init__".
    This name change was resolved in the EnsureName method so far, to save those AST visits, the name should be changed before serialization.
    
    --
    PiperOrigin-RevId: 155191020
    MOS_MIGRATED_REVID=155191020

[33mcommit 62143b2d53b8dfb5f49d75223a1301b0c6708771[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Fri May 5 08:46:00 2017 +0000

    Extend pickled file detection to also recognize files of the format foo.pickledSUFFIX were suffix can be any string of the format [^ /.]* .
    
    --
    PiperOrigin-RevId: 155175922
    MOS_MIGRATED_REVID=155175922

[33mcommit 816fba8fc88f0582a00306185420bc52b18cbefc[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Fri May 5 08:45:17 2017 +0000

    Clarify --module-name documentation around __init__.py files.
    
    --
    PiperOrigin-RevId: 155175889
    MOS_MIGRATED_REVID=155175889

[33mcommit 07296d12ab6c3d48aec76fac398eee829ccbf8bd[m
Author: Martin DeMello <mdemello@google.com>
Date:   Thu May 4 23:48:23 2017 +0000

    Add new opcodes from python3.
    
    This CL adds separate opcode maps for python3.5 and python3.6, and (potentially
    incomplete) implementations for all the new opcodes.
    
    --
    PiperOrigin-RevId: 155144224
    MOS_MIGRATED_REVID=155144224

[33mcommit 652685e2307b475ee7bad8a9b585b30d8aa2507f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 4 22:24:03 2017 +0000

    Remove a couple more things used for checking Python against pyi.
    
    Gets rid of a couple of things I forgot the first time around:
    * the [missing-definition] error
    * the 'opcode' argument to check_return
    
    --
    PiperOrigin-RevId: 155134704
    MOS_MIGRATED_REVID=155134704

[33mcommit ac580b9d2a089ecee6648f9fa2c547f55272702d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 4 21:38:55 2017 +0000

    Remove the option to check a Python file against a pyi file.
    
    --
    PiperOrigin-RevId: 155128496
    MOS_MIGRATED_REVID=155128496

[33mcommit eec2fe5eec5285f41c43972abc4b84cdabaf22b7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu May 4 21:33:01 2017 +0000

    Unskip a couple of decorator tests that work now.
    
    --
    PiperOrigin-RevId: 155127650
    MOS_MIGRATED_REVID=155127650

[33mcommit f5cbe558ed7c9171f98544596643bfb3f26baca4[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Wed May 3 23:39:07 2017 +0000

    Use LookupExternalTypes during unpickle.
    
    Change unpickling code to use LookupExternalTypes in all cases instead of special casing all the special cases we know about.
    This is needed as we discover more and more special cases, in which the AST is structurally modified during dependency resolution in ways which can not be predicted during inference. This includes
    * The type of external dependencies changing between inference and loading of the inferred ast.
    * External modules using a __getattr__ -> Any rule which was not known at inference time.
    
    The change will have some performance impact, as one iteration over the AST will be needed. Due to the change in the LookupExternalTypes Visitor this iteration will in most cases not structurally modify the AST.
    
    --
    PiperOrigin-RevId: 155021669
    MOS_MIGRATED_REVID=155021669

[33mcommit b16efa2ed10d2748cb1c076f585fc8b137cf4007[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed May 3 21:47:33 2017 +0000

    Handle __get__ properly for attributes accessed through super().
    
    --
    PiperOrigin-RevId: 155006940
    MOS_MIGRATED_REVID=155006940

[33mcommit 39e40b9ac086c19b4b1fe84c8a27e753f74c7bbe[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 2 22:34:06 2017 +0000

    Support `x in iter(container)`.
    
    Support CMP_IN/CMP_NOT_IN on an iterable without a __contains__ method. When
    evaluating the `in` operator for an object without a __contains__ attribute,
    the interpreter gets the object's iterator and does comparisons against the
    results of calling next(). We simply attempt to get the iterator and return an
    abstract boolean value upon success (i.e., we skip the next() calls).
    
    --
    PiperOrigin-RevId: 154889660
    MOS_MIGRATED_REVID=154889660

[33mcommit da0f30c17e2cb352d23c3ef8f8032f539ed744b2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue May 2 21:38:35 2017 +0000

    Delete VirtualMachine.is_none; use VirtualMachine._is_only_none instead.
    
    --
    PiperOrigin-RevId: 154881633
    MOS_MIGRATED_REVID=154881633

[33mcommit 8e63d6e777fd301e96f532a38ed2669653e2640a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue May 2 21:35:28 2017 +0000

    Make log.trace() and Variable allocation in cfg.py consume a bit less memory.
    
    --
    PiperOrigin-RevId: 154881147
    MOS_MIGRATED_REVID=154881147

[33mcommit 7c3e4a765edbc990ba02d5a341b86f6ebe4fca22[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Tue May 2 16:23:43 2017 +0000

    Rollback of commit c694317e225238b030365fcba4f3f2661878ca68.
    
    *** Reason for rollback ***
    
    Broke pytype
    
    *** Original change description ***
    
    Use LookupExternalTypes during unpickle.
    
    Change unpickling code to use LookupExternalTypes in all cases instead of special casing all the special cases we know about.
    This is needed as we discover more and more special cases, in which the AST is structurally modified during dependency resolution in ways which can not be predicted during inference. This includes
    * The type of external dependencies changing between inference and loading of the inferred ast.
    * External modules using a __getattr__...
    
    ***
    
    --
    PiperOrigin-RevId: 154839974
    MOS_MIGRATED_REVID=154839974

[33mcommit c694317e225238b030365fcba4f3f2661878ca68[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Tue May 2 15:05:38 2017 +0000

    Use LookupExternalTypes during unpickle.
    
    Change unpickling code to use LookupExternalTypes in all cases instead of special casing all the special cases we know about.
    This is needed as we discover more and more special cases, in which the AST is structurally modified during dependency resolution in ways which can not be predicted during inference. This includes
    * The type of external dependencies changing between inference and loading of the inferred ast.
    * External modules using a __getattr__ -> Any rule which was not known at inference time.
    
    The change will have some performance impact, as one iteration over the AST will be needed. Due to the change in the LookupExternalTypes Visitor this iteration will in most cases not structurally modify the AST.
    
    --
    PiperOrigin-RevId: 154832228
    MOS_MIGRATED_REVID=154832228

[33mcommit 6c8f0dba5168608b07b47e0f3f1fbd494415fb7c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon May 1 22:36:14 2017 +0000

    Remove "reachable_backwards".
    
    --
    PiperOrigin-RevId: 154770326
    MOS_MIGRATED_REVID=154770326

[33mcommit 3e0cb45795908d6fbfdab4516cf25ccd7d182d8b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon May 1 22:28:53 2017 +0000

    Fix Snapshot metric construction.
    
    If snapshots aren't enabled, we need to make sure that the constructor
    arguments passed via get_metric() match the actual constructor.
    
    --
    PiperOrigin-RevId: 154769339
    MOS_MIGRATED_REVID=154769339

[33mcommit 65c4cfdfb74d502b5c51f5a77798c74f2cf88799[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon May 1 21:41:41 2017 +0000

    For log level 5, also log the line numbers of the current call stack.
    
    --
    PiperOrigin-RevId: 154762679
    MOS_MIGRATED_REVID=154762679

[33mcommit 4683e89a7e1ada2ce193104135968ce2a773ccfb[m
Author: Teddy Sudol <tsudol@google.com>
Date:   Mon May 1 21:07:15 2017 +0000

    Add memory snapshot metric to Pytype.
    
    To enable memory snapshots, _GENERATE_METRICS in pytype.bzl must be set to
    True and Pytype must be built with python-mode=unstable, at least until
    tracemalloc is accepted into the main Python 2.7 branch.
    
    This CL adds the --memory-snapshots command line option to Pytype. This option
    is used to enable memory snapshots in a particular Pytype run.
    
    --
    PiperOrigin-RevId: 154757636
    MOS_MIGRATED_REVID=154757636

[33mcommit 4d1d7aa647660185cce2db491fecd0b93796dc30[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon May 1 18:00:53 2017 +0000

    Add mypy_extensions.pytd.
    
    This is needed for typeshed's sys.pyi.
    
    --
    PiperOrigin-RevId: 154733464
    MOS_MIGRATED_REVID=154733464

[33mcommit f510671311ba2e35ef00344cb7ea7f44ff0f1403[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon May 1 17:40:07 2017 +0000

    Allow to ignore an import by putting a '# type: ignore' after it.
    
    --
    PiperOrigin-RevId: 154730608
    MOS_MIGRATED_REVID=154730608

[33mcommit 8a4a3e01af74480cd62acb8daa0e2c9700dadf09[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon May 1 16:17:11 2017 +0000

    Get rid of sys.pytd.
    
    Let's use the typeshed definition instead.
    
    --
    PiperOrigin-RevId: 154722009
    MOS_MIGRATED_REVID=154722009

[33mcommit 3c74b4880f037a1739e1864e3406af536290c677[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 28 20:33:29 2017 +0000

    Add a case for TypeParameterInstance in _match_type_against_type.
    
    --
    PiperOrigin-RevId: 154576160
    MOS_MIGRATED_REVID=154576160

[33mcommit 14f17fb14a35e1304f6dd2929a85adbacf6e7626[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 28 20:31:10 2017 +0000

    Remove the "subst" argument to bad_matches().
    
    My previous change introduced a bug by overwriting "subst" with None
    when a bad match was found. (Our tests didn't catch this because the
    error only shows up when we iterate through the views in a particular
    order.) Since bad_matches is never called with the "subst" argument, we can
    just remove it.
    
    --
    PiperOrigin-RevId: 154575843
    MOS_MIGRATED_REVID=154575843

[33mcommit e9cd5cf4dc84d1609ae6a41dc0412b47bb4320ff[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 28 18:04:46 2017 +0000

    Catch BadTypeParameterSubstitution in bad_matches().
    
    --
    PiperOrigin-RevId: 154559112
    MOS_MIGRATED_REVID=154559112

[33mcommit 4fbbfee3b1b65c0ef2f8277b8146394ec855d5d6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 28 02:01:43 2017 +0000

    Check arguments when calling a Callable instance.
    
    Adds a slot to abstract.Callable for __call__ so that we can check the
    argument length and types. Only positional arguments are allowed.
    
    Fixes a bug where _enforce_common_superclass considered, e.g., float and
    str as having a common superclass because they both inherit from Generic.
    
    Factors out the snippet to get a name for an unnamed positional argument
    ("_" + str(i)) into a helper function in function.py.
    
    Changes the return type of Callable in typing.pytd from Any to _RET.
    
    --
    PiperOrigin-RevId: 154499190
    MOS_MIGRATED_REVID=154499190

[33mcommit 5b21697b2b815dabe5021d9d2bddbd786ffe7b18[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 27 21:00:23 2017 +0000

    Fix the CombineContainers optimization's handling of CallableType.
    
    --
    PiperOrigin-RevId: 154466179
    MOS_MIGRATED_REVID=154466179

[33mcommit ecfbf5e9e66338839c390fa7e7eb4af9cf86912e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 27 20:43:19 2017 +0000

    Handle TypeParameterInstance better when matching a function against Callable.
    
    Deals with the case when TypeParameterInstance is matched against a
    TypeParameter; we require the two parameters to match exactly so that we can
    treat argument and return types identically in this case.
    
    Puts the parameter name in the message for TypeParameterError to make
    debugging easier.
    
    --
    PiperOrigin-RevId: 154463891
    MOS_MIGRATED_REVID=154463891

[33mcommit 149d572e4196f759731d611d4e93cd8a936dff26[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Apr 27 20:42:21 2017 +0000

    Don't use approximate if-splitting solving for --strict-attr-checking.
    
    This isn't using the best way to propage the option, based on the hope that
    we'll soon get rid of both APPROXIMATE and strict-attr-checking again. (Make
    them default to False and True, respectively)
    
    --
    PiperOrigin-RevId: 154463743
    MOS_MIGRATED_REVID=154463743

[33mcommit 6d89429a14cb962a71692509477910b815105a82[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 27 17:48:16 2017 +0000

    Make matcher.py's _instantiate_and_match deterministic.
    
    Previously, the result depended on the order in which the views were
    computed, so when the value of a type parameter is, say, Optional[str],
    we sometimes got str for the substitution, other times None.
    
    --
    PiperOrigin-RevId: 154441518
    MOS_MIGRATED_REVID=154441518

[33mcommit 1d1144e2da30f657f1c414d4c3d64fbf646d5805[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 27 17:39:57 2017 +0000

    Implement matching of Type[C] against Callable.
    
    Also tweaks matcher.py to match against every option of a union, so that
    all type parameters are filled in when they're supposed to.
    
    --
    PiperOrigin-RevId: 154440290
    MOS_MIGRATED_REVID=154440290

[33mcommit 2e1d41eeca3d216bc7a2269c20ded15f0f99f4fd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 27 17:36:08 2017 +0000

    Finish matching of Callable instances against Callable.
    
    Checks argument length and argument types.
    Undoes a previous change that made abstract.Instance instantiate individual
    argument types for Callable: I anticipated that they would be needed for
    matching, which turned out to be wrong. Also makes a small change to output.py
    so that Callable instances continue being printed correctly in error messages.
    
    --
    PiperOrigin-RevId: 154439811
    MOS_MIGRATED_REVID=154439811

[33mcommit 4ebd2315f9e9b46da97c5aa1f9cd483a71463224[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Apr 27 17:31:40 2017 +0000

    Fix tests broken by new typeshed.
    
    Parsing pytree.py was expecting two import-errors for modules that now exist
    in typeshed.
    
    --
    PiperOrigin-RevId: 154439224
    MOS_MIGRATED_REVID=154439224

[33mcommit 66829e35576975ed77215e2446cc0900025938a2[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Thu Apr 27 14:03:33 2017 +0000

    Make NamedTuple parsing independent of backticks.
    
    In PYI this transforms:
    def inspect_func_args(fn) -> Union[inspect.`ArgSpec`, Tuple[list, Any, Any, Any]]: ...
    to:
    def inspect_func_args(fn) -> Union[inspect.`~PYTYPE_GENERATED_ArgSpec~0`, Tuple[list, Any, Any, Any]]: ...
    
    Notice that the backticks in the new PYI are inserted by the PrintVisitor and not the Parser.
    
    This
    * Fixes a problem during deserialization, which happens as the serialization code assumes that names are not modified during parsing, while the coupling between NamedTuples and backtick removal modified names during parsing, by removing the backticks.
    * Makes the dedup code work, before it was failing because the no Alias for the deduped name without backticks would exist.
    * Improves PYI readability by clearly marking PYI that will only work in PYTYPE
    * Improves PYTYPE code by decoupling the NamedTuple code from backtick removal code in the parser.
    
    --
    PiperOrigin-RevId: 154418269
    MOS_MIGRATED_REVID=154418269

[33mcommit 3880ba43239d0cdb74e9f432a22fe728b57c50fd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 26 18:11:34 2017 +0000

    Check return types for matching a Callable instance against a Callable.
    
    Also fixes a bug in our printing of Callable instances.
    
    --
    PiperOrigin-RevId: 154319444
    MOS_MIGRATED_REVID=154319444

[33mcommit d66202b6f2c49f427f6fcf1223b72be4168817c4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 26 17:41:38 2017 +0000

    Use annotations when converting BoundFunction and PyTDFunction to Callable.
    
    Also moves get_signatures from matcher.py to abstract.py so that output.py can
    use it to get signatures when converting functions to Callable objects.
    
    --
    PiperOrigin-RevId: 154314948
    MOS_MIGRATED_REVID=154314948

[33mcommit 181b0b5a85054a1284e5e349a92159417ed9838c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 26 17:33:29 2017 +0000

    Use annotations when printing an InterpreterFunction as a Callable.
    
    Adds a method for turning a function.Signature into an abstract.Callable,
    which is used both for outputting pyi and for printing error messages.
    
    --
    PiperOrigin-RevId: 154313820
    MOS_MIGRATED_REVID=154313820

[33mcommit 594258d2f66d0790577bb94b3f7266b4bd7b2778[m
Author: Martin DeMello <mdemello@google.com>
Date:   Tue Apr 25 20:05:52 2017 +0000

    Add new matrix multiplication opcodes.
    
    --
    PiperOrigin-RevId: 154209945
    MOS_MIGRATED_REVID=154209945

[33mcommit d678aab0c59159edef83883d1d7613001715eb7b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 25 20:02:06 2017 +0000

    Remove the requirement that pytd.CallableType has to have at least two params.
    
    I'm not sure why I thought putting in a "nothing" placeholder when there are no
    arguments was a good idea.
    
    Simplifies some code by removing this requirement.
    Stops (incorrectly) simplifying TupleType and CallableType in
    SimplifyContainers; the parameter length is meaningful even when all of the
    parameters are Any.
    
    --
    PiperOrigin-RevId: 154209434
    MOS_MIGRATED_REVID=154209434

[33mcommit 1e53e5c32e40ce28cf009a461ad38a8d708151ff[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 25 00:36:19 2017 +0000

    Support matching InterpreterFunction against Callable.
    
    Completes the TODO in matcher.py for InterpreterFunction vs Callable.
    
    Stops allowing specifying the type of "self" when matching a BoundFunction
    against a Callable, since the function won't actually accept a "self" argument.
    
    Does matching even when an annotation doesn't exist, so that type parameters
    are filled in properly.
    
    --
    PiperOrigin-RevId: 154121665
    MOS_MIGRATED_REVID=154121665

[33mcommit 0fd88bcefac0f376c0573d6ebbc048c7cd523fad[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 24 23:47:11 2017 +0000

    Check argument types in the abstract matcher.
    
    Makes matcher.py check argument types when matching a function against
    Callable. We flip the actual and expected argument types like we did in
    type_match.py, but we have to flip them again in order to collect type
    parameter substitutions properly.
    
    Adds a BadTypeParameterSubstitution exception that we use to get the right
    expected types for type parameters - before, we did this by saving the previous
    "subst" in compute_subst, but that doesn't work when the same type parameter
    appears twice in one annotation (e.g., def f(x: Callable[[T], T])).
    
    --
    PiperOrigin-RevId: 154116067
    MOS_MIGRATED_REVID=154116067

[33mcommit 760399144a7dc6b9bd9784caf639c2c674e80a89[m
Author: Martin DeMello <mdemello@google.com>
Date:   Mon Apr 24 20:14:02 2017 +0000

    Add new magic numbers from python 3.5 and 3.6
    
    --
    PiperOrigin-RevId: 154086984
    MOS_MIGRATED_REVID=154086984

[33mcommit d51b9858fe18f4b163704b343504703445f56b8f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 24 19:50:41 2017 +0000

    Add another _convert function to matcher_test.
    
    Adds another helper function for conversion from pytd to abstract values
    so that we don't have to call _parse_and_lookup and then constant_to_value
    every time to create a PyTDFunction for testing.
    
    Also makes as_instance an optional argument.
    
    --
    PiperOrigin-RevId: 154084121
    MOS_MIGRATED_REVID=154084121

[33mcommit 391f392a1658bdbfd06007b8b27e4937291ad860[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 24 16:01:08 2017 +0000

    Make the abstract matcher check argument length for Callable.
    
    Matching fails if the function has too many required arguments (e.g.,
    def f(x): ... against Callable[[], Any]) or not enough allowed
    arguments (e.g., def f(x, y=None): ... against Callable[[int, int, int], Any]).
    
    For a BoundFunction, specifying the type of "self" in the Callable is optional.
    
    --
    PiperOrigin-RevId: 154054739
    MOS_MIGRATED_REVID=154054739

[33mcommit 3a77efe35b991ac1cb1a440cfa6d237d9a8901cf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 24 15:52:34 2017 +0000

    Have TypeParameterInstance store the abstract version of its parameter.
    
    It used to be simpler to store the pytd.TypeParameter, but it makes
    sense to switch to the abstract.TypeParameter now.
    
    --
    PiperOrigin-RevId: 154054017
    MOS_MIGRATED_REVID=154054017

[33mcommit ac7df8d2b1225d9989f4b940aaf040c3cabb8b34[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 21 23:57:09 2017 +0000

    Don't bind imported functions to InterpreterClass objects.
    
    --
    PiperOrigin-RevId: 153887866
    MOS_MIGRATED_REVID=153887866

[33mcommit 6cd792562f584ee42c53165224f305c6a1d80139[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 21 22:12:06 2017 +0000

    Get rid of super-error and report wrong-arg-count instead.
    
    --
    PiperOrigin-RevId: 153877191
    MOS_MIGRATED_REVID=153877191

[33mcommit 4ad5a5e6f63bc93fbb2ecc352aa9d633947a0b96[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 21 03:43:30 2017 +0000

    Implement matching of return types for PyTDFunction.
    
    Adds some of the infrastructure needed to match functions
    against abstract.Callable and does one of the simplest pieces
    (matching the return type for a PyTDFunction).
    
    We still need to do matching for arguments, InterpreterFunction,
    and BoundFunction, as well as print something better than a
    plain "Callable" in error messages.
    
    --
    PiperOrigin-RevId: 153790077
    MOS_MIGRATED_REVID=153790077

[33mcommit 8b9272cc2952de1abe062839b1890c8a312fdce2[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Apr 20 23:17:02 2017 +0000

    Implement clear() in set and dict. Add a skipped test.
    
    --
    PiperOrigin-RevId: 153770916
    MOS_MIGRATED_REVID=153770916

[33mcommit b1566bc3e31fcbfd1ca7bf4e51515526c3938c07[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Apr 20 23:11:12 2017 +0000

    Fix _retrieve_attr in vm.py. (Make it take a node, not a state)
    
    --
    PiperOrigin-RevId: 153770257
    MOS_MIGRATED_REVID=153770257

[33mcommit 2925de659588151911d84a8db2ce68147bb0159b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 20 22:53:00 2017 +0000

    Don't crash on an attempt to call TupleClass.__getitem__.
    
    Prevents the crash by checking whether valself is None before adding
    it to a source set in HasSlots.get_special_attributes.
    
    We still don't do the right thing (report an error), but generating
    silly results for silly code is better than face-planting.
    
    --
    PiperOrigin-RevId: 153768023
    MOS_MIGRATED_REVID=153768023

[33mcommit baad9c500623c0c9acb308f49ef561a393273f55[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Apr 20 22:48:07 2017 +0000

    Make _retrieve_attr take a node, not a state.
    
    For consistency. All our methods either take and receive a state,
    or take and receive a node.
    
    --
    PiperOrigin-RevId: 153767398
    MOS_MIGRATED_REVID=153767398

[33mcommit 59ba0e76f70cfeeb17d76a6a1bd67018ef60e584[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 20 22:20:54 2017 +0000

    Convert pytd.CallableType to abstract.Callable.
    
    Completes the TODOs in convert.py to use the parameters when
    converting pytd.CallableType.
    
    Fixes a bug in parsing Callable (where Callable[[<args>], ...] was
    treated as a homogeneous container) that came up during test writing.
    
    --
    PiperOrigin-RevId: 153764079
    MOS_MIGRATED_REVID=153764079

[33mcommit 16849fb663caaa66af20e038152181e0271801c4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 20 21:10:24 2017 +0000

    Move our custom implementation of tuple.__getitem__ from Tuple to TupleClass.
    
    Moves getitem_slot from Tuple to TupleClass so that instances of subclasses
    of tuple (namely, namedtuple) get to use it.
    
    tuple_type and attribute_handler have been moved around because the creation
    of tuple_type now requires the attribute handler to exist (for set_slot).
    
    Adds tuple_length attributes to Tuple and TupleClass so we don't have to keep
    calling len(...).
    
    --
    PiperOrigin-RevId: 153754795
    MOS_MIGRATED_REVID=153754795

[33mcommit f28ad4c3a1aff8b0e7994cfacdd0a015674e1960[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Thu Apr 20 12:25:12 2017 +0000

    Add a Visitor to replace statically known module references with Any references.
    
    --
    PiperOrigin-RevId: 153698636
    MOS_MIGRATED_REVID=153698636

[33mcommit 9a5d740114ae3896b1c486119817d48a13bd105b[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Thu Apr 20 08:55:29 2017 +0000

    Add functionality to generate a pickled ast representation during inference.
    
    This will solve some runtime overhead, as the dependencies are already loaded during inference and can be reused.
    This also adds an option to read the generated pyi file and compare it to the ast generated for pickling. This option allows for easier debugging of issues in the pickling code, as failures can be caught at saving time instead of loading time.
    
    --
    PiperOrigin-RevId: 153685750
    MOS_MIGRATED_REVID=153685750

[33mcommit a27b60091fdd4e1d28e0547d108f335f601cae11[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 20 01:14:29 2017 +0000

    Implement matching for pytd.CallableType.
    
    Implements matching amongst GenericType(Callable), CallableType, and
    GenericType(Type).
    
    Adds "args" and "ret" properties to CallableType to make it easier to
    get the argument and return types for matching.
    
    Moves the computation of t1_parameters and t2_parameters in
    match_Generic_against_Generic into its own method, since all the
    nested branching was getting messy.
    
    --
    PiperOrigin-RevId: 153661034
    MOS_MIGRATED_REVID=153661034

[33mcommit e6e6c6712fdaebfc8003a7ee4eb2be27a8ae67a0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 20 00:26:13 2017 +0000

    Merge get_special_attribute and load_special_attribute.
    
    Merges SimpleAbstractValue.load_special_attribute and
    AtomicAbstractValue.get_special_attribute. Changes the other
    get_special_attribute definitions to do a super() call, which
    requires a little special handling of mix-ins.
    
    --
    PiperOrigin-RevId: 153656523
    MOS_MIGRATED_REVID=153656523

[33mcommit bc142bd79082b4e3ace111a48826d32a636febc8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 19 19:04:36 2017 +0000

    Remove restriction that HasSlots can only be added to SimpleAbstractValue.
    
    The reason for the SimpleAbstractValue check in HasSlots.init_mixin was that
    set_slot was using get_instance_attribute, which requires a
    SimpleAbstractValue. The use of get_instance_attribute instead of
    get_attribute was due to the latter calling get_special_attribute (which
    would return the slot we're in the process of setting, introducing an
    infinite loop). This issue was resolved by simply moving the get_attribute
    call to before the slot is set.
    
    --
    PiperOrigin-RevId: 153616128
    MOS_MIGRATED_REVID=153616128

[33mcommit ddfc6f1d5a42c78e4996a016deb6d4f8297f3647[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 18 23:16:14 2017 +0000

    Call optimize.Optimize() on pytd types in error messages.
    
    --
    PiperOrigin-RevId: 153525604
    MOS_MIGRATED_REVID=153525604

[33mcommit 0125bdbd90a1e214faef2a5b652d7066c610a157[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Apr 18 18:47:30 2017 +0000

    xrange is a Sequence, not just a Sized+Iterable.
    
    Also, remove rangeiterator.
    
    --
    PiperOrigin-RevId: 153489850
    MOS_MIGRATED_REVID=153489850

[33mcommit e920ddd285c383add75fd8566331bf6a73055538[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Apr 18 18:45:03 2017 +0000

    Be more aggressive about reporting attribute errors.
    
    --
    PiperOrigin-RevId: 153489517
    MOS_MIGRATED_REVID=153489517

[33mcommit bf456f05943cccb5c85c12a8ccceaccce351c11d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 18 16:34:36 2017 +0000

    Don't create unknowns for return values with unsubstituted params.
    
    Instead of creating an unknown, we set params without substitutions
    to Empty. This fixes an odd bug where, when a decorator returns a
    type with an unsubstituted type parameter, a decorated method on a
    class turns into an unknown, causing us to trace its calls and use the
    call traces to generate a (possibly silly) signature.
    
    --
    PiperOrigin-RevId: 153471524
    MOS_MIGRATED_REVID=153471524

[33mcommit 6dd0542794103e7800e56fae5cb27099186ae64a[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Tue Apr 18 15:26:50 2017 +0000

    Disable a wrong "wrong-arg-count" warning
    
    opcodes.py generates an error in unstable (I have not tested the behavior in release),
    
    The error is:
    File "opcodes.py", line 1023, in _dis: Function BREAK_LOOP.__init__ expects 3 arg(s), got 5 [wrong-arg-count]
      Expected: (self, index, line)
      Actually passed: (self, index, line, _, _)
    
    This is not correct, as the call is guarded by
    "elif cls.FLAGS & HAS_ARGUMENT"
    which will ensure that cls is of type OpCodeWithArgs, which takes five arguments.
    
    --
    PiperOrigin-RevId: 153464838
    MOS_MIGRATED_REVID=153464838

[33mcommit d226603299f986dc6b36c1ec7c18580f8c756aa6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 18 03:41:09 2017 +0000

    Take parameters into account when converting Callable to CallableType.
    
    --
    PiperOrigin-RevId: 153423458
    MOS_MIGRATED_REVID=153423458

[33mcommit 32a3ea5161aec488c527c09ef236cbfda504931d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 18 03:35:32 2017 +0000

    Add a pytd.CallableType.
    
    Parses Callable into a pytd.CallableType object.
    Adds support for printing CallableType, but convert.py turns
    CallableType into a plain PyTDClass(Callable) for now, so we
    won't print Callable parameters just yet.
    
    --
    PiperOrigin-RevId: 153423155
    MOS_MIGRATED_REVID=153423155

[33mcommit 680fb9dbf4259ff493700a8092d15c8625344a58[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Apr 17 23:49:11 2017 +0000

    Run HasCombination([x]) before complaining about a missing x.__iter__.
    
    --
    PiperOrigin-RevId: 153406524
    MOS_MIGRATED_REVID=153406524

[33mcommit f775d81d481dd53a8d551566db1953a6537dd333[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 17 21:54:54 2017 +0000

    Generate 'Tuple[nothing, ...]' rather than 'tuple' for an empty tuple in pyi.
    
    We need to be able to recognize '[]' for Callable.
    
    --
    PiperOrigin-RevId: 153392321
    MOS_MIGRATED_REVID=153392321

[33mcommit 75a1674d7b64bec87377c1b00860838fecced068[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 17 20:22:36 2017 +0000

    Do better printing of List, Dict, and Tuple in error messages.
    
    --
    PiperOrigin-RevId: 153380109
    MOS_MIGRATED_REVID=153380109

[33mcommit 91d69ceff2eaa5d6af31b8d97a31677afb106106[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 17 18:12:47 2017 +0000

    Add an abstract.Callable class for Callable annotations with argument lists.
    
    --
    PiperOrigin-RevId: 153364144
    MOS_MIGRATED_REVID=153364144

[33mcommit 1ebdf8817962ee0f13352c1d32fe6f0e4fb40513[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 17 17:26:28 2017 +0000

    Check for errors in the parameters passed to Callable.
    
    Catch errors such as giving a single type instead of
    a list of types for the _ARGS parameter. We don't yet
    do any useful matching or printing of the parameters.
    
    --
    PiperOrigin-RevId: 153357932
    MOS_MIGRATED_REVID=153357932

[33mcommit 9e090af8c0fd37f8fdf734b0ca070ce0eaf3d654[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 17 17:12:01 2017 +0000

    Do some refactoring involving typing containers.
    
    Some refactoring that will make implementing typing.Callable easier:
    * Make _maybe_extract_tuple a static method in AnnotationClass.
    * Convert all ellipsis instances to unsolvable at the same time,
      rather than leaving one for _build_value to deal with; instead,
      pass _build_value an ends_with_ellipsis argument.
    * Pull out the logic for getting the parameterized class's
      template, parameter values, and type into a _get_value_info
      method that subclasses of AnnotationContainer can overload.
    * Move the code in build_container into a TypingContainer class
      that Tuple and Callable inherit from.
    
    --
    PiperOrigin-RevId: 153356059
    MOS_MIGRATED_REVID=153356059

[33mcommit 623fe27bab835d805233973d3afebb85fb629bda[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 14 21:07:00 2017 +0000

    Make printing of PythonConstants prettier.
    
    --
    PiperOrigin-RevId: 153204562
    MOS_MIGRATED_REVID=153204562

[33mcommit d8033391eac2e0887647276021434f257886a9c2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 14 20:56:17 2017 +0000

    Add an abstract.List that remembers the initial list contents.
    
    Similar to abstract.Tuple, abstract.List stores the contents
    that build_list gives it. Since lists are mutable, abstract.List
    has a could_contain_anything attribute that it sets to True
    when merge_type_parameter is called, to indicate that the original
    contents are no longer usable.
    
    This change is motivated by typing.Callable's need to know the
    positions of the types in the list of argument types that it gets.
    
    --
    PiperOrigin-RevId: 153203247
    MOS_MIGRATED_REVID=153203247

[33mcommit 25e7e736bccecceaa9d4955fb5d1c55b31559143[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 14 17:23:16 2017 +0000

    Warn about disable/ignore directives on their own line in the middle of a file.
    
    --
    PiperOrigin-RevId: 153179810
    MOS_MIGRATED_REVID=153179810

[33mcommit 09c5709326aea743cb06b9c4517fa0089a9a61b0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 13 23:28:59 2017 +0000

    Handle type comments on values spanning multiple lines properly.
    
    --
    PiperOrigin-RevId: 153121503
    MOS_MIGRATED_REVID=153121503

[33mcommit 072197325a6608e8f6c9faf8c60585e7824c828a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Apr 13 20:53:01 2017 +0000

    Bring back install_requires in setup.py.
    
    See https://travis-ci.org/python/typeshed/jobs/221872253
    
    --
    PiperOrigin-RevId: 153101959
    MOS_MIGRATED_REVID=153101959

[33mcommit d1358642ee3e8bdc6a56aa40663009d843df8f6a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 13 20:48:43 2017 +0000

    Type-check the non-test files in pytype/pyc/.
    
    This subdirectory is relatively static (four months between the last two
    changes to it) and doesn't have too many dependencies on the rest of pytype,
    so it's a good starting point for type-checking.
    
    --
    PiperOrigin-RevId: 153101417
    MOS_MIGRATED_REVID=153101417

[33mcommit ceb35a642ea77057a5a8331374cfe813e62a5991[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Apr 13 19:57:33 2017 +0000

    Fix location of the Python 2 stdlib, in setup.py.
    
    --
    PiperOrigin-RevId: 153094720
    MOS_MIGRATED_REVID=153094720

[33mcommit 5cf36c1a78802f0b8ba1e0cc1b4508ae69dd2805[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 13 18:12:36 2017 +0000

    Make the definition of __builtin__.sum more precise.
    
    --
    PiperOrigin-RevId: 153081574
    MOS_MIGRATED_REVID=153081574

[33mcommit 4d8bd2b185e853343acec974c58c583c3d932502[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Apr 13 16:42:00 2017 -0400

    add missing 'install_requires' to setup.py

[33mcommit 74dabcac5e75d7386c5ab5e660c815505f28c212[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Apr 13 14:41:25 2017 -0400

    fix setup.py

[33mcommit 3748622c31fe54fa7542241ae043526ccc71c236[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 13 17:32:18 2017 +0000

    Remove types.pytd.
    
    --
    PiperOrigin-RevId: 153075939
    MOS_MIGRATED_REVID=153075939

[33mcommit 20471544325a8850da33002129ab2d128edb1ad2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 13 16:58:53 2017 +0000

    Set logging level correctly when a handler is already present.
    
    --
    PiperOrigin-RevId: 153071725
    MOS_MIGRATED_REVID=153071725

[33mcommit d6e8b280c62ef64afdc198c764dc610859ab9c9d[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Apr 12 23:57:57 2017 +0000

    Upgrade typeshed to 51959f09c7e658a299a092150833ad0fa5fd0f5f
    
    --
    PiperOrigin-RevId: 153006377
    MOS_MIGRATED_REVID=153006377

[33mcommit faa6524b1e3ca29aefec5c60480f005dd12e8063[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 12 23:44:36 2017 +0000

    Allow aliases in class definitions in pyi.
    
    types.pyi does things like
      class A:
        x = ...  # type: int
        y = x
    
    --
    PiperOrigin-RevId: 153004902
    MOS_MIGRATED_REVID=153004902

[33mcommit 3a302dac32b38008a39af71d3d1135a128c861be[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 12 21:00:27 2017 +0000

    Do some cleanup on config.py, add tests.
    
    * Parse the actual arguments (i.e., 'input.py' or 'input.py:output.pyi')
      separately, rather than trying to shoe-horn them into option post-processing.
    * Store the value of --imports_info in Options.imports_map rather than
      Options.imports_info - we were setting both values but only using imports_map.
    * Check that --check and --output aren't both present.
    * Move a couple of checks involving generate_builtins and input from main.py
      into config.py.
    * Add tests for various option combinations to main_test.py.
    
    --
    PiperOrigin-RevId: 152983545
    MOS_MIGRATED_REVID=152983545

[33mcommit dae649895092679d2883916837d4c42e12535e62[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 12 17:46:34 2017 +0000

    Improve main_test.py's error messages.
    
    Improves the error messages printed by assertOutputStateMatches,
    assertHasErrors, and assertInferredPyiEquals. The error messages we get
    from main_test.py are rather unhelpful, especially the one for an unexpected
    crash, which is
    '<something very long and difficult to parse> is not False'.
    
    --
    PiperOrigin-RevId: 152957679
    MOS_MIGRATED_REVID=152957679

[33mcommit 1ee6e0fc3d464ac8cdfb531b9e03e6076d611c4f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 11 22:40:52 2017 +0000

    Turn abstract.Super into a PyTDClass.
    
    There were various things we couldn't do with abstract.Super
    (e.g., matching, getting its class); the problems are solved if we
    make it inherit from PyTDClass.
    
    --
    PiperOrigin-RevId: 152870729
    MOS_MIGRATED_REVID=152870729

[33mcommit 0c5a04458c11d75aff61aeabc18abca0bbcdc8d9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 11 22:03:42 2017 +0000

    Support tuples and unions of type parameters in class definitions in pyi.
    
    We previously handled definitions like
      class Foo(List[Tuple[_K, _V]]): ...
    in a silly incorrect way: since Tuple[_K, _V] is formal, we'd record
    "_T" as an alias to "tuple", which meant that we never found any
    substitutions for it.
    
    Instead, we'll instantiate tuples of type parameters using
    TypeParameterInstance. This requires adding a "container" argument to
    AtomicAbstractValue.instantiate so that each TypeParameterInstance knows
    what instance it belongs to, as well as tweaking matcher.py.
    
    --
    PiperOrigin-RevId: 152865805
    MOS_MIGRATED_REVID=152865805

[33mcommit a115b3a8d3b04405ffdef3127d7e7bb122633ea8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 11 16:39:38 2017 +0000

    Check a generator's yield type in byte_YIELD_VALUE.
    
    Previously, we were checking the yield type in
    byte_RETURN_VALUE, which was causing the type to
    not be checked in some cases. Moves the checking
    logic to byte_YIELD_VALUE.
    
    --
    PiperOrigin-RevId: 152822244
    MOS_MIGRATED_REVID=152822244

[33mcommit 67b05faad89b0ecc8b6d840a131a4050873f34c0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 11 16:34:21 2017 +0000

    Get rid of the --abort-on-complex option, which is no longer used.
    
    --
    PiperOrigin-RevId: 152821651
    MOS_MIGRATED_REVID=152821651

[33mcommit 610cab9653dff3de691923b13da26d3b955ab186[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 10 23:24:30 2017 +0000

    Fix a handful of small bugs found by trying to run pytype on itself.
    
    For my own amusement, I ran pytype on itself, and uncovered a few bugs.
    Let me know if you want these split into separate changes.
    
    * Use self.get_class() instead of self.cls to load the "__class__"
      attribute, so that we can access __class__ on classes.
    * Define get_class() on Super.
    * Remove one (non-existent) keyword argument, fix the spelling of another
      in a call to distutils.core.setup in setup.py.
    * Call logging.addLevelName rather than directly patching logging._levelNames.
    * Add the "message" attribute to BaseException.
    * Handle name clashes involving TypeVar properly.
    
    --
    PiperOrigin-RevId: 152750520
    MOS_MIGRATED_REVID=152750520

[33mcommit e8964f3ee4892150c822a6d53234e553539ac678[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Apr 10 21:40:43 2017 +0000

    Add missing file.
    
    --
    PiperOrigin-RevId: 152736771
    MOS_MIGRATED_REVID=152736771

[33mcommit 89ee5f72dcfbcf86a8c5b292add2bf41ae89902b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 10 21:27:13 2017 +0000

    Put the current line number in the names of cfg nodes.
    
    Sets the names of nodes to the current line number in vm.py and state.py.
    Also adds the line number to Opcode.__str__ to make it easier to match
    nodes to opcodes when comparing the debug output to the cfg, since the node
    name can't be too long (or we run into problems with rendering the graph).
    
    --
    PiperOrigin-RevId: 152734762
    MOS_MIGRATED_REVID=152734762

[33mcommit 6519f911f581d85d9c1ce260e5769c21d328ecc0[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Apr 10 20:27:12 2017 +0000

    Optionally display a "target name", whenever we encounter an import-error.
    
    --
    PiperOrigin-RevId: 152726289
    MOS_MIGRATED_REVID=152726289

[33mcommit b5d79e6e449cf6454efb8238f93765a4c72479d4[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Apr 10 19:15:40 2017 +0000

    Analyze all functions, even if decorated with an unknown decorator.
    
    --
    PiperOrigin-RevId: 152717621
    MOS_MIGRATED_REVID=152717621

[33mcommit ac5e0a7c81f33e0fb8ec95b3cdb1f8db240cae5c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Apr 10 16:18:58 2017 +0000

    Allow to call AddNamePrefix() visitor after resolving.
    
    --
    PiperOrigin-RevId: 152694927
    MOS_MIGRATED_REVID=152694927

[33mcommit 2183d3282c78e8841a51f6a13c4778ed38189402[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Apr 8 02:33:05 2017 +0000

    Delay logging key_error until we're sure it's an error.
    
    Changes Dict.getitem_slot to raise a DictKeyMissing error instead of
    logging key error so that when dict is one of multiple variable
    bindings, the error is not logged prematurely.
    
    A side effect of this change is that we sometimes log one of the
    FailedFunctionCall errors (e.g., wrong-arg-types) when we previously
    would have logged unsupported-operands.
    
    --
    PiperOrigin-RevId: 152570626
    MOS_MIGRATED_REVID=152570626

[33mcommit d27f26eca2e80e91399a779cce8d50642441b3dd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Apr 8 01:49:40 2017 +0000

    Add unicode as a possible argument type to some typing.Match methods.
    
    --
    PiperOrigin-RevId: 152568721
    MOS_MIGRATED_REVID=152568721

[33mcommit a6fe754f5a05c124c1d7017262cfa5c48bce8a2c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 7 23:58:47 2017 +0000

    Improve the definition of typing.cast.
    
    Makes the definition of typing.cast more precise. Also runs
    _process_one_annotation on the first argument to do all the
    appropriate checks and conversions. Suggests using a type
    comment when a forward reference is detected.
    
    --
    PiperOrigin-RevId: 152560864
    MOS_MIGRATED_REVID=152560864

[33mcommit 22b9485b03f9caf9ffb64f14bff551e091f99dec[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Apr 7 23:34:18 2017 +0000

    When calling the solver, pass new-style classes, not old-style classes.
    
    --
    PiperOrigin-RevId: 152558609
    MOS_MIGRATED_REVID=152558609

[33mcommit c2d244f05de60ed02d77b3078dfbd59901858c17[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Apr 7 23:31:55 2017 +0000

    Get rid of HomogeneousContainerType.
    
    --
    PiperOrigin-RevId: 152558339
    MOS_MIGRATED_REVID=152558339

[33mcommit cdb3cf209200da5d94e4e391f1259734a439ebc5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 7 22:01:44 2017 +0000

    Make the output of ambiguous_annotation deterministic by sorting the options.
    
    --
    PiperOrigin-RevId: 152547948
    MOS_MIGRATED_REVID=152547948

[33mcommit 2acbbb138283913daed2be0ae4df750372339038[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Apr 7 21:28:28 2017 +0000

    Allow to call AddNamePrefix afer AdjustTypeParameters.
    
    --
    PiperOrigin-RevId: 152543830
    MOS_MIGRATED_REVID=152543830

[33mcommit 4668768cb5e297babaa188ab8d04cdc16434450c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Apr 7 20:43:46 2017 +0000

    Simple visitor for setting class pointers to None.
    
    --
    PiperOrigin-RevId: 152538152
    MOS_MIGRATED_REVID=152538152

[33mcommit 27fae050744de2281331b7ae355d7b7802f45e48[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Apr 7 19:38:58 2017 +0000

    Allow custom descriptions in ascii_tree.
    
    --
    PiperOrigin-RevId: 152530729
    MOS_MIGRATED_REVID=152530729

[33mcommit db5f874a0e8874cc53b6cf1b3b75d05f94075949[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 7 19:17:04 2017 +0000

    Improve error messages regarding variables with multiple bindings.
    
    In annotations and type commments, we don't allow multiple bindings.
    We previously had misleading/inscrutable error messages in these cases:
    
    def f(x: int or str): ...  # "Invalid annotation 'Union[int, str]'": suggests
                               # that typing.Union is not allowed in annotations.
    def f(x: Tuple[int or str]): ...  # "Invalid annotation 'Tuple'": doesn't
                                      # highlight the problematic portion.
    x = ...  # int if __any_object__ else str  # "Cannot get atomic value <any>
                                               #  from variable": this is a
                                               #  debugging message meant only for
                                               #  internal use.
    def f(x):
      # type: (int or str) -> None  # Same debugging message as above.
      pass
    With this change, we print "int or str" for the invalid annotation in the first
    two cases, and use the message "Must be constant" in the third and fourth. (In
    those cases, the type comment is already printed verbatim, so we don't need to
    print it again.)
    
    Also sets a value to unsolvable if it has a bad type comment.
    
    --
    PiperOrigin-RevId: 152528515
    MOS_MIGRATED_REVID=152528515

[33mcommit 0bef8a98b9c3340c85c96e7537937133f02ce757[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Fri Apr 7 14:53:55 2017 +0000

    A StopWatch which supports being called recursively multiple times.
    
    --
    PiperOrigin-RevId: 152499687
    MOS_MIGRATED_REVID=152499687

[33mcommit 47007b42af9f8327de74dd1cca6905b1dd09551c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Apr 7 01:25:18 2017 +0000

    Print a link to error class documentation when report_errors is True.
    
    --
    PiperOrigin-RevId: 152454796
    MOS_MIGRATED_REVID=152454796

[33mcommit 04f19f5a69df27ee94fd877330461c8d5c40aff7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 6 23:47:59 2017 +0000

    Remove the print_errors argument to process_one_file.
    
    This is a relic of pytype's removed capability for processing multiple files.
    
    --
    PiperOrigin-RevId: 152445689
    MOS_MIGRATED_REVID=152445689

[33mcommit 852fb8b9672f6d69db87c04ec3e6ab54389434ed[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Apr 6 16:51:15 2017 +0000

    Rollback of commit 553d25c6e76475ced050a4b6daf906c1ba0c3442.
    
    *** Reason for rollback ***
    
    Adding the link to every error message makes the output overly verbose. See the discussion in unknown commit.
    
    *** Original change description ***
    
    Add a documentation link to error messages.
    
    ***
    
    --
    PiperOrigin-RevId: 152392818
    MOS_MIGRATED_REVID=152392818

[33mcommit afe22e5ab94231958ec36c5b73b7011456791a8b[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Thu Apr 6 16:01:47 2017 +0000

    RenameVisitor should rename the scope of TypeParameters.
    
    TypeParameters reference the local module name in node.scope and not in node.name. Therefore it needs to be changed there.
    
    --
    PiperOrigin-RevId: 152387590
    MOS_MIGRATED_REVID=152387590

[33mcommit 1484edab33137d047e52bf474d8efb88b90b8c6e[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Apr 5 20:51:12 2017 +0000

    Make "x in None" generate none-attr instead of unsupported-operands.
    
    --
    PiperOrigin-RevId: 152300603
    MOS_MIGRATED_REVID=152300603

[33mcommit 553d25c6e76475ced050a4b6daf906c1ba0c3442[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 5 20:37:22 2017 +0000

    Add a documentation link to error messages.
    
    --
    PiperOrigin-RevId: 152298712
    MOS_MIGRATED_REVID=152298712

[33mcommit 4c23d417e5ab0addf8ac04f6fc9040e0bf6be24c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Apr 5 17:44:58 2017 +0000

    Simplify, and fix some issues in, __builtin__.pytd
    
    Fix definition of zip() for one and two operands.
    Remove superfluous __eq__, __ne__, etc.
    Fix combinations of bytearray+unicode that don't actually work.
    
    --
    PiperOrigin-RevId: 152276398
    MOS_MIGRATED_REVID=152276398

[33mcommit 5b11c094419a28f5d782cafb80105d837de89c63[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 5 17:44:18 2017 +0000

    Add a suggestion for a type comment to none-attr messages.
    
    --
    PiperOrigin-RevId: 152276302
    MOS_MIGRATED_REVID=152276302

[33mcommit 1638fafcda2ace31dcf8e37d30abdcb63b796211[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Apr 5 08:11:05 2017 +0000

    Use AnyStr in __builtin__.filter.
    
    --
    PiperOrigin-RevId: 152230708
    MOS_MIGRATED_REVID=152230708

[33mcommit 5ca7c87d0f851942367eced733697ddfaf9cb189[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 4 23:50:06 2017 +0000

    Make collections.namedtuple accept unicode everywhere it accepts str.
    
    --
    PiperOrigin-RevId: 152198163
    MOS_MIGRATED_REVID=152198163

[33mcommit 3256db0cde5478775ca82d6bdf103497e2fd8357[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 4 23:00:14 2017 +0000

    Only allow using a TypeVar from __builtin__.pytd if it is imported.
    
    Logs a name error if byte_LOAD_NAME loads a type parameter from
    builtins (since that means the type parameter wasn't in locals or
    globals, and thus wasn't imported). Importing a TypeVar is still
    allowed - the names are now prefixed with underscores, which should
    be sufficient warning that they're not meant for public use.
    
    --
    PiperOrigin-RevId: 152192051
    MOS_MIGRATED_REVID=152192051

[33mcommit 163173f851a8b358cd930e7a85802fc0c40c9e59[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 4 22:45:34 2017 +0000

    Tweak the definition of str.__add__ to handle bytearray correctly.
    
    --
    PiperOrigin-RevId: 152190324
    MOS_MIGRATED_REVID=152190324

[33mcommit efccfde124eb477c4c47a8aa696af83f3ba7f790[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Apr 4 20:14:30 2017 +0000

    remove unused files and outdated TODOs
    
    --
    PiperOrigin-RevId: 152169960
    MOS_MIGRATED_REVID=152169960

[33mcommit d4a77e7795ce83d63e5844244f5141054c111fee[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 4 19:10:27 2017 +0000

    Make all __builtin__.pytd and typing.pytd TypeVars except AnyStr private.
    
    --
    PiperOrigin-RevId: 152161981
    MOS_MIGRATED_REVID=152161981

[33mcommit 97f92a3c13ce1a52e4396a0acfc8552426629756[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Apr 4 19:07:00 2017 +0000

    Fix a crash related to type parameter renaming.
    
    --
    PiperOrigin-RevId: 152161578
    MOS_MIGRATED_REVID=152161578

[33mcommit 6c6872afc39ffdcd734de61f58fc23da92183a5a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Apr 3 23:55:21 2017 +0000

    Make the solver remember which goals it already expanded.
    
    --
    PiperOrigin-RevId: 152076386
    MOS_MIGRATED_REVID=152076386

[33mcommit cff216141fe9513f4de6fd7e846a3ee3054c044a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Apr 3 22:23:13 2017 +0000

    Clarify an error message.
    
    Write
        Invalid type annotation 'state'
    instead of
        Invalid type annotation state
    .
    
    --
    PiperOrigin-RevId: 152065497
    MOS_MIGRATED_REVID=152065497

[33mcommit b355f0cbaaa2591bc661ac2c5a74b2a19dd6f855[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Apr 3 19:40:52 2017 +0000

    Apply https://github.com/google/pytype/pull/57
    
    --
    PiperOrigin-RevId: 152043875
    MOS_MIGRATED_REVID=152043875

[33mcommit e11205940c54aa7cb7e7fd7f1716ed13ff9d925e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 3 19:18:57 2017 +0000

    Don't try to convert pytd.ExternalFunction to an abstract value.
    
    Definitions in __builtin__.py are imported during the preload_builtins
    step, so if they're imported again by user code, we should supply the
    preloaded builtin rather than trying to convert the pytd value (which
    crashes pytype because an ExternalFunction instance has no signatures).
    
    --
    PiperOrigin-RevId: 152041272
    MOS_MIGRATED_REVID=152041272

[33mcommit 753ea4cd1d4df1daafbeb169ec01fdb9d186a97e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 3 17:06:49 2017 +0000

    Don't cache values that use non-root nodes.
    
    Remove the "node" argument to _constant_to_value so that we can't accidentally
    hide a node in a cached value. Instead, _constant_to_value takes a get_node
    function that returns the current node. Then constant_to_value can define
    get_node to set a need_node flag so that we know to return the value without
    caching it.
    
    --
    PiperOrigin-RevId: 152023011
    MOS_MIGRATED_REVID=152023011

[33mcommit aeaf3830b985be8c80766f06fb74acd32539ddea[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Apr 3 17:00:54 2017 +0000

    Change CreateTypeParametersFromUnknowns to also ignore call traces.
    
    --
    PiperOrigin-RevId: 152022181
    MOS_MIGRATED_REVID=152022181

[33mcommit cd8b9b5d4d3b2dfeedf5b86dccf9148e2bc67c65[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Apr 1 20:43:05 2017 +0000

    Remove the not-supported-yet error from TypeVar and importing TypeVar.
    
    --
    PiperOrigin-RevId: 151923491
    MOS_MIGRATED_REVID=151923491

[33mcommit c017d3ecbcaa22d430298937a89e0b149f69744d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Apr 1 20:34:28 2017 +0000

    Report errors for invalid/unsupported TypeVar use cases.
    
    * Report [not-supported-yet] for type parameters in type comments, e.g.,
        x = None  # type: T
      Eventually, we'll want to distinguish between bound and unbound type
      parameters and report errors only for unbound uses, but we don't even
      have inline Generic support yet, so that can wait.
    * Report [invalid-annotation] for unconstrainted type parameters that appear
      only once in a signature:
        def f() -> T: ...
    
    --
    PiperOrigin-RevId: 151923278
    MOS_MIGRATED_REVID=151923278

[33mcommit 6721a6b2a0927576487bf5a3714269294c625233[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Apr 1 20:27:30 2017 +0000

    Process the bound, covariant, and contravariant arguments to TypeVar.
    
    --
    PiperOrigin-RevId: 151923133
    MOS_MIGRATED_REVID=151923133

[33mcommit 1a151b259b772f13aea5f7afce754c193e8d46f5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 31 22:59:07 2017 +0000

    Remove the "node" argument to the abstract.Instance constructor.
    
    --
    PiperOrigin-RevId: 151879142
    MOS_MIGRATED_REVID=151879142

[33mcommit 5b08fc46024f5d7488c3999347ebf8134c043225[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Fri Mar 31 17:46:58 2017 +0000

    Add warning about untrusted pickled files.
    
    --
    PiperOrigin-RevId: 151840536
    MOS_MIGRATED_REVID=151840536

[33mcommit d3245d824e1777cc0e6c8c8fe72563f984560cdb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 31 00:20:31 2017 +0000

    Add a not-supported-yet error for creating generic classes in Python code.
    
    --
    PiperOrigin-RevId: 151771671
    MOS_MIGRATED_REVID=151771671

[33mcommit 83bea9d3562c220a6147280844997d26d56c4341[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 30 20:16:07 2017 +0000

    Set the filename appropriately when analyzing __builtin__.py.
    
    This bug's an odd one. For tests, the filename is None, so the
      op.code.co_filename == self.vm.filename
    check in apply_type_comment succeeds when we're preloading the
    builtins from __builtin__.py. Thus, we end up analyzing the
    builtins file but applying type comments from the test code.
    This is usually harmless, but __builtin__.py has a docstring
    that ends at line 4, so if the fourth line of the test code
    happens to have a type comment that uses names which __builtin__.py
    doesn't import, then we get baffling errors.
    
    (The test in test_typevar.py will be used for testing that we
    report errors for "# type: T".)
    
    --
    PiperOrigin-RevId: 151740791
    MOS_MIGRATED_REVID=151740791

[33mcommit e94cbd8ff8808dec2f89bb2b8d143c839d4e72fb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 30 16:38:32 2017 +0000

    Use _process_one_annotation to process type comments.
    
    --
    PiperOrigin-RevId: 151711621
    MOS_MIGRATED_REVID=151711621

[33mcommit e79b1b3d38ee7cf2c2bb30f0cb3c1c4afd819823[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 30 02:52:01 2017 +0000

    Type-check uses of type parameters that don't have constraints.
    
    --
    PiperOrigin-RevId: 151658065
    MOS_MIGRATED_REVID=151658065

[33mcommit 5b8352d897640e8d99a0d0ba2a6aa6e64f5e1be5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 30 02:46:58 2017 +0000

    Make float compatible with complex.
    
    See: https://www.python.org/dev/peps/pep-0484/#the-numeric-tower.
    This requires adding float->complex to pep484.COMPAT_MAP and modifying
    PrintVisitor to delete compatible builtins from unions in the right order.
    
    --
    PiperOrigin-RevId: 151657803
    MOS_MIGRATED_REVID=151657803

[33mcommit ca5833c03d61bdff4ae66e5742a0723e8d4f7e49[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 30 02:43:18 2017 +0000

    Call __init__ when a type from a type comment is initialized.
    
    --
    PiperOrigin-RevId: 151657650
    MOS_MIGRATED_REVID=151657650

[33mcommit 73d68c49bc61a88af436052bf651672f567dfe31[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 30 02:40:54 2017 +0000

    Allow type comments on byte_STORE_GLOBAL.
    
    --
    PiperOrigin-RevId: 151657525
    MOS_MIGRATED_REVID=151657525

[33mcommit ff78f13d5457aa44251d5a0ac9505ffb0dcb9b21[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 29 17:58:08 2017 +0000

    Improve our implementation of CMP_IN/CMP_NOT_IN.
    
    Changing CMP_EQ/CMP_NE made me realize that we could also do better
    with CMP_IN/CMP_NOT_IN.
    
    --
    PiperOrigin-RevId: 151596720
    MOS_MIGRATED_REVID=151596720

[33mcommit 36c76945d3cb01cab9370c484a4eb2e118d053aa[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Tue Mar 28 16:16:01 2017 +0000

    Read PYI ast information from pickled files.
    
    This change adds reading pickled AST information from .pyi.pickled files.
    This is considerably faster, compared to reading PYI information from ASCII and converting them to a usable format.
    
    --
    PiperOrigin-RevId: 151457298
    MOS_MIGRATED_REVID=151457298

[33mcommit cd5a38f33989273c138c605c665b2ce311169e5f[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Mar 28 14:02:09 2017 +0000

    Don't look into local files if we have an imports_map.
    
    --
    PiperOrigin-RevId: 151445008
    MOS_MIGRATED_REVID=151445008

[33mcommit 83a2c3c4aa6e17c566e397e706d2078c3c156e74[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Mar 28 13:58:40 2017 +0000

    New function utils.cd().
    
    --
    PiperOrigin-RevId: 151444713
    MOS_MIGRATED_REVID=151444713

[33mcommit aa7b4d178f5a72076dbb0efb376324c41085e798[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Mar 24 22:40:32 2017 +0000

    Ignore code inside "if not typing.TYPE_CHECKING" blocks.
    
    --
    PiperOrigin-RevId: 151181122
    MOS_MIGRATED_REVID=151181122

[33mcommit 22eb0d51471e56c4aed95daa2b800335097bdb71[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Mar 24 22:36:23 2017 +0000

    Allow to use a "type: ignore" after a function signature.
    
    See https://github.com/google/pytype/issues/53
    
    --
    PiperOrigin-RevId: 151180634
    MOS_MIGRATED_REVID=151180634

[33mcommit adf996487e744ad0b07ac5b0267c32ea54f2c544[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Mar 24 22:32:59 2017 +0000

    re.compile(...).sub(x, s) allows x to be a Callable.
    
    --
    PiperOrigin-RevId: 151180264
    MOS_MIGRATED_REVID=151180264

[33mcommit 461f807beb994173e40a672be45fd8bd9e6b3158[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 24 20:01:28 2017 +0000

    Do smarter evaluation of __eq__ on primitives, tuples, and dicts.
    
    --
    PiperOrigin-RevId: 151160345
    MOS_MIGRATED_REVID=151160345

[33mcommit aba02b5db9777e867cc74264921971a5e30b0e5f[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Mar 24 16:32:33 2017 +0000

    Don't allow AST nodes to evaluate to false.
    
    --
    PiperOrigin-RevId: 151134269
    MOS_MIGRATED_REVID=151134269

[33mcommit a7c758e35e1f466b98d3d176236bd377aaa32e26[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Mar 24 16:09:37 2017 +0000

    Treat trying to call 'None' as a none-attr.
    
    --
    PiperOrigin-RevId: 151132161
    MOS_MIGRATED_REVID=151132161

[33mcommit 376ef88b2293e14e6adf68970e569535de0ebd01[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 23 20:27:56 2017 +0000

    Check that all occurrences of a type param with constraints have the same type.
    
    --
    PiperOrigin-RevId: 151045781
    MOS_MIGRATED_REVID=151045781

[33mcommit 395409921d38849bc2de19f9769845266278b693[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 23 17:59:08 2017 +0000

    Do some cleanup on our pytd files.
    
    Removes pytd files that we no longer need; adds TODOs for ones that we can
    eventually remove; adds justification comments for ones that we need to keep.
    
    --
    PiperOrigin-RevId: 151025580
    MOS_MIGRATED_REVID=151025580

[33mcommit a1ec2da48f5b7c6707fc415624248be6e4fad183[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Thu Mar 23 17:21:01 2017 +0000

    Sort options.
    
    --
    PiperOrigin-RevId: 151019705
    MOS_MIGRATED_REVID=151019705

[33mcommit 23ded5cae9352ef41244a8397826b60284ecbe42[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Mar 22 23:56:56 2017 +0000

    Don't create new variables when merging two stacks.
    
    This fixes an if-splitting bug.
    
    --
    PiperOrigin-RevId: 150947328
    MOS_MIGRATED_REVID=150947328

[33mcommit 0d352bbeaea50f9c34c4edff80d42c7ed30b1110[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 22 22:46:48 2017 +0000

    Delete math.pytd.
    
    --
    PiperOrigin-RevId: 150938730
    MOS_MIGRATED_REVID=150938730

[33mcommit 803f440ad4a7d2fcc2543ca7d8eb3a9e21e4c9b0[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Mar 22 22:22:51 2017 +0000

    When loading a constant, put it at the current CFG node.
    
    This also exposed a bug in our CFG solver. Add a new (skipped) test case for
    that, and introduce a new CFG node in STORE_ATTR to work around it.
    
    --
    PiperOrigin-RevId: 150935499
    MOS_MIGRATED_REVID=150935499

[33mcommit d5e1444e56b66d589d04a39be3191891c1ab66c4[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Mar 22 21:16:40 2017 +0000

    Infer certain types of type parameters.
    
    This change allows pytype to e.g. infer an identity function
        def f(x): return x
    as
        def f(x: T) -> T: ...
    .
    This helps e.g. with simple function decorators.
    
    --
    PiperOrigin-RevId: 150926252
    MOS_MIGRATED_REVID=150926252

[33mcommit 8ba5898b6eee34733a87c5b7679eb6e6674a8c51[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Mar 22 14:24:25 2017 +0000

    Add code to pretty-print a cfg.Binding.
    
    --
    PiperOrigin-RevId: 150875288
    MOS_MIGRATED_REVID=150875288

[33mcommit a3d03a63a3c6ceb07b435f4c07dff11a4eadca54[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Wed Mar 22 13:18:55 2017 +0000

    Add an exception to not working code.
    
    NamedTuple.Replace will break as
    self.cls
    is not set and most of the code assumes it to be there.
    
    --
    PiperOrigin-RevId: 150870874
    MOS_MIGRATED_REVID=150870874

[33mcommit 5d7912dab70a2884ebcbb503cae824db1a442014[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Mar 21 17:14:14 2017 +0000

    Make PathFinder more modularized.
    
    Rewrite, and break up, the previous FindNodeBackwards implementation. This
    yield various other useful functions, e.g. for finding the shortest path or
    the highest reachable weight. It also paves the way for further optimizations,
    since almost all the CPU time now goes into "find shortest path".
    
    --
    PiperOrigin-RevId: 150767293
    MOS_MIGRATED_REVID=150767293

[33mcommit 2716a73d0fe5bff7b8b9a7b0a2304f83385c4e27[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Tue Mar 21 09:27:12 2017 +0000

    Functionality to pickle an ast to disk.
    
    This is part of go/fast_pyi
    
    fast_pyi_saver knows how to read a pyi file and write it as a pickled as without external references to disk, next to the pyi file.
    The behavior can be enabled by a flag.
    
    --
    PiperOrigin-RevId: 150730800
    MOS_MIGRATED_REVID=150730800

[33mcommit 5ec24d2e302dc4007ce9879d3579c3ee5f0592de[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 17 08:48:21 2017 +0000

    Include the expected type in the "bad_param" arg to invalid parameter errors.
    
    The motivation behind this change is that, with, type parameters, sometimes
    the expected type we want to report is not the type in the signature. For
    example, in
      def f(x: AnyStr, y: AnyStr): ...
      f("", u"")
    we want to report the expected type for y as str, not Union[str, unicode].
    (We don't catch this error yet. But we will very soon, and I want to be able
    to generate a good error message for it.)
    
    * When we log WrongArgTypes, we remember not only the name of the bad parameter
      but also the expected type it was matched against. In the expected type,
      type parameters are replaced by their constraints.
    * We use this mechanism to supply WrongArgTypes with an expected type in the
      case of a bad super call, which allows us to get rid of the "details" field
      in abstract.BadCall.
    
    --
    PiperOrigin-RevId: 150419206
    MOS_MIGRATED_REVID=150419206

[33mcommit 87d1a159f72bdf4c21a3895809484c0faa749e79[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 17 08:07:11 2017 +0000

    Delete object.__getattr__.
    
    This method doesn't actually exist. As far as I can tell,
    your change earlier today made --quick smart enough to
    realize that __getattr__ could be optimized away for
    classes inheriting from object, and the disappearance of
    __getattr__ from pyi files caused attribute errors galore.
    
    --
    PiperOrigin-RevId: 150417310
    MOS_MIGRATED_REVID=150417310

[33mcommit 3e10e422a1667415123b7d3d6995ae066c6bd858[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Mar 16 23:19:48 2017 +0000

    For arguments, always create an ~unknown, even with --quick.
    
    --
    PiperOrigin-RevId: 150383876
    MOS_MIGRATED_REVID=150383876

[33mcommit 93f06955e9e1eb4318c3bdbc65e241ba132126d3[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 16 20:29:09 2017 +0000

    Move code for processing inline annotations into its own file.
    
    --
    PiperOrigin-RevId: 150360881
    MOS_MIGRATED_REVID=150360881

[33mcommit 81ba610c279a3deac2c4fe833c7df0b97abeb697[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 15 22:31:17 2017 +0000

    Tweak the matcher's use of pep484.COMPAT_MAP to also match subclasses.
    
    We already allow, e.g., int to match against float; now also let bool
    match float.
    
    --
    PiperOrigin-RevId: 150251367
    MOS_MIGRATED_REVID=150251367

[33mcommit fee17e02486bb0fde8eaf6519beeb190b3d330f0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 15 00:25:07 2017 +0000

    Log type parameter errors closer to when they occur.
    
    --
    PiperOrigin-RevId: 150136598
    MOS_MIGRATED_REVID=150136598

[33mcommit f1edbbfeab18fe9050a031f7c46d849fad2aeded[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Mar 14 21:42:36 2017 +0000

    Remove capability of processing multiple files at once.
    
    --
    PiperOrigin-RevId: 150116134
    MOS_MIGRATED_REVID=150116134

[33mcommit e0700b8fdf251d43aae282b1ec15110e360c0d41[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 14 20:11:57 2017 +0000

    Change __getslice__ in __builtin__.pytd to accept None arguments.
    
    --
    PiperOrigin-RevId: 150103701
    MOS_MIGRATED_REVID=150103701

[33mcommit 372ad03a4689c3067b889daf75b3c2121833f18f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Mar 13 21:26:54 2017 +0000

    Take advantage of TypeParameter constraints in a few more places.
    
    --
    PiperOrigin-RevId: 149990147
    MOS_MIGRATED_REVID=149990147

[33mcommit 84bfdbd2d360c2871c7738f042b4555e2187a2aa[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Mon Mar 13 12:01:14 2017 +0000

    Manage a set of ancestors instead of finding them on the fly.
    
    cfg.py:CanHaveCombination dominates the runtime not spend ingesting PYI files.
    A lot of the runtime of that function is spend just finding the ancestors of nodes to compare the bindings in them with a list of supplied bindings (goals).
    
    This CL aims to reduce the lookup time by guaranteeing that reachable_subset is always up to date.
    With this guarantee the work of finding the ancestors only needs to be done during CFG modification.
    The chosen approach updates the self.ancestors of a child if a new connection is added at the parent of the child.
    
    Profiling: CanHaveCombination goes from being ~50% of the total runtime, for files containing many dictionaries (configurations), down to less than 0.5%.
    The test file took 240seconds, of which 144s were in CanHaveCombination. This did go down to 0.3s in CanHaveCombination and 1.5s in _Update_Reachable_Backwards. Total runtime is now ~80s.
    
    --
    PiperOrigin-RevId: 149928477
    MOS_MIGRATED_REVID=149928477

[33mcommit bc8acd763843412930ae1d99d9ee83d4765d727e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Mar 11 01:00:57 2017 +0000

    Change uses of function to Callable in pytd; delete __builtin__.function.
    
    --
    PiperOrigin-RevId: 149814624
    MOS_MIGRATED_REVID=149814624

[33mcommit 29b5c49bafd997fefd14cb2e459df7bf8e7c5bc2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 10 20:43:01 2017 +0000

    Define __iadd__ on __builtin__.list.
    
    --
    PiperOrigin-RevId: 149787047
    MOS_MIGRATED_REVID=149787047

[33mcommit 036337a2ee5879f1c378e40fc77fabdb6ea504f7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 10 17:58:01 2017 +0000

    Introduce some simple constraint-checking for TypeParameter.
    
    Changes the matcher to check values against a type parameter's
    constraints before adding them to the substition. This catches
    errors like
    
    def f(x: AnyStr) -> AnyStr: ...
    f(42)
    
    but not
    
    def f(x: AnyStr, y: AnyStr): ...
    f("", u"")
    
    . We also don't (yet) use the constraints to infer more precise
    type information than "Any".
    
    --
    PiperOrigin-RevId: 149768240
    MOS_MIGRATED_REVID=149768240

[33mcommit 9ef59983d1601c46b3f5d9167d62f50f04289622[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 10 17:53:00 2017 +0000

    Fix a few __and__ and __contains__ definitions in __builtin__.pytd.
    
    --
    PiperOrigin-RevId: 149767749
    MOS_MIGRATED_REVID=149767749

[33mcommit 0a2c26b7277f0a960fdee3cfca9b410fce8b4ced[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 10 02:17:00 2017 +0000

    Instantiate Type[T] as an unsolvable.
    
    This fixes our broken canary test. The issue was that Type[T] was
    instantiated as T, and because we then tried to match T on the left,
    the type matcher asserted that it was a non-formal type (false).
    
    --
    PiperOrigin-RevId: 149717738
    MOS_MIGRATED_REVID=149717738

[33mcommit 091da794869f29ae1dd4d8f9897f1b7060183d36[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 9 21:22:27 2017 +0000

    Keep track of TypeParameter constraints.
    
    Stores the constraints passed to TypeVar, passes them between the abstract
    and pytd layers as necessary, and outputs them in PrintVisitor. The
    constraints aren't yet used for anything.
    
    --
    PiperOrigin-RevId: 149687431
    MOS_MIGRATED_REVID=149687431

[33mcommit 0cb2118bff2c9eaa4c09a3004ab63ea842e32198[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 9 21:12:47 2017 +0000

    Improve our parsing of TypeVar definitions.
    
    --
    PiperOrigin-RevId: 149686369
    MOS_MIGRATED_REVID=149686369

[33mcommit dca692c6555f0c88eeb75e0b3947f58b1775ecad[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Mar 9 01:04:01 2017 +0000

    Use TypeParameter information when type-checking InterpreterFunction calls.
    
    Before each function call, replaces any type parameters in an
    InterpreterFunction's annotations with the concrete substitutions computed by
    the matcher.
    
    Most of the new tests call their tested function twice, with different
    parameter types, to make sure the substitutions aren't sticky.
    
    get_class() is defined on abstract.TypeParameter to make it play nicely with
    TupleClass.
    
    --
    PiperOrigin-RevId: 149602129
    MOS_MIGRATED_REVID=149602129

[33mcommit 9abf9ecb7b730b05002070a85a5a340dff9f8a21[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 8 22:53:42 2017 +0000

    Make abstract.TypeParameter.__eq__ work with other types.
    
    Do an isinstance check in TypeParameter.__eq__ so that
    type_param == not_a_type_param returns False instead of raising
    an error. While we're at it, get rid of the need for
    # pylint: disable=unidiomatic-typecheck in Union.__eq__.
    
    --
    PiperOrigin-RevId: 149586666
    MOS_MIGRATED_REVID=149586666

[33mcommit f3f783ef68b257deecd0fc80530fc49ddfbf3779[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 8 01:48:40 2017 +0000

    Remove two redundant ways to fill in cls pointers.
    
    We had two visitors (LookupFullNames, FillInModuleClasses) and
    two functions (InPlaceFillInClasses, FillInModuleClasses) that
    all filled in cls pointers of pytd.ClassType objects in slightly
    different ways. This change removes LookupFullNames and
    InPlaceFillInClasses, leaving us with:
    1) LookupClasses, which converts NamedType nodes to ClassType and fills
       in classes using a global lookup module.
    2) FillInModuleClasses, which fills in classes using a name -> AST map.
    
    --
    PiperOrigin-RevId: 149490703
    MOS_MIGRATED_REVID=149490703

[33mcommit 3663b9381239285e087e76de48899eabea9a1d7a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 8 01:19:03 2017 +0000

    Set an InterpreterClass's official name earlier.
    
    --
    PiperOrigin-RevId: 149487750
    MOS_MIGRATED_REVID=149487750

[33mcommit 847e846e5b99e0e63521031ca0680813d2b49df2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 7 22:24:02 2017 +0000

    Merge abstract.TypeParameter and abstract.TypeVariable.
    
    --
    PiperOrigin-RevId: 149466369
    MOS_MIGRATED_REVID=149466369

[33mcommit 17b49e8ba346f9e23cedce2fe2df4d335ff1c6f2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 7 19:50:39 2017 +0000

    Change TypeVarFunction to an abstract.PyTDFunction.
    
    Allows us to take advantage of the argument type-checking we already
    have, rather than re-inventing the wheel for [invalid-typevar].
    
    --
    PiperOrigin-RevId: 149446058
    MOS_MIGRATED_REVID=149446058

[33mcommit d36144609ca375743a419ba77441809b06702adb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 7 19:08:29 2017 +0000

    Add typevars to a generated ast in WrapTypeDeclUnit rather than compute_types.
    
    Simplifies our code by removing the need to specially "trace" typevars. We
    lose the ability to track duplicates, but I think that's fine - it's normal
    to be able to overwrite things in Python code.
    
    --
    PiperOrigin-RevId: 149440136
    MOS_MIGRATED_REVID=149440136

[33mcommit 6d8aab3f02a2d42e084757819059725c62df2a1a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 7 17:44:58 2017 +0000

    Some TypeVar-related cleanup.
    
    * Delete an out-of-date abstract.TypeParameter comment.
    * Rename a variable used to represent an abstract value from "b" to "v".
    * Fix some outdated syntax in the docstring of pytd.TypeParameter.
    * Move the _check_intersection calls in WrapTypeDeclUnit into a loop.
    * Remove reference to a deleted visitor in visitors.AddNamePrefix.
    * Move some TypeVar tests from test_errors to test_typevar.
    * Add import statements, standardize quotation markes in test_typevar.
    
    --
    PiperOrigin-RevId: 149429081
    MOS_MIGRATED_REVID=149429081

[33mcommit 769c3fe8682000f8a96d307e4f29f57b98b2c8dc[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Mar 7 15:24:07 2017 +0000

    Get rid of the "name" arg to Converter.constant_to_(var|value).
    
    As far as I can tell, the only place this argument was being
    used was in the [recursion-error] message, which I switched to using
    the name of the pytd value.
    
    --
    PiperOrigin-RevId: 149416316
    MOS_MIGRATED_REVID=149416316

[33mcommit 0470e26ddf64fbdf4153f6056ac40ffbc0040bfc[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Mon Mar 6 09:57:36 2017 +0000

    Speedup _deep_values_list_product.
    
    Replace a tuple with a set. The set is faster, as we pay constant time for the lookups in line 126 instead of linear time.
    
    Profiling
    This was tested for
    video/youtube/src/python/config/shmoovies.py
    which is a configuration file that is known to be very slow.
    Before this change 121 seconds were spend in _deep_values_list_product, after this change it is 6s, in percent that is 95% of the load removed.
    In total before this change profiling the call took ~163 seconds, with this change it is ~50s for a speedup factor of roughly 3x.
    
    []
    shows that all calls sites were updated with set() instead of ().
    
    I suspect that we could as well use a seen.update to save on the number of sets, but haven't investigated this and changing it could change behavior.
    
    Command
    ./blaze-bin/third_party/py/pytype/pytype  --check --abort-on-complex --no-report-errors --output="-" --imports_info=blaze-out/gcc-4.X.Y-crosstool-v18-hybrid-grtev4-k8-opt/bin/video/youtube/src/python/config/pytype-aspect/shmoovies@pytype@check/imports_info --python_exe="third_party/py/pytype/google/python2.7 -T" --module-name=[].video.youtube.src.python.config.shmoovies --quick --precompiled-builtins=blaze-out/gcc-4.X.Y-crosstool-v18-hybrid-grtev4-k8-opt/bin/devtools/python/blaze/pytype/release/precompiled_builtins.out video/youtube/src/python/config/shmoovies.py --output="test.pyi" --profile='profile2'
    
    --
    PiperOrigin-RevId: 149277428
    MOS_MIGRATED_REVID=149277428

[33mcommit 553eb6fc5f9685315e305429ed9a7cebbc621ec7[m
Author: Sebastian Steenbuck <steenbuck@google.com>
Date:   Mon Mar 6 09:56:46 2017 +0000

    Remove wrong __slots__ statements in pytd.py and make the others have an effect.
    
    The once removed were wrong because they did not declare instance variables. This is not easy to fix while keeping the __slots__ statetement as children of NamedTuple are not allowed non empty __slots__ statements.
    
    As node.Node returned a class without a __slots__ statement the childrens __slots__ statement were effectless.
    "When inheriting from a class without __slots__, the __dict__ attribute of that class will always be accessible, so a __slots__ definition in the subclass is meaningless."
    from
    https://docs.python.org/2/reference/datamodel.html
    
    --
    PiperOrigin-RevId: 149277345
    MOS_MIGRATED_REVID=149277345

[33mcommit 929bb1f63b641461fb306d15e7c7396bbf0a6636[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Mar 3 00:02:33 2017 +0000

    Consolidate WrongArgType error details.
    
    We were passing around a BadCall namedtuple as well as a bad_param arg
    and a details arg. Stuff the latter two into the namedtuple.
    
    --
    PiperOrigin-RevId: 149059110
    MOS_MIGRATED_REVID=149059110

[33mcommit 718d2c7bb8037f23f4b08d15a4cf94a7c16b3f91[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Mar 1 20:35:59 2017 +0000

    Remove support for old pytd "raises" syntax.
    
    Stop allowing "def f(...) -> ...: raises X", and switch our tests and pytd
    files over to the
      def f(...) -> ...:
        raise X()
    syntax used by typeshed.
    
    --
    PiperOrigin-RevId: 148918092
    MOS_MIGRATED_REVID=148918092

[33mcommit 3bd12f43163f704803b90b74f2bd166e93d6b394[m
Author: Jelle Zijlstra <jelle.zijlstra@gmail.com>
Date:   Mon Mar 13 21:55:45 2017 -0700

    fix installation instructions

[33mcommit 962a0ebc05bd24dea172381b2bedcc547ba53dd5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 28 19:07:07 2017 +0000

    Handle sys.version indexing and slicing in pyi parsing.
    
    --
    PiperOrigin-RevId: 148790970
    MOS_MIGRATED_REVID=148790970

[33mcommit 0a38b1202ec9aae42893f0565462dc73d18e0519[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 28 18:52:36 2017 +0000

    Fix get_class() behavior for function and function-like abstract values.
    
    * Implements get_class() for ClassMethod and StaticMethod.
    * Changes convert.Converter.function_type from __builtin__.function to
      typing.Callable; the former should no longer appear anywhere (commit 76ff31880c482aecc2b3d1bc8380906c8c4df67b).
    
    --
    PiperOrigin-RevId: 148788954
    MOS_MIGRATED_REVID=148788954

[33mcommit c4ab15ee71a8524ce7afa8ed38c124174b2c5465[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 28 17:29:29 2017 +0000

    Some function-related cleanup.
    
    * Sets the cls attribute in abstract.Function rather than in subclasses.
    * In _constant_to_value in convert.py, uses name_to_value rather than a
      combination of lookup_builtin and constant_to_value.
    * In test_functions.py, a bunch of tests that should be in TestFunctions were
      in TestClosures, and one closure test was in TestFunctions. Puts all the
      tests in the right places.
    
    --
    PiperOrigin-RevId: 148778609
    MOS_MIGRATED_REVID=148778609

[33mcommit aeac1ecc0b61fd6efe042ee86700999bfbc01f7b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Feb 28 00:26:30 2017 +0000

    Handle disjunctions and parentheses in conditions in pyi parsing.
    
    --
    PiperOrigin-RevId: 148710197
    MOS_MIGRATED_REVID=148710197

[33mcommit a06b2569f9566f438e15c5711fe618996a0b90d6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 24 23:16:52 2017 +0000

    Report an error when calling CMP_IN on an object without a __contains__ method.
    
    --
    PiperOrigin-RevId: 148510426
    MOS_MIGRATED_REVID=148510426

[33mcommit acbe8335981eadcb6c1255c6b59e636a845297a6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 24 20:25:41 2017 +0000

    Print Optional[X] instead of Union[X, None].
    
    --
    PiperOrigin-RevId: 148489230
    MOS_MIGRATED_REVID=148489230

[33mcommit b83135e318538f18f9374cb9bfa84752d825b7f2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 24 19:21:40 2017 +0000

    Change an annotation to typing.Optional when the default type is None.
    
    --
    PiperOrigin-RevId: 148481538
    MOS_MIGRATED_REVID=148481538

[33mcommit 119f25b429421c99a7a1245b15d8c8abf80b4a47[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 22 23:05:25 2017 +0000

    Don't set the expected type for parameters with default value None.
    
    --
    PiperOrigin-RevId: 148273901
    MOS_MIGRATED_REVID=148273901

[33mcommit 50e219bebdbfba4a3583ca92787631d7bce49db4[m
Author: Googler <noreply@google.com>
Date:   Wed Feb 22 18:58:09 2017 +0000

    Add an explanation for surprising behavior.
    
    --
    PiperOrigin-RevId: 148241206
    MOS_MIGRATED_REVID=148241206

[33mcommit 2b83e3aec15bcad576d988f5f8adca687cf54f15[m
Author: Googler <noreply@google.com>
Date:   Wed Feb 22 18:56:36 2017 +0000

    Fix mro_test by actually calling googletest.main(); the unit test was never
    actually running even though blaze test returns passing (it 'passes' because
    the binary will happily return the 0 error status).
    
    https://memegen.googleplex.com/6440960229113856
    
    Tested:
      blaze test :mro_test
    
    --
    PiperOrigin-RevId: 148240944
    MOS_MIGRATED_REVID=148240944

[33mcommit 8c91d031b395b59d89e8bd4d146239f477d6a9dc[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Tue Feb 21 16:17:54 2017 +0000

    Include module's name in attribute-error messages involving a module
    
    --
    PiperOrigin-RevId: 148097152
    MOS_MIGRATED_REVID=148097152

[33mcommit 7453fa77b577fd05d8c55704241a5ef518369964[m
Author: Matthias Kramm <kramm@quiss.org>
Date:   Mon Feb 20 08:09:22 2017 -0800

    fix setup.py

[33mcommit 108a2cf99e5440ee0d644a0eed1488497deb3c09[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Feb 18 00:02:57 2017 +0000

    Improve dict.__init__ definition; fix unsolvable against TupleClass matching.
    
    --
    PiperOrigin-RevId: 147891078
    MOS_MIGRATED_REVID=147891078

[33mcommit febb7586db9b7fe3ace4b5c3012e1624b664d48d[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Fri Feb 17 21:31:34 2017 +0000

    Function type comments: bugfix and add tests
    
    --
    PiperOrigin-RevId: 147872941
    MOS_MIGRATED_REVID=147872941

[33mcommit 8efb7ccfd231f60153f7d673266a13bf38e82b22[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 17 20:59:28 2017 +0000

    Fix matching of an empty variable against TupleClass.
    
    --
    PiperOrigin-RevId: 147869548
    MOS_MIGRATED_REVID=147869548

[33mcommit 85db8b7b50dac183129c73839c9737afdfb9f891[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Fri Feb 17 20:50:32 2017 +0000

    Drop ply dependency since  we don't use it anymore
    
    --
    PiperOrigin-RevId: 147868585
    MOS_MIGRATED_REVID=147868585

[33mcommit e3b75eb13897f87a51eb73ed7273ad2de419c999[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Fri Feb 17 20:49:47 2017 +0000

    Bugfix: handle spaces in comment-based function annotations
    
    --
    PiperOrigin-RevId: 147868509
    MOS_MIGRATED_REVID=147868509

[33mcommit 8f2f82b6b4a6074e69d44e17dd2c63aa2c0b3aba[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Feb 17 20:48:48 2017 +0000

    Apply https://github.com/google/pytype/pull/48 from guido@python.org.
    
    --
    PiperOrigin-RevId: 147868410
    MOS_MIGRATED_REVID=147868410

[33mcommit 2e4d022fdc19a2b55cf55e4aeb2b85fbcd73de22[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Feb 16 20:08:40 2017 +0000

    Improve inference on initializing a dict with a list of tuples.
    
    --
    PiperOrigin-RevId: 147750447
    MOS_MIGRATED_REVID=147750447

[33mcommit ce8447393238a9ebfbdec2cbb234daebdbc25555[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Feb 16 17:19:58 2017 +0000

    Undo aliasing of modules.
    
    This ended up breaking some "normal" imports. See bug log.
    
    --
    PiperOrigin-RevId: 147728288
    MOS_MIGRATED_REVID=147728288

[33mcommit 99b7ec5b1031f1b5038ab05c123b6c1d47774c96[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Feb 14 16:14:55 2017 +0000

    Improve long-tail performance of if-splitting.
    
    This fixes a bug in how a chain of conditions is added to goal, and also adds
    an approximation step that removes conditions that don't seem related to the
    current goal.
    
    Consider the following code:
    
    def f(x: Union[A, B], y: int): # n1
      z = true_or_false()          # n2
      if z:                        # n3
        return (x, y)              # n4
    
    When we solve for the return value (say, for (A, int)), we try to trace a path
    back to the defintion of x and y (i.e., the start of the function). On that
    path, we encounter a condition z=True.
    
    Before:
      We'd add the new goal z=True, introduced by the condition, to our list of
      goals, and re-run the solver at n3. Since we weren't able to expand any
      goals, this is a second parallel solver run, multiplying the solving time by
      two. In other words, the behavior is exponential in the number of nested if
      statements.
    
    After:
      We see, but do not add, the goal z=True, since it's fulfilled by assignments
      on a path to n1. (That's an approximation, but one that holds up against all
      the test cases we have.)
      We then jump to n1, remove the goals x=A and y=int and finish solving.
    
    --
    PiperOrigin-RevId: 147473789
    MOS_MIGRATED_REVID=147473789

[33mcommit b46d41bf8f5b40c70666f54bd347e3fa22b275ea[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Feb 14 14:45:50 2017 +0000

    Fix printing of aliases.
    
    --
    PiperOrigin-RevId: 147466210
    MOS_MIGRATED_REVID=147466210

[33mcommit 0a804598271167b4fbb1f6a9664faef0918745f4[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Feb 13 22:41:20 2017 -0500

    reapply https://github.com/google/pytype/pull/46

[33mcommit df2471dbcfeb388205c1b03fecc4c7d77f71caea[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Feb 13 20:31:56 2017 +0000

    Implement get_class() for abstract.AnnotationClass.
    
    --
    PiperOrigin-RevId: 147378400
    MOS_MIGRATED_REVID=147378400

[33mcommit 8d6790bbf8baa1ec5916b174b6c358a08a6e13b0[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Feb 10 23:17:22 2017 +0000

    Invert the precheck in cfg.py.
    
    Instead of checking whether we have a path without conditions, check whether
    a path exists at all, before running the full path finder. This speeds up
    things by roughly 2x, over the 1M+ solver calls we trigger for inferring
    httpheaders.py from the Open-Source pythonpaste.org package.
    
    --
    PiperOrigin-RevId: 147205203
    MOS_MIGRATED_REVID=147205203

[33mcommit b5e9ef76bdb8526fcb21017e1a4ab5f571765604[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Feb 10 16:49:46 2017 +0000

    Simplify PathFinder (move some state into parameters)
    
    --
    PiperOrigin-RevId: 147159791
    MOS_MIGRATED_REVID=147159791

[33mcommit e2a7a7d2493aeee333c424f1932a0dd12ca8ac44[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 10 02:01:31 2017 +0000

    Remove cgi.pytd.
    
    --
    PiperOrigin-RevId: 147106637
    MOS_MIGRATED_REVID=147106637

[33mcommit 5769f29f4c5df99a8dee0cc043aa3a91ab2d7d68[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 10 01:37:48 2017 +0000

    Allow type comments when initializing instance attributes.
    
    --
    PiperOrigin-RevId: 147104357
    MOS_MIGRATED_REVID=147104357

[33mcommit 69fa2f5566a478a8afbfe64f06f1006226ff6e9c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Feb 10 00:11:13 2017 +0000

    Optimize CFG path-finding.
    
    --
    PiperOrigin-RevId: 147095059
    MOS_MIGRATED_REVID=147095059

[33mcommit 9ac2abccb7a91e46e1bfde477dab889c482ec94d[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Feb 9 19:54:35 2017 +0000

    Be more conservative about creating new CFG nodes in _jump_if.
    
    --
    PiperOrigin-RevId: 147062443
    MOS_MIGRATED_REVID=147062443

[33mcommit 5a8671d1567563f47d0183b37c95d6e98efef3cb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 8 22:43:23 2017 +0000

    Catch bad __getitem__ calls.
    
    * Fixes byte_BINARY_SUBSCR so that bad __getitem__ calls are reported.
    * Detects parameterization of user-defined containers, e.g.,
        def f(x: MyCustomList[int]): ...
      so that pytype knows that these are not bad __getitem__ calls.
    * Moves typing.TypingClass and typing.Container into abstract.py to reflect
      the fact that containers exist outside of typing.pytd.
    * Adds a test to verify that adding __getitem__ to a subclass of type still
      works as expected, e.g.,
        class A(type):
          def __getitem__(self, i):
            return 42
        X = A("X", (object,), {})
        Y = type("Y", (object,), {})
        X[0]  # treated as a call to A.__getitem__
        Y[0]  # treated as parameterization of container Y
    
    --
    PiperOrigin-RevId: 146959419
    MOS_MIGRATED_REVID=146959419

[33mcommit 330a3534794782bbcd3125c7620cd77036337bd7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 8 00:51:26 2017 +0000

    Change ValueWithSlots to a mix-in.
    
    --
    PiperOrigin-RevId: 146853484
    MOS_MIGRATED_REVID=146853484

[33mcommit 54b1e1eabced44d8a083caa84ead37e6a06b9157[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 8 00:40:48 2017 +0000

    Have abstract.Function inherit from SimpleAbstractValue rather than Instance.
    
    --
    PiperOrigin-RevId: 146852178
    MOS_MIGRATED_REVID=146852178

[33mcommit b8df2ff7bf0f3c865c788b54f3f57029c286740a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Feb 6 23:03:08 2017 +0000

    Improve error message if external type resolving doesn't find a module.
    
    --
    PiperOrigin-RevId: 146715986
    MOS_MIGRATED_REVID=146715986

[33mcommit ae8e82f54359fe2f090c24f535384b99d752d748[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Feb 6 18:41:40 2017 +0000

    Support inlining of source code in main_test.
    
    --
    PiperOrigin-RevId: 146681640
    MOS_MIGRATED_REVID=146681640

[33mcommit 660a0da455ff2844b319348bdc19d1827501bf09[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Feb 4 03:48:15 2017 +0000

    Set PYTHON_EXE in InferenceTest rather than individual subclasses.
    
    --
    PiperOrigin-RevId: 146544260
    MOS_MIGRATED_REVID=146544260

[33mcommit 79143b122f3c988f74dd3027b2ebe700eb481977[m
Author: Matthias Kramm <kramm@google.com>
Date:   Sat Feb 4 01:52:29 2017 +0000

    Flesh out typing.pytd.
    
    --
    PiperOrigin-RevId: 146538505
    MOS_MIGRATED_REVID=146538505

[33mcommit 3365cf4d36080ec77cf2511c14509b3c29120dbf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Feb 3 21:47:32 2017 +0000

    Handle errors in submodules more gracefully.
    
    When importing something like "foo.bar", previously we were properly
    catching errors in byte_IMPORT_FROM ("from foo import bar") but not
    in abstract.Module.get_submodule ("import foo; bar = foo.bar").
    
    Pulls out the error handling into a common method; removes import_from_error.
    
    --
    PiperOrigin-RevId: 146512342
    MOS_MIGRATED_REVID=146512342

[33mcommit 76ff31880c482aecc2b3d1bc8380906c8c4df67b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Feb 3 18:38:04 2017 +0000

    Deprecate __builtin__.function. Simplify PrintVisitor.VisitNamedType.
    
    --
    PiperOrigin-RevId: 146489937
    MOS_MIGRATED_REVID=146489937

[33mcommit 6085e89dbe35cf0cc50d9438a59eaf4bafa5eeb7[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Feb 3 16:31:45 2017 +0000

    Simplify name clash detection in PrintVisitor.
    
    Also, don't use both "X" and "typing.X" to refer to the same thing.
    Add tests for pyi reingestion cases that work now.
    
    --
    PiperOrigin-RevId: 146477518
    MOS_MIGRATED_REVID=146477518

[33mcommit 874a23a1a83ab6d3df327d116fe140e891a85ff8[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Feb 1 22:43:03 2017 +0000

    Unskip unittests that work now.
    
    --
    PiperOrigin-RevId: 146291599
    MOS_MIGRATED_REVID=146291599

[33mcommit 8f68ebbee6d91f4c376c84959ea30247261a3ea9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Feb 1 21:27:01 2017 +0000

    Detect extra keywords in InterpreterFunction calls.
    
    --
    PiperOrigin-RevId: 146281544
    MOS_MIGRATED_REVID=146281544

[33mcommit 5f8a2e025d1576969f6d69bcd9ac94672e6c115d[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Feb 1 21:10:50 2017 +0000

    Upgrade typeshed to version b240b241f0810b4cd531a560a571c2ff2452bcbd
    
    --
    PiperOrigin-RevId: 146279801
    MOS_MIGRATED_REVID=146279801

[33mcommit d9dde32bc3069e8f6f54353348972638772a6e6b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jan 31 23:16:27 2017 +0000

    Always require "import typing".
    
    We used to allow referencing identifiers from typing without the module name.
    With this change, we now always require "from typing import X" before using "X"
    in pyi code.
    
    --
    PiperOrigin-RevId: 146172830
    MOS_MIGRATED_REVID=146172830

[33mcommit 14c8a7edc5afc5473e562785035e8f7505685782[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Jan 31 21:58:27 2017 +0000

    Fixed bug in load_pytd merging which treated all /dev/null modules as the same.  This should fix the recent [] breakage introduced by unknown commit
    
    --
    PiperOrigin-RevId: 146162085
    MOS_MIGRATED_REVID=146162085

[33mcommit 293ea3d6d70bc3a23dd6afdc575484a2459b3690[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Jan 31 18:03:07 2017 +0000

    If multiple imports_map entries refer to the same pyi file, reuse the same module rather than re-importing the same pyi data under multiple aliases.
    
    --
    PiperOrigin-RevId: 146132204
    MOS_MIGRATED_REVID=146132204

[33mcommit 32111413f3a2f6e6a2daad073235e41d64082d65[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sun Jan 29 02:42:31 2017 +0000

    Take abstract.Dict.pyval into account in cmp_in and cmp_not_in.
    
    --
    PiperOrigin-RevId: 145902634
    MOS_MIGRATED_REVID=145902634

[33mcommit a3030596385413292bd080a59bea61109d56f6f5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sun Jan 29 02:18:35 2017 +0000

    Add a constant_type parameter to get_atomic_(value|python_constant).
    
    --
    PiperOrigin-RevId: 145902065
    MOS_MIGRATED_REVID=145902065

[33mcommit 377750d5ecaf444ad05d9b1234af13b35bc8c7d0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 27 19:59:24 2017 +0000

    Fix a typo in convert.build_bool.
    
    --
    PiperOrigin-RevId: 145820828
    MOS_MIGRATED_REVID=145820828

[33mcommit d504359778defac2cb85524691413e63c6c076c0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 26 18:53:30 2017 +0000

    Fix attribute lookup on super.
    
    --
    PiperOrigin-RevId: 145693326
    MOS_MIGRATED_REVID=145693326

[33mcommit 0f59648bacdf0b0e203281a9969510bbbd90ae72[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Jan 25 22:26:43 2017 +0000

    Remove State.condition.
    
    This isn't needed anymore, now that we store a "condition" attribute on
    CFGNode. See _PathFinder in pytd/cfg.py.
    
    --
    PiperOrigin-RevId: 145596744
    MOS_MIGRATED_REVID=145596744

[33mcommit c421ad95d4c4649ba420d229b96ab3e67d748614[m
Author: Dave Baum <dbaum@google.com>
Date:   Wed Jan 25 19:08:11 2017 +0000

    * Fix function type comments so they work on decorated functions or functions with declarations that span multiple lines.
    * Add warning for type comments that will be ignored.
    * Tweaked test infrastructure to fail when warnings are generated (almost always should indicate the test isn't testing what we want).
    * Fixed one test that was accidentally generating a warning.
    
    --
    PiperOrigin-RevId: 145570245
    MOS_MIGRATED_REVID=145570245

[33mcommit 6e8bd348e960544c1f5d3ff70108d8a014f366f1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 25 18:33:50 2017 +0000

    Improve definition of int.__init__.
    
    --
    PiperOrigin-RevId: 145565007
    MOS_MIGRATED_REVID=145565007

[33mcommit a7e8a660feef6e2ca662d0b4201d30ab876ea80d[m
Author: Googler <noreply@google.com>
Date:   Wed Jan 25 14:47:47 2017 +0000

    Speed up the data flow checking.
    
    * Remove a call to sorted():
    For a mildly complex file visitors.py of pytype sorted is called 6 million times and costs about ~9 seconds.
    This cost does not need to be payed, as we can as well just cache one list and use it instead, no special order is necessary.
    
    * Early search exit:
    After proving that a path without conditions exist or two path exist, which do not share a node containing a condition, the search can be aborted.
    
    --
    PiperOrigin-RevId: 145542278
    MOS_MIGRATED_REVID=145542278

[33mcommit 48af3e120025dcf4fd964d085bc1f89ec128eaf7[m
Author: Googler <noreply@google.com>
Date:   Wed Jan 25 11:09:13 2017 +0000

    Optimize an expensive loop.
    
    This loop causes about 45% of the costs of inferring visitors.py.
    
    The new loop is faster because:
    * Iterating over hits happens in python-land, while the set operations are done in c-land.
    * Changing the way that seen works to save a set creation.
    
    For inference on visitor.py this saves about 12seconds of the 50seconds runtime spend in and below this method. Total runtime is about 110 seconds.
    
    --
    PiperOrigin-RevId: 145528641
    MOS_MIGRATED_REVID=145528641

[33mcommit a8d57c3cb808e3a0927dc0d41a957c88b264c413[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 25 00:03:11 2017 +0000

    Improve the definition of bytearray.__init__.
    
    When the first argument is unicode, __init__ also takes an encoding and,
    optionally, an errors string:
    https://docs.python.org/2/library/functions.html#bytearray.
    
    --
    PiperOrigin-RevId: 145480463
    MOS_MIGRATED_REVID=145480463

[33mcommit 8397103b96a30b163fd5802c98bfb76258ecbdd4[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jan 24 23:36:49 2017 +0000

    Add "compile" to builtins.
    
    --
    PiperOrigin-RevId: 145477178
    MOS_MIGRATED_REVID=145477178

[33mcommit 817dc3337a3d2dbb727c624226c61da0bc91e33e[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jan 24 23:34:26 2017 +0000

    Fix print() function: It doesn't have any mandatory parameters.
    
    --
    PiperOrigin-RevId: 145476912
    MOS_MIGRATED_REVID=145476912

[33mcommit 9f65ba5afd68050e7e6f4418fb8bdcdae840b813[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jan 24 18:43:42 2017 +0000

    Check that we can match "None" against "bool".
    
    --
    PiperOrigin-RevId: 145437908
    MOS_MIGRATED_REVID=145437908

[33mcommit 4cbe3ec1f802001cdbd2cbc2f0030279e89b4f9f[m
Author: Googler <noreply@google.com>
Date:   Mon Jan 23 16:48:21 2017 +0000

    Add documentation to visitors.py.
    
    Without this documentation it is unclear why this should work. A reader needs to potentially look into all usages to convince himself that this code is legal.
    
    --
    PiperOrigin-RevId: 145291154
    MOS_MIGRATED_REVID=145291154

[33mcommit 894db22bee908c6326aa3aec6fb5141627bcc0da[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 20 19:04:20 2017 +0000

    Handle tuple unpacking better in the presence of multiple bindings.
    
    --
    PiperOrigin-RevId: 145104320
    MOS_MIGRATED_REVID=145104320

[33mcommit 83f6f3f8f17be2345f65b11b173499a29b02a546[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 18 23:17:18 2017 +0000

    Allow typing containers without parameters to be used as base classes.
    
    --
    PiperOrigin-RevId: 144889028
    MOS_MIGRATED_REVID=144889028

[33mcommit 5c4979d69bf885e6553745cfc56370ec2d3aa95c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 18 19:28:04 2017 +0000

    Improve get_instance_type for typing.Container.
    
    --
    PiperOrigin-RevId: 144858894
    MOS_MIGRATED_REVID=144858894

[33mcommit d41b57e96a1dcf76315ea84332492031f5633972[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 18 18:33:15 2017 +0000

    Fix a few issues related to tuples in inline annotations.
    
    * Tuple.cls should be TupleClass, not PyTDClass(tuple).
    * ParameterizedClass and BoundFunction need to define get_class().
    * to_type for a class should use get_instance_class() rather than full_name.
    
    Also moves two tuple tests into test_tuple, and changes a few checks that
    depended on Tuple.cls being vm.convert.tuple_type.
    
    --
    PiperOrigin-RevId: 144851032
    MOS_MIGRATED_REVID=144851032

[33mcommit 5395d58ecafbe144e405950a8efe6387299186ee[m
Author: Dave Baum <dbaum@google.com>
Date:   Wed Jan 18 18:20:09 2017 +0000

    Scan for pytype/type comments in a way that does not falsely process strings that happen to look like comments.
    
    --
    PiperOrigin-RevId: 144849331
    MOS_MIGRATED_REVID=144849331

[33mcommit cdcec4c8b03bd49044693dcc5f6d68d46e0744e2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 17 23:45:14 2017 +0000

    Make LazyDict.__contains__ take the lazy map into account.
    
    When instantiating TupleClass, we should only instantiate type parameter
    T, not 0, 1, etc. Our various asserts about what should and shouldn't be
    in Instance.type_parameters didn't catch this mistake because
    LazyDict.__contains__ didn't check LazyDict._lazy_map.
    
    This change fixes both LazyDict.__contains__ and the tuple instantiation
    issue. testTypeParameterAmbiguous has been skipped again because it only
    worked due to the first problem.
    
    --
    PiperOrigin-RevId: 144766019
    MOS_MIGRATED_REVID=144766019

[33mcommit a9f4614fcae9eb2feb9ed387c4d533615ffb7dbe[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 17 07:41:18 2017 +0000

    Improve our handling of TooComplexError.
    
    Since deep_variable_product can be called through bad_matches,
    it was possible for _check_return to raise a TooComplexError
    that we don't catch. (I don't have a test case for this bug
    because I only managed to trigger it through an experimental
    change to abstract.Tuple.cls.)
    
    abstract.get_views is now the only place where
    deep_variable_product is directly called, so we can catch the
    exception as soon as it is raised.
    
    --
    PiperOrigin-RevId: 144676410
    MOS_MIGRATED_REVID=144676410

[33mcommit 37fc1392f930febc27e688916e4cb5ea84616345[m
Author: Googler <noreply@google.com>
Date:   Mon Jan 16 17:21:42 2017 +0000

    Create data flow checking in pytype.
    
    This allows pytype to understand code like:
    
    if x is None
      x = ''
    return x
    
    this is done by
    * Adding a condition attribute to CFGNodes, which is set on the first node after a branching instruction.
    * Adding an explicit node after each 'else branch'. So far in the code above the branching instruction would directly point to the CFGNode containing the 'return x' statement. Adding a CFGNode guarantees a place to add the condition that is only reachable if the branch is traversed.
    * Extending the solver to collect all the condition on the way to a destination node and redirecting it to go to the place the first condition is defined instead of going directly to the destination.
    
    --
    PiperOrigin-RevId: 144640608
    MOS_MIGRATED_REVID=144640608

[33mcommit 227329cebb9139b7586ec751d265ba87ecb7cf62[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Jan 13 22:06:03 2017 +0000

    Add options for precompiling builtins and typing data.
    
    --
    PiperOrigin-RevId: 144482688
    MOS_MIGRATED_REVID=144482688

[33mcommit 72089dce392be99c59d530c02c1f33d818254002[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Jan 13 20:31:07 2017 +0000

    Improve error messages when evaluation of an annotation or type comment results in a name-error.
    
    --
    PiperOrigin-RevId: 144472039
    MOS_MIGRATED_REVID=144472039

[33mcommit 750c87a56be0821a6348baffc04199bb849d1f0c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jan 13 16:46:22 2017 +0000

    Make MutableMapping.copy() return a MutableMapping.
    
    --
    PiperOrigin-RevId: 144447130
    MOS_MIGRATED_REVID=144447130

[33mcommit 6ada9e0f2549d2cdf4b4bb55f3358f80c5fa2f1e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 13 02:57:11 2017 +0000

    Take TupleType into account in more places in type_match.py.
    
    --
    PiperOrigin-RevId: 144399212
    MOS_MIGRATED_REVID=144399212

[33mcommit ae35dd23852af159b34eee382db7fa35fb3f4a34[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 12 23:43:02 2017 +0000

    Don't crash when setdefault is called with the wrong arguments.
    
    Uses the inspect module to determine when setdefault is passed the
    wrong number of arguments. Raises an error when we can confidently
    do so, else fixes the arguments before calling setdefault_slot.
    
    Adds the name of the file under analysis to pytype crash messages.
    
    --
    PiperOrigin-RevId: 144380999
    MOS_MIGRATED_REVID=144380999

[33mcommit 2e206ebfa991c26116f5ffd6e9ac0edbd32620f6[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 12 23:22:05 2017 +0000

    Make the abstract matcher handle instances of tuple subclasses properly.
    
    --
    PiperOrigin-RevId: 144378689
    MOS_MIGRATED_REVID=144378689

[33mcommit a898c1b5f086122477812b83f5e18907111fb330[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 12 22:12:31 2017 +0000

    Switch expected and actual argcounts in wrong-arg-count message.
    
    Report first expected, then actual, as we do for everything else.
    Being consistent makes it easier to write tests for errors, since
    I don't have to keep referring back to error.py.
    
    --
    PiperOrigin-RevId: 144369815
    MOS_MIGRATED_REVID=144369815

[33mcommit adbbf971a6371cfac29e6e567e6872c11666c678[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 11 23:19:29 2017 +0000

    Support abstract matching of Type[Tuple[<parameters>]].
    
    --
    PiperOrigin-RevId: 144256778
    MOS_MIGRATED_REVID=144256778

[33mcommit eb20cb350ec2eda615337c97aae8e653690a6cd3[m
Author: Dave Baum <dbaum@google.com>
Date:   Wed Jan 11 18:57:13 2017 +0000

    Only process type comments when the opcode's filename matches the file associated with the director (which is where type comments come from).
    
    --
    PiperOrigin-RevId: 144225161
    MOS_MIGRATED_REVID=144225161

[33mcommit 5ab18713d2f7e10db7c2f3e2b08d08a74797465d[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Jan 11 18:39:52 2017 +0000

    Add iter*, view* methods to typing.Mapping.
    
    --
    PiperOrigin-RevId: 144222819
    MOS_MIGRATED_REVID=144222819

[33mcommit 5db6d93b78ec5cafc7ff555ddea58747f1d9e31e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 11 02:22:35 2017 +0000

    Support abstract matching of heterogeneous tuples.
    
    --
    PiperOrigin-RevId: 144153872
    MOS_MIGRATED_REVID=144153872

[33mcommit 71d53b638256ffce74ae5cc4a932539bf4638953[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 11 02:12:02 2017 +0000

    Add Tuple.pyval to the variables considered when computing views.
    
    --
    PiperOrigin-RevId: 144153059
    MOS_MIGRATED_REVID=144153059

[33mcommit b9fca66ae03f9d4d35cb60d5dab79b3caaeb40c0[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jan 10 23:40:05 2017 +0000

    Detect generators correctly even if they return before yielding.
    
    --
    PiperOrigin-RevId: 144137535
    MOS_MIGRATED_REVID=144137535

[33mcommit b4d683793a7ae1fccb68d31501bb3e32dfd06858[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Jan 10 16:58:27 2017 +0000

    Adding support for attribute type comments.
    
    --
    PiperOrigin-RevId: 144089167
    MOS_MIGRATED_REVID=144089167

[33mcommit a2f115eb37af7dd7344c4f2a03ac29e9d4675eb9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Jan 9 18:05:15 2017 +0000

    Add an abstract.TupleClass for heterogeneous tuples.
    
    --
    PiperOrigin-RevId: 143974899
    MOS_MIGRATED_REVID=143974899

[33mcommit dcb3026982eeaf8bcdee4b7e9e6ea6bbd6c76b5a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 6 23:17:50 2017 +0000

    Move to_type and friends into output.py.
    
    Moves to_type, get_instance_type, get_parameter_types,
    get_instance_parameter_types, and to_pytd_def into output.py.
    
    Since infer.py can no longer use hasattr to check for to_pytd_def,
    we simply try to call it and fall back to to_type upon an error.
    
    InterpreterClass.bases() and PyTDClass.bases() return variables
    instead of a list of the variable data mashed together, so that
    output.Converter._class_to_def can get an interpreter class's bases.
    
    InterpreterFunction.to_pytd_def (now output.Converter._function_to_def)
    has been rewritten to be a single long method that doesn't depend on
    anything private in InterpreterFunction.
    
    --
    PiperOrigin-RevId: 143821937
    MOS_MIGRATED_REVID=143821937

[33mcommit 97a813dd16f73e9a6812b9795cf081df88771bcc[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 6 23:08:08 2017 +0000

    Prefer wrong-arg-types over other error classes when logging errors.
    
    --
    PiperOrigin-RevId: 143820761
    MOS_MIGRATED_REVID=143820761

[33mcommit ab20698669ed76b0a1c6debe0a9ad2ad9ef761e1[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jan 6 19:50:22 2017 +0000

    Also display error details in [].
    
    --
    PiperOrigin-RevId: 143797802
    MOS_MIGRATED_REVID=143797802

[33mcommit 3684ea374a136583c0792818e55c1b7059f85311[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jan 6 19:33:59 2017 +0000

    Improve pretty-print of call signatures in error messages.
    
    Instead of printing e.g.
        Expected: (self: SomeType, x: Dict[unicode, Iterable[int]], y: int, z: Foo)
        Actual: (self: SomeType, x: Dict[Any, Tuple[Any]], y: str, z: FooSubClass)
    we now print
        Expected: (self, x, y: int, ...)
        Actual: (self, x, y: str, ...)
    hence making it easier to spot the bad parameter.
    
    --
    PiperOrigin-RevId: 143795901
    MOS_MIGRATED_REVID=143795901

[33mcommit cc8ad8c9b88266af49e201a2f7fa6974842733bb[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Jan 6 19:07:12 2017 +0000

    Simplify InterpreterFunction.to_pytd_def.
    
    --
    PiperOrigin-RevId: 143792494
    MOS_MIGRATED_REVID=143792494

[33mcommit 8d48646142fc3d4409cc578359142bdb2c9bd206[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Jan 5 22:38:10 2017 +0000

    Fix --output-cfg / --output-debug
    
    --
    PiperOrigin-RevId: 143710502
    MOS_MIGRATED_REVID=143710502

[33mcommit 74a7ff3b3c57cb0c95f76012b2dd87b4b83cb170[m
Author: Googler <noreply@google.com>
Date:   Thu Jan 5 16:01:52 2017 +0000

    Allow working with a custom Loader implementation.
    
    Also let types-spy use pytype from any sub directory.
    I need it for prototype (unknown commit)
    
    --
    PiperOrigin-RevId: 143666515
    MOS_MIGRATED_REVID=143666515

[33mcommit 4340c5654ac93e170bb19078cc6a3a7be0cf7f3a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Jan 5 01:24:36 2017 +0000

    Rename some methods in convert.py.
    
    Renames the conversion methods to "a_to_b" format to make
    it easier to remember what they do.  I dropped the "convert_"
    from the start of the name because convert.convert_a_to_b
    seemed redundant.
    
    Changes create_varargs and create_kwargs to
    create_new_varargs_value and create_new_kwargs_value,
    respectively, to match the format of the other create_
    methods (where create_new_x returns a Variable and
    create_new_x_value returns a value).
    
    Also turns construct_constant_from_value into a private
    _constant_to_value method and has external code call
    constant_to_value (formerly convert_constant_to_value) instead.
    
    --
    PiperOrigin-RevId: 143615808
    MOS_MIGRATED_REVID=143615808

[33mcommit 0bf27f06601653b57ff167256bf062ad9e0819dc[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 4 23:40:16 2017 +0000

    Support "..." in inline annotations.
    
    --
    PiperOrigin-RevId: 143604671
    MOS_MIGRATED_REVID=143604671

[33mcommit ad3afda0edabca5d9e79dc98dbd7f7b93fc6d564[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 4 21:34:35 2017 +0000

    Be smarter about what top-level defs we ignore in pyi generation.
    
    We ignore builtin names only if the code we're analyzing hasn't
    redefined them.
    
    Names from typing.pytd are ignored so that our pyi files aren't
    littered with
      List = ...  # type: type
    and similar.
    
    This change causes the inferred pyi for, e.g.,
      def f(x: Any): pass
    to change from
      from typing import Any
      def f(x: Any): ...
    to
      from typing import Any
      def f(x): ...
    which breaks tests because the unnecessary import is removed from
    the expected pytd in assertTypesMatchPytd, so we tweak PrintVisitor
    to omit the import in such cases.
    
    --
    PiperOrigin-RevId: 143589706
    MOS_MIGRATED_REVID=143589706

[33mcommit c1dc89cf08ec03d53102658f1a10336fea897585[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Jan 4 18:05:21 2017 +0000

    Fix the behavior of "from typing import *".
    
    --
    PiperOrigin-RevId: 143565734
    MOS_MIGRATED_REVID=143565734

[33mcommit 4c918d64d32428d9b6507b7c787e37c673eed76c[m
Author: Googler <noreply@google.com>
Date:   Wed Jan 4 16:25:19 2017 +0000

    Add node names to cfg_test.
    
    This makes the tests easier to debug.
    
    --
    PiperOrigin-RevId: 143556459
    MOS_MIGRATED_REVID=143556459

[33mcommit fe19e0c130e0bac49e647c054628569646bdbc6c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jan 3 23:35:03 2017 +0000

    Create a log message every time we define a new variable.
    
    --
    PiperOrigin-RevId: 143493736
    MOS_MIGRATED_REVID=143493736

[33mcommit 7e1a3cc8c8b602d3b413950e7210fee091cec976[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jan 3 23:33:27 2017 +0000

    Add one extra log level, "TRACE", to logging.
    
    We can use this to log out extra low-level information, in particular, variable
    creation and CFG construction.
    
    --
    PiperOrigin-RevId: 143493590
    MOS_MIGRATED_REVID=143493590

[33mcommit b18467f264bdb4549f1c83d36e70975b72e8bff8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Jan 3 22:59:10 2017 +0000

    Better printing of tuples in error messages
    
    --
    PiperOrigin-RevId: 143489760
    MOS_MIGRATED_REVID=143489760

[33mcommit 9a0cb0dd59f4f65539a447e03c0d7d5c8789a27a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jan 3 22:36:27 2017 +0000

    Deal with code that redefines "Union".
    
    This fixes analysis of pytype itself, in particular, importing "abstract.py".
    
    --
    PiperOrigin-RevId: 143487101
    MOS_MIGRATED_REVID=143487101

[33mcommit 809a6123ab2299d33312e0399fbd2e80f0909b22[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Jan 3 18:09:57 2017 +0000

    Get rid of Variable.name.
    
    The "name" of a (pytype) Variable is a relict, and has provided little value.
    Almost all of our Variables are abstract items that refer to e.g. a position
    on a stack, a temporary result, a subexpression of an if-splitting condition
    or a dummy value. As such, they're difficult to name, and the names given
    to them by existing code were mostly useless, if not misleading.
    
    Variable names were also a source of bugs: The incorrect names would tend to
    leak into analysis results or error messages.
    
    When inspecting a Variable for debugging, it's much more insightful to look at
    [x.name for x in variable.data].
    
    We will also add a new logging statement to cfg.Program.NewVariable that fires
    whenever a new Variable is introduced, which makes it much easier and reliable
    to discover the origins of a Variable in the logs.
    
    --
    PiperOrigin-RevId: 143456613
    MOS_MIGRATED_REVID=143456613

[33mcommit aca76314c5bd44750182e77f2ffce91bf6b2e468[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Dec 30 00:28:17 2016 +0000

    Don't allow to store TypeVar("X") as "Y".
    
    --
    PiperOrigin-RevId: 143215170
    MOS_MIGRATED_REVID=143215170

[33mcommit 0b3276433f286985ba96f9a8a9efd088b5c4d2c0[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Dec 29 23:40:54 2016 +0000

    Support importing AnyStr.
    
    This allows to import AnyStr (and, for that matter, TypeVars in general) from
    other modules, and use them to annotate functions. However, we'll continue
    to generate a warning when this happens.
    
    --
    PiperOrigin-RevId: 143212325
    MOS_MIGRATED_REVID=143212325

[33mcommit 9adbe3942affe282a89f8aeb52d030c8f4b15fc7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 29 23:33:20 2016 +0000

    Make the CombineContainers optimization handle TupleType correctly.
    
    --
    PiperOrigin-RevId: 143211952
    MOS_MIGRATED_REVID=143211952

[33mcommit b042f52ede32080f4bd6d6062031ad4a2601dc59[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 29 18:11:25 2016 +0000

    Convert pytd.TupleType to abstract.Tuple and vice versa.
    
    --
    PiperOrigin-RevId: 143191048
    MOS_MIGRATED_REVID=143191048

[33mcommit 38ca6ada45ae3cc269526616cc48c56098589aab[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Dec 29 17:59:07 2016 +0000

    Speed up and improve typeshed_test.
    
    Rather than doing shallow parsing of all of typeshed, do full parsing (with
    lookup) of a subset.
    
    --
    PiperOrigin-RevId: 143190097
    MOS_MIGRATED_REVID=143190097

[33mcommit 79cad75a16a654aeb5ba2b59f06f0c3d369e9d85[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Dec 29 17:57:16 2016 +0000

    Rudimentary TypeVar support.
    
    This enables the use of TypeVar instances in function annotations in a way
    that will be exported to pytd. The TypeVars will not yet be considered for
    local function calls.
    Also, importing TypeVar from typing continues to be an error, so tests do
    "disable=not-supported-yet".
    
    --
    PiperOrigin-RevId: 143190001
    MOS_MIGRATED_REVID=143190001

[33mcommit 92421ad41595f94374468f508fd916064b6dd19c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 28 23:39:19 2016 +0000

    Parse heterogeneous tuples into pytd.TupleType.
    
    Modifies the parser to parse heterogeneous tuples correctly;
    changes match_Generic_against_Generic in type_match.py to
    handle TupleType.
    
    For now, convert.py turns pytd.TupleType back into a homogeneous
    tuple - the next step is to convert it to an abstract.Tuple and
    have abstract.Tuple.to_type create a pytd.TupleType.
    
    --
    PiperOrigin-RevId: 143137620
    MOS_MIGRATED_REVID=143137620

[33mcommit 3a16d3e4d70070a07908446c61a07b15b436e078[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Dec 28 21:56:48 2016 +0000

    Unskip unit tests that work now.
    
    --
    PiperOrigin-RevId: 143130548
    MOS_MIGRATED_REVID=143130548

[33mcommit dcca181335984f7447e8da0e5b4eaa6dd72be1c0[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Dec 28 20:57:28 2016 +0000

    Better support for dict.setdefault in string dictionaries.
    
    --
    PiperOrigin-RevId: 143126335
    MOS_MIGRATED_REVID=143126335

[33mcommit 9c8b3c8ec2ac17f83b8cf84d538b47d6d7ad7f3e[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Dec 28 18:08:23 2016 +0000

    Don't re-export __future__ imports.
    
    --
    PiperOrigin-RevId: 143115026
    MOS_MIGRATED_REVID=143115026

[33mcommit 5ce831f2b87e4eb2d121a919b0e76a69d98c68f8[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Dec 28 18:06:52 2016 +0000

    Better support for late annotations.
    
    --
    PiperOrigin-RevId: 143114948
    MOS_MIGRATED_REVID=143114948

[33mcommit 914159a8fefd064e14d3d22024740f4cd909a11f[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Dec 27 23:14:52 2016 +0000

    dict.update takes keyword parameters.
    
    --
    PiperOrigin-RevId: 143060524
    MOS_MIGRATED_REVID=143060524

[33mcommit 6326272450311d10dec62dd7c1140835163b23f0[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Dec 27 20:52:08 2016 +0000

    Be more careful about caching of ~unknown attributes.
    
    --
    PiperOrigin-RevId: 143050533
    MOS_MIGRATED_REVID=143050533

[33mcommit d2549b11a00e7f498177993ca3aafc5d407181f8[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Dec 27 18:11:00 2016 +0000

    Make 'extract_locals' the default. Also rename to "show_library_calls" and invert.
    
    --
    PiperOrigin-RevId: 143039289
    MOS_MIGRATED_REVID=143039289

[33mcommit 5153034aadc8d2ae4c8447626753c01e6efd44b3[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Dec 27 18:08:26 2016 +0000

    Only record function calls for the function we're analyzing.
    
    --
    PiperOrigin-RevId: 143039145
    MOS_MIGRATED_REVID=143039145

[33mcommit 3d6f27cb6291d5d47386db10246e6ced3d9f095d[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Dec 27 15:44:10 2016 +0000

    Fix abc.pytd. (Add missing import)
    
    --
    PiperOrigin-RevId: 143030954
    MOS_MIGRATED_REVID=143030954

[33mcommit 85abd98caa7ccf05579656f898d284e0ac4f1d86[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 27 15:37:25 2016 +0000

    Add "from typing import Any" to a bunch of places.
    
    --
    PiperOrigin-RevId: 143030674
    MOS_MIGRATED_REVID=143030674

[33mcommit 5d0178fb5149c18e47195ae9b5ea3603cdfdf392[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Dec 23 01:02:21 2016 +0000

    Fix a bug in ParameterizedClass.get_instance_type.
    
    get_instance_type needs to first try to use the parameter types in
    the instance, falling back to the ParameterizedClass's parameters
    only when the instance is None.
    
    Since get_instance_type for PyTDClass, ParameterizedClass, and
    InterpreterClass are all pretty similar, I changed them to all
    call a common Class.get_instance_type.
    
    --
    PiperOrigin-RevId: 142811300
    MOS_MIGRATED_REVID=142811300

[33mcommit 86a5249352a3928678d0191648be760c4c3c913e[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Dec 22 22:49:16 2016 +0000

    Make sure we import 'Any' in the default pyi we generate.
    
    --
    PiperOrigin-RevId: 142801214
    MOS_MIGRATED_REVID=142801214

[33mcommit 9887587a2dee2b440791c44d4b418aabe79c5d31[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Dec 22 22:48:10 2016 +0000

    Rename tests/test_pytype.py to main_test.py.
    
    --
    PiperOrigin-RevId: 142801119
    MOS_MIGRATED_REVID=142801119

[33mcommit 30f647d00005230c36d3becbfea4c4397caf3c73[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Dec 22 22:08:29 2016 +0000

    Require explicit 'from typing import Any' before using Any.
    
    --
    PiperOrigin-RevId: 142797627
    MOS_MIGRATED_REVID=142797627

[33mcommit efc42de0c7bd8ec0dccaaa2040bc144c85a2e0d0[m
Author: Googler <noreply@google.com>
Date:   Thu Dec 22 20:35:19 2016 +0000

    Speedup pytypes by removing python land lookups.
    
    The removed __getattribute__ hook is called for most accesses to the Dict classes defined in utils.py.
    --
    PiperOrigin-RevId: 142789560
    MOS_MIGRATED_REVID=142789560

[33mcommit db094b73123331432aa47ddcc77aca554338d817[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 22 00:11:37 2016 +0000

    Implement abstract.Union.call
    
    --
    PiperOrigin-RevId: 142712322
    MOS_MIGRATED_REVID=142712322

[33mcommit 01f5c5e08b6c83517cc0d2ba5eb19679a9753f8a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Dec 21 23:00:41 2016 +0000

    Remove program.Freeze().
    
    Compressing CFGs was important when our CFGs were still long chains of
    singly-connected nodes, but they've become much more dense now, so we can do
    without.
    
    --
    PiperOrigin-RevId: 142705126
    MOS_MIGRATED_REVID=142705126

[33mcommit 7bfe566da2b48662e83062d4aa7757d682a0e30d[m
Author: Googler <noreply@google.com>
Date:   Wed Dec 21 14:58:14 2016 +0000

    Speedup constant processing by removing unnecessary calculations.
    --
    PiperOrigin-RevId: 142659765
    MOS_MIGRATED_REVID=142659765

[33mcommit 79f4a9d75cb2d7ba88363396d6e67cbbe4b4e38d[m
Author: Googler <noreply@google.com>
Date:   Wed Dec 21 14:54:36 2016 +0000

    Speed up processing.
    
    pytd.Print(self.pytd_sig) is expensive. Without the 'if' it is evaluated too often.
    --
    PiperOrigin-RevId: 142659560
    MOS_MIGRATED_REVID=142659560

[33mcommit 9f4231b2e6ee3843eed54143c50f9b2c921fa996[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 20 22:27:09 2016 +0000

    Add TupleType to pytd.py.
    
    Adds a TupleType that we'll use when parsing heterogeneous tuples.
    With this CL, we don't yet use our new container type anywhere; we
    just add it to pytd.py and our visitors and test that printing and
    verifying it both work as expected.
    
    --
    PiperOrigin-RevId: 142596980
    MOS_MIGRATED_REVID=142596980

[33mcommit 130f17cc1b2c094a18d60432e924c074d2b0e0b7[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Dec 20 17:21:06 2016 +0000

    Merge the 3 visitors that comprise AdjustTypeParameters into a single visitor.  This improves overall performance of pytype by about 5%.  This CL was written to maintain as much similarity as possible to the previous code, leaving additional optimization for later.
    
    --
    PiperOrigin-RevId: 142564388
    MOS_MIGRATED_REVID=142564388

[33mcommit 0cc8b912334c27871b8e7f1c9b8e0c15ef63ce75[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Dec 20 16:01:00 2016 +0000

    Remove the old pyi parser.
    
    --
    PiperOrigin-RevId: 142557132
    MOS_MIGRATED_REVID=142557132

[33mcommit bfa56a79763692d3b4e4b656396ffa239c5051e9[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Dec 20 15:11:04 2016 +0000

    Remove pytd/setup.py.
    
    --
    PiperOrigin-RevId: 142553406
    MOS_MIGRATED_REVID=142553406

[33mcommit 33b767f6fc3ca67d620091962fa70cfa15ead6c5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 19 22:22:51 2016 +0000

    Fix some tuple definitions in our pytd files.
    
    Replaces tuple[X] with tuple[X, ...], tuple[?] with tuple,
      def foo() -> tuple[X]  # tuple[X, X]
    with
      def foo() -> tuple[X, X],
    and tuple[X or Y] with tuple[X, Y] when it is obvious that the latter
    was intended. Also collapses a couple of
    "list[T] or set[T] or tuple[T] or ..."-type definitions to "Iterable[T]"
    and deletes tuple[nothing] when it appears in a union of homogeneous tuples.
    
    --
    PiperOrigin-RevId: 142486324
    MOS_MIGRATED_REVID=142486324

[33mcommit be7dcae304f71314021b122e02931cf34150ea19[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 19 19:06:42 2016 +0000

    Delete Print484StubVisitor.
    
    --
    PiperOrigin-RevId: 142465001
    MOS_MIGRATED_REVID=142465001

[33mcommit f3b04d916984a7addc66df306e924cf98bf11191[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Dec 17 01:09:56 2016 +0000

    Detect extra parameters on GenericType.
    
    --
    PiperOrigin-RevId: 142313991
    MOS_MIGRATED_REVID=142313991

[33mcommit 507203452d25a9d4a2c204e9e0f74941424b2210[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Dec 17 00:11:59 2016 +0000

    Fix parsing of typing.Tuple in typing.pytd.
    
    When parsing typing.pytd, we weren't making tuples homogeneous because
    we were checking for the name "typing.Tuple" instead of "Tuple".
    
    This change allows us to delete __builtin__.dict.popitem(), whose return
    type of "Tuple[K or V]" was hiding our incorrect parsing of the return
    type ("Tuple[K, V]") of the corresponding method in MutableMapping.
    
    --
    PiperOrigin-RevId: 142309127
    MOS_MIGRATED_REVID=142309127

[33mcommit b258d1a92a7e392990ebff569de865d0b778fb4d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Dec 16 18:43:02 2016 +0000

    Make __builtin__.tuple homogeneous.
    
    Changes both parsers to check for __builtin__.tuple in addition to
    typing.Tuple when deciding whether to make a HomogeneousContainerType.
    
    The definition of `dictionary-itemiterator`.next() previously had to
    use "tuple[K or V]" because "tuple[K, V]" was parsed into a
    heterogeneous tuple (causing testDictIterators in test_builtins2 to fail);
    it's now safe to switch to the slightly better definition.
    
    --
    PiperOrigin-RevId: 142274634
    MOS_MIGRATED_REVID=142274634

[33mcommit 29622afb2ad4b72728247241f55ea4e027b24a87[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Dec 16 15:14:11 2016 +0000

    Add metrics to track time spent per visitor class.  This required splitting up the visiting entry point vs. recurstion.  The entry point remains Visit(), while the recurtion is now via VisitNode().  I could only find one override to Node.Visit(), which was in a test.
    
    I wasn't sure whether to create a metric per visitor class or create a new MapDistribution metric.  The former was easier, but if we run into other use cases for a MapDistribution then it is probably worth refactoring metrics into two pieces: one that organizes the measurements (normal vs. map) and another that does the actual measurement (counter, stopwatch, distribution, etc).  Seemed like overkill without other use cases, though.
    
    --
    PiperOrigin-RevId: 142257010
    MOS_MIGRATED_REVID=142257010

[33mcommit cb20525fbfb615a88df9d699a9c4668aaa128b92[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 15 19:40:13 2016 +0000

    Improve the definitions of __builtin__.iter, list.__init__, tuple.__init__.
    
    --
    PiperOrigin-RevId: 142167840
    MOS_MIGRATED_REVID=142167840

[33mcommit 3385df2050edf59d29f8a6c1f85f25eb754f1abf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 15 00:07:13 2016 +0000

    Make tuple.__getitem__ and byte_UNPACK_SEQUENCE aware of tuple positions.
    
    --
    PiperOrigin-RevId: 142077296
    MOS_MIGRATED_REVID=142077296

[33mcommit a27738e6d4ce9e00e9a6f1513ab65f12ed2d898d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 14 23:22:19 2016 +0000

    Fix a typing.pytd matching issue.
    
    Skipping the typing->native conversion in typing.pytd causes us to
    fail to match a generator instance against typing.Iterator because
    the latter is converted to __builtin__.iterator, which isn't in the
    mro for generator
    ([__builtin__.generator, typing.Generator, typing.Iterator, ...]).
    
    --
    PiperOrigin-RevId: 142071556
    MOS_MIGRATED_REVID=142071556

[33mcommit 01c67ff5db8f5322a8d5ac0a0ff132c3cbc68a49[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 14 20:55:56 2016 +0000

    Add byte_GET_ITER's fallback to __getitem__ to byte_UNPACK_SEQUENCE as well.
    
    --
    PiperOrigin-RevId: 142052804
    MOS_MIGRATED_REVID=142052804

[33mcommit 49926fe41c6ae8ef738ac04d69b6e5f9e2e0eb17[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 14 19:08:46 2016 +0000

    Convert long values to instances of int in convert.py.
    
    --
    PiperOrigin-RevId: 142038696
    MOS_MIGRATED_REVID=142038696

[33mcommit f1ccba357695b4171dadb6fc0cfa065a26c0706e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 14 00:37:44 2016 +0000

    Improve abstract.Dict.compatible_with.
    
    --
    PiperOrigin-RevId: 141956400
    MOS_MIGRATED_REVID=141956400

[33mcommit 831a0eb9bfb85bc0af64142586f4d3eeffc685c8[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Dec 13 23:38:25 2016 +0000

    Add support for __getslice__.
    
    --
    PiperOrigin-RevId: 141949017
    MOS_MIGRATED_REVID=141949017

[33mcommit 06fe693cbe1f7437509818bead197346ff1bddb1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 13 22:13:08 2016 +0000

    Don't use "members" to store a Dict's values.
    
    Doing this was causing a goofy error where pytype thought, e.g.,
      {"a": 1, "b": 2}
    has attributes a and b.
    
    --
    PiperOrigin-RevId: 141938129
    MOS_MIGRATED_REVID=141938129

[33mcommit 5123062f6f019f98e526a62d16f12d5f8aeff790[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Dec 13 21:46:38 2016 +0000

    Copy common code from legacy parser to new parser.  This enables the deletion of the old parser at a later time.  It also eliminates some of the hacks that were in place to allow the new parser to call code from the old parser.
    
    * Mutator: copied and renamed to _Mutator
    * InserTypeParameter: copied and renamed to _InsertTypeParamters.
    * VerifyPythonCode: renamed, made a function instead of a method, slight code cleanup.  Wrote new tests in VerifyPythonCodeTest.
    * TryParseSignatureAsProperty: renamed, made a function, adjusted raising of errors.  Tests copied from ast_test into PropertyDecoratorTest and adjusted to work with the new test framework.
    * MergeSignatures: renamed, made a function, adjusted raising of errors.  I couldn't find clearly delineated tests, so I wrote new tests in MergeSignaturesTest that cover the various code paths.
    
    --
    PiperOrigin-RevId: 141934400
    MOS_MIGRATED_REVID=141934400

[33mcommit 9571a0966efbd3380a275393e40722885ce1dfc1[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Dec 13 21:27:42 2016 +0000

    Add basic set of functions to typing.Mapping and typing.MutableMapping.
    
    --
    PiperOrigin-RevId: 141931803
    MOS_MIGRATED_REVID=141931803

[33mcommit ed829295ec68cf6be54c703c49690436260f73e5[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Dec 13 19:25:33 2016 +0000

    Stop code paths at END_FINALLY if there's an exception pending.
    
    Also, set analyze_annotated to be the default, and make a logging message more
    intuitive.
    
    --
    PiperOrigin-RevId: 141917240
    MOS_MIGRATED_REVID=141917240

[33mcommit 21493d1d64e5e15a0d85f1669845bb17173e2ba9[m
Author: Googler <noreply@google.com>
Date:   Tue Dec 13 09:41:12 2016 +0000

    Improves the is_cmp heuristic around types.
    
    If two things have different types it is safe to assume that they do not have the same object identity.
    I.e. from
     type(a)!=type(b)
    it follows that
     id(a)!=id(b)
    and therefore
     a is not b
    
    The reverse is not true, as
     id(a)==id(b)
    does not follow from
     type(a)==type(b)
    
    --
    PiperOrigin-RevId: 141864390
    MOS_MIGRATED_REVID=141864390

[33mcommit 11361c9316cf05dac30080ad01f1cda5d4199ee2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 13 00:43:37 2016 +0000

    Get rid of maybe_convert_constant.
    
    --
    PiperOrigin-RevId: 141827295
    MOS_MIGRATED_REVID=141827295

[33mcommit 5104c02b0e02bd939f905052bda1a721a2e27301[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Dec 10 01:38:24 2016 +0000

    Add all of the containers from typing.pytd to typing.py.
    
    This change gets rid of the hard-coded list of containers in
    typing.py and instead has TypingOverlay.__init__ search through
    the pytd file for containers to add to its member map.
    
    Callable and Tuple are special cases that need their own classes.
    
    Since TypingOverlay.__init__ now does some computation, we store
    a TypingOverlay instance in our converter rather than creating a
    new one every time something is imported from typing.
    
    This change is a step toward fixing testBadGetitem, since the
    missing containers in typing.py were one of the main sources of
    the spurious errors found by byte_BINARY_SUBSCR.
    
    testBadGetitem has been moved from test_errors to test_checker;
    the original location was a mistake.
    
    test_typing now has a test that creates annotations using all of
    the containers in typing.pytd, plus a custom container, to verify
    that we don't encounter any errors while doing so.
    
    Some code shared by the converter and typing.py has been factored
    out into a convert_name_to_value helper method.
    
    --
    PiperOrigin-RevId: 141620144
    MOS_MIGRATED_REVID=141620144

[33mcommit feda274a56788cde0cdf8aabd0b569c7771ad044[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Dec 10 00:09:20 2016 +0000

    Make long an alias of int.
    
    --
    PiperOrigin-RevId: 141611937
    MOS_MIGRATED_REVID=141611937

[33mcommit 99a0d82014ee174675b86d27888b165b84a05d88[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Dec 9 22:58:30 2016 +0000

    Change to_pytd_def for ParameterizedClass to generate an alias.
    
    Previously, we were falling back to Class.to_pytd_def, which meant that
    for a definition like
      MyType = List[str]
    we were putting
      class MyType:
        pass
    in the pyi.
    
    --
    PiperOrigin-RevId: 141604000
    MOS_MIGRATED_REVID=141604000

[33mcommit ef8f4aa25190e3110aa5fe4b768f60c6ae4f4d0e[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Dec 9 22:43:33 2016 +0000

    Better pyi for dict.viewkeys().
    
    --
    PiperOrigin-RevId: 141602180
    MOS_MIGRATED_REVID=141602180

[33mcommit 9d9b5869e9ff4a79d33dd663fb68a73d502fa16b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Dec 9 22:22:39 2016 +0000

    Fix typing.Text (should be unicode in Python 2, not str).
    
    --
    PiperOrigin-RevId: 141599528
    MOS_MIGRATED_REVID=141599528

[33mcommit 3226bab84bb80c61d87fd63a68689d251c7c4d93[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Dec 9 21:51:02 2016 +0000

    Better definition for reduce()
    
    --
    PiperOrigin-RevId: 141595233
    MOS_MIGRATED_REVID=141595233

[33mcommit 5bc33af63cb15433063579c1cb45c2423f76400b[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Dec 9 20:16:27 2016 +0000

    Initial support for type comments:
    
    * Record type comments in Director.
    * Create Director in VM, rather than passing it in.
    * Add support for type comments on the line following a function.
    
    --
    PiperOrigin-RevId: 141585096
    MOS_MIGRATED_REVID=141585096

[33mcommit c2644a3d36b207e4595c3f0db7587332d391c3ee[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Dec 9 20:14:04 2016 +0000

    Replace ply-generated preconditions parser with a simple recursive descent parser.
    
    --
    PiperOrigin-RevId: 141584834
    MOS_MIGRATED_REVID=141584834

[33mcommit 63ebb37fab59972df95f3bdcaf6e2db13b14e349[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Dec 9 19:15:35 2016 +0000

    Be smarter about marking incomplete instances in init_class.
    
    --
    PiperOrigin-RevId: 141577708
    MOS_MIGRATED_REVID=141577708

[33mcommit 93fa73f21a6a87e0909a824dac0b8e0117820cc0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 8 22:23:52 2016 +0000

    Fix a bug in abstract._get_values.
    
    Empty type parameters aren't in the view, so _get_values needs to check
    for the existence of bindings.
    
    --
    PiperOrigin-RevId: 141483814
    MOS_MIGRATED_REVID=141483814

[33mcommit 519d717700df94a590eb0ed96d975e71b26a201e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 8 21:15:19 2016 +0000

    Call _process_one_annotation on late annotations as well.
    
    --
    PiperOrigin-RevId: 141475099
    MOS_MIGRATED_REVID=141475099

[33mcommit f7049770f523585583bdb2489701c790606151fd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 8 19:01:17 2016 +0000

    Adds support for passing a view to to_type and get_instance_type.
    
    When an unsolvable is among the possible values for a parameter
    that fails type matching, bad_matches prints "Any" for the parameter,
    hiding the bad value. This change adds a "view" argument to to_type
    and get_instance_type so that bad_matches can specify that only the
    bad value of a parameter be included when converting to a pytd type.
    
    --
    PiperOrigin-RevId: 141459179
    MOS_MIGRATED_REVID=141459179

[33mcommit a560c2d7a228a78f5cdd6a4f932768a58001f26c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 8 18:52:36 2016 +0000

    Improve the [bad-return-type] error message.
    
    Changes the message to the expected/actual types format used by
    the other function-related errors (e.g., [wrong-arg-types]).
    
    --
    PiperOrigin-RevId: 141457973
    MOS_MIGRATED_REVID=141457973

[33mcommit 013293b81bd3ceeb61bbde960f0a6e8795fdc661[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 7 19:24:15 2016 +0000

    Remove a pointless assignment from convert.py.
    
    Due to a recent change, we're accidentally setting
    self.primitive_class_instances[types.NoneType] to self.none in
    convert.Converter.__init__ twice. The more recent assignment
    (the one inside the loop) is the one we want to keep, since the
    loop updates self._convert_cache.
    
    --
    PiperOrigin-RevId: 141333495
    MOS_MIGRATED_REVID=141333495

[33mcommit cdfdcd5181bc4e6cd6a625645db1cc850a609eef[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 7 18:37:46 2016 +0000

    Clean up some of the code in matcher, matcher_test.
    
    Fixes the way ParameterizedClass's "formal" attribute is computed so
    that we don't have to allow formal types on the left when matching.
    
    Makes _match_value_against_type a private method of the matcher, since
    it's no longer used externally. match_var_against_type is kept public
    so that matcher_test can test it.
    
    Moves bad_matches before match_var_against_type so that the matcher
    methods that are used by other code (compute_subst and bad_matches)
    are at the top of the file.
    
    Makes some small improvements to matcher_test.
    
    --
    PiperOrigin-RevId: 141326624
    MOS_MIGRATED_REVID=141326624

[33mcommit 1f5ed31838eb9346353472e1019ca7083f0e5116[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 7 18:30:49 2016 +0000

    Fix a small bug in construct_constant_from_value.
    
    Fixes a bug where a ParameterizedClass's type parameter is accidentally
    set to a variable rather than an AtomicAbstractValue; adds an assert to
    matcher.py that would have caught this problem. (We can't assert in
    ParameterizedClass.__init__ that the type parameter values are all
    AtomicAbstractValue instances because ParameterizedClass.type_parameters
    is a LazyDict, and evaluating all of its values in __init__ could lead to
    an infinite loop.)
    
    --
    PiperOrigin-RevId: 141325565
    MOS_MIGRATED_REVID=141325565

[33mcommit 9a9b09ea8f99bd180e39870ce37e5d6a71a607ed[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Dec 7 18:20:24 2016 +0000

    Remove extra spaces and newlines from string annotations in error messages.
    
    --
    PiperOrigin-RevId: 141324118
    MOS_MIGRATED_REVID=141324118

[33mcommit bb96fd9d5823c201bd2aad4125078ff2e77457a9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 6 20:12:39 2016 +0000

    Have _print_as_expected_type extract PythonConstant values.
    
    For something like
      def f(x: List["Rollout"]): ...
      def g(x: 3): ...
    previously we would print
    
    Invalid type annotation <instance of str> for x. Must quote entire annotation.
    Invalid type annotation <instance of int> for x. Not a type.
    
    With this change, we print
    
    Invalid type annotation Rollout for x. Must quote entire annotation.
    Invalid type annotation 3 for x. Not a type.
    
    --
    PiperOrigin-RevId: 141209176
    MOS_MIGRATED_REVID=141209176

[33mcommit 5dcd8b72f1e6cd6a0251956e682a4e9052a26e02[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Dec 6 07:25:59 2016 +0000

    Better support for typing.Type.
    
    (Temporarily) adds Type to typing.py in order to flush out bugs
    that were hidden by our replacement of Type with unsolvable.
    
    Adds a special case to ParameterizedClass for instantiating Type[C].
    
    Implements get_class() for abstract.Union so that pytype doesn't
    crash on Type[Union[...]].
    
    Changes the abstract matcher to properly match, e.g., PyTDClass(int)
    against Type[Union[PyTD(int), PyTD(str)]].
    
    Makes Union.__repr__ print Union[<options>] instead of just "Union".
    
    --
    PiperOrigin-RevId: 141145387
    MOS_MIGRATED_REVID=141145387

[33mcommit 6ea2930da51dd3a7aa99ab410ec9566f8db89f14[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Dec 5 18:39:33 2016 +0000

    Move all pretty-printing of abstract values into errors.py.
    
    Previously our pretty-printing logic was spread across errors.py,
    vm.py, and various __str__ methods. Now all of it lives in errors.py.
    
    This refactoring also cleans up a few corner cases:
    
    1) Unknown and Unsolvable both print as "Any". (Before, Unknown
       printed as "Any" and Unsolvable as "unsolveable".)
    
    2) Nested classes print properly - so a Union of Type[int] and
       Type[str], say, prints as Union[Type[int], Type[str]] rather than
       Union[int, str].
    
    3) The [invalid-annotation] message is a bit friendlier.
    
    4) We use abstract.merge_values instead of arbitrarily grabbing
       var.data[0] when an instance parameter has multiple bindings.
    
    --
    PiperOrigin-RevId: 141069527
    MOS_MIGRATED_REVID=141069527

[33mcommit 4afa176a5130df4965b71acbaf2a5f8db6b4ac16[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Dec 2 16:54:33 2016 +0000

    setup.py: Add pytype.pyi to packages.
    
    --
    PiperOrigin-RevId: 140855109
    MOS_MIGRATED_REVID=140855109

[33mcommit f76def4e5ca9b6c023f2b07b39a8fe52be01701c[m
Merge: 07027f89 bffa86d0
Author: Matthias Kramm <kramm@quiss.org>
Date:   Fri Feb 10 07:08:34 2017 -0800

    Merge pull request #46 from gvanrossum/fix-setup
    
    typeshed/stdlib/2.7 has been moved to .../2.

[33mcommit bffa86d0f79be7564136dc24763970e06cd30293[m
Author: Guido van Rossum <guido@guido-mbp.corp.dropbox.com>
Date:   Fri Feb 10 06:57:34 2017 -0800

    typeshed/stdlib/2.7 has been moved to .../2.

[33mcommit 07027f89249f3a4891d951d04dd2bae5ee8d2e8d[m
Author: Matthias Kramm <kramm@quiss.org>
Date:   Thu Feb 9 07:33:16 2017 -0800

    update typeshed

[33mcommit 8d4d07787c0e15ac87244bd1cb439ad29cae5e03[m
Merge: 4e164ccd 04b8ec98
Author: Matthias Kramm <kramm@quiss.org>
Date:   Mon Feb 6 10:42:39 2017 -0800

    Merge pull request #44 from nodakai/patch-1
    
    Use an official Github URL in .gitmodules

[33mcommit 04b8ec9842ea7c06991588f2455c5498535359d1[m
Author: NODA, Kai <nodakai@gmail.com>
Date:   Mon Feb 6 15:32:25 2017 +0800

    Use an official Github URL in .gitmodules
    
    The former version had a problem with our proxy.

[33mcommit 4e164ccd00572469bd2356881ca9772726bc873a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Dec 1 15:26:57 2016 -0800

    add missing setup.py entry

[33mcommit 562b53afaffa9517ef713b8b7fc7f53b35834f0d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 1 21:49:14 2016 +0000

    Improve the definitions of __builtin__.generator and typing.Generator.
    
    Changes a generator to have three type parameters and its send method to
    be more precise
    (https://github.com/python/typeshed/blob/master/stdli[]/typing.pyi).
    
    Since it is common to specify only one parameter for a generator, this
    change also tweaks convert.py and typing.py to support specifying only
    some of the parameters to a generic and filling in unsolvable for the rest.
    
    --
    MOS_MIGRATED_REVID=140772693

[33mcommit 816a4f4182d86064ee293baaef0d7e9968220d97[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Dec 1 21:47:00 2016 +0000

    Also allow the PEP 526 syntax variant "x : type = ..."
    
    See https://github.com/python/typeshed/issues/653#issuecomment-264224673
    
    --
    MOS_MIGRATED_REVID=140772362

[33mcommit e2ef27b4ef5cc1a1023dd23fa4a44211890ae08f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Dec 1 21:12:10 2016 +0000

    Show a more helpful error message for some invalid annotations.
    
    For a bad annotation such as
      def f(x: 3): ...
    switches from reporting "int is not a type" to "An instance of int is
    not a type".
    
    --
    MOS_MIGRATED_REVID=140767517

[33mcommit a50bbcf5827e5347de3ddf59678a9cfeb29991a7[m
Author: Dave Baum <dbaum@google.com>
Date:   Thu Dec 1 20:13:41 2016 +0000

    Switch to new parser:
    
    * Added a check in new_type() to fail if Union/Optional don't have parameters.
    * Convert legacy ParseError to new ParseError.  This is necessary since some legacy code is still being used within the parser.  It will eventually go away.
    * Supply a non-None filename for _LEGACY to avoid a failed assertion.
    * Switch all consumers from pytype.pytd.parse.parser to pytype.pyi.parser.
    
    --
    MOS_MIGRATED_REVID=140761074

[33mcommit 68510e6989cfcaba70bf183c21a7b479e879f9c8[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Dec 1 16:18:29 2016 +0000

    Allow PEP 526 syntax in pyi.
    
    See https://github.com/python/typeshed/issues/653
    
    --
    MOS_MIGRATED_REVID=140732779

[33mcommit ce4e2b86b45f0fd017d5eb5cd4a66b5b1f2258fe[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 30 21:43:48 2016 +0000

    Fix return-checking for generators.
    
    Currently, pytype doesn't actually check the return type for a generator:
    for something like
      def f() -> Generator[int]: ...
    the return annotation is replaced with unsolvable because Generator is
    missing from typing.py.  This change adds Generator to typing.py so that
    pytype checks the return, and fixes the checking logic.
    
    Also deletes the unused "generator" attribute from state.Frame.
    
    --
    MOS_MIGRATED_REVID=140646039

[33mcommit e08541fceac62f829177eb12aa12cb3f04184890[m
Author: Dave Baum <dbaum@google.com>
Date:   Wed Nov 30 19:52:22 2016 +0000

    A few small parser fixes:
    * Ignore indentation of comments.
    * Make platform configurable.
    * Fix bug in how version tuples were normalized.
    * Build an error message for parser errors that aren't syntax errors.
    
    --
    MOS_MIGRATED_REVID=140632146

[33mcommit 19ceae0f9c634f671bdcee30dc70136b3b4a4a01[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 30 17:53:22 2016 +0000

    Report an error for a Union or Optional without parameters.
    
    We already don't allow
      def f(x: Union[]): ...
    so don't allow
      def f(x: Union): ...
    either.
    
    --
    MOS_MIGRATED_REVID=140616043

[33mcommit 31b86b56b17dad46bbefa474ea2a84654d94d780[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 29 22:36:55 2016 +0000

    Don't allow functions as annotations.
    
    --
    MOS_MIGRATED_REVID=140528357

[33mcommit fff7577e746e21704cbab42b634b0ee377b71182[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 29 22:08:26 2016 +0000

    Replace the classes in typing.py with abstract.py equivalents.
    
    Right now typing.py duplicates a lot of classes (e.g., there exists
    both an abstract.Union and a typing.Union; the type List[int] is
    represented as an abstract.ParameterizedClass when converted from pyi
    but as a typing.List value when converted from an inline annotation).
    
    With this change, the typing.py classes build their abstract.py
    equivalents when indexed into. For example:
    
    Old behavior:
      from typing import Union  # Creates a typing.Union object
      def f(x: Union[str, unicode]): ...  # Calls the getitem slot on typing.Union,
                                          # which returns a new typing.Union object
                                          # for use as the annotation for x.
    
    New behavior:
      from typing import Union  # Creates a typing.Union object
      def f(x: Union[str, unicode]): ...  # Calls getitem on typing.Union, which
                                          # returns an abstract.Union object for
                                          # use as the annotation.
    
    In cases in which the bare typing.py object is used as an annotation,
    VirtualMachine._process_one_annotation replaces it with the corresponding
    abstract.py class:
      from typing import List  # Creates a typing.Container(List) object
      def f(x: List): ...  # _process_one_annotation replaces
                           # typing.Container(List) with
                           # abstract.ParameterizedClass(List).
    
    To keep various tests passing, this change also
    * moves the logic for setting a ParameterizedClass's module from convert.py
      to ParameterizedClass.__init__,
    * changes the matcher to allow formal types on the left,
    * tweaks Instance.compatible_with to handle container instances with
      uninitialized type parameters.
    
    --
    MOS_MIGRATED_REVID=140524544

[33mcommit 506b37d04f934be772e866f2a65048824ce046ba[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Nov 29 20:35:16 2016 +0000

    Change all parsing calls to use parse_string() rather than instantiating a TypeDeclParser() directly.  This is in preparation for switching to the new parser.
    
    --
    MOS_MIGRATED_REVID=140512490

[33mcommit 52f5241b59418c9cc308da0a1edb70f3e9a4aa00[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 29 18:56:33 2016 +0000

    In call_function_in_frame, don't pop the frame after a crash.
    
    --
    MOS_MIGRATED_REVID=140499612

[33mcommit 06f743f13ad0e06598b40b6380affcb5220149e0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 29 17:55:31 2016 +0000

    Refine varargs/kwargs annotation used for argument type-checking.
    
    We were replacing the annotations with unsolvables so that pytype
    wouldn't complain about, e.g., getting a list instead of a tuple
    for varargs. With this change, we use Iterable and Mapping instead of
    unsolvables. Also changes InferenceTest.InferAndCheck to do the same
    optimizations as Infer.
    
    --
    MOS_MIGRATED_REVID=140490984

[33mcommit f84ce9486f0ae2f973a5e1d1d4a8b2bd3ba62b0f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 22 20:49:39 2016 +0000

    Replace hard-coded type parameters with abstract.py constants.
    
    --
    MOS_MIGRATED_REVID=139942685

[33mcommit bda827d1ae8f8ff3da8a8aad1d70d308570a7a28[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 22 20:46:53 2016 +0000

    Clean up some odds and ends related to abstract values.
    
    * Get rid of SimpleAbstractValue.overwrite_type_parameter.
    * Make sure unions are non-empty.
    * Drop the name argument to the Dict constructor.
    * Instead of aliasing VirtualMachine.loader.builtins to
      VirtualMachine.vmbuiltins, add a method lookup_builtin that
      looks for a given type in both builtins and typing.
    
    --
    MOS_MIGRATED_REVID=139942398

[33mcommit 102dbf6f288f44c83ae2ca98b056d99bd086d23c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 22 20:21:43 2016 +0000

    Catch ambiguous annotations inside containers.
    
    Also improves the [invalid-annotation] error message.
    
    --
    MOS_MIGRATED_REVID=139939992

[33mcommit ae88562041914dc78f525296a4673fc96732a668[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 22 20:00:00 2016 +0000

    Check all type parameters of a typing.Container when matching.
    
    --
    MOS_MIGRATED_REVID=139937541

[33mcommit 08f88ad26dbee464506921e4875713233aabcebb[m
Author: Googler <noreply@google.com>
Date:   Tue Nov 22 09:53:16 2016 +0000

    Teach pytypes about all None instances being the same.
    
    this enables code like
    def foo(x: Optional[str]) -> str:
      if x is None:
        return ""
      return x
    which before was not working, as pytypes did not know that NoneType only has one instance. By making that one instance a PythonConstant _is_or_is_not_cmp in state.py is able to know that all None instances are the same.
    
    --
    MOS_MIGRATED_REVID=139883512

[33mcommit 44607573cd85b746012125fd88db19c1e41e909f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 21 20:13:09 2016 +0000

    Always pop the frame that call_function_in_frame pushes.
    
    --
    MOS_MIGRATED_REVID=139815721

[33mcommit b7faede1c7df9eaf426cab125729d00fd35f9142[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Fri Nov 18 18:54:00 2016 +0000

    Added test that fails when leak terms show up in the opensource version
    
    Also cleaned up leak file and removed comment in json that can't be parsed for
    whatever reason.
    
    
    Also includes the following changes:
    
    Add parser_ext to setup.py, include all necessary files in the exported .tar.  By adding the genlex/genyacc rules as sources to the filegroup, their output files will be included.  However those outputs appear under genfiles, so we need to move them in build_tar.sh.  It is also necessary to scrub portions of the #include paths and #line directives to remove references to the [] directory structure.
    
    --
    MOS_MIGRATED_REVID=139598503

[33mcommit 6b2e7d62f9ab7326f7032c0212af9ab64092a8ce[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 17 20:50:43 2016 +0000

    Make sure __init__ is called when instantiating annotations.
    
    --
    MOS_MIGRATED_REVID=139494987

[33mcommit dc3081258270f0dc558b63e53877b16e4b6a9e66[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 17 20:38:57 2016 +0000

    Don't report an error for recursion caused by annotated __init__ args.
    
    In init_class, stop logging recursion error, and construct an incompletely
    initialized instance instead of an unsolvable upon encountering recursion.
    
    --
    MOS_MIGRATED_REVID=139493572

[33mcommit 266198338ec1a3ad3602321aee64ab421e9ab766[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 17 20:28:57 2016 +0000

    Improve check for existence of annotations in function.Signature.
    
    Consider an annotation present only if it is in the annotations dict
    (not late_annotations), and update has_return_annotation and
    has_param_annotations as appropriate when set_annotation is called.
    
    --
    MOS_MIGRATED_REVID=139492433

[33mcommit 5709197c8f425e9a424509240fcc089c028b9dc8[m
Author: Dave Baum <dbaum@google.com>
Date:   Thu Nov 17 20:21:32 2016 +0000

    Add a test that parses everything in typeshed.  This is similar to typeshed_test.TestTypeshedParsing, except that it uses the new parser.  Once the legacy parser is removed we will only need one set of these tests.
    
    --
    MOS_MIGRATED_REVID=139491585

[33mcommit 3e888f5d8282cb926c2d26a24dd6fe6bf814fb5d[m
Author: Dave Baum <dbaum@google.com>
Date:   Thu Nov 17 20:20:45 2016 +0000

    Some minor parser cleanup:
    
    * Moved RefHolder to its own include file.
    * Return a LEXERROR when indentation cannot be popped correctly.
    * Ensure that the error messages associated with LEXERROR are propagated through the parser.  This requires stashing the error message in the Lexer object because there is no way to access the parser stack from within the error function.
    * Enable verbose parser errors.
    
    --
    MOS_MIGRATED_REVID=139491514

[33mcommit 18779036e846f0d1ee1ed218d1b6b3c69f64f41c[m
Author: Dave Baum <dbaum@google.com>
Date:   Thu Nov 17 19:26:37 2016 +0000

    Add condition arg to get_attribute_generic() so that LOAD_ATTR will honor any enclosing conditions.
    
    --
    MOS_MIGRATED_REVID=139484835

[33mcommit 010c6d9b039453757f5550f1fcdd3e2f54f395d4[m
Author: Dave Baum <dbaum@google.com>
Date:   Thu Nov 17 16:39:28 2016 +0000

    Tweaking the debug output to make it a little more consistent.  Variables are always printed using "$id name", values as "#id text".  Previously this was true for single bindings but not multiple bindings which used a clumsier representation that printed the binding itself - an oversight when I reworked the code a while back.
    
    --
    MOS_MIGRATED_REVID=139464827

[33mcommit 7af4dac11a84c635ff07f4bd59e83cdc0e760c22[m
Author: Dave Baum <dbaum@google.com>
Date:   Wed Nov 16 22:43:57 2016 +0000

    Added a test for catching memory leaks.  Fixed one leak.
    
    --
    MOS_MIGRATED_REVID=139381288

[33mcommit 2f27531d91c04d25d3a072c4f61cd8709f19da99[m
Author: Dave Baum <dbaum@google.com>
Date:   Wed Nov 16 15:48:27 2016 +0000

    Add support for module names and pep484 translations.
    
    --
    MOS_MIGRATED_REVID=139329824

[33mcommit ebdb1fad3ab3f2af85c8b3747833fd574a1495c4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 15 23:17:10 2016 +0000

    Change None to NoneType in annotations.
    
    --
    MOS_MIGRATED_REVID=139254675

[33mcommit 8858eb92ede75c3e32c749657323e440d1e3c45d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 15 23:03:18 2016 +0000

    Postprocess varargs and kwargs annotations to give them the right types.
    
    Given an annotated definition like
      def f(*args: X, **kwargs: Y): ...
    the type of args is Tuple[X]; kwargs, Dict[str, Y]. Postprocesses
    annotations and late annotations to fix these types.
    
    --
    MOS_MIGRATED_REVID=139252643

[33mcommit 05ab9808e832e1bf0ed5d4a6eb3b95232c4abd18[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Nov 15 21:35:29 2016 +0000

    Improved error printing.  ParseErrors now include the filename, source text, and a pointer to the character position that caused the error.
    
    --
    MOS_MIGRATED_REVID=139240699

[33mcommit cfc3b33be2670b7f9e8b56b1a2c60a8ff568fc15[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Nov 15 20:09:59 2016 +0000

    Fix a couple lexer bugs:
    
    * Accept #\n as a comment.
    * Disable indent/dedent within parentheses.
    
    --
    MOS_MIGRATED_REVID=139231096

[33mcommit b39cb7d9b1f7770892a07e09909c7dd56562b52a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 15 19:57:21 2016 +0000

    Fix a bug in function.Signature.from_pytd.
    
    --
    MOS_MIGRATED_REVID=139229310

[33mcommit 9938dc88a7d595f477e661c0f4701714b7b7d12c[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Nov 15 19:36:09 2016 +0000

    Add support for "if" statements within class definitions.
    
    --
    MOS_MIGRATED_REVID=139226425

[33mcommit d4b52a4f4aede8a4b93a14cf9fabf0768b025433[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Nov 15 17:23:47 2016 +0000

    Minor refactor to make it easier to compare profiles between legacy and new parsers.
    
    --
    MOS_MIGRATED_REVID=139209284

[33mcommit fafa1c3db3a60729d0444f62592382f4c2d793f2[m
Author: Googler <noreply@google.com>
Date:   Tue Nov 15 16:44:37 2016 +0000

    Update the exit call definition.
    
    --
    MOS_MIGRATED_REVID=139205415

[33mcommit 08d9fa9c4368c7b0c0bed6780559fa5cbc391bf2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 14 21:33:14 2016 +0000

    Add a skipped test for a bug in VirtualMachine.byte_BINARY_SUBSCR.
    
    --
    MOS_MIGRATED_REVID=139113849

[33mcommit c1d978a83cea10650863a333a7a6b07d96f96df6[m
Author: Googler <noreply@google.com>
Date:   Mon Nov 14 16:08:14 2016 +0000

    Modules should be recognized as types.ModuleType.
    
    Problems: I don't know how to test this, test_pyi also passes with the types.ModuleType removed from the test. connection_pool.pyi can not be build with that removed but can with it in the code, therefore I believe that this work.
    
    Fix two issues:
    * Modules are types.Moduletype.
    * the Module check was after the SimpleAbstractValue check and therefore dead, as abstract.Module is a subtype of abstract.SimpleAbstractValue
    
    --
    MOS_MIGRATED_REVID=139074221

[33mcommit b4784befb01a61a25668b6f7cf3b0204e5d1b6ad[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 11 22:15:07 2016 +0000

    Support *args, **kwargs notation in InterpreterFunction.
    
    --
    MOS_MIGRATED_REVID=138917659

[33mcommit 3c6caf3c028e00e261b2653989f95199fc45d9e3[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Nov 11 22:11:59 2016 +0000

    Added support for TypeVar, fixed a bug in _validate_params, added test to check __builtin__.pytd.
    
    --
    MOS_MIGRATED_REVID=138917302

[33mcommit fd4e3e437970251ff6134efde43a51b4b313ef00[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 11 20:05:15 2016 +0000

    Descend into containers and unions in pytd template construction.
    
    --
    MOS_MIGRATED_REVID=138903583

[33mcommit f82e35a52d00d76c2e01c9dab68539152bbd9452[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Nov 11 17:28:57 2016 +0000

    dictionary-itemiterator should inherit from Iterator.
    
    --
    MOS_MIGRATED_REVID=138884494

[33mcommit d5c733282dbd725e49fcef5b4edd05760791f51d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 10 23:44:48 2016 +0000

    Do more conversions in ConvertTypingToNative.
    
    --
    MOS_MIGRATED_REVID=138815717

[33mcommit 00c812b1af14c95bc2556e1e029ccd231b521b22[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 10 20:29:12 2016 +0000

    Give a warning for type annotations with inner strings.
    
    --
    MOS_MIGRATED_REVID=138791020

[33mcommit fdbc2f4faeaaa04bd74c952c287df78495695470[m
Author: Dave Baum <dbaum@google.com>
Date:   Thu Nov 10 20:13:20 2016 +0000

    Implement top level if statements.
    
    --
    MOS_MIGRATED_REVID=138789449

[33mcommit e7c915e89457863c3f8ea691fe666637c4c178e8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 10 19:12:35 2016 +0000

    Refactor some of the return-checking logic.
    
    --
    MOS_MIGRATED_REVID=138781609

[33mcommit d723eae4d8da45dc68eceae13028a2cd49b3249e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 10 18:55:41 2016 +0000

    Replace actual return types with annotations.
    
    --
    MOS_MIGRATED_REVID=138779376

[33mcommit 853b236a6ec68b7b4086e342c96f42634ad4d189[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 9 22:57:20 2016 +0000

    Remove os/path.pytd.
    
    --
    MOS_MIGRATED_REVID=138689585

[33mcommit aee8e8441abd46fb79c8fd8ea95e15822a64ac3e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 9 19:11:02 2016 +0000

    Allow matching of empty variables to always succeed.
    
    --
    MOS_MIGRATED_REVID=138660983

[33mcommit 3ddb0220fbc321100e09c2517371818283d97132[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Nov 9 18:55:39 2016 +0000

    Include optional args in argument dictionary for InterpreterFunction.
    
    --
    MOS_MIGRATED_REVID=138658920

[33mcommit 981e13a0cada215def3953bd77943ea167b61fa7[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Nov 8 22:57:23 2016 +0000

    Use %union and declare types for tokens and nonterminals.  We only have one stack value type (PyObject*), but this also lets bison distinguish between symbols that do not have a value (keywords, punctuation, etc) and those that do.  This in turn leads to more meaningful warnings about $x values that are not used or setting a $$ value illegally.  Overall it means a little more work adding most new nonterminals to a %type directive, but will make it easier to spot legitimately leaked python object lvals and cases where there is no actual python object.
    
    --
    MOS_MIGRATED_REVID=138569232

[33mcommit 6633e090e8f2d2677367ba7e4610ea7d3c6401ca[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 8 19:43:44 2016 +0000

    Allow an empty variable to match against any class.
    
    --
    MOS_MIGRATED_REVID=138544396

[33mcommit 3c60cc90160c6b5ea2ed78bbf4259f5b4035fe61[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 8 19:13:47 2016 +0000

    Make argument-checking in PyTDFunction and InterpreterFunction more similar.
    
    Changes the way argument types are checked by InterpreterFunction.call(...)
    to match PyTDFunction.call(...). Shared logic for checking is in
    Function._match_args, which calls _match_view which the two function
    subclasses override. PyTDSignature._compute_subst has been moved into
    matcher.py so that both classes can use it.
    
    Moves some matching logic from match_var_against_type to
    match_value_against_type in order for matching to continue working for
    types in typing.py.
    
    Changes the way passed args are printed for InvalidParameters errors so
    that all bindings for an argument are printed, not just the first one.
    Otherwise testUnion in test_errors.py breaks.
    
    In pyi, something such as
      # foo.pyi
      def f(x: str) -> None
      # bar.py
      if __any_object__:
        x = ""
      else:
        x = 0
      foo.f(x)
    passes type-checking, so testErrorOnAmbiguousArg in test_annotations.py
    has been edited to test that annotated functions have the same behavior.
    
    Increases the shard count for test_errors.py because it timed out during
    one of my test runs.
    
    --
    MOS_MIGRATED_REVID=138540344

[33mcommit 08bc280bdd9faa3f5a766bb618943f22118fb11e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Nov 7 23:47:39 2016 +0000

    Make the [attribute-error] message more helpful.
    
    --
    MOS_MIGRATED_REVID=138450555

[33mcommit 60adc43bee526f64777dc74876034c545694bc65[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Nov 4 21:38:24 2016 +0000

    Support for metaclasses.  The original productions were a bit clumsy, so refactored to treat parents as a list of args, where the individual args are either a parent type or a keyword tuple.  This leads to a little more checking on the Python side, but has less redundant code overall.
    
    Add pass_or_ellipsis as suggested earlier.
    
    Register class names so that they may shadow pep484 names.
    
    Add a test that aliases are used in new_type().  This was implemented long ago but never explicitly tested.
    
    --
    MOS_MIGRATED_REVID=138235850

[33mcommit d8e29e8566aaf5e47149f908fcacb646e89e5a69[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Nov 4 17:11:06 2016 +0000

    Basic support for classes.  There are still a few things not implemented, but the CL was already getting rather large.
    
    Also fixed a bug where an empty return clause should be AnythingType and not the None object.
    
    --
    MOS_MIGRATED_REVID=138202682

[33mcommit ea5b99df843bd35c9b07642a4f67e9cade0d7afd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 4 02:01:28 2016 +0000

    Delete cStringIO.pytd in favor of typeshed's cStringIO.pyi.
    
    --
    MOS_MIGRATED_REVID=138147211

[33mcommit a304845c43c9dcbcbc9b48fc8e607363de92cb49[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Nov 4 01:29:47 2016 +0000

    Warn that importing a TypeVar is not yet supported.
    
    --
    MOS_MIGRATED_REVID=138145290

[33mcommit 112bb5d18d85432d86d356617960c54c074f1966[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Nov 3 21:12:40 2016 +0000

    Replace actual argument types with annotations when calling a function.
    
    --
    MOS_MIGRATED_REVID=138116116

[33mcommit 1ad998fd61d08ba218de4af42c4a491d2fdef95f[m
Author: Dave Baum <dbaum@google.com>
Date:   Thu Nov 3 20:59:14 2016 +0000

    When an instantiation results in multiple bindings, call __init__ on each one indepdently.  This fixes a problem where arguments of type Union were not fully initialized.
    
    --
    MOS_MIGRATED_REVID=138114203

[33mcommit 851e8fb2d0eebc4b84b63e8c35fa93e30085a4a2[m
Author: Dave Baum <dbaum@google.com>
Date:   Wed Nov 2 20:10:53 2016 +0000

    Refactor tests into separate classes and a few more methods.  This keeps the test better organized and makes failure messages more meaningful.
    
    --
    MOS_MIGRATED_REVID=137983184

[33mcommit fe57c5fe7311682091774526ab263ff950826519[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 1 21:20:57 2016 +0000

    Don't report attribute errors for incompletely initialized instances.
    
    With --quick, the VM sometimes hits maximum depth and aborts analysis
    before an instance has been completely initialized. In this case, the
    instance may have attributes that we don't know about, so return
    unsolvables for attributes we can't find rather than reporting errors.
    
    --
    MOS_MIGRATED_REVID=137870745

[33mcommit 38ff664b80257d607aae8ba94b3e7a040b977dbe[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Nov 1 20:57:30 2016 +0000

    Build a list of constant/func definitions instead of adding them to the peer.  This is preparation for adding classes, which will require their own list of constants and functions.
    
    --
    MOS_MIGRATED_REVID=137867488

[33mcommit 253d9e4c6bc60bf4ee8f7e938b093516abe4dd07[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Nov 1 20:56:20 2016 +0000

    Make UNARY_NOT a little smarter.
    
    --
    MOS_MIGRATED_REVID=137867354

[33mcommit 01273b4c8be017700f3e216b0b4b5d0f280913d5[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Nov 1 20:03:32 2016 +0000

    Fix --output-debug so that it also works in --check (this has probably been broken since the infer/check refactor).
    
    --
    MOS_MIGRATED_REVID=137860425

[33mcommit 105e68dbe1cc8e71018f0659ddc569258cf47e91[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Nov 1 18:20:17 2016 +0000

    Handle recursion more gracefully.
    
    Reports a pytype error rather than crashing if recursion is encountered
    while constructing or instantiating a class.
    
    --
    MOS_MIGRATED_REVID=137847134

[33mcommit f1a02f4df51a9416c8ec55ed2f469336dfa8c3e2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 31 18:29:56 2016 +0000

    Analyze __init__ and __new__ even when they have type annotations.
    
    We can miss a lot of attribute initialization when we skip these.
    
    --
    MOS_MIGRATED_REVID=137726737

[33mcommit d31dacc8afcc2537bcedf341e7f3ec2467a7c978[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Oct 28 20:37:29 2016 +0000

    Added support for PYTHONCODE.
    
    --
    MOS_MIGRATED_REVID=137547260

[33mcommit 2022075e4b33635130eba4218a6aaa44cd630424[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Oct 28 20:31:56 2016 +0000

    Added support for NamedTuple.
    
    --
    MOS_MIGRATED_REVID=137546607

[33mcommit 74a366f3a2980bf6f3ef161d271b3d19beaa6a0b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Oct 28 02:03:10 2016 +0000

    Better printing for abstract.Union in error messages.
    
    We were printing things like
      Union[<instance of NoneType>, <instance of int>, <instance of str>]
    when we would rather have
      Union[None, int, str]
    . This change also moves most of the pretty-printing logic out of errors.py
    and into the __str__method of atomic abstract values.
    
    --
    MOS_MIGRATED_REVID=137469743

[33mcommit b920ddb29509a470d89a079add29dffb46f3118e[m
Author: Dave Baum <dbaum@google.com>
Date:   Thu Oct 27 22:25:37 2016 +0000

    Filter out ignored decorators, raise ParseError on invalid ones.
    
    --
    MOS_MIGRATED_REVID=137449127

[33mcommit 83830b97cb78262506b6fabf4f14a88ef5d29fd0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 27 18:58:41 2016 +0000

    Allow super to be called with Any as the class.
    
    --
    MOS_MIGRATED_REVID=137422700

[33mcommit 7afc3d07c736b07ca6bbb66c80ccbd6fe78b9769[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 27 18:54:05 2016 +0000

    Don't prematurely abort type matching upon encountering an Unknown in an MRO.
    
    --
    MOS_MIGRATED_REVID=137422171

[33mcommit 4cbcbc7a2ffd0c8f012d1f5ad3e70c1bb0ef4f9e[m
Author: Dave Baum <dbaum@google.com>
Date:   Thu Oct 27 04:02:39 2016 +0000

    Add support for implied tuples when a base type is not specified for a parameterized type.
    
    --
    MOS_MIGRATED_REVID=137354567

[33mcommit decbb4853e0c43ebc90a5916fa6e532f9f5216be[m
Author: Dave Baum <dbaum@google.com>
Date:   Thu Oct 27 00:02:42 2016 +0000

    Added support for functions.  Also fixed a bug in SetErrorLocation that was calling the peer twice.
    
    --
    MOS_MIGRATED_REVID=137338690

[33mcommit 787bf1ef50ddb113e14d0104e06302a7e4b43e62[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 26 20:53:46 2016 +0000

    Fix our definition of __builtin__.set.__init__.
    
    --
    MOS_MIGRATED_REVID=137315497

[33mcommit 489532d91f1b55567e85bee941c3c696d8237913[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 26 20:05:24 2016 +0000

    Support setting a class's metaclass via the __metaclass__ attribute.
    
    Also changes TypeNew.call to build new-style rather than old-style
    classes. (This was a bug.)
    
    --
    MOS_MIGRATED_REVID=137309485

[33mcommit 1dabd9da21fefd6209f7b5e4478861629256c859[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 25 23:37:08 2016 +0000

    Include metaclasses in our pyi output.
    
    When converting InterpreterClass to a pytd definition, sets the pytd
    class's metaclass field when the metaclass is not "type" and is not
    inherited. Also updates our parser and abstract matcher to handle
    unions in metaclasses (e.g.,
      class A(metaclass=X or Y): ...
    ), which pytype can now output.
    
    --
    MOS_MIGRATED_REVID=137218444

[33mcommit 58db831fb3002dc4acdcb508b55dd0bf186b877f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 25 21:15:10 2016 +0000

    Print instance type parameters in error messages.
    
    --
    MOS_MIGRATED_REVID=137201203

[33mcommit 564255670cf6ec76699402ba0225bfef37577142[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 25 17:50:05 2016 +0000

    Add __all__ to typing.pytd.
    
    --
    MOS_MIGRATED_REVID=137175388

[33mcommit 173a9f27b98cd1b99b70d6096ffef5ca5b54da46[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 24 17:01:24 2016 +0000

    Make type(x, y, z) build a new class when possible.
    
    Also changes abstract.Dict to use members rather than _entries to make
    it play nicely with vm.VirtualMachine.make_class and adds a skipped test
    for a bug caused by str.__new__ having a return type of str rather than
    the current class.
    
    --
    MOS_MIGRATED_REVID=137045278

[33mcommit f32d62da726f7269fe6099513f39cec06ccf667b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Oct 24 14:30:49 2016 +0000

    Check return values of Dict against the CFG.
    
    --
    MOS_MIGRATED_REVID=137027386

[33mcommit 677b3b9a38889f41ef08460c1d8c5d47d4da3907[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Oct 21 21:47:44 2016 +0000

    Refactor PyTDFunction.call to do all matching at the beginning.
    
    --
    MOS_MIGRATED_REVID=136875866

[33mcommit a8101926285785c5bf5d09cfdcbc601ce8aa9de8[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Oct 21 20:39:55 2016 +0000

    Make node visiting more efficient by only visiting portions of the tree that can possibly contain the types of interest to the visitor.  This relies on the precondition type checking data to establish which types may appear at various places in the AST.
    
    --
    MOS_MIGRATED_REVID=136867896

[33mcommit 556b3de4272cf08c6225ad3accb54508db14ab07[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Oct 21 19:15:50 2016 +0000

    Fix definitions of os.environ and os.getenv.
    
    --
    MOS_MIGRATED_REVID=136859181

[33mcommit b0efc26b52960a25fcf004ab6c19f50664751955[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Oct 21 18:07:58 2016 +0000

    Adjust definition of pathconf().
    
    --
    MOS_MIGRATED_REVID=136851749

[33mcommit a3684e520a8c7e31eff4c0d8ed46fc74e3451d60[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Oct 21 16:37:11 2016 +0000

    First step in new parser: supports constants, aliases, and imports.
    
    --
    MOS_MIGRATED_REVID=136840785

[33mcommit c661bd5ae10087a2a9319e95b1b7cbffddca01c8[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Oct 20 23:45:27 2016 +0000

    Support --main together with --check.
    
    --
    MOS_MIGRATED_REVID=136777030

[33mcommit 76dc29bde7758729b0fcd6dbe31b69e2727e4936[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Oct 20 21:57:55 2016 +0000

    Clean up WITH_CLEANUP.
    
    --
    MOS_MIGRATED_REVID=136764503

[33mcommit 370b00e61b48428225a589f605c8a75009df45d9[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Oct 20 21:38:03 2016 +0000

    Add methods to typing.IO.
    
    --
    MOS_MIGRATED_REVID=136761909

[33mcommit 0a1b8cd6cd342f0bf7b6e50cf2360ac25553bc19[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Oct 20 20:29:25 2016 +0000

    Improve handling of 'break' and 'continue'.
    
    --
    MOS_MIGRATED_REVID=136752697

[33mcommit f4171b337f6a01d18299c70819938d59e9634e10[m
Author: Dave Baum <dbaum@google.com>
Date:   Thu Oct 20 20:20:17 2016 +0000

    Fix compute_predecessors() to work correctly even when the first node is not a root.
    
    --
    MOS_MIGRATED_REVID=136751550

[33mcommit bb47fa7260d857e03432b462cf86095f47e2fd9b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 20 17:40:54 2016 +0000

    Raise TooComplex if variable_product_dict encounters too many combinations.
    
    --
    MOS_MIGRATED_REVID=136731423

[33mcommit fda4180e9fb948caa88b091989e7006d8bd281dd[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Oct 20 16:26:50 2016 +0000

    Upgrade typeshed to 3253d3cc46c9cd7a04451974cb495fa7f2a527c7.
    
    --
    MOS_MIGRATED_REVID=136722553

[33mcommit 30ad77f4341fd36b721e3b92edee0f89c54c8faf[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 19 18:39:47 2016 +0000

    Don't use __getattr__ or __getattribute__ for magic methods.
    
    --
    MOS_MIGRATED_REVID=136621448

[33mcommit 2308b191d76ec953092c140455a24802d7daa722[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 19 04:13:29 2016 +0000

    Support matching of abstract.Union.
    
    --
    MOS_MIGRATED_REVID=136555760

[33mcommit faa6478360b984a226e947e6bad441c7022cc35d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 19 02:19:17 2016 +0000

    Allow attribute computation on unsolvables.
    
    --
    MOS_MIGRATED_REVID=136549550

[33mcommit ca74cfdbe5231d61818f8dbaa80668a8c8f5e432[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Oct 18 17:47:09 2016 +0000

    Fix super() call.
    
    --
    MOS_MIGRATED_REVID=136491442

[33mcommit ae4b93784d51d5c442f212ebe9a6bea2bea39c96[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Oct 18 17:45:33 2016 +0000

    Pass 'condition' to call(). Hide impossible combinations, in bad_matches().
    
    --
    MOS_MIGRATED_REVID=136491214

[33mcommit a3faa27b1849416d6aa542ab792d1c75ff3a32a4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 18 17:41:50 2016 +0000

    Add to_type for abstract.IsInstance.
    
    --
    MOS_MIGRATED_REVID=136490752

[33mcommit 30c3758fa13942be166c30cf37a5b84b31a7cb69[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 18 17:04:25 2016 +0000

    Make calling type() on an instance return its class.
    
    --
    MOS_MIGRATED_REVID=136485631

[33mcommit 89ce8019109065ec48a71f82cec78f50f53b2028[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 18 16:55:38 2016 +0000

    Use "type" as default metaclass.
    
    A side effect of this change is that ValueWithSlots._self, and therefore the
    valself argument to get_special_attribute, are no longer needed.
    
    --
    MOS_MIGRATED_REVID=136484424

[33mcommit 4ce433f55ad16c1321a0d9bcecc523ebd79dfb97[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 18 00:20:21 2016 +0000

    Treat classes more like instances for get_class_attribute.
    
    --
    MOS_MIGRATED_REVID=136417679

[33mcommit f2f9ead2e2fb5a4389e224663caf9787a6de27b5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 17 20:02:35 2016 +0000

    Partial support for analyzing __new__.
    
    Calls __new__ in Interpreter/PyTDClass.call(...) when __new__ is "interesting"
    (i.e., not object.__new__ and not ambiguous or empty). Doesn't analyze __new__
    in infer.py.
    
    --
    MOS_MIGRATED_REVID=136385099

[33mcommit 2b05b83bf2d51b33617d1b53c51630bc7b778835[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Oct 17 18:55:28 2016 +0000

    Allow to call HasCombination() on a program that's not frozen.
    
    --
    MOS_MIGRATED_REVID=136377348

[33mcommit 77e69fec614e43e0f03ea515af765a8a51481b3e[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Oct 17 18:07:15 2016 +0000

    Make the solver aware of conflicting goals hidden in the origins of other goals.
    
    --
    MOS_MIGRATED_REVID=136370820

[33mcommit 5226576429a8f018d0367ccda831b407e7bcd241[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Oct 17 17:02:26 2016 +0000

    Small miscellaneous fixes.
    
    Make the definition of bytearray.join more precise; call optimize.Optimize with
    the right arguments in pytd/main.py; in abstract.py, add __repr__ for
    BoundFunction and tweak __str__/__repr__ so that we have to write
    __str__ = __repr__ only for classes that inherit from Instance rather than for
    everything that inherits from SimpleAbstractValue.
    
    --
    MOS_MIGRATED_REVID=136362594

[33mcommit 0f6ce2fdb19a4bda1c3ec7687ab27cc7c370d1b5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Oct 14 21:21:33 2016 +0000

    Make sure values' official names don't depend on the order they're set in.
    
    --
    MOS_MIGRATED_REVID=136197854

[33mcommit 09be19bdb1b7779684b9615c795aef5a097ac8e6[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Oct 14 20:34:35 2016 +0000

    Increase depth of "--quick --check" to 2.
    
    --
    MOS_MIGRATED_REVID=136192127

[33mcommit f0e0f9db917a35916f4584690f2d65cf01962432[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Oct 14 20:31:56 2016 +0000

    Improve definition of str.join and unicode.join.
    
    Allow joining of empty lists, limit allowed types for unicode.join.
    
    --
    MOS_MIGRATED_REVID=136191837

[33mcommit 052049947a03bd04671ebd806567fa1c679c6261[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Oct 14 20:31:13 2016 +0000

    During type inference, don't analyze methods that already have annotations.
    
    --
    MOS_MIGRATED_REVID=136191769

[33mcommit 21c4ca07b6c0c8605cc08cef4a58283021ad6dbd[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Oct 13 17:39:15 2016 +0000

    Remove posix.pytd
    
    --
    MOS_MIGRATED_REVID=136057606

[33mcommit 6c884008b15fbe4d5c06c76a740f33b983cb8b75[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 13 00:35:36 2016 +0000

    Check for __getattribute__ before looking up instance members.
    
    --
    MOS_MIGRATED_REVID=135984560

[33mcommit fd39df12f2a87598480c886d2291a7f36c3c4245[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Wed Oct 12 19:58:09 2016 +0000

    Replace os.pytd with tweaked version of typeshed's os/__init__.pyi
    
    --
    MOS_MIGRATED_REVID=135951166

[33mcommit 5e1fa8817103c2d7651803e0e37d2dc1ea171147[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Oct 12 16:35:36 2016 +0000

    In the definition of the "str" builtin, make more use of 'basestring'.
    
    --
    MOS_MIGRATED_REVID=135926142

[33mcommit f0bace7e8f126a1a697343e33841d20602c56dbb[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Oct 11 21:18:32 2016 +0000

    Add "# pytype: enable=foo" style directives to re-enable disabled errors.
    
    --
    MOS_MIGRATED_REVID=135840178

[33mcommit bb87ec200327f88fb0b369d15416b6040e036389[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 11 06:45:49 2016 +0000

    Switch to typeshed's resource module.
    
    --
    MOS_MIGRATED_REVID=135765173

[33mcommit f84e0e2eeaa31940819c861676ff1114da36ce47[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Oct 11 00:02:00 2016 +0000

    Print better error messages for invalid function calls.
    
    Use the first error rather than the last for a function with
    multiple signatures, and always print the expected and actual args.
    
    --
    MOS_MIGRATED_REVID=135739438

[33mcommit 103ab624634465ea8613697407455cf61c76b380[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Oct 7 22:32:05 2016 +0000

    In get_type_key, don't assume that an instance has only one possible class.
    
    --
    MOS_MIGRATED_REVID=135525268

[33mcommit 403188da8087bada888bec25a65974cdde55f2d2[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Oct 7 21:11:38 2016 +0000

    Move abstract_match.py to matcher.py. Add matcher_test.py.
    
    --
    MOS_MIGRATED_REVID=135515655

[33mcommit 5be62aec5242e15fb06641bb0fd2938488afe953[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Oct 7 21:03:15 2016 +0000

    Include parameter names, ignore "None" in passed_args argument to WrongArgTypes.
    
    --
    MOS_MIGRATED_REVID=135514613

[33mcommit 34805779c8ea04c9eaeecb1ca6cfebcaa5fc319f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Oct 7 20:06:34 2016 +0000

    Make too-complex errors more precise.
    
    Report too-complex errors on individual lines so that the rest of a
    program can still be analyzed.
    
    --
    MOS_MIGRATED_REVID=135508379

[33mcommit e70b654b22813d9876f17844439446bcd0303ac8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Oct 7 17:05:49 2016 +0000

    Improve definition of __builtin__.filter
    
    --
    MOS_MIGRATED_REVID=135487474

[33mcommit b0137b06732c5c070658f013faa86cd969386f55[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Fri Oct 7 03:14:52 2016 +0000

    Add __debug__ to __builtin__.pytd
    
    https://docs.python.org/2/library/constants.html
    
    --
    MOS_MIGRATED_REVID=135437552

[33mcommit 6254423571bbd6f95e0b619568a7ff04c9b667f4[m
Author: Dave Baum <dbaum@google.com>
Date:   Thu Oct 6 18:46:04 2016 +0000

    Initial version of the fast PYI lexer.  The parser.y grammer is just a placeholder used only because tokens are defined there.
    
    --
    MOS_MIGRATED_REVID=135385392

[33mcommit db68fa1d8b2af3c8b6807683274779d801bcf446[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Oct 6 02:40:56 2016 +0000

    Make --abort-on-complex the default.
    
    --
    MOS_MIGRATED_REVID=135312825

[33mcommit c37003b2ee0cb6e8a15096bbca3d1d73ac226d55[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Oct 6 02:39:08 2016 +0000

    Unskip tests that work now.
    
    --
    MOS_MIGRATED_REVID=135312752

[33mcommit 8608f81b445fdd9fed5d0065619d3e91ec489cfc[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 6 01:04:47 2016 +0000

    Instantiate Type[C] to C.
    
    Allows pytype to analyze things like
      def f(x: Type[C]) -> Type[C]
    and
      A = ...  # type: Type[C]
      x = A()
    more effectively. Also adds an enum.unique method.
    
    --
    MOS_MIGRATED_REVID=135306712

[33mcommit c045802226e630b1458f65f80cb74a3c6bef8ad5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 6 00:32:45 2016 +0000

    Add __getattribute__ and __getattr__ to object.
    
    --
    MOS_MIGRATED_REVID=135303582

[33mcommit 5cbc9bab1d0fec36bd924850427beeada024c314[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Oct 6 00:17:53 2016 +0000

    Move get_attribute related code into a separate module.
    
    --
    MOS_MIGRATED_REVID=135302083

[33mcommit a23ee84133839415e72a1a3db7a8cb80aeeff91f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 5 22:48:37 2016 +0000

    Convert classes to Type[...] rather than just type.
    
    --
    MOS_MIGRATED_REVID=135291320

[33mcommit 78972e25e5b941ab0643a4cd212ff3c57aa39b95[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Oct 5 18:47:00 2016 +0000

    Move abstract matching code into its own module.
    
    Having match functions scattered throughout a 3000+ line file
    was making it hard to find things.
    
    --
    MOS_MIGRATED_REVID=135259555

[33mcommit 28d7b9e761a947d8da96f9460440adc3531bb3a9[m
Author: Googler <noreply@google.com>
Date:   Mon Oct 3 14:04:11 2016 +0000

    Make the fget parameter for property optional.
    
    The method is defined as
    class property([fget[, fset[, fdel[, doc]]]])
    https://docs.python.org/2/library/functions.html#property
    
    --
    MOS_MIGRATED_REVID=134979955

[33mcommit 56d72d3ce628916f32a9e16d4cdb7f2a4ccfeac7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 30 23:26:49 2016 +0000

    Return an unsolvable when there are no combinations for a function call.
    
    --
    MOS_MIGRATED_REVID=134841416

[33mcommit 4b70c0f23877205166223cd990af902984e7d52b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Sep 30 23:12:47 2016 +0000

    Add some cfg debugging code.
    
    * New method AsciiTree() on Node objects.
    * Add "log" module-level constant to cfg.py
    * Improve __str__ and __repr__ of Binding.
    
    --
    MOS_MIGRATED_REVID=134839958

[33mcommit e325e23a8ded180c98c54ae5f553cc3c7baaeca7[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Sep 30 22:33:56 2016 +0000

    Be careful about not caching anything that contains Variables.
    
    --
    MOS_MIGRATED_REVID=134835675

[33mcommit d5a7adb6be5ad3fe05044b839b42ea2ccf75e525[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Sep 30 00:49:01 2016 +0000

    Filter argument combinations at current CFG position.
    
    This fixes a bug where we call a method with arguments that weren't actually
    visible in the CFG.
    
    --
    MOS_MIGRATED_REVID=134732274

[33mcommit e0b66d4fb6c6800689e52fb8f5744deb7424b3b0[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Sep 29 23:31:34 2016 +0000

    Skip flaky testAttrWithBadGetAttr.
    
    --
    MOS_MIGRATED_REVID=134724713

[33mcommit ef9dc4fdb547e861cc7813eb00e2c3d2437b26e4[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Sep 29 21:43:36 2016 +0000

    Add test case for attributes that contain a __getattr__.
    
    --
    MOS_MIGRATED_REVID=134711102

[33mcommit 6e38e372c5c7e1ddac52679f40327d2dff618817[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 29 18:59:59 2016 +0000

    Return None for the variable when Class.get_attribute can't find an attribute.
    
    --
    MOS_MIGRATED_REVID=134689872

[33mcommit e42659992908c0c671aa82794ab12e2507aaf6a5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 29 18:07:53 2016 +0000

    Improve definition of __builtin__.reversed.
    
    --
    MOS_MIGRATED_REVID=134682670

[33mcommit 5d16e4da39ed1a60131c7b250c14efd636e73e69[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 29 00:43:48 2016 +0000

    Improve the definition of __builtin__.sum.
    
    --
    MOS_MIGRATED_REVID=134605447

[33mcommit 2cdd3c1dce5766098040e888f47072c9d88b9bb1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 29 00:35:02 2016 +0000

    Fix a bug in CallTracer._call_traces_to_functions.
    
    This method was getting the argument names for a function from its
    first signature, which was causing two problems:
    
    * When the signature lengths are different, pytype can
    mysteriously crash. Suppose we have the following signatures:
      def f(x: str) -> float
      def f(x: int, y: bool) -> long
    and want to analyzing f(0, True). Because pytype grabs the first
    signature, the second argument is accidentally dropped from the
    call trace, turning it into f(x: int) -> ?, which matches neither
    signature, so a FlawedQuery is raised.
    
    * When the argument names are different, pytype can produce bad
    results. Suppose we have:
      def f(arg1: str) -> float
      def f(arg2: int) -> long
    and want to analyze
      def g(x):
        return f(x)
    pytype grabs the first signature and therefore assumes the argument
    name to f is "arg1", leading to the incorrect inferred signature
      def g(x: str) -> float
    for g.
    
    This CL anonymizes the names of positional args to resolve these problems.
    (So, for example, f(0, True) turns into f(_0: int, _1: bool).)
    
    --
    MOS_MIGRATED_REVID=134604517

[33mcommit 803494f916be3786deac55fcc950b094ac5f494b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 28 23:42:12 2016 +0000

    Fix crash caused by missing Class methods on Unsolvable.
    
    Moves the calls to get_attribute_computed into Class, so the method is
    never called on an Unsolvable. Checks that an object is an instance of
    Class before calling get_as_instance_attribute on it.
    
    --
    MOS_MIGRATED_REVID=134598782

[33mcommit da24805d76e5c29aa8802fd0fac707c189a3735e[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Sep 28 01:18:13 2016 +0000

    Fix pretty-printing of bad-return-type.
    
    --
    MOS_MIGRATED_REVID=134481994

[33mcommit eaa545659dc7f5180ab23c28a5d92bdac81b0a91[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 28 01:03:44 2016 +0000

    Add an instantiate method to abstract.Unknown.
    
    To analyze a method, infer.py instantiates its arguments, and using
    AtomicAbstractValue.instantiate to create an Instance whose class is
    an Unknown leads to all sorts of wonkiness, since Unknown doesn't
    define all of the methods that a class is expected to have.
    
    --
    MOS_MIGRATED_REVID=134480710

[33mcommit af18eaf7683441738f7abb8a7eb11a9817d15326[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 28 00:25:26 2016 +0000

    Add another enum override.
    
    Uses a class's metaclass for attribute lookup so that we can get
    complete control by adding a __getattribute__ to the metaclass.
    
    --
    MOS_MIGRATED_REVID=134476976

[33mcommit ff7c244cb224529b1a5f1a15831c54794d606b2c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 27 23:03:14 2016 +0000

    Fix pytype crash due to MROError with redefined builtin.
    
    Catches the MROError so pytype reports an [mro-error] rather than
    crashing. Also makes the error description more helpful.
    
    Adds a "full_names" option to LookupBuiltins so it knows whether to
    use the ast prefix when checking for local redefinitions.
    
    --
    MOS_MIGRATED_REVID=134467148

[33mcommit 631a44739285ec7a4823a4c49b5a8f432c3e36d9[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Sep 27 22:57:00 2016 +0000

    Don't produce pyi files with duplicate identifiers.
    
    --
    MOS_MIGRATED_REVID=134466461

[33mcommit 13ca84b5577648e8a8509a8b35dcc3008975987a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 27 22:08:19 2016 +0000

    Improve the definition of dict.fromkeys.
    
    Also fixes a bug in ParameterizedClass.match_instance that the new
    definition exposes.
    
    --
    MOS_MIGRATED_REVID=134460231

[33mcommit 3d5f28f84cabb2afe6f8218fd01e8a5a52a92f33[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 27 19:06:42 2016 +0000

    Pick up metaclass keyword.
    
    Puts metaclass information in the ast and passes it to
    abstract.PyTDClass. We don't yet do anything with this information.
    
    Also makes the signature of to_variable consistent. (The name argument
    was optional in most of them but required in one.)
    
    --
    MOS_MIGRATED_REVID=134436956

[33mcommit f1e777fc05aef4aaabbca5f5d6d20ff8e82df6a2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 27 01:07:35 2016 +0000

    Implement __getattribute__.
    
    --
    MOS_MIGRATED_REVID=134351704

[33mcommit 647fa5f995c73ec79d348e572bc914de67b52ed4[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 27 00:12:40 2016 +0000

    Update test_data/complex.py
    
    After the change to DEEP_VARIABLE_LIMIT, the previous program wasn't
    complex enough for pytype to fail.
    
    --
    MOS_MIGRATED_REVID=134347007

[33mcommit 987851c92b88d93ec0ce1effcc545e69e3ffe5f8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 26 23:39:16 2016 +0000

    Add a subprocess-based test for the pytype binary.
    
    This is meant to replace test_pytype.sh, which served the same
    purpose but only tested one path through main.py, and
    test_pytree.py, which verified that pytype ran cleanly on a piece
    of real code, something that this test can do more effectively.
    
    Deletes the --optimize option from config, as I realized that it
    wasn't used anywhere when I was looking for a way to test it.
    
    Does some restructuring of main.py to do most exception-handling in
    process_one_file to fix a bug I discovered with check_types and
    infer_types handling python compiler errors differently.
    
    Currently tested: inference and checking on a simple program, one
    with syntax errors, one with pytype errors, and an overly complex one;
    passing a bad option to pytype; and printing pytype errors to stderr,
    a csv file, or not at all (--no-report-errors).
    
    --
    MOS_MIGRATED_REVID=134343417

[33mcommit d92dd2468afa1610e4a5e3dac242cf7122acdc36[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Sep 26 21:55:18 2016 +0000

    Better limit on the number of variable combinations.
    
    --
    MOS_MIGRATED_REVID=134330669

[33mcommit 33242e75681921aa8e33f040f04b9b6b8521e087[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 26 16:34:47 2016 +0000

    Fix matching of DeprecationWarning against Type[Warning].
    
    Improves the builtins definitions of exceptions so that DeprecationWarning
    inherits from Warning; does better matching of a class against typing.Type.
    
    --
    MOS_MIGRATED_REVID=134287399

[33mcommit a06f18344aa803bf6ed23b857cab9367d4df05ca[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Sep 24 00:36:12 2016 +0000

    Delete old methods VirtualMachine.print_frames, backtrace.
    
    --
    MOS_MIGRATED_REVID=134137179

[33mcommit b678f5b91f20ab97ad73bdf0bc8a190523365a5a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 23 23:09:49 2016 +0000

    Fix more Empty matching issues.
    
    --
    MOS_MIGRATED_REVID=134129253

[33mcommit 839cc90d63b834d7dfd869312437c0e6389fb502[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 23 23:01:25 2016 +0000

    Support custom reverse operators.
    
    --
    MOS_MIGRATED_REVID=134128344

[33mcommit d1733e180d5541f725d534b5667dfd783f94c02b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Sep 23 20:58:07 2016 +0000

    Don't copy the source code line if an error is on line 0 or line 1.
    
    --
    MOS_MIGRATED_REVID=134114198

[33mcommit afdd86bfe62befb818bf39f4b6fb22cb6695e049[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 23 15:24:48 2016 +0000

    Add FrozenSet to PEP484_CAPITALIZED.
    
    Add FrozenSet to the list of typing names converted to their
    corresponding builtins, so that frozenset methods work
    properly. Also have the pep484 stub printer use
    PEP484_CAPITALIZED instead of its own (different) list.
    
    --
    MOS_MIGRATED_REVID=134076382

[33mcommit 7bba1472d1aeb95994705ba1dde1cdf4e2f4cad1[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Sep 23 15:22:46 2016 +0000

    Allow to disable error messages without a line number.
    
    Make a scoped "disable", on any line of the file, also disable errors without
    a line number. (I.e., we treat those errors as appearing at the end of the file)
    
    --
    MOS_MIGRATED_REVID=134076179

[33mcommit a38832b68e17b9efc90e2ce387b6a80220794044[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 23 14:53:01 2016 +0000

    Don't crash on a bad imported name; fix a typo in an override.
    
    --
    MOS_MIGRATED_REVID=134073377

[33mcommit 8a67ee57936e7146350fe7863c5aa0d5979ade1e[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 23 14:46:04 2016 +0000

    Convert AnythingType() to unsolvable rather than unknown.
    
    --
    MOS_MIGRATED_REVID=134072881

[33mcommit c41b8e1bfcfdc65fd6ae9a6aff8b7f7c5ac01c5c[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 23 02:17:37 2016 +0000

    Don't crash on inherited type parameters when matching unknowns.
    
    --
    MOS_MIGRATED_REVID=134029815

[33mcommit 3b4f3b5cf191aff13fd2286428f27ae81f95e075[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 22 22:43:05 2016 +0000

    Expose more class hierarchy information to optimize.
    
    Pass a more complete builtins AST to optimize.Optimize so that
    optimize.SimplifyUnionsWithSuperclasses has more information about the
    class hierarchy. Also make ExtractSuperClassesByName inherit from
    ExtractSuperClasses since they share so much code.
    
    --
    MOS_MIGRATED_REVID=134009821

[33mcommit 7b128289c6458d242fe3baf679cb207512326980[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Sep 22 22:18:54 2016 +0000

    Add NamedTuple scaffolding.
    
    --
    MOS_MIGRATED_REVID=134006856

[33mcommit a71634055069f0c2e81eb41f7714daa717d7dc7b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Sep 22 21:49:42 2016 +0000

    Better support for @property
    
    --
    MOS_MIGRATED_REVID=134002980

[33mcommit 0788e2375be6742c3223b76f3c6d205ab108b391[m
Author: Googler <noreply@google.com>
Date:   Thu Sep 22 20:32:03 2016 +0000

    pytype: Add support for multi-argument iter() builtin.
    
    In Python, a pre-existing iterable function (EG: returns None at end)
    can be turned into a proper iterator with: "iter(func, end_value)".
    
    EG: Instead of
      output = b.GetNextOutputChunk()
      while output:
        [...]
        output = b.GetNextOutputChunk()
    
    You could just write:
      for output in iter(cmd.GetNextOutputChunk, None):
    
    --
    MOS_MIGRATED_REVID=133992737

[33mcommit e801c1c332173460bcef1936e34b49678235eb13[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 22 17:27:09 2016 +0000

    Catch ProgramTooComplexError in checking mode.
    
    --
    MOS_MIGRATED_REVID=133969367

[33mcommit 69312e6875e8027a359c6e736a310b8d2b0384ae[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Thu Sep 22 12:00:59 2016 +0000

    Use utils.load_pytype_file to read typeshed files if TYPESHED_HOME not specified
    
    --
    MOS_MIGRATED_REVID=133940865

[33mcommit 3eebeae4a9194e6df388795ce90264d33ce69b64[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Sep 21 23:17:13 2016 +0000

    Don't allow arbitrary large (deep) cartesian products for arguments.
    
    --
    MOS_MIGRATED_REVID=133889816

[33mcommit d872e20db8d55c61e5cfafee9ec5b46c1b814a18[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 21 22:23:50 2016 +0000

    Use typeshed's itertools stub.
    
    --
    MOS_MIGRATED_REVID=133883196

[33mcommit 036af6761190fe5bf039460eb74c98ccfb03a47b[m
Author: Googler <noreply@google.com>
Date:   Wed Sep 21 15:14:00 2016 +0000

    Add 'reload()' to __builtins__
    
    --
    MOS_MIGRATED_REVID=133832937

[33mcommit c288d1355987d532fa9c901d5f7bfc9c6a853719[m
Author: Googler <noreply@google.com>
Date:   Wed Sep 21 14:13:26 2016 +0000

    Support 'str.translate' with the None first parameter with 'deletechars'
    argument properly.
    
    Also be precise as to if str or unicode types are valid where. A unicode value
    of deletechars will result in
    TypeError: deletions are implemented differently for unicode
    
    --
    MOS_MIGRATED_REVID=133828200

[33mcommit ddfefdf1f0b9bd686e2290e02d79cd47766cd28a[m
Author: Fu Yong Quah <fyquah@google.com>
Date:   Wed Sep 21 07:52:43 2016 +0000

    Add support for forwarddecls.
    
    --
    MOS_MIGRATED_REVID=133803229

[33mcommit fc3e925e4eac473012b0c3910af6de56bad32587[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 21 03:45:07 2016 +0000

    Report a pyi error rather than crashing on duplicate type parameters.
    
    PEP 484 specifies that type variable arguments must be distinct.
    (https://www.python.org/dev/peps/pep-0484/#user-defined-generic-types)
    
    --
    MOS_MIGRATED_REVID=133789793

[33mcommit 27d47235cc12ed18e5d9030a2641ca2e29942279[m
Author: Fu Yong Quah <fyquah@google.com>
Date:   Tue Sep 20 18:57:06 2016 +0000

    Add bool/None support in PrintVisitor.
    
    --
    MOS_MIGRATED_REVID=133735267

[33mcommit 9f7df23d1185508902fe9283a2be234085ad844e[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Tue Sep 20 17:28:00 2016 +0000

    Send compile_bytecode.py to external interpreter through its stdin instead of passing a filename
    
    --
    MOS_MIGRATED_REVID=133721845

[33mcommit 5ae98f1827f7eb2edfe436c35429dbd84cbe8e64[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Tue Sep 20 17:21:49 2016 +0000

    Move pytd.data_files file-reading code to utils
    
    --
    MOS_MIGRATED_REVID=133720876

[33mcommit a24f5dc20fde87b730faef06ce24e5ba323536eb[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Tue Sep 20 16:39:13 2016 +0000

    Split out non-stdlib-using parts of pytype.utils into a new module
    
    To allow submodules to use it without circular dependencies.
    
    --
    MOS_MIGRATED_REVID=133715668

[33mcommit 61fbea5f7afba7d34906fc15faf219d1c7869e67[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 20 02:40:07 2016 +0000

    Make a handful of pytd, pyi changes.
    
    --
    MOS_MIGRATED_REVID=133663344

[33mcommit c38df36f71f238d576aa794cebbad29a2dc29ab0[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Sep 19 23:53:42 2016 +0000

    Add __module__ to object.
    
    --
    MOS_MIGRATED_REVID=133650039

[33mcommit 6ef1dbee555c04ef00e59b54e4f9690c303fc05b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 19 23:51:35 2016 +0000

    Handle a bad super call more gracefully.
    
    --
    MOS_MIGRATED_REVID=133649787

[33mcommit 0c72984204f77042c8c8e1dfe9bc094e536ec8c2[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Sep 19 22:15:49 2016 +0000

    Move *args/**kwargs logic out of vm.py.
    
    Also, change posargs from list to tuple.
    
    --
    MOS_MIGRATED_REVID=133638035

[33mcommit 8b66cb8b2a284a1d080806ac0ad6b6484377ead1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 19 20:31:32 2016 +0000

    Handle unsolvable classes in vm.VirtualMachine.make_class.
    
    --
    MOS_MIGRATED_REVID=133624537

[33mcommit 8953358b4ea0fe115c211dd9a620348455a0518a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 19 20:12:12 2016 +0000

    Fix type parameter name collision.
    
    --
    MOS_MIGRATED_REVID=133622187

[33mcommit c0486161d92f1f49d036b1bca888d38174bd2d53[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 19 17:44:49 2016 +0000

    Do some cleanup on pytd types and visitor logic.
    
    Removes IntersectionType, NativeType, Scalar, redundant checks in
    VerifyVisitor, and now-unneeded enters_all_node_types option.
    Uses Enter instead of Visit in VerifyContainers.
    
    --
    MOS_MIGRATED_REVID=133602707

[33mcommit 8dcda660d04f2b09dcbd7b1ed0295262a56e5e21[m
Author: Fu Yong Quah <fyquah@google.com>
Date:   Mon Sep 19 17:29:47 2016 +0000

    Merge int/float, str/unicode in PrintVisitor.
    
    --
    MOS_MIGRATED_REVID=133600492

[33mcommit 876cf392abdec5d2f6c3897369af960ffdf3caa3[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 19 16:47:05 2016 +0000

    Move AddNamePrefix calls into _TypeDeclParser.Parse.
    
    Since we always want to call AddNamePrefix after parsing (except in some
    tests), just move the call into the parse function so it can't be forgotten.
    Also use scope keyword when creating pytd.TypeParameter instances.
    
    --
    MOS_MIGRATED_REVID=133595038

[33mcommit 27386a6881a624fa9895bc0b9cbb4f607517963c[m
Author: Fu Yong Quah <fyquah@google.com>
Date:   Mon Sep 19 15:29:34 2016 +0000

    Support SuperInstance more correctly.
    
    --
    MOS_MIGRATED_REVID=133587526

[33mcommit 3575890f44dd3ca5445911eb9f69dd80b689c14b[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 19 14:44:48 2016 +0000

    Still return something for a function containing an infinite loop.
    
    --
    MOS_MIGRATED_REVID=133583691

[33mcommit 773bee2663a6cf9d1ea87feeb364ab39758576eb[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Sep 19 14:31:53 2016 +0000

    Make kwonly parameters not accidentally consume posargs.
    
    --
    MOS_MIGRATED_REVID=133582886

[33mcommit 891832608ee65d67a9a7baf9eedb93ceebef1a29[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Sep 19 14:24:05 2016 +0000

    Don't throw BytecodeKeyError from Dict.
    
    --
    MOS_MIGRATED_REVID=133582364

[33mcommit 9016aa0523aeb7e6d6c96753bcce704096edda82[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Sep 19 14:10:12 2016 +0000

    Fix abstract.Empty matching.
    
    --
    MOS_MIGRATED_REVID=133581407

[33mcommit 59ae672e754dd19f6066d9e58cae585926be8324[m
Author: Fu Yong Quah <fyquah@google.com>
Date:   Fri Sep 16 18:20:33 2016 +0000

    Add name to typing.IO in typing.pytd.
    
    --
    MOS_MIGRATED_REVID=133406597

[33mcommit 4f1482ceacc856cacdd287c2caab18a69466ad3d[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Sep 16 17:00:12 2016 +0000

    Throw (and catch) a more predictable error if we can't resolve a symbol in a pyi.
    
    --
    MOS_MIGRATED_REVID=133395882

[33mcommit f3225d4b9e43e4265a25c18d3b1e0545daaf1b4a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Sep 16 01:19:47 2016 +0000

    Be aware of other items (functions, constants, etc.) when looking up local identifiers.
    
    --
    MOS_MIGRATED_REVID=133334334

[33mcommit 2c6a194b60ab54ff3cdf08fa7e8bfb06fdb4a250[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 15 22:48:10 2016 +0000

    Print class name in error messages for bound functions.
    
    Also deletes an unused attribute from PyTDSignature and checks for
    duplicate keywords on pyi functions.
    
    --
    MOS_MIGRATED_REVID=133318567

[33mcommit 5ec3001da6d713f79aed881a5b9bc07ebe304a25[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Thu Sep 15 20:30:45 2016 +0000

    Support missing.txt in typeshed dir
    
    --
    MOS_MIGRATED_REVID=133300835

[33mcommit cf0717ef3819064a76d6fcd6ae862ca5a2ab7f37[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 15 19:44:00 2016 +0000

    Pre-populate containers with Any when appropriate.
    
    --
    MOS_MIGRATED_REVID=133295208

[33mcommit 07b61ca85e7a86db1ee646080fa3bfd28bfab97a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 15 19:30:09 2016 +0000

    Catch name errors in LOAD_FAST.
    
    Surfaces errors that were being swallowed by LOAD_FAST. This exposed
    a number of small issues related to empty values.
    
    --
    MOS_MIGRATED_REVID=133293686

[33mcommit 3ef78eb2455814659cdd6ba7230c9ca405acc566[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Sep 15 02:58:04 2016 +0000

    Fix definition of builtin 'range'.
    
    --
    MOS_MIGRATED_REVID=133209043

[33mcommit 15b0211f9d6dc8b3403d02c763d5038564a5c1c5[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 14 22:40:48 2016 +0000

    Allow iterating over empty lists.
    
    --
    MOS_MIGRATED_REVID=133184572

[33mcommit 419611b4e083f6d980827dfc460fe5f62ffd8a90[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 14 22:31:37 2016 +0000

    Implement DELETE_SUBSCR.
    
    --
    MOS_MIGRATED_REVID=133183319

[33mcommit ab96f683c59932d410c63e1984d5e1d3619e9062[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Sep 14 22:22:49 2016 +0000

    Add a test case for the "__init__" check in abstract.py.
    
    --
    MOS_MIGRATED_REVID=133182096

[33mcommit a0ca97ed9107bc6036fda2b7dde4fcec15dadf8f[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 14 22:08:30 2016 +0000

    Don't duplicate top-level __getattr__.
    
    --
    MOS_MIGRATED_REVID=133179764

[33mcommit da5906cba85d42b26d03d54173668dc402498100[m
Author: Dave Baum <dbaum@google.com>
Date:   Wed Sep 14 20:57:48 2016 +0000

    Report compiler errors in the error log rather than letting the exception escape.  Thus syntax errors will be treated similar to other errors and not impacted by --nofail.  The table below summarizes the change in behavior where errorfail represents whether errors are being reported but not in csv format (report_errors and not errors_csv_file):
    
    --nofail  errorfail   old        new
    true      true        ok         status 1, error in log
    true      false       ok         ok, error in log
    false     true        exception  status 1, error in log
    false     false       exception  ok, error in log
    
    --
    MOS_MIGRATED_REVID=133169887

[33mcommit 89041c2a8bebbb92849023aa2b3af51286f87764[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Sep 14 17:06:35 2016 +0000

    Always call __init__ on classes we analyze.
    
    --
    MOS_MIGRATED_REVID=133140089

[33mcommit da5e1fe4be916b8b690cc4176261e72fb0780c2e[m
Author: Dave Baum <dbaum@google.com>
Date:   Tue Sep 13 21:27:59 2016 +0000

    Add --touch option to pytype, use this in pytype.bzl.  This makes the output of check actions deterministic.
    
    --
    MOS_MIGRATED_REVID=133047834

[33mcommit 7910c63d467aa296c6ca2bb83e053391fc2115c2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 13 19:55:49 2016 +0000

    Add __getattr__(name) -> Any when a "from ... import *" fails.
    
    Also fixes a typo in imports_map_loader and stops printing "Any" as
    a parameter type.
    
    --
    MOS_MIGRATED_REVID=133035730

[33mcommit bb3521ab5fa73c414bcb23a9bf4730a328e9c3fe[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Sep 13 17:18:39 2016 +0000

    Warn about unsupported features.
    
    --
    MOS_MIGRATED_REVID=133014854

[33mcommit e259f960660f05a431ef66ab60e740087beaa900[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 13 16:27:48 2016 +0000

    Use full names of typing module classes when necessary.
    
    --
    MOS_MIGRATED_REVID=133008690

[33mcommit 0d12a04e11530aa7d0b6b1824aa86334fa405321[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 13 16:19:53 2016 +0000

    Don't allow functions as constant types.
    
    --
    MOS_MIGRATED_REVID=133007846

[33mcommit ac05269b8ccac273d9b9806d46b90014302c29f8[m
Author: Rebecca Chen <rechen@google.com>
Date:   Tue Sep 13 15:56:15 2016 +0000

    Fix an alias bug, add an override.
    
    --
    MOS_MIGRATED_REVID=133005228

[33mcommit 7c9f65d45175d0ff06cb88b322e6ef5ea1269467[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Sep 12 21:22:11 2016 +0000

    Allow to index Set, FrozenSet.
    
    --
    MOS_MIGRATED_REVID=132918109

[33mcommit 1f7cf96cf68d22ed19bc296e42ac7a3af7b4a4d9[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Sep 12 21:21:22 2016 +0000

    Better support for typing.Optional.
    
    --
    MOS_MIGRATED_REVID=132917991

[33mcommit cd0507512533457deacaa6ce31fada68db4c3bc4[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Mon Sep 12 21:09:51 2016 +0000

    Update typeshed tests and drop pytype stubs for codecs, keyword, logging
    
    better versions:
    
    https://github.com/python/typeshed/blob/master/stdli[].7/codecs.pyi
    https://github.com/python/typeshed/blob/master/stdli[]and3/keyword.pyi
    https://github.com/python/typeshed/tree/master/stdli[]and3/logging
    
    --
    MOS_MIGRATED_REVID=132916535

[33mcommit 07fa9ede4e352b3bd67d87ddc4c449da2c38b8a3[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Sep 12 20:25:10 2016 +0000

    Add test cases for the examples in our documentation.
    
    --
    MOS_MIGRATED_REVID=132910845

[33mcommit e899a8cf1c3889c05073e12846e6feef76a06d57[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Sep 12 19:22:12 2016 +0000

    Improve support for typing.Dict.
    
    --
    MOS_MIGRATED_REVID=132903747

[33mcommit c98e816b477d0dc6f64a933ce6091641cc1d34c7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Sep 10 00:02:47 2016 +0000

    Support some comparison operations on all objects.
    
    == and its ilk should always work.
    (https://docs.python.org/2/library/stdtypes.html#comparisons)
    
    --
    MOS_MIGRATED_REVID=132732898

[33mcommit 6fe49f2d693331749a8c190f01183bf17350c7a7[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Sep 9 21:22:02 2016 +0000

    Add support for 'Any' to typing.py.
    
    --
    MOS_MIGRATED_REVID=132716045

[33mcommit d4ae8b2c592c2ee60a86795968007edd5a0062e7[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Mon Sep 12 11:53:02 2016 -0500

    MOS resync

[33mcommit f17586118abdb5d375baf47e6a7e710abd472507[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Sep 8 22:22:35 2016 +0000

    New option --abort-on-complex.
    
    --
    MOS_MIGRATED_REVID=132607948

[33mcommit b71740a960de14fc78563dac64e532c1c3b93de9[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 8 22:15:50 2016 +0000

    Check for None in abstract.Instance.compatible_with.
    
    If an abstract.Instance has class NoneType, it should be compatible only
    with False.
    
    --
    MOS_MIGRATED_REVID=132607001

[33mcommit 6290ec5dede1e08e46fdb5b46b2ce522427a8790[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 8 19:08:15 2016 +0000

    Add __new__ to __builtin__.object and __builtin__.str.
    
    Add a __new__ method to a couple of classes missing it, and treat it as a
    static method (without needing an explicit decorator).
    
    --
    MOS_MIGRATED_REVID=132584185

[33mcommit 183f2efbc16ebc2aa79489055c4c3db562df7b6d[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Thu Sep 8 19:06:16 2016 +0000

    MOE scrubbing fix.
    
    Due to "." in extension_map, moe's scrubber was ignoring our .py files. Only "MOE:strip_line" are currently leaking because we have our own perl-based stripping for begin_strip/end_strip blocks
    
    Also remove .md from extension_map because the scrubber already knows about it.
    
    --
    MOS_MIGRATED_REVID=132583969

[33mcommit 49d2730ead5e7ce02fdd0bbaf2ce74f997c9b27a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 8 18:18:36 2016 +0000

    Fix definition of collections.namedtuple.
    
    
    Also includes the following changes:
    
    Accept str and bytes as unicode, and int as a float.
    
    Side effect: drop duplicate types in Union[]
    
    This expands existing code in abstract.Class.match_instance_against_type that allowed us to accept None as a bool.
    
    Motivation is to remove false positives coming from typeshed, but type-matching may be tightened back up in the future.
    
    Change happens in two places, long-term it may be possible to have type-comparison logic in just one.
    
    --
    MOS_MIGRATED_REVID=132577949

[33mcommit 9e36a555a3eb39f6f8540ab3ea83f895ec600c02[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 8 00:58:06 2016 +0000

    Fix importing of functions with templates.
    
    --
    MOS_MIGRATED_REVID=132503313

[33mcommit b63bdff8429302f839a897d7095267b6e029ed61[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Sep 7 01:03:10 2016 +0000

    Make "cls" an attribute of all AtomicAbstractValue instances.
    
    --
    MOS_MIGRATED_REVID=132384609

[33mcommit 7cfd1f2f7850cae9139c19f6af1232ce8ae7ba3d[m
Author: Rebecca Chen <rechen@google.com>
Date:   Wed Sep 7 00:53:48 2016 +0000

    Make __builtin__.file and pyglib.gfile._GFileBase iterators.
    
    --
    MOS_MIGRATED_REVID=132383865

[33mcommit 8e329db67fb4341dc6548a1a6dabf63d15a10cbb[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue Sep 6 21:55:52 2016 +0000

    Also export patches.
    
    --
    MOS_MIGRATED_REVID=132365964

[33mcommit 82c39cabc4c166d1ddd6f8618c5b272e9929d9b2[m
Author: Rebecca Chen <rechen@google.com>
Date:   Sat Sep 3 00:45:29 2016 +0000

    Improve pytd.type_match.match_Generic_against_Generic.
    
    --
    MOS_MIGRATED_REVID=132122065

[33mcommit b123e18d867306f3ae64663ee6cc984713098694[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 2 23:20:21 2016 +0000

    Fix mro of abstract.Unknown and abstract.Unsolvable.
    
    --
    MOS_MIGRATED_REVID=132115437

[33mcommit d654c2ddb1d5f5d5702ec416bc0633c1b2a3a3fe[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 2 20:02:18 2016 +0000

    Update collections.pytd.
    
    collections.OrderedDict and collections.defaultdict are used by
    //production/sisyphus/framework/rollout.py and
    //production/sisyphus/framework/flags.py.
    
    --
    MOS_MIGRATED_REVID=132094508

[33mcommit 9fafa876960153fcdceb24be2117baf6663db5af[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Sep 2 19:02:05 2016 +0000

    Add StopWatch metric, add distribution counter for Variables.
    
    --
    MOS_MIGRATED_REVID=132088647

[33mcommit 5da3803c4f66af4a11c715e2838e4cb3fedde2be[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Sep 2 17:46:50 2016 +0000

    Allow type to be matched against Callable.
    
    Example use case: //video/youtube/utils/profile_dash/diff_pstats.py:99,
    which calls argparse.ArgumentParser.add_argument with int for the type
    argument, whose type is Union[Callable[[str], _T], FileType].
    
    --
    MOS_MIGRATED_REVID=132079671

[33mcommit 327c2caf9199743595fcbe2c7cc4f8ab753cfef3[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Sep 2 16:55:49 2016 +0000

    Give NoneType errors their own error class.
    
    --
    MOS_MIGRATED_REVID=132073625

[33mcommit c837dc23f8cce16975bd73c477d33621145c97b4[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Sep 2 15:52:07 2016 +0000

    Added a mechanism for visitors to use unchecked nodes.
    
    --
    MOS_MIGRATED_REVID=132067514

[33mcommit 2fb09b750ce67c8db08698eeece3b73010c44b22[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Fri Sep 2 13:57:03 2016 +0000

    Update typeshed to 23c44d3e3617a0d59e29d1cf40457d39c7924a72
    
    Include update to google/missing.txt and pytype's tests
    
    --
    MOS_MIGRATED_REVID=132058862

[33mcommit 4e93221d4ee54107d428b272601070ea7ba1391f[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Sep 1 23:06:49 2016 +0000

    Give unresolved type parameters their own error class.
    
    --
    MOS_MIGRATED_REVID=132004992

[33mcommit e6932ec41588be5abd042a04d762c754ba21c835[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 1 22:34:13 2016 +0000

    Better printing for the "expected" string in [wrong-arg-types].
    
    We currently print something like the following:
    File "diff_pstats.py", line 100, in main: Function add_argument was called with
    the wrong arguments [wrong-arg-types]
      Expected: (self: ArgumentParser, action: <pytype.abstract.Union object at
      0x2652910> = ..., nargs: <pytype.abstract.Union object at 0x267e610> = ...,
      const: <pytype.abstract.Unknown object at 0x2676950> = ..., default:
      <pytype.abstract.Unknown object at 0x2676950> = ..., type: Callable = ...,
      choices: Iterable[TypeParameter('_T')] = ..., required: bool = ..., help: str
      = ..., metavar: <pytype.abstract.Union object at 0x2676790> = ..., dest: str
      = ..., version: str = ..., *args, **kwargs)
        Actually passed: (self: ArgumentParser, action: str, nargs: str, const:
        unsolveable, default: int, type: int, choices: unsolveable, required:
        unsolveable, help: str, metavar: unsolveable, dest: unsolveable, version:
        unsolveable)
    With this change, we print:
    File "diff_pstats.py", line 100, in main: Function add_argument was called with
    the wrong arguments [wrong-arg-types]
      Expected: (self: ArgumentParser, action: Union[Type[Action], str] = ...,
      nargs: Union[int, str] = ..., const: Any = ..., default: Any = ..., type:
      Callable = ..., choices: Iterable = ..., required: bool = ..., help: str =
      ..., metavar: Union[str, tuple[str]] = ..., dest: str = ..., version: str =
      ..., *args, **kwargs)
        Actually passed: (self: ArgumentParser, action: str, nargs: str, const:
        unsolveable, default: int, type: int, choices: unsolveable, required:
        unsolveable, help: str, metavar: unsolveable, dest: unsolveable, version:
        unsolveable)
    
    --
    MOS_MIGRATED_REVID=132001208

[33mcommit 9ee899d5980d261f4645b59e5d4c9c5709a70617[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 1 21:48:21 2016 +0000

    Load some constants as instance attributes.
    
    If the type of a constant inside a class uses type parameters, then
    the constant must be an instance, rather than a class, attribute, so
    load it as such.
    
    --
    MOS_MIGRATED_REVID=131995423

[33mcommit 80d3ebd8478daeaf2cbebfb0682e919ec1f52af1[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Sep 1 21:26:19 2016 +0000

    Update pytd definitions of __builtin__.min, __builtin__.max.
    
    --
    MOS_MIGRATED_REVID=131992670

[33mcommit d59e65bcdaa99280053b9e29c90c2e1b13f39400[m
Author: Dave Baum <dbaum@google.com>
Date:   Thu Sep 1 17:55:51 2016 +0000

    Add preconditions to all pytd nodes.
    
    * Add IsInstancePrecondition.
    * Add preconditions to all pytd nodes.
    * Fix several bugs that were discovered by the preconditions (including one in the parser and one in some test infrastructure).
    * DefaceUnresolved is still sloppy.  Added a TODO to fix it and tighten the preconditions afterwards.
    
    --
    MOS_MIGRATED_REVID=131966965

[33mcommit ac92d6d07af03f4f281f8a3fc8ec319310373958[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Sep 1 16:37:10 2016 +0000

    Fix some builtins.
    
    Allow generators for min(), max(). Make staticmethod, classmethod inherit
    from typing.Callable.
    
    --
    MOS_MIGRATED_REVID=131957473

[33mcommit 7311a18a0ea87dfeb30717040bd6f066786a0c42[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Sep 1 16:31:20 2016 +0000

    Add support for 'elif' in pyi.
    
    --
    MOS_MIGRATED_REVID=131956910

[33mcommit c8779c76e79e7aa11647bcf426821e22766e3233[m
Author: Dave Baum <dbaum@google.com>
Date:   Wed Aug 31 22:05:51 2016 +0000

    Change RemoveUnknownClasses() to not build an invalid intermediate AST.
    
    --
    MOS_MIGRATED_REVID=131877942

[33mcommit 4dbdb062b6e5a866d67fb97aed166e8df312cbb8[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Aug 31 20:51:12 2016 +0000

    Remove test_tests in test_operators.
    
    Includes PythonTypeNameVisitor.
    
    --
    MOS_MIGRATED_REVID=131868786

[33mcommit b8972fa34421859e236c5ef9c9bc102fdbf1c6fe[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Aug 31 20:45:16 2016 +0000

    Don't use the visitor protocol to pass through intermediate results.
    
    For ExpandSignatures and RemoveInheritedMethods.
    PrintVisitor still passes strings.
    
    --
    MOS_MIGRATED_REVID=131868097

[33mcommit 4f72025eabf5535478a05c7e35c9a57c1884488c[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Aug 29 23:08:37 2016 +0000

    Basic support for super().__str__, super().__get__, super().__set__.
    
    --
    MOS_MIGRATED_REVID=131646916

[33mcommit 9d8202cee43ac831c040cccfac58cf60b37d2653[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Aug 29 22:16:33 2016 +0000

    Fix super(...).__setattr__
    
    --
    MOS_MIGRATED_REVID=131641178

[33mcommit 8ea973bf74a6b834db7ea09cc494bd69004d3ae4[m
Author: Matthias Kramm <kramm@google.com>
Date:   Mon Aug 29 21:03:39 2016 +0000

    Fix signature matching with optional parameters.
    
    --
    MOS_MIGRATED_REVID=131632356

[33mcommit d7f2cb512e6ee073a36912a07705b059847ffdcd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 29 20:42:38 2016 +0000

    Don't crash on un-substituted type parameters in functions.
    
    --
    MOS_MIGRATED_REVID=131629934

[33mcommit 2c46efadb542593c7e50de3ab638f73b8a3528cd[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 29 19:20:35 2016 +0000

    Refactor PyTDFunction/Signature calling logic.
    
    --
    MOS_MIGRATED_REVID=131621292

[33mcommit 791fbdb47660f5bd17fc7071ec2f4ca4be910d06[m
Author: Fu Yong Quah <fyquah@google.com>
Date:   Mon Aug 29 19:10:39 2016 +0000

    Bootstrap clif_to_pyi.
    
    --
    MOS_MIGRATED_REVID=131620323

[33mcommit e9553f4f68eaf4359eb6308a2571c980502d5da0[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 29 19:01:37 2016 +0000

    Move arguments for abstract.py functions into a FunctionArgs class.
    
    --
    MOS_MIGRATED_REVID=131619161

[33mcommit 265bd08d9f4dc9da7591c26a86a7369846bc1037[m
Author: Rebecca Chen <rechen@google.com>
Date:   Mon Aug 29 16:26:28 2016 +0000

    Update documentation for booleq.BooleanTerm.extract_pivots.
    
    Change the docstring and add a test to reflect the method's
    current behavior on disjunctions. Also fix a typo in typing.py.
    
    --
    MOS_MIGRATED_REVID=131600061

[33mcommit aba090f8acadd43f943533b35330e6b02ea341e7[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 26 23:13:21 2016 +0000

    Detect and report bad type parameter usage.
    
    Raise a pyi error when an unbound type parameter appears in a constant
    definition and an attribute error when a constant whose type contains a
    type parameter (which has to be an instance attribute) is accessed as a
    class attribute.
    
    --
    MOS_MIGRATED_REVID=131453521

[33mcommit a719a6c55108d420b09bb77af91ef7b0b5c64fdf[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Aug 26 23:08:22 2016 +0000

    Anonymous modules can contain anything. Make __builtin__.pytd aware of that.
    
    --
    MOS_MIGRATED_REVID=131453011

[33mcommit b3cbd88191ffacc7f90be5230b70b67e1c422687[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Aug 26 21:45:46 2016 +0000

    Omit slow super() call.
    
    --
    MOS_MIGRATED_REVID=131444038

[33mcommit 6e085c7fbaea054c364d3990f88287e650a1f1a3[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Aug 26 21:40:51 2016 +0000

    * Move platform and version arguments from __init__() to Parse().
    * Remove **kwargs from __init__() and Parse().
    * Change TypeDeclParser to reuse a shared instance.
    
    --
    MOS_MIGRATED_REVID=131443468

[33mcommit bdd01f5348ccfa72454543286136f9e478589a93[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Aug 26 20:49:45 2016 +0000

    Make Unsolvable a singleton, and treat it special in MROs.
    
    --
    MOS_MIGRATED_REVID=131437272

[33mcommit 15854d9f1977ee853a0d7b8edfb7a4cd704c0e98[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Aug 26 19:50:43 2016 +0000

    Don't analyze __init__ twice.
    
    --
    MOS_MIGRATED_REVID=131430941

[33mcommit 9dc6869dd4ffa0462ffc83da433bcc6f5e1ffe3a[m
Author: Rebecca Chen <rechen@google.com>
Date:   Fri Aug 26 17:36:44 2016 +0000

    Refactor abstract.py instance matching.
    
    --
    MOS_MIGRATED_REVID=131415878

[33mcommit 21f0d8fe54ad49aba64e45d8612e9544fe2b231a[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Fri Aug 26 16:38:02 2016 +0000

    Turn off MOS noise
    
    --
    MOS_MIGRATED_REVID=131409547

[33mcommit f2dfa0229f8683b57a349a6614a68efc48be28aa[m
Author: Dave Baum <dbaum@google.com>
Date:   Fri Aug 26 15:29:48 2016 +0000

    Framework for precondition checking on nodes.
    
    --
    MOS_MIGRATED_REVID=131404011

[33mcommit aa4a427f62d784b733854a8556269154ccecaadd[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Aug 25 22:44:15 2016 +0000

    Improve definition of 'type' class.
    
    --
    MOS_MIGRATED_REVID=131340329

[33mcommit ade863a5f2bfa6db14e9e263dbc4aec3c38fda23[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Thu Aug 25 22:34:52 2016 +0000

    Drop datetime.pytd in favor of datetime.pyi
    
    --
    MOS_MIGRATED_REVID=131339300

[33mcommit fa6b741158793576f4f1c842c2b51f1aa3ac86da[m
Author: Dave Baum <dbaum@google.com>
Date:   Thu Aug 25 21:24:18 2016 +0000

    Change ExtractSuperClassesByName and ExtractSuperClasses so that they do not rewrite the AST.
    
    --
    MOS_MIGRATED_REVID=131330991

[33mcommit 98dbe664461e11bb666761867cedc75e6303b16d[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Thu Aug 25 20:46:58 2016 +0000

    Drop time.pytd now that we can use time.pyi
    
    (needed for datetime.pyi as it uses time.struct_time)
    
    --
    MOS_MIGRATED_REVID=131326510

[33mcommit cf5e33cdbdd032a51861c76a95b2f5322a14be95[m
Author: Rebecca Chen <rechen@google.com>
Date:   Thu Aug 25 20:27:29 2016 +0000

    Fix infinite loop in argument logging.
    
    --
    MOS_MIGRATED_REVID=131324365

[33mcommit a5593c74f8de2bffc492d67a9d50f04aba9fd6ea[m
Author: Alvaro Caceres <acaceres@google.com>
Date:   Thu Aug 25 15:33:54 2016 -0500

    moe resync

[33mcommit 7d7713437363377ae8d1bc72610a762a8028208b[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 24 17:26:17 2016 -0700

    Update typing.Pattern and typing.Match.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=131235681

[33mcommit 920cb481eec7c0cba2d07f45b3efa97dd49d5152[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 24 15:27:32 2016 -0700

    Call ConvertTypingToNative on builtins.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=131223328

[33mcommit 92c37388c6937baac5ebf542e8aa0b0f92839847[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 11 15:23:07 2016 -0500

    Fix a couple of typos, delete a redundant pytd method.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=131222844

[33mcommit 7fc6673ebd16b7fc4009faedae2964c14b6322ad[m
Author: kramm <kramm@google.com>
Date:   Wed Aug 24 11:06:46 2016 -0700

    Make pytd.Signature model more of the function semantics of Python.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=131193257

[33mcommit 8bb52da22c370f8350cb34bf5d390be232424f45[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 23 15:35:37 2016 -0700

    Allow containers to contain themselves.
    
    Lazily evaluate the parameters of parameterized classes and their instances
    so that we can define things such as class A(Manager[A]): ...
    typeshed files which need this functionality:
    https://github.com/python/typeshed/blob/53f0ed7e689d7e59da12c2241bdecde8514333ab/stdlib/2and3/contextlib.pyi,
    https://github.com/python/typeshed/blob/4c20cd6711dd42383bdd6b5491f898fe504b988a/stdlib/2and3/mmap.pyi.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=131105234

[33mcommit 596183e7d9cda114a138374cf152d70d4efc4499[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 23 15:01:43 2016 -0700

    Insert class templates after resolving dependencies.
    
    Wait until we have complete information about type parameters to insert
    class templates, rather than inserting them during parsing and adjusting
    them later. This changes allows us to more easily construct templates
    from multiple GenericType parents, which we do by merging templates in the
    same way that we compute an MRO.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=131100098

[33mcommit 60942e3006260ea622b665d67111df254e120c00[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 22 16:29:47 2016 -0700

    Flesh out typing.Pattern and typing.Match.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=130996472

[33mcommit a193c9faf6bfe2c4d7258d09de48523b0df76e82[m
Author: kramm <kramm@google.com>
Date:   Mon Aug 22 11:36:49 2016 -0700

    Allow 'None' to be used as a boolean.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=130962675

[33mcommit 8d776bc65eb980f9938b562c8de6e16c40f28a10[m
Author: kramm <kramm@google.com>
Date:   Mon Aug 22 11:16:04 2016 -0700

    Fix bug in analyzing methods with both default parameters and annotations.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=130959885

[33mcommit 4e3babfb34d284c91bcd49fa0a3e5cd436845b65[m
Author: kramm <kramm@google.com>
Date:   Fri Aug 19 11:06:47 2016 -0700

    Add 'scope' attribute to TypeParameter.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=130771056

[33mcommit 0415e76ea37646290d9e643e32c41de8d8adf94a[m
Author: kramm <kramm@google.com>
Date:   Fri Aug 19 10:58:47 2016 -0700

    Factor "view" matching logic out into a function.
    
    Also, slightly improve error message for ambiguous function calls.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=130769961

[33mcommit 75c8dbd4361c30e721e8921d2299218d4ad05883[m
Author: kramm <kramm@google.com>
Date:   Fri Aug 19 10:54:35 2016 -0700

    Disable/remove index-error.
    
    It's generating too many false positives, and virtually no true positives.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=130769442

[33mcommit a8a7555e9cdf771c8dcbb1d3cbff58b80d118657[m
Author: kramm <kramm@google.com>
Date:   Fri Aug 19 10:50:50 2016 -0700

    Report errors for incorrect return statements.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=130768994

[33mcommit ddfd359092d926947671677861de4476ebae0699[m
Author: fyquah <fyquah@google.com>
Date:   Thu Aug 18 15:01:29 2016 -0700

    Fix 30509858
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=130686110

[33mcommit e2321f17217fcf0ea052d942d938665cf58fb56f[m
Author: dbaum <dbaum@google.com>
Date:   Thu Aug 18 08:49:08 2016 -0700

    Ensure that imported classes in pytd have the correct mro.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=130644084

[33mcommit 3455bd2c78d2b69c27d5f3679a8feaacac734ac9[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 18 07:20:50 2016 -0700

    Merge test_opcodes.py and test_abstractvm.py into vm_test.py.
    
    These files were in the (integration test directory) test/, but were really
    just unit tests in disguise.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=130636932

[33mcommit f6ab84f5da40179ea0b0a20de4a5377b070faf9a[m
Author: kramm <kramm@google.com>
Date:   Wed Aug 17 14:13:00 2016 -0700

    Support strings as annotation. Fix handling of 'None'.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=130561718

[33mcommit d5fc91a7de4677f29339e70cb8602824ca618f12[m
Author: fyquah <fyquah@google.com>
Date:   Tue Aug 16 10:21:54 2016 -0700

    Add where argument to AddBinding in byte_BINARY_SUBSCR.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=130416488

[33mcommit 8f1c05a68bd5490d6a4897c9a2877ea12a8707ab[m
Author: dbaum <dbaum@google.com>
Date:   Wed Aug 10 08:55:22 2016 -0700

    Temporary fix for infinite loop bug when type parameters collide.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129871073

[33mcommit 0fffd5c0cea6263900bdff9a2f96e524b8a1fcad[m
Author: dbaum <dbaum@google.com>
Date:   Fri Aug 5 14:30:24 2016 -0700

    GET_ITER should attempt to use __getitem__ if __iter__ is not defined.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129482979

[33mcommit 71e786422ffcbe2a0c9bccff786dccee1c0fb5b7[m
Author: dbaum <dbaum@google.com>
Date:   Fri Aug 5 13:11:34 2016 -0700

    Add a function as a source for its result.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129474199

[33mcommit 7ffb2883cc809222c34e7baab25fb7cd390cc8ec[m
Author: kramm <kramm@google.com>
Date:   Fri Aug 5 08:58:08 2016 -0700

    Fix syntax error in xmlrpclib.pytd.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129446750

[33mcommit 8ee73d5f9e5f9173441f65770f397552ae9e785d[m
Author: kramm <kramm@google.com>
Date:   Fri Aug 5 08:52:16 2016 -0700

    Generate additional CFG nodes needed for if-splitting.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129446287

[33mcommit bd55bc897b4d2a6457431bc0c04699f4d69f58ff[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 4 17:33:32 2016 -0700

    Attempt 2! Define AnyStr as a TypeVar.
    
    Defines AnyStr as a TypeVar in typing.pytd and imports it wherever AnyStr
    is used (rather than replacing it with Union[str, unicode]).
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129393853

[33mcommit 5569d09a57960f583c928d2d0862d93c7e869a08[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 4 17:11:24 2016 -0700

    Make RemoveRedundantSignatures more robust.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129391718

[33mcommit 325316455397c0cfd5ef68cbe017751d31c1b56b[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 4 16:34:13 2016 -0700

    Handle errors discovered by visitors.VerifyContainers() more gracefully.
    
    During analysis, save the errors and keep going, so we produce as much
    useful output/check as much of the file as possible, and add all of them
    to the error log as [container-error] at the end.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129387813

[33mcommit bdba926711200e5e6baf15e49a4b253e1de8950c[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 4 13:25:26 2016 -0700

    Ignore MROError we encounter during optimization.
    
    (So inherited methods won't be removed if we have a cycle)
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129366138

[33mcommit 4c36a7c947613328742e92866bb93ce073270e61[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 4 13:23:10 2016 -0700

    Don't blow up if a "from ... import ..." hits a bad pyi file.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129365866

[33mcommit 6667c6372682cca9367ca402c15b1a068a302147[m
Author: rechen <rechen@google.com>
Date:   Thu Aug 4 11:18:25 2016 -0700

    Fix breakage in []
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129351788

[33mcommit 8b53773a4eb72880916e80c8c0f439df3771cb54[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 3 15:48:38 2016 -0700

    Automated g4 rollback of changelist 129251060.
    
    *** Reason for rollback ***
    
    Broke []
    
    *** Original change description ***
    
    Define AnyStr as a TypeVar.
    
    Defines AnyStr as a TypeVar in typing.pytd and imports it wherever AnyStr
    is used (rather than replacing it with Union[str, unicode]).
    
    ***
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129268468

[33mcommit 79456ff916e39dc71fb313087134d369376e8b47[m
Author: fyquah <fyquah@google.com>
Date:   Wed Aug 3 15:33:52 2016 -0700

    Stop pytype from failing when invoking type checks.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129266894

[33mcommit c61e54432293ce230f67585dc10052a8befcfa57[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 3 13:28:29 2016 -0700

    Define AnyStr as a TypeVar.
    
    Defines AnyStr as a TypeVar in typing.pytd and imports it wherever AnyStr
    is used (rather than replacing it with Union[str, unicode]).
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129251060

[33mcommit 1df866c247d112eb42c285334851e5f77d452c20[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 3 11:34:46 2016 -0700

    Get rid of support for class-scoped type parameters.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129238501

[33mcommit 38c28aec518c56af62d5b2f310c90bf0a6447999[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 3 11:22:18 2016 -0700

    Remove specialized type parameters from class templates.
    
    Drops any template item that is not a TypeParameter instance.
    Moves (and improves) the check that AdjustTemplates() was doing for
    illegal container defs/use into visitors.VerifyContainers() and adds tests
    for the visitor.
    Fixes a few bad pytd definitions caught by this change. Since typing.IO is
    now parameterized, stdlib.StringIO in typeshed can be parsed again.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129236765

[33mcommit 727084c597bf253acd6f5118ea8ea518f31f4266[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 2 17:13:47 2016 -0700

    Enable importing of type parameters.
    
    Delays creation of signature templates until after dependency resolution.
    parser.InsertTypeParameters() has been rewritten to not use templates,
    optimize.MergeTypeParameters() to reset its internal state every time it
    enters a new signature so that it can use type parameter names intead of ids.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129161388

[33mcommit 4baad828493948f80f6a61f182af80e30403c370[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 2 17:05:27 2016 -0700

    Include TypeParameter instances in the AST.
    
    Duplicate top-level type parameters are no longer allowed.
    visitors.AddNamePrefix() now uses the name of the TypeDeclUnit rather than
    an arbitrary prefix so that the lookup function knows what prefix to add
    to type parameter names.
    TypeVar("A") has been removed from builtins because we have an extraordinary
    number of test classes named A.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129160471

[33mcommit f0bd400bb5d1a6bc71ea609b6ae921b6dcfde377[m
Author: acaceres <acaceres@google.com>
Date:   Mon Aug 1 13:53:11 2016 -0700

    Ignore @abstractmethod and metaclass in pyis
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=129022751

[33mcommit e182965a1e427a2e3c262ec048b86bd644d741f1[m
Author: rechen <rechen@google.com>
Date:   Mon Aug 1 08:18:23 2016 -0700

    Examine all GenericType parents of a class.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128986710

[33mcommit 9ffba335c35b9b6351346a2ece83c38e171a8ee4[m
Author: acaceres <acaceres@google.com>
Date:   Fri Jul 29 14:28:55 2016 -0700

    Use typeshed's stubs instead of our own for ~6 modules
    
    csv, functools, io, socket, threading, xml
    
    Typeshed versions are more complete in these cases
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128846980

[33mcommit 172666c2c9407afa35d30b2ba1b59cfb0f52899f[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 29 08:08:32 2016 -0700

    Be more careful what kind of ASTs we allow Optimize to call LookupClasses on.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128808475

[33mcommit 85e01418a59def56d62888b59b51a43b1d7a07e6[m
Author: acaceres <acaceres@google.com>
Date:   Sun Jul 31 17:26:13 2016 -0500

    Add support for keyword-only-argument syntax in pyis
    
    def f(a, *, b=1): ...
    
    will no longer throw a parse error, will be transformed to
    
    def f(a, b=1): ...
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128760601

[33mcommit c6916672c46c07ff9ac0ac38fd69de86d3dcacfa[m
Author: dbaum <dbaum@google.com>
Date:   Thu Jul 28 13:50:17 2016 -0700

    Change attribute_error() to not include the object's name if there is more than one possible binding.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128736966

[33mcommit 777dc743cf9f524f9a5a0044b5adc0fb866cc4f9[m
Author: acaceres <acaceres@google.com>
Date:   Thu Jul 28 13:12:51 2016 -0700

    Partially rollback []
    
    Typeshed no longer has "# type: ignore" in inconvenient places, so no
    need to strip them out.
    
    Kept behavior that un-annotated constants are valid and equivalent to
    constants annotated with Any.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128732963

[33mcommit 674f3143bc5e59cfda70ea3a8d1b8d046aa6ca9d[m
Author: acaceres <acaceres@google.com>
Date:   Thu Jul 28 13:12:24 2016 -0700

    Update typeshed to 557579da36d431e818a03d9a34be1fc52e4b29b9
    
    Also add 2and3/argparse.pyi to pytype's typeshed testing blacklist (not too clear how it sneaked through)
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128732907

[33mcommit 9a922a2598654e0f86eec94dbd3438ae890b4de3[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 28 10:55:34 2016 -0700

    Support sys.platform checks.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128717231

[33mcommit ecc02e18754cf28209a79dd48f7964f83a2289fb[m
Author: dbaum <dbaum@google.com>
Date:   Wed Jul 27 16:58:16 2016 -0700

    Fix isinstance() check for objects that don't have a class.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128646215

[33mcommit 83f35175f29f80f05914cb598d6effb7ea5a07fd[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 27 09:49:46 2016 -0700

    Support renaming type parameters.
    
    Makes Instance.type_parameters an AliasingMonitorDict, which keeps
    track of aliases for its keys. We then map multiple parameters to
    the same value whenever we come across something like
      ParameterizedClass(base_cls=Foo, parameters={T: U}).
    (In this example, T is an alias of U.)
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128595917

[33mcommit ca0c2663dfe295034bd965372945137d8358a392[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 27 08:22:04 2016 -0700

    Fix AbstractSet definition, do minor clean-up in typing.pytd.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128587344

[33mcommit 94c29397a2b095fb45a098e63d51c8b907cf9938[m
Author: fyquah <fyquah@google.com>
Date:   Wed Jul 27 08:11:57 2016 -0700

    Add support for unevaluated 'if is' and 'if is not'.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128586407

[33mcommit d775e26a981504492019a397f598c5f644afc441[m
Author: nmarrow <nmarrow@google.com>
Date:   Wed Jul 27 07:04:30 2016 -0700

    Added abcs to collections.pytd
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128581383

[33mcommit 3f29be6ba5144f0f999746e4dc6d981566acdd3d[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 25 16:22:29 2016 -0700

    Improve pyi for set.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128412670

[33mcommit c35053a7ad6695fc795800c53eacfe9688090f42[m
Author: acaceres <acaceres@google.com>
Date:   Mon Jul 25 15:18:10 2016 -0700

    Allow pytd_tool to take "-" as its second argument.
    
    Sends output to stdout.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128405219

[33mcommit cb270dce5ea9daca5fcaf5f92df1511cca261e71[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 25 14:24:52 2016 -0700

    Add basic support for specializing GenericType parameters.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128399314

[33mcommit 7506f596cb6fdae74d301664d86ff5d88fd226e3[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 25 10:03:01 2016 -0700

    Use different analysis depths for module initialization and analysis.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128368689

[33mcommit 2e9b4594b645f779a2f484a125d06bd2b4f0f715[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 25 08:11:47 2016 -0700

    Refactor pytd/ slightly to avoid circular imports.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128357615

[33mcommit 9742e120bd3b3cdd01993d734b7a1e31951ecdd4[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 22 17:38:55 2016 -0700

    Treat typing.py as a builtin.
    
    We need it to have higher precedence than user imports, since it's preloaded.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128229687

[33mcommit 3d937d1017caad38ce3524b5959b6e6b86a6a022[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 22 16:14:23 2016 -0700

    Fix a bug with --quick. Clean up command line options.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128222499

[33mcommit 5b34fb17d3b71009fb3ab2e3c69f3afb3111650c[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 22 15:44:12 2016 -0700

    Resolve module dependencies after other post-processing.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128219598

[33mcommit 30ea876117a0d2a3db1e7f866ad5e2e79a4ab251[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 22 15:10:04 2016 -0700

    Improve handling of *args.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128216155

[33mcommit 5d8cfd99d25dc9b2662a2e170c7eb60cbde4c876[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 22 14:52:42 2016 -0700

    Don't fail on, and report, errors during interpreter function arg matching.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128214243

[33mcommit c72690463060fec557c05fa60ad729a16ba77c08[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 22 12:04:31 2016 -0700

    Minor cleanups in convert.py. Add assert to cfg.py compression code.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128197590

[33mcommit 0fee10d83a2104ab4d68bf8f58ad83bea5676ec0[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 22 09:38:19 2016 -0700

    Make sure we solve type parameters at the right node.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128181685

[33mcommit e6695545d6b92006745d493bf7c8fd1f24f413f8[m
Author: dbaum <dbaum@google.com>
Date:   Fri Jul 22 07:57:12 2016 -0700

    When --output-errors-csv is specified, the exit status should be 0 even if errors were detected in type checking.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128173782

[33mcommit 343282c07d32f5ca62c5fc9ada8bcf558bcc76d1[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 21 17:05:13 2016 -0700

    Merge create_pytd_instance and convert_constant.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128123147

[33mcommit abfff6ebecaadb99a648482ea02c606213d5253b[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 21 14:56:22 2016 -0700

    Get rid of ExternalType.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128108910

[33mcommit 488d0f068fd6cbcf971c200a948bc0c57a9e8bcd[m
Author: fyquah <fyquah@google.com>
Date:   Thu Jul 21 11:54:27 2016 -0700

    Add Errors.from_csv_row - to be used in the tricorder analyzer
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128087575

[33mcommit 5e8740913be3948b82d47bbb188d168715d07e3f[m
Author: acaceres <acaceres@google.com>
Date:   Thu Jul 21 07:17:56 2016 -0700

    Ignore "#type: ignore" type annotations
    
    Side effect: we no longer throw an error on un-annotated constants like
    
    X = ... # <- no annotation
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128058217

[33mcommit 20ecd041b4bfbb9fe1edb194b458d3ccbceb2ce8[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 21 06:02:31 2016 -0700

    Configure logging before loading imports_info.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=128052847

[33mcommit e0b9e93657089bab2527a8d17e4fbdda587385dc[m
Author: dbaum <dbaum@google.com>
Date:   Wed Jul 20 15:02:39 2016 -0700

    Fix a bug in import_map_loader.  When checking a file and not generating pyi output the output half of src_out is None, which leads to an exception.  I believe we should simply ignore these cases.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127992994

[33mcommit a5c35202de56eafbb818bc38924e740224f9f847[m
Author: fyquah <fyquah@google.com>
Date:   Wed Jul 20 13:47:53 2016 -0700

    Add flag --output-errors-csv support for pytype
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127983522

[33mcommit b94d441c8448b4c599396260ea49d5d22d075eea[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 20 09:58:03 2016 -0700

    Add some tests, logic for inherited methods for GenericType.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127956697

[33mcommit 69746917a2a3b8473630dc0002fb207375864db8[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 20 08:20:54 2016 -0700

    Make pytype return a bad exit status in case of errors.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127947572

[33mcommit d1041833239d542a727de90e036f1e06c6af5ad5[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 19 15:52:24 2016 -0700

    Add better support for typing.pytd.
    
    This change makes pytype actually use the types in stdlib/typing
    rather than immediately replacing them with builtins. So, for
    instance, writing
      class list(List[T]): pass
    causes pytype to look up typing.List and verify that it is a
    subclass of Generic.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127884146

[33mcommit ef3c4d5428cd43393f6937cfa09faa32791f254c[m
Author: fyquah <fyquah@google.com>
Date:   Tue Jul 19 15:43:10 2016 -0700

    Construct config.Options.imports_map in the constructor of config.Options
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127883137

[33mcommit 0f1de67b428196768faec492637806d2f7541281[m
Author: kramm <kramm@google.com>
Date:   Tue Jul 19 13:19:56 2016 -0700

    Fix error checking of imports_info option.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127866006

[33mcommit 9abd112266a68a30c5f6c14fd0eb3b113d21e814[m
Author: fyquah <fyquah@google.com>
Date:   Tue Jul 19 09:15:01 2016 -0700

    Add a property method in pytype.errors.Error to access self._message
    Bootstrap pytype_runner with simple tests
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127838019

[33mcommit fe0284b57fed77818b972a9e70ae312b802359d7[m
Author: kramm <kramm@google.com>
Date:   Tue Jul 19 09:08:00 2016 -0700

    Change how command-line options control checking vs inference.
    
    With this change,
         pytype file.py
    will only type-check file.py. To generate a pyi, do
         pytype file.py:file.pyi
      or pytype file.py -o file.pyi
    .
    Finally, to check a file against a pyi, do
         pytype -C file.py:file.pyi
    .
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127837399

[33mcommit 851b2a3103a3a9de01b6718981c2a3a0f813d2dd[m
Author: acaceres <acaceres@google.com>
Date:   Tue Jul 19 07:18:58 2016 -0700

    In TypeVars, ignore any arguments after the first
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127828676

[33mcommit 1243bb4f6c68d0f0ced8502b11fc0ef47a23f741[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 18 14:34:41 2016 -0700

    Refactor config.py.
    
    In particular, split _process_options into seperate methods, one per option.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127759889

[33mcommit 8d3a80f4116fafcb6725ae1239621dc59b3127fc[m
Author: acaceres <acaceres@google.com>
Date:   Mon Jul 18 13:55:47 2016 -0700

    Add empty pytd stubs for modules giving us import-errors
    
    For submodules of xml, only added stubs when there was one in typeshed. Others like xml.xslt are handled by xml.pytd
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127755130

[33mcommit d8925d41ba889fb841983fed558f6ce84f50c28f[m
Author: acaceres <acaceres@google.com>
Date:   Mon Jul 18 11:38:41 2016 -0700

    Drop some stdlib pytds: subprocess urlparse ast re
    
    Typeshed versions can be parsed and are generally more complete
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127740033

[33mcommit 7f6b5faac6a1802da44e74e5bf09d8d771d7e5f0[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 18 11:08:23 2016 -0700

    Create Unsolvable on index error.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127735994

[33mcommit 7fa67835606db437b66f386ee3613b728f17da34[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 18 10:45:02 2016 -0700

    Add topological sort implementation to utils.py.
    
    (Need for new config.py)
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127732797

[33mcommit ca1b3246dab8c3505b45468dfd163a3b96d1c690[m
Author: rechen <rechen@google.com>
Date:   Sun Jul 17 20:06:44 2016 -0700

    Import module-level __getattr__'s.
    
    When doing a wildcard import from a module with a top-level
    __getattr__, copy it over.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127679866

[33mcommit fb5d64add6ece600bfc33e16df4ce836e834edc3[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 15 15:22:44 2016 -0700

    Add test for bytes
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127584972

[33mcommit 15ae33034ed42a8732ac4a94986d69d385e74700[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 15 15:14:13 2016 -0700

    Move all conversion related code out of vm.py, into convert.py.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127584102

[33mcommit 9aee6c5162915427a1eb9dcb911984826559b1d9[m
Author: acaceres <acaceres@google.com>
Date:   Fri Jul 15 12:15:01 2016 -0700

    NamedTuple support
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127565285

[33mcommit 873cf5719b604d4b8635e4b847d1ebe82d7ad838[m
Author: acaceres <acaceres@google.com>
Date:   Fri Jul 15 11:35:42 2016 -0700

    Allow trailing commas in imports tuples
    
    from an error in typeshed/stdlib/2.7/codecs.pyi
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127561321

[33mcommit 2aae2258f381c21c2cfff5f381610fe099a16652[m
Author: acaceres <acaceres@google.com>
Date:   Fri Jul 15 08:48:58 2016 -0700

    Update typeshed blacklist
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127544067

[33mcommit ff51665ba357a23b1b21ccdff2471160ae2473c7[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 15 07:34:59 2016 -0700

    Make version checks compatible with typeshed.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127538577

[33mcommit 9d2141dcd4af00b0ac0f82e68d43c5fc74986829[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 14 18:00:08 2016 -0700

    Simplify GenericType instances.
    
    Modify pytd/optimize.py to simplify GenericType instances whose
    parameters are all "Any". This sometimes leaves us with "object" as
    a constant or return type, which we adjust to "Any".
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127495343

[33mcommit 371dcdbfad801a94f1bc98d67fe16a03f4c29d28[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 14 16:57:41 2016 -0700

    Make typing.Callable callable.
    
    Since Callable is a GenericType, in addition to editing typing.pytd,
    we need to modify optimize.SimplifyUnionsWithSuperclasses to avoid
    getting types such as Union[Callable, Callable], where the first
    Callable is __builtin__.function and the second is typing.Callable.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127489835

[33mcommit 1f6802b44552ff39660eb4f737bbf89ee9cb18a3[m
Author: acaceres <acaceres@google.com>
Date:   Thu Jul 14 11:58:34 2016 -0700

    Fix "python setup.py install", I broke it in [] (install worked but pytype was left in a bad state)
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127457446

[33mcommit aa33f080b598300d746d292fb9b8bd453ff94211[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 13 11:59:09 2016 -0700

    Handle pyi dependency errors more gracefully.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127343083

[33mcommit a25e7d0252413b40ba3d1b12d40f13993d1ffdce[m
Author: acaceres <acaceres@google.com>
Date:   Wed Jul 13 11:55:40 2016 -0700

    Remove recently fixed pyis from blacklist
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127342712

[33mcommit c61dc1d1fa550524e587a00a0f64dfa604fa48b9[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 13 09:39:52 2016 -0700

    Improve behavior of aliases in pyi files.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127326357

[33mcommit 116f14fe2697b83f63fb400694d642f2235c0c09[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 12 17:44:28 2016 -0700

    Use mro in optimize.RemoveInheritedMethods.
    
    Use the method resolution order when looking for inherited methods.
    Moves some code and tests from pytype.utils and pytype.utils_test
    to pytype.pytd.utils and pytype.pytd.utils_test for this purpose
    and adds a couple of checks for bad inheritance patterns.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127264589

[33mcommit b364113fbd97cabb6c282e282eb564dbc05cb24a[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 12 10:02:30 2016 -0700

    Always succeed when matching against object.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127211132

[33mcommit 17b80f81eca6e4f0429d8f46c33039c824f3d5b0[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 11 10:23:19 2016 -0700

    Don't use realpath, it makes log output less useful.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127099943

[33mcommit eff07596781f6ec0a0ffb9f638bb990eb0f5e210[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 11 09:52:40 2016 -0700

    Treat anonymous properties as 'Any'.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127096663

[33mcommit 240362b8d3296155082650765f569f9a4252da60[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 8 14:46:27 2016 -0700

    Improve printing of ParameterizedClass.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126949868

[33mcommit b95a026033d07b64e47467694dea45bd02ec4d9e[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 8 14:43:55 2016 -0700

    Allow the dict syntax 'dict(border="solid", height="10px")'
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126949584

[33mcommit c76ba2417f77ce1686c2200725d78ce694c4bc7d[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 8 12:34:56 2016 -0700

    Update builtins definitions
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126936745

[33mcommit 90936aa33368f790471e69dd7e6b52e345b02298[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 8 12:05:23 2016 -0700

    Use "typing.Callable" instead of "function"
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126934099

[33mcommit 8b053f16d0b43f3774a8655f8a5e991933f78e27[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 8 12:00:44 2016 -0700

    Fix matching of bound functions against typing.Callable.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126933625

[33mcommit 1695f9acf7bb9e60b6f37cf09f756e2209d8d7f3[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 8 10:34:18 2016 -0700

    Improve printing of annotations. Fix matching bug.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126924380

[33mcommit cc15dea4ceca41b132a918a1f3bc6fcadf513357[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 8 10:22:47 2016 -0700

    Use __getattr__ to compute attributes.
    
    When normal attribute lookup fails, check for a __getattr__ method
    and, if defined, use to compute the attribute. Fixes attribute
    errors caused by [].flags.flagvalues.FlagValues.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126923315

[33mcommit 86b993bc393943a974a11eba4319189e24a53634[m
Author: acaceres <acaceres@google.com>
Date:   Fri Jul 8 08:55:49 2016 -0700

    Adjust setup.py to get travis to build us.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126915728

[33mcommit d8c99c5c0c8d6c0db6ca3f9bf60bf889b4c44cad[m
Author: dbaum <dbaum@google.com>
Date:   Thu Jul 7 13:44:13 2016 -0700

    Add if-splitting support for empty list/set/frozenset.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126841688

[33mcommit c086ac7b677219096ce479ccb148cd62a89c2e92[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 7 13:19:24 2016 -0700

    Upgrade typeshed to version adc6bf5f94ffa7a7f774d0e7b644f479a2e4ea95
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126838810

[33mcommit f17740aded9a58dcc865c404d7d15cc98d7e40cc[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 7 08:59:27 2016 -0700

    Relative imports have higher priority than named imports.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126810729

[33mcommit 87a02c2e0e079af6992ccf187b571ebd43e83823[m
Author: fyquah <fyquah@google.com>
Date:   Wed Jul 6 17:10:46 2016 -0700

    Add sorted_errors()
    
    so that other analyzer clients (eg: TricorderAnalyzer) can access the type
    inferencing / checking errors
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126755286

[33mcommit 1b703b976fd67657d2ef6ac00e2804350ead61ae[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 6 16:07:47 2016 -0700

    Fix bug in DELETE_GLOBAL. Make assertNoErrors do more testing.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126749025

[33mcommit 11f2866660bbe171861c20fc09e72df021e73ad0[m
Author: dbaum <dbaum@google.com>
Date:   Wed Jul 6 12:59:42 2016 -0700

    Add if-splitting support for isinstance.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126728399

[33mcommit cfe85be3ee23077e0520a2fa1114a9ae938ff3e1[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 1 17:02:50 2016 -0700

    Fix error generation for invalid super() calls.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126461317

[33mcommit 0a9f6f63d48e6659da534e3e5ab54e99f4bda869[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 30 17:22:01 2016 -0700

    Handle circular references without blowing up.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126362668

[33mcommit cdad91c6cd55c3961d4da574d33277c6d73b047a[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 30 10:57:05 2016 -0700

    Fix matching involving generic superclasses.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126319939

[33mcommit 98d7d37e35b963249b431fbcfa73ad1393886f31[m
Author: dbaum <dbaum@google.com>
Date:   Wed Jun 29 14:25:34 2016 -0700

    If-splitting for dicts.  The support is pretty minimal - dicts are either empty or ambiguous.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126232875

[33mcommit 916ae592b57c4b189289e4e6fce6ea86fdd0e0f6[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 29 09:20:07 2016 -0700

    Fix arguments passed to __get__.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126198959

[33mcommit 1d8e60f62b4f33e57c58b105093ac69713b387b5[m
Author: dbaum <dbaum@google.com>
Date:   Wed Jun 29 08:40:49 2016 -0700

    Make True/False compatible with if-splitting.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126195232

[33mcommit 5b0c7d7b87b5aa5b06464a71aeeda89a2fb66673[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 28 12:26:16 2016 -0700

    Make typing.IO a context manager.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126103853

[33mcommit fac6363b98be8c3b724aa72a6381660b28794aaa[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 28 12:21:53 2016 -0700

    New error class 'not-callable'.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126103431

[33mcommit 3282ae0189aa81a71a8c923e345974ecf01ef42e[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 28 11:30:44 2016 -0700

    Remove old pytd smoketest. (supplanted by pytd/typeshed_test.py)
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126097433

[33mcommit 01ae5ddc62fb5ff946ca768fb471953c1bc24ed7[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 28 11:26:22 2016 -0700

    Improve sharding of typeshed tests.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126096908

[33mcommit d905b0aef8c7a316279497e294f0f32b826701df[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 28 11:21:00 2016 -0700

    Report missing submodules as import-error, not attribute-error.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126096158

[33mcommit a82d08da4458837438bddb20de475baba3a76f66[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 28 10:09:16 2016 -0700

    recover from ByteCodeAttributeError
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126086571

[33mcommit be24f53ca4949b29ea7e873cff2e8ee581834268[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 28 10:02:56 2016 -0700

    Move builtins into their own namespace ("__builtin__")
    
    This fixes bugs caused by naming things after Python builtins
    (like "module", "LookupError", "type", etc.).
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126085747

[33mcommit e88e944e1a3d0a1bcb9be9a88c1c502cc24e79fe[m[33m ([m[1;33mtag: 0.2[m[33m)[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 23 15:33:19 2016 -0700

    Make RemoveRedundantSignatures optimization behave better with "Any".
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125726418

[33mcommit 33cc49207e110d79f85f512b4f0b222ab4349c8b[m
Author: dbaum <dbaum@google.com>
Date:   Thu Jun 23 13:28:24 2016 -0700

    Use conditions to skip dead code.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125711496

[33mcommit 40bbb66c1eed5dde1e75330bdbb84360e587097c[m
Author: dbaum <dbaum@google.com>
Date:   Wed Jun 22 13:03:40 2016 -0700

    Implement if-splitting.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125598948

[33mcommit 27fa1025d678b9359d1f256be449d8283e027a99[m
Author: acaceres <acaceres@google.com>
Date:   Tue Jun 21 13:30:42 2016 -0700

    Add test that pipes typeshed's python2 stdlib files through our parser
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125488162

[33mcommit c65c7edcbe2debed21db62224d036e64c4867fd7[m
Author: dbaum <dbaum@google.com>
Date:   Tue Jun 21 10:28:07 2016 -0700

    Use the import opcode to determine error location for pyi_error().  The filename and line number of the underlying pyi error is also included in the message.  The filename is truncated to its basename(), otherwise the long paths to the file tend to clutter the error log.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125466494

[33mcommit fdafe22b41a4350654c8cb02e6c3ac3a613ad6a9[m
Author: acaceres <acaceres@google.com>
Date:   Mon Jun 20 15:40:30 2016 -0700

    Support for class properties in pyi files.
    
    Class methods decorated with @property or @foo.setter or @foo.deleter get parsed into the same AST as class attributes. No support for read-only.
    
    class C:
        @property
        def x(self) -> int: ...
    
    is equivalent to
    
    class C:
        x = ...  # type: int
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125388396

[33mcommit 645bb5a3d01248c388dfaeeedc6a1416326a43bf[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 20 12:44:37 2016 -0700

    When we can't parse a .pyi, don't leave broken modules in the import cache.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125368271

[33mcommit 3432d3a7c4577dbc75aa295e11b7fe84ceffa101[m
Author: kramm <kramm@google.com>
Date:   Fri Jun 17 16:09:53 2016 -0700

    Add -M option to pytype, for specifying the module name.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125212676

[33mcommit f8f3a52cfb8f850b2d14e7d591d82f46967fffac[m
Author: acaceres <acaceres@google.com>
Date:   Thu Jun 16 13:41:27 2016 -0700

    pyi parser: drop unused rules for @overload
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125096963

[33mcommit 4e840069483ff11ba5026d52dcca704a9758f91e[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 16 10:58:48 2016 -0700

    Make function subclass Callable.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125078286

[33mcommit 109d0d2e596efcad26d7332d8f7f87667945d2fc[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 16 09:26:14 2016 -0700

    Improve support for old-style classes.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125067949

[33mcommit 1819a8f607a3112860a39584df50ddfb8454e20d[m
Author: kramm <kramm@google.com>
Date:   Wed Jun 15 14:53:13 2016 -0700

    Simplify test suite: Get rid of unnecessary 'with' blocks.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124995611

[33mcommit 7d7024925d79132941dcaa878f5027c96e41ba2c[m
Author: acaceres <acaceres@google.com>
Date:   Tue Jun 14 12:35:44 2016 -0700

    Look for __init__.pyi files when loading a module stub from typeshed.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124869372

[33mcommit 46476227fdaf7eb11d42a4cd9169682b63da3778[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 13 09:38:47 2016 -0700

    Properly infer optional parameters.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124734510

[33mcommit a33f4a3a550ad007b919ad5942aa1e8defd1ca81[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 13 09:21:46 2016 -0700

    Simplify error message for empty containers.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124732904

[33mcommit 13a335e870a949be97254bef600adf353da5657c[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 13 09:21:10 2016 -0700

    Improve --quick behaviour, add test case.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124732827

[33mcommit 2e5b7652c09a1e0ff239e31041824bf1fa56b782[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 13 09:20:29 2016 -0700

    Create new Unsolvables for imports, to prevent cyclic MROs.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124732769

[33mcommit 249930af1d719a455766d236bd8e184912134a42[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 13 09:19:48 2016 -0700

    Fix analyzing bound methods as variables.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124732703

[33mcommit e1062f2b684692f9350aaf2e1f08418c7b742ef3[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 13 09:19:04 2016 -0700

    Add PasteVariable optimization. Improve explaining. Fix bug in test output.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124732630

[33mcommit 208245cc27279c1dd57b5e7a6f9de712d3a5bd12[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 9 14:20:10 2016 -0700

    Point out, in the README and setup.py, that pytype needs 2.7 to run.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124496655

[33mcommit 78ec93f6f1ae8166fb8de025dd451439111218b9[m
Author: dbaum <dbaum@google.com>
Date:   Tue Jun 7 08:11:13 2016 -0700

    Save metrics as yaml, add support for merging multiple metrics dumps together.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124245280

[33mcommit 6985d5052ea369ddb9bf3c0350a449690f406474[m
Author: acaceres <acaceres@google.com>
Date:   Thu May 26 10:25:01 2016 -0700

    add module imports to generated pyi
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=123331692

[33mcommit 7724510b4d799221af4280b6331d3f0367ef4d7f[m
Author: kramm <kramm@google.com>
Date:   Wed May 25 15:42:39 2016 -0700

    Fix Set inheritance.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=123261815

[33mcommit 6b3b87bcbe54dbc9c7bbc7d777fce0837e555517[m
Author: kramm <kramm@google.com>
Date:   Wed May 25 15:40:01 2016 -0700

    Improve support for typing.Sequence.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=123261541

[33mcommit 15a3650f5af296c67d482867b24ef7c34cbf3493[m
Author: dbaum <dbaum@google.com>
Date:   Wed May 25 11:01:58 2016 -0700

    Create the metrics and add a --metrics option.  I also added code to collect a few specific metrics that may be helpful with if-splitting, though these metrics are subject to change.  Mostly I wanted something in place in both pytd and vmlib in order to verify the BUILD file changes.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=123231377

[33mcommit 4b22844a6fe7f5ff76d256264f7db584eb4959de[m
Author: kramm <kramm@google.com>
Date:   Mon May 23 17:06:05 2016 -0700

    Give __builtin__ classes the proper typing superclasses.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=123054772

[33mcommit 16f29eebdf69693d50fa56d10b31189d28a78bf1[m
Author: kramm <kramm@google.com>
Date:   Fri May 20 15:21:03 2016 -0700

    Make list subclass Iterable.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122872067

[33mcommit 69bcd96a850f22c681924201be81070ab9d7e23d[m
Author: dbaum <dbaum@google.com>
Date:   Thu May 19 14:27:21 2016 -0700

    Add details field to Error.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122769468

[33mcommit bde8063a489c690188fda028bf487fece53bb4fe[m
Author: dbaum <dbaum@google.com>
Date:   Thu May 19 13:37:21 2016 -0700

    Add --profile option.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122764244

[33mcommit 7d4c834b8b61e82082dc2c4d0204db6db1a7c6cc[m
Author: kramm <kramm@google.com>
Date:   Wed May 18 13:23:56 2016 -0700

    Make import-error mention '.pyi'.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122661636

[33mcommit 115d11bb124550b9b3e956630d343b46dc329012[m
Author: kramm <kramm@google.com>
Date:   Sun Jul 24 13:22:39 2016 -0700

    Simplify README.md
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122661511

[33mcommit d750d4944ba4a0c000859b7939280649403568ff[m
Author: kramm <kramm@google.com>
Date:   Wed May 18 13:21:57 2016 -0700

    Add "-d" command-line option.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122661458

[33mcommit 04579b326cc6fbee496d70d6b4b51e147408a06b[m
Author: dbaum <dbaum@google.com>
Date:   Thu May 12 13:25:04 2016 -0700

    Rename Value to Binding.  The term "value" has been purged from cfg.py.  Any external uses of Value, Variable.values, etc. have also been changed.  There are still many occurences of "value" or "val" in local variables in other files.  These can be changed as needed in later CLs as they do not affect a public API.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122190667

[33mcommit 4e87afc8d13112cd9ae0dc4592ba6319ead1c92b[m
Author: dbaum <dbaum@google.com>
Date:   Thu May 12 11:09:27 2016 -0700

    Improve the pseudocode output.
    
    Some sample output:
    
    <5>None
      From: <4>None
      To: <7>None, <6>None
    
      $197 return(frame:bar)
        #129 <v129 str [str]>, $256=#129 @5
        #14 <v14 NoneType [NoneType]>, $256=#14 @5
        #20 <v20 int [int]>, $257=#20 @6
      $254 locals.y
        #129 <v129 str [str]>, $216=#129 @5
        #14 <v14 NoneType [NoneType]>, $216=#14 @5
      $255 y
        #129 <v129 str [str]>, $254=#129 @5
        #14 <v14 NoneType [NoneType]>, $254=#14 @5
      $256 y
        #129 <v129 str [str]>, $254=#129 @5
        #14 <v14 NoneType [NoneType]>, $254=#14 @5
    
    <6>None
      From: <5>None
      To: <7>None
    
      $197 return(frame:bar)
        #129 <v129 str [str]>, $256=#129 @5
        #14 <v14 NoneType [NoneType]>, $256=#14 @5
        #20 <v20 int [int]>, $257=#20 @6
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122175763

[33mcommit a4479141305c21a7ed64cd3a5fbd27bd8be3b9c7[m
Author: dbaum <dbaum@google.com>
Date:   Wed May 4 08:58:02 2016 -0700

    Add support for disabling errors.
    
    * Added the Director class, which manages most of this.
    * Only supports a single file for now.
    * Supports "type: ignore" and "pytype: disable=error-name".
    * Added a filter to ErrorLogBase, which allows an arbitrary predicate function to determine which errors are actually added to the log.
    * Make errors.Error public since it shows up as an arg to the filter function.
    * Added an invalid-directive warning as the catch-all for errors detected within pytype: comments.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121485724

[33mcommit af17135cc0a9bc25646ca5f5155b71cd4ce65b96[m
Author: dbaum <dbaum@google.com>
Date:   Wed Apr 27 10:42:12 2016 -0700

    * Improve encapsulation of Error class.
    * Add error names (will be used later for disabling specific errors).
    * Funnel all errors through a single _add call.  This is where disabling will take effect.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120930357

[33mcommit a117da420e316ce9d3b26ec738b4e0b5ebf3119a[m
Author: dbaum <dbaum@google.com>
Date:   Tue Apr 26 08:16:53 2016 -0700

    Add ErrorLogBase.has_severe_error.  Previously, code either used implicit truth of either errorlog or errorlog.error to determine if a severe error has occurred.  This will not work if warnings are used, so has_severe_error() is being added.  In addition, the errors field itself has been made private (there is no reason to expose the attribute directly since the error log can always be iterated).
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120814124

[33mcommit 80bbdb37c771696d73504530fd4b97aee08cde72[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 20 14:21:58 2016 -0700

    Fix the order of parameters in function call error messages.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120375487

[33mcommit 4fd8ce704fa65eab73e64364b221481a3f53b885[m
Author: kramm <kramm@google.com>
Date:   Tue Apr 19 15:17:33 2016 -0700

    Allow to pass --python_exe=HOST.
    
    This will run bytecode compilation using the same Python that pytype uses.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120276055

[33mcommit d526cc9f950d2320fd93405ade99873f210ddbea[m
Author: kramm <kramm@google.com>
Date:   Fri Apr 15 17:07:31 2016 -0700

    Implement typing.List.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120006158

[33mcommit ca4fcab96b674d5beafc1641612d16390caf9d3c[m
Author: kramm <kramm@google.com>
Date:   Fri Apr 15 16:05:17 2016 -0700

    Improve error message for -V.
    
    Display a better error message if -V is specified but we can't find the Python
    executable.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120000697

[33mcommit 15cc2b86e2e6ff810ca71f46e2407ca62cd9756f[m
Author: kramm <kramm@google.com>
Date:   Fri Apr 15 10:47:42 2016 -0700

    Fix Python 3 try/except.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119970136

[33mcommit 25950b4629a3856109f98541874f4079a1a3bb64[m
Author: kramm <kramm@google.com>
Date:   Fri Apr 15 10:44:59 2016 -0700

    Implement Python 3's LOAD_BUILD_CLASS opcode.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119969844

[33mcommit 9c33b844533fe362eab1f192c0349456f5f8bcfe[m
Author: kramm <kramm@google.com>
Date:   Thu Apr 14 15:12:38 2016 -0700

    Make Python 3 tests work on Forge.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119896468

[33mcommit 21af4b063893d0f5373da719c2ade00b9dab132d[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 13 16:15:51 2016 -0700

    Output an error if we found a circular inhertance.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119797475

[33mcommit 94ffb73555960718c6b8473cc2bfeb66b3c48bcb[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 13 14:50:02 2016 -0700

    Don't ignore keyword arguments.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119788095

[33mcommit aa64f3f4e8d310b42f0bf60d04114c77f31359c8[m
Author: kramm <kramm@google.com>
Date:   Mon Apr 11 14:09:10 2016 -0700

    Generate better error messages for broken pyi files.
    
    Also, improve handling of generic base classes.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119568618

[33mcommit 447ab009428c7016ad3c1d283b5bd9802a0cc79c[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 6 12:52:10 2016 -0700

    Support checking against typing.Union[...].
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119192303

[33mcommit fdff7447e9154e145d53d8326745544f5ae29a3c[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 6 11:18:03 2016 -0700

    If a function has type annotations, don't use Unknowns.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119181640

[33mcommit fb4115ca5cdf284069e373d7dbb8bce36eb67401[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 6 11:16:28 2016 -0700

    Check function calls against annotations.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119181424

[33mcommit d67d012e43ac63414cd49ce4c02bf4d39bbdccb7[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 6 11:10:39 2016 -0700

    Fix matching of calls against @staticmethod builtins.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119180591

[33mcommit b5268599b6d23a8b0a5212c72a5aa883b0978467[m
Author: kramm <kramm@google.com>
Date:   Mon Apr 4 08:33:40 2016 -0700

    Fix matching of Unknown against ParameterizedClass.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=118942436

[33mcommit 3b7f0452f2d234d260167bad989727cf6837369f[m
Author: kramm <kramm@google.com>
Date:   Tue Mar 22 15:51:06 2016 -0700

    Allow more syntax variants for optional parameters.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117873580

[33mcommit 89d09e3eb20f4b3b511d0f159957e8e5ffc4a3b8[m
Author: kramm <kramm@google.com>
Date:   Tue Mar 22 13:29:32 2016 -0700

    Switch more builtin modules to typeshed.
    
    The following have a better representation in typeshed and hence are deleted:
     _functools, _sre, _weakrefset, gc, imp, select, signal, atexit, pprint,
    shutil, string, struct, textwrap, traceback
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117857515

[33mcommit 50ae056aeee96e5428da89700c2e0b0e0b4d6b85[m
Author: kramm <kramm@google.com>
Date:   Mon Mar 21 15:16:13 2016 -0700

    Print optional parameters as "*args, **kwargs", not as "...".
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117760035

[33mcommit 7a00001da62dfec9daf9e24e761a990f4229568e[m
Author: kramm <kramm@google.com>
Date:   Mon Mar 21 15:14:41 2016 -0700

    Improve pytd for os.walk
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117759846

[33mcommit df5028832180fe66ff19c17e55b1f3ae9f6cd326[m
Author: kramm <kramm@google.com>
Date:   Fri Mar 18 10:18:49 2016 -0700

    Fix behaviour when we have two different states on the data stack.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117559089

[33mcommit 4d26f3bfe6028b87ec6287b9a4d6ebc97b9ef53b[m
Author: kramm <kramm@google.com>
Date:   Thu Mar 17 14:58:59 2016 -0700

    Make inplace operators also fall back to normal operators.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117488916

[33mcommit d4833ab118fb96a995bdd53bc2204c1ba3baada8[m
Author: kramm <kramm@google.com>
Date:   Wed Mar 16 15:14:20 2016 -0700

    Allow functions in pyi to not have a return type (needed for typeshed).
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117388904

[33mcommit f4d076202415267cdf444c7466fb214a1c16d8eb[m
Author: kramm <kramm@google.com>
Date:   Wed Mar 16 15:10:28 2016 -0700

    Output an error for invalid global references. Add --no-report-errors option.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117388484

[33mcommit 093f1f1c52740383b29bf436ad84dab8c91ce5c0[m
Author: kramm <kramm@google.com>
Date:   Tue Mar 15 17:29:11 2016 -0700

    Make load_pytd resolve all ExternalTypes right away.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117296129

[33mcommit 82aeaffb075a0d53e785e55c7d838c07c7ea51de[m
Author: kramm <kramm@google.com>
Date:   Tue Mar 15 12:11:22 2016 -0700

    Change extension of user imports to .pyi.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117264017

[33mcommit 5ae85c58dc4062256345c76cbc2ecc082d07bd8d[m
Author: kramm <kramm@google.com>
Date:   Mon Mar 14 16:08:47 2016 -0700

    Add -T flag to pytype.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117182643

[33mcommit ea6b8043b3bb36c743ce14b405d1dc8347da2883[m
Author: pludemann <pludemann@google.com>
Date:   Sun Mar 13 17:03:10 2016 -0700

    remove lazy import
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117095169

[33mcommit 4644532653d63c5874ae4661cc5d9f3dbdfe6a35[m
Author: kramm <kramm@google.com>
Date:   Fri Mar 11 14:43:46 2016 -0800

    Make ExternalType link to types, instead of classes.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117009817

[33mcommit 964c38af7d42e42c9785aa4210cd33045948c34c[m
Author: kramm <kramm@google.com>
Date:   Thu Mar 10 14:31:14 2016 -0800

    Move PYI validation into try/except.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116909266

[33mcommit 741489c1ed4f3d6342cee9000a322b14e21a1a1a[m
Author: kramm <kramm@google.com>
Date:   Thu Mar 10 14:20:09 2016 -0800

    Process and re-emit inline type annotations.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116908015

[33mcommit 17ec3d01fa50a32f4181e8214eec5c9bc0144e06[m
Author: pludemann <pludemann@google.com>
Date:   Mon Mar 7 12:38:37 2016 -0800

    Remove more circular imports.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116576405

[33mcommit f09b78f468399f4b8e9ab730fb67ac3c7e4b5e02[m
Author: pludemann <pludemann@google.com>
Date:   Mon Mar 7 12:37:18 2016 -0800

    move RemoveMutableParameters to transforms.py in preparation for removing more circular (lazy) imports
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116576283

[33mcommit a54bb18aade1f7e4d5837aee4dac878cc8b65bb9[m
Author: pludemann <pludemann@google.com>
Date:   Mon Mar 7 11:05:55 2016 -0800

    Remove a lazy import that isn't needed to prevent circularity.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116566095

[33mcommit b0d9e78445895e9e1259156a3e6fd1840beb6c87[m
Author: kramm <kramm@google.com>
Date:   Wed Mar 2 14:17:44 2016 -0800

    Add new optimization that removes redundant signatures.
    
    Fixes https://github.com/google/pytype/issues/7
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116180707

[33mcommit 2bbfa01b02e6bf0c62720679b3f6b4e913aa1210[m
Author: kramm <kramm@google.com>
Date:   Mon Feb 29 16:09:58 2016 -0800

    Add test for optional parameters.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115917320

[33mcommit 2d086e60fd69ce1e6ea1d6877a39024d318e1ae9[m
Author: kramm <kramm@google.com>
Date:   Mon Feb 29 16:08:42 2016 -0800

    Allow functions to match against "Callable".
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115917163

[33mcommit e68cdb23140a263b85c441ded6791c9426962c23[m
Author: kramm <kramm@google.com>
Date:   Mon Feb 29 16:07:17 2016 -0800

    Unskip tests that work now, remove useless test.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115916926

[33mcommit beacc0ad272a30a043e4c6c4c47cebe1055929a1[m
Author: kramm <kramm@google.com>
Date:   Fri Jan 8 16:06:51 2016 -0800

    Fix matching of pyi superclasses.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115916854

[33mcommit 358361e836ff989f197662ce14e7e9fbbedb9c98[m
Author: kramm <kramm@google.com>
Date:   Mon Feb 29 16:06:23 2016 -0800

    Support @staticmethod, @classmethod in pyi.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115916773

[33mcommit 0231c7de5bdb33057fe8ddb7a319b2c62c5e7318[m
Author: pludemann <pludemann@google.com>
Date:   Mon Feb 29 12:13:04 2016 -0800

    Fix some imports; fix file name to fit with naming conventions.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115884065

[33mcommit fe6f26345d00399a4d752e5573fe8bf38e63d6b6[m
Author: kramm <kramm@google.com>
Date:   Thu Feb 25 18:36:12 2016 -0800

    Add missing installation steps to README.md.
    
    You also need to clone the submodule, and install ply.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115628832

[33mcommit 1debeed34d5144f79dc7ebd29feb31a6b1a48604[m
Author: kramm <kramm@google.com>
Date:   Tue Feb 23 13:19:00 2016 -0800

    Improve the precision of the structural type converter.
    
    (When dealing with equalities between unknowns and type variables)
    
    This fixes https://github.com/google/pytype/issues/15.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115375743

[33mcommit 2321a7a90b4ebc33d9899cb85be94ca3b8499451[m
Author: pludemann <pludemann@google.com>
Date:   Thu Feb 11 19:44:40 2016 -0800

    Fix typo that broke one test.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114503360

[33mcommit 03da0c73ac09521e806f15f22453996e4b510dc8[m
Author: kramm <kramm@google.com>
Date:   Thu Feb 11 19:38:13 2016 -0800

    Support explicitly specifying that a module has unknown contents.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114503121

[33mcommit 21717aa1655b05ba27160df147816588053fe530[m
Author: pludemann <pludemann@google.com>
Date:   Thu Feb 11 16:52:22 2016 -0800

    Suppress error messages during first pass.
    Rename some "pytd" things to "pyi".
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114492836

[33mcommit 534c3b7e5941395aa947239e5de0ba9326385761[m
Author: pludemann <pludemann@google.com>
Date:   Thu Feb 11 10:34:23 2016 -0800

    Change imports_info so that all files (including outputs) are in the map; modify how the imports_info is validated.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114452528

[33mcommit 3950ed59a4aaafa9dfa98394a95b4a5264e3e398[m
Author: kramm <kramm@google.com>
Date:   Thu Feb 11 06:54:40 2016 -0800

    Implement (basic) DELETE_GLOAL opcode.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114432847

[33mcommit e550ac981b7fa5e5ccfc69cba3801ebbc60ce558[m
Author: pludemann <pludemann@google.com>
Date:   Mon Feb 8 14:54:04 2016 -0800

    Fix imports_map validator
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114152848

[33mcommit 613488c4e81ca153af01ecf7cf59445d20c1a640[m
Author: kramm <kramm@google.com>
Date:   Mon Feb 8 11:02:07 2016 -0800

    Further simplify imports_map loading.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114128155

[33mcommit d7761dc2c8e2d3ee8e3888a61652c05ad7dfe0ca[m
Author: kramm <kramm@google.com>
Date:   Thu Feb 4 10:16:34 2016 -0800

    Simplify imports_info file.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113862973

[33mcommit 69e3314515232610cfb1aa7f4d28b4a327f82889[m
Author: kramm <kramm@google.com>
Date:   Thu Jan 28 09:36:06 2016 -0800

    Add a (skipped) test case.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113270892

[33mcommit 1039ffe1a2c584fd54729832173573d356f4932e[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 27 21:44:19 2016 -0800

    Fix loading of dummy __init__ entries in imports_map.
    
    Turns out, os.path.isfile("/dev/null") returns False.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113229849

[33mcommit f72d03b4816388af4db026dbb676e5a126ba9b40[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 27 21:43:16 2016 -0800

    Temporarily add ast.pytd.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113229808

[33mcommit ffdc401b5cc7c838a2491b845b65e380259da318[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 27 21:28:50 2016 -0800

    Get rid of --pytd-import-ext.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113229299

[33mcommit 93e6e75a3994790ee44f37d083a517a20fb54e4a[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 27 16:27:07 2016 -0800

    Fix -c. Allow shorthand version "pytype -c file.py".
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113213420

[33mcommit 6f2b1e27b1a8c8a04cbc7de86a999d850a970d35[m
Author: kramm <kramm@google.com>
Date:   Mon Jan 25 13:45:42 2016 -0800

    Make quotes in parser.py consistent with the rest of pytype.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112982851

[33mcommit 63e369bec8a9b5717f015fdc2a13cd32c0e5fce1[m
Author: kramm <kramm@google.com>
Date:   Mon Jan 25 13:43:04 2016 -0800

    Allow 'x = True' and 'x = False' instead of 'x = ...  # type:bool'.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112982594

[33mcommit 979df0b47532d379832726b6e78022473bf2e82d[m
Author: kramm <kramm@google.com>
Date:   Mon Jan 25 13:42:36 2016 -0800

    Add (skipped) test case.
    
    This exposes the root cause of https://github.com/google/pytype/issues/10
    (List and Tuple)
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112982533

[33mcommit 6a724745eaef365c5d10847494effcfd5b086f02[m
Author: kramm <kramm@google.com>
Date:   Mon Jan 25 07:03:33 2016 -0800

    Simplify _NeedsTupleEliipsis.
    
    See []
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112946704

[33mcommit 54b5b15f199790e908138a4a5a6a8329996484e0[m
Author: kramm <kramm@google.com>
Date:   Fri Jan 22 14:22:44 2016 -0800

    Use List[T] instead of List[T, ...].
    
    See https://github.com/google/pytype/issues/9
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112819092

[33mcommit fda4663fbb90c33645c057b5935574f4b2b744d7[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 8 13:53:44 2016 -0700

    PEP 484 compatibility fixes.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112816237

[33mcommit d90dc5a57e69efa66b398593aba296dd9439ace4[m
Author: kramm <kramm@google.com>
Date:   Fri Jan 22 09:25:37 2016 -0800

    Output "None", not "NoneType".
    
    See https://github.com/google/pytype/issues/12
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112790937

[33mcommit 54aa33ff352c11c352d142e9bbe59bc3de02b930[m
Author: kramm <kramm@google.com>
Date:   Fri Jan 22 09:24:21 2016 -0800

    Fix import of constants.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112790856

[33mcommit 1b1a56900c80db5b59c00ba917a048a10664a96d[m
Author: kramm <kramm@google.com>
Date:   Fri Jan 22 09:22:31 2016 -0800

    Fix import of objects that have been imported themselves.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112790716

[33mcommit ca964dde611afcd4a16086e2cb420476dc9350e2[m
Author: kramm <kramm@google.com>
Date:   Thu Jan 21 15:23:56 2016 -0800

    Add the concept of an "alias" to the AST.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112730106

[33mcommit 8a80c61e8c3339b3fd017fc9d903de52c4e64037[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 20 14:30:26 2016 -0800

    Add support for __class__.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112620095

[33mcommit 29beb9261dcceba64d4ac0b33dc570cc76fe60a1[m
Author: kramm <kramm@google.com>
Date:   Thu Jan 14 16:21:15 2016 -0800

    Make pytype aware that typeshed/builtins is gone.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112201714

[33mcommit af1fd52246153b797ddb371ecf0487190bf14375[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 13 15:30:01 2016 -0800

    Add support for "module.__file__" et al.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112097036

[33mcommit 0600cbf9f32e1057f64450d0640951ee22d975bd[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 13 15:29:19 2016 -0800

    Get rid of LazyAbstractValue.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112096954

[33mcommit 030775c0a851def55bbd2724a29c208ffaa9d926[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 13 13:54:10 2016 -0800

    Make setup.py also install the files in typeshed/.
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112086889

[33mcommit 47558ca270a3abab81a23c4fd841826c66d4ea58[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 13 13:52:12 2016 -0800

    Fix typeshed precedence.
    
    Also see https://github.com/JukkaL/mypy/pull/1116
    
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112086686

[33mcommit 17b7a952eaa205f9b2185025377c8e250f528b56[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 15 07:34:59 2016 -0700

    Make version checks compatible with typeshed.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127538577

[33mcommit d630448b8945d70aa10dc7cb46db8c524077e9fb[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 14 18:00:08 2016 -0700

    Simplify GenericType instances.
    
    Modify pytd/optimize.py to simplify GenericType instances whose
    parameters are all "Any". This sometimes leaves us with "object" as
    a constant or return type, which we adjust to "Any".
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127495343

[33mcommit ebb7c229bcb8146bbc02d87b1d3bd0832eaf6679[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 14 16:57:41 2016 -0700

    Make typing.Callable callable.
    
    Since Callable is a GenericType, in addition to editing typing.pytd,
    we need to modify optimize.SimplifyUnionsWithSuperclasses to avoid
    getting types such as Union[Callable, Callable], where the first
    Callable is __builtin__.function and the second is typing.Callable.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127489835

[33mcommit 26d96ec4686fe3eef9775a94b15a770f0811b69f[m
Author: acaceres <acaceres@google.com>
Date:   Thu Jul 14 11:58:34 2016 -0700

    Fix "python setup.py install", I broke it in [] (install worked but pytype was left in a bad state)
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127457446

[33mcommit 79003a898cf038bf473386839c8db3cc3aa00402[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 14 08:24:05 2016 -0700

    Fix signature of defaultdict.get().
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127433979

[33mcommit b392f1264cb28b558e2a4ac244fb2c0199ef2d17[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 13 11:59:09 2016 -0700

    Handle pyi dependency errors more gracefully.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127343083

[33mcommit 3f0420c24159cda5de5f6eaee6427c537ee90dbc[m
Author: acaceres <acaceres@google.com>
Date:   Wed Jul 13 11:55:40 2016 -0700

    Remove recently fixed pyis from blacklist
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127342712

[33mcommit a9d43f7b6244e8b140bfc7237ee6c87ad9ea655e[m
Author: acaceres <acaceres@google.com>
Date:   Wed Jul 13 10:08:56 2016 -0700

    Use random.pyi from typeshed instead of our own
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127329472

[33mcommit abcd0da7f48b05f71c992842385f884f4878b527[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 13 09:39:52 2016 -0700

    Improve behavior of aliases in pyi files.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127326357

[33mcommit 5ea2c6b76e8a9454fe1da74abe4bad5cb0c5cdba[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 12 17:44:28 2016 -0700

    Use mro in optimize.RemoveInheritedMethods.
    
    Use the method resolution order when looking for inherited methods.
    Moves some code and tests from pytype.utils and pytype.utils_test
    to pytype.pytd.utils and pytype.pytd.utils_test for this purpose
    and adds a couple of checks for bad inheritance patterns.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127264589

[33mcommit c6abb632975c880ae49355bdb63fe91a33bd59ed[m
Author: acaceres <acaceres@google.com>
Date:   Tue Jul 12 10:06:52 2016 -0700

    Add optional arg to raw_input() in __builtin__.pytd
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127211764

[33mcommit 61ba9a7d4af19e6f9c296cc8cb36d921734aa653[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 12 10:02:30 2016 -0700

    Always succeed when matching against object.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127211132

[33mcommit e726912acbb6f6d27c05d301b5fd510f7689bf0e[m
Author: acaceres <acaceres@google.com>
Date:   Tue Jul 12 08:13:52 2016 -0700

    Add builtin unicode exceptions to __builtin__.pytd
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127200534

[33mcommit fc6a430b3c710ebf70aec8d962a43880eb8e6eea[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 11 17:34:17 2016 -0700

    Fix parameter type of time.sleep()
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127148501

[33mcommit df526720c96b08d328b2214d08eaa67ca342b01a[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 11 17:29:39 2016 -0700

    Make pytd_tool run faster by default (no optimization, no futile pretty-printing)
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127148074

[33mcommit 43567a3a5efe036f795bb16af3bbbf35619463d1[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 11 10:23:19 2016 -0700

    Don't use realpath, it makes log output less useful.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127099943

[33mcommit c1dfe14e017f7eedb65f03753e9f43fcce80ac23[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 11 09:52:40 2016 -0700

    Treat anonymous properties as 'Any'.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=127096663

[33mcommit 84bab2eddb1fb641b05c41edb7c40f50c037fc0c[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 8 15:18:08 2016 -0700

    (slightly) better itertools.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126953329

[33mcommit 4d887d1bf51249d87a587aaea5b2570d5079a2d1[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 8 14:46:27 2016 -0700

    Improve printing of ParameterizedClass.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126949868

[33mcommit 38fbe353bf24eb79e0bb11ff519ffd6ade497960[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 8 14:43:55 2016 -0700

    Allow the dict syntax 'dict(border="solid", height="10px")'
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126949584

[33mcommit 755b079a9e124574a2d784d6088188485f9820a8[m
Author: acaceres <acaceres@google.com>
Date:   Fri Jul 8 14:27:42 2016 -0700

    Added shebang to  pytd_tool's main.py.
    
    Either pip or setup.py needs it to get a proper executable in bin/ (works for pytype's main.py)
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126947889

[33mcommit 9170335471c8d2e6d6180b345a8df0576b98d41d[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 8 13:15:37 2016 -0700

    Write __getattr__(name) to output for both failure cases.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126940479

[33mcommit cd9c823bee135466887377fd4c5f8c9ff4403f51[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 8 12:34:56 2016 -0700

    Update builtins definitions
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126936745

[33mcommit 124fc9a09195154339b8000686ba50d2cec3f1de[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 8 12:08:36 2016 -0700

    When generating a fallback .pyi, put a "__getattr__ -> Any" in there.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126934413

[33mcommit 098e8ca7ae9ca36df124ce7992b45e6adda2bab4[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 8 12:05:23 2016 -0700

    Use "typing.Callable" instead of "function"
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126934099

[33mcommit 804e6dc810ae32098d07c61538b9ca75b4d210b7[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 8 12:00:44 2016 -0700

    Fix matching of bound functions against typing.Callable.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126933625

[33mcommit a41f12e6fc2e5a54b5c76f7766e8dbe3fd693a49[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 8 10:34:18 2016 -0700

    Improve printing of annotations. Fix matching bug.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126924380

[33mcommit 0ea31638726d5e3b21c75e57d77e23cc97879644[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 8 10:22:47 2016 -0700

    Use __getattr__ to compute attributes.
    
    When normal attribute lookup fails, check for a __getattr__ method
    and, if defined, use to compute the attribute. Fixes attribute
    errors caused by [].flags.flagvalues.FlagValues.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126923315

[33mcommit 7951d5ccad41346c9ea7e651f61cd32c40187425[m
Author: acaceres <acaceres@google.com>
Date:   Fri Jul 8 08:55:49 2016 -0700

    Adjust setup.py to get travis to build us.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126915728

[33mcommit bf1867cc6db92eb023277c8015cddadee02f0743[m
Author: dbaum <dbaum@google.com>
Date:   Thu Jul 7 13:44:13 2016 -0700

    Add if-splitting support for empty list/set/frozenset.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126841688

[33mcommit 6191219d5b1a09a5221f3a1d7b59c2adef4fe2a1[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 7 13:19:24 2016 -0700

    Upgrade typeshed to version adc6bf5f94ffa7a7f774d0e7b644f479a2e4ea95
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126838810

[33mcommit b986bb1b08feccd128353c6f8a872a72ca9d4a04[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 7 08:59:27 2016 -0700

    Relative imports have higher priority than named imports.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126810729

[33mcommit 08cddabd82d5c6fc9f333817e4f1902e3b82f3b5[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 6 17:51:11 2016 -0700

    Add missing set, frozenset methods to builtins
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126758667

[33mcommit 3f2e64640d31bb10df59472b61d2ff20e54beda2[m
Author: fyquah <fyquah@google.com>
Date:   Wed Jul 6 17:10:46 2016 -0700

    Add sorted_errors()
    
    so that other analyzer clients (eg: TricorderAnalyzer) can access the type
    inferencing / checking errors
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126755286

[33mcommit d52ef467d9f71d1eb4d9a7d87002b01248b23de7[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 6 16:07:47 2016 -0700

    Fix bug in DELETE_GLOBAL. Make assertNoErrors do more testing.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126749025

[33mcommit 6c3a5cda05906527da21b950ff5f1c461475e2b5[m
Author: dbaum <dbaum@google.com>
Date:   Wed Jul 6 12:59:42 2016 -0700

    Add if-splitting support for isinstance.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126728399

[33mcommit d637358cc2761d8223ccb40955c0da9c91f8faed[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 6 11:41:35 2016 -0700

    Add delattr() to builtins.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126720455

[33mcommit 3aa68aa3532ded0c2d07ef837e724416eb1b108a[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 6 11:15:55 2016 -0700

    Fix definition of globals()
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126717275

[33mcommit 4ec2f802aa183b116226e984d38f3ac03571333f[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 20 14:30:26 2016 -0800

    Add support for __class__.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112620095

[33mcommit 1cfc23e744426c9df3f023a6500a78fbcaa65608[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 1 17:02:50 2016 -0700

    Fix error generation for invalid super() calls.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126461317

[33mcommit 02420496fe41b8cd315e2efe647adf0b736b8aa9[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 30 17:22:01 2016 -0700

    Handle circular references without blowing up.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126362668

[33mcommit 0fa1f15df8a86788c754265c665b88dad348e40b[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 30 10:57:05 2016 -0700

    Fix matching involving generic superclasses.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126319939

[33mcommit bcf65b5485221ff79d4967707441da77c5785608[m
Author: dbaum <dbaum@google.com>
Date:   Wed Jun 29 14:25:34 2016 -0700

    If-splitting for dicts.  The support is pretty minimal - dicts are either empty or ambiguous.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126232875

[33mcommit b5221c18a4af433409ac62e952aa7bf6590527c0[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 29 09:20:07 2016 -0700

    Fix arguments passed to __get__.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126198959

[33mcommit 5cf2659e6ab296dcc9d43b42fae1c54703a66bc7[m
Author: dbaum <dbaum@google.com>
Date:   Wed Jun 29 08:40:49 2016 -0700

    Make True/False compatible with if-splitting.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126195232

[33mcommit 023f34104d54731426e60573a5ca766239b7d502[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 28 12:26:16 2016 -0700

    Make typing.IO a context manager.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126103853

[33mcommit 1c4b94320cb37244e4edc6019a11c3ba2398a46b[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 28 12:21:53 2016 -0700

    New error class 'not-callable'.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126103431

[33mcommit 1f771eb14856233b30d43035b0b053baf9888433[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 28 11:30:44 2016 -0700

    Remove old pytd smoketest. (supplanted by pytd/typeshed_test.py)
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126097433

[33mcommit 49314914edad89e1c6b8a1fcea2a9c4a5c064fc7[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 28 11:26:22 2016 -0700

    Improve sharding of typeshed tests.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126096908

[33mcommit 708c046e7f6d68e3ec52838bb3f9eaeffd6dc70d[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 28 11:21:00 2016 -0700

    Report missing submodules as import-error, not attribute-error.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126096158

[33mcommit eb1798f56fd09a391e6ec1cd44bf2f0c34407e33[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 28 10:09:16 2016 -0700

    recover from ByteCodeAttributeError
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126086571

[33mcommit ec010ba83bdfaab78203ffac261925e8e217de41[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 28 10:02:56 2016 -0700

    Move builtins into their own namespace ("__builtin__")
    
    This fixes bugs caused by naming things after Python builtins
    (like "module", "LookupError", "type", etc.).
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=126085747

[33mcommit 77db7494df5cb5d33d623d20787c5acca152c3e4[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 23 15:33:19 2016 -0700

    Make RemoveRedundantSignatures optimization behave better with "Any".
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125726418

[33mcommit 347faacae9de025c7ff98e95d691568a854d6ac7[m
Author: dbaum <dbaum@google.com>
Date:   Thu Jun 23 13:28:24 2016 -0700

    Use conditions to skip dead code.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125711496

[33mcommit 26c742364074b853811c9c0c5eeefef275904dbb[m
Author: dbaum <dbaum@google.com>
Date:   Wed Jun 22 13:03:40 2016 -0700

    Implement if-splitting.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125598948

[33mcommit 8829c995488362f340ff3315ee4ae941759d36d2[m
Author: acaceres <acaceres@google.com>
Date:   Tue Jun 21 13:30:42 2016 -0700

    Add test that pipes typeshed's python2 stdlib files through our parser
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125488162

[33mcommit 5652593028e19f678aafb212d569271d55ae23d5[m
Author: dbaum <dbaum@google.com>
Date:   Tue Jun 21 10:28:07 2016 -0700

    Use the import opcode to determine error location for pyi_error().  The filename and line number of the underlying pyi error is also included in the message.  The filename is truncated to its basename(), otherwise the long paths to the file tend to clutter the error log.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125466494

[33mcommit b93cb95d4e29a2a0dd901463d239d335941ecccf[m
Author: acaceres <acaceres@google.com>
Date:   Mon Jun 20 15:40:30 2016 -0700

    Support for class properties in pyi files.
    
    Class methods decorated with @property or @foo.setter or @foo.deleter get parsed into the same AST as class attributes. No support for read-only.
    
    class C:
        @property
        def x(self) -> int: ...
    
    is equivalent to
    
    class C:
        x = ...  # type: int
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125388396

[33mcommit 31daac686c94a9194097e2f88fcfbff6d3caa1bb[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 20 12:44:37 2016 -0700

    When we can't parse a .pyi, don't leave broken modules in the import cache.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125368271

[33mcommit b47eb4653f9ffb650483cfbefd1f1eb1d9b8895d[m
Author: kramm <kramm@google.com>
Date:   Fri Jun 17 16:09:53 2016 -0700

    Add -M option to pytype, for specifying the module name.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125212676

[33mcommit 9c1df8e9f1eae040e68ce1e1d1cebc5639c91b1b[m
Author: acaceres <acaceres@google.com>
Date:   Thu Jun 16 13:41:27 2016 -0700

    pyi parser: drop unused rules for @overload
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125096963

[33mcommit afbb62ff3c362c3dd2df45a4960b308358dc56d5[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 16 10:58:48 2016 -0700

    Make function subclass Callable.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125078286

[33mcommit 77306e536ec1365f5a1d97d78f4856cce97f1679[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 16 09:26:14 2016 -0700

    Improve support for old-style classes.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=125067949

[33mcommit b0fee948aff80b9db862bc389bb3dbc8dec2e2ef[m
Author: kramm <kramm@google.com>
Date:   Wed Jun 15 14:53:13 2016 -0700

    Simplify test suite: Get rid of unnecessary 'with' blocks.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124995611

[33mcommit a99a8363a8a4403000fdb89c1569d5da9b5c4f4e[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 14 15:08:32 2016 -0700

    Fix matching against ParameterizedClass.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124887228

[33mcommit 8b0aa9ac434587640351c63f4ecc9395ed390589[m
Author: acaceres <acaceres@google.com>
Date:   Tue Jun 14 12:35:44 2016 -0700

    Look for __init__.pyi files when loading a module stub from typeshed.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124869372

[33mcommit f9b1acdbbb3b08c0596e6b70e956de707ab1e902[m
Author: acaceres <acaceres@google.com>
Date:   Mon Jun 13 15:02:16 2016 -0700

    Fix incorrect pytd stubs for os.*stat* functions
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124772522

[33mcommit ba6a010e4ad62936a2426282dfabf9fd8e2fe974[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 13 09:38:47 2016 -0700

    Properly infer optional parameters.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124734510

[33mcommit 22a084a35767c61a85ade9a72f657c8ca82d8abe[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 13 09:21:46 2016 -0700

    Simplify error message for empty containers.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124732904

[33mcommit c9f7ac78713c6703eaf69f321a049875e49eae78[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 13 09:21:10 2016 -0700

    Improve --quick behaviour, add test case.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124732827

[33mcommit 07c5a42cba0947230eca6efe4ca6da554516c513[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 13 09:20:29 2016 -0700

    Create new Unsolvables for imports, to prevent cyclic MROs.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124732769

[33mcommit 1d38876b1e3124e53ff5b5e3ab4e85e7158e376a[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 13 09:19:48 2016 -0700

    Fix analyzing bound methods as variables.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124732703

[33mcommit 5235339f1f0ab804341538cd0fd1117fff4fadfa[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 13 09:19:04 2016 -0700

    Add PasteVariable optimization. Improve explaining. Fix bug in test output.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124732630

[33mcommit 7d01c555edff8184448e964a74bfb29e8985ed89[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 9 14:20:10 2016 -0700

    Point out, in the README and setup.py, that pytype needs 2.7 to run.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124496655

[33mcommit 4f314f62bb6409e78175ee2c17d14f783ab3ab42[m
Author: dbaum <dbaum@google.com>
Date:   Tue Jun 7 08:11:13 2016 -0700

    Save metrics as yaml, add support for merging multiple metrics dumps together.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=124245280

[33mcommit b070029b6f37dec98af4952f8b4c980fbaf13803[m
Author: acaceres <acaceres@google.com>
Date:   Thu May 26 10:25:01 2016 -0700

    add module imports to generated pyi
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=123331692

[33mcommit 4eb81f58bee85a95b75200fa2af2134598fb36c5[m
Author: kramm <kramm@google.com>
Date:   Wed May 25 15:42:39 2016 -0700

    Fix Set inheritance.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=123261815

[33mcommit 083054b82d74b2c76c23ca8ee9ff01d5ff433168[m
Author: kramm <kramm@google.com>
Date:   Wed May 25 15:40:01 2016 -0700

    Improve support for typing.Sequence.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=123261541

[33mcommit 7934224c538973ebb378e0b59d0e019ac19d112d[m
Author: dbaum <dbaum@google.com>
Date:   Wed May 25 11:01:58 2016 -0700

    Create the metrics and add a --metrics option.  I also added code to collect a few specific metrics that may be helpful with if-splitting, though these metrics are subject to change.  Mostly I wanted something in place in both pytd and vmlib in order to verify the BUILD file changes.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=123231377

[33mcommit c11775c6324e400b78a249ce82396d2f8af17d8f[m
Author: kramm <kramm@google.com>
Date:   Mon May 23 17:11:35 2016 -0700

    Hardcode reverse operators in builtins.
    
    "Hardcoding" adds signatures to "the other side" in the builtins pyi. For example, remove __radd__(int) on complex, but add __add__(complex) to int. This removes the need for reverse operator support in the inferencer itself.
    Also, turn support for overloading reverse operators off, by default.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=123055372

[33mcommit 0bc4feb6b479061d01a187409e2db5822fef2bf9[m
Author: kramm <kramm@google.com>
Date:   Mon May 23 17:06:05 2016 -0700

    Give __builtin__ classes the proper typing superclasses.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=123054772

[33mcommit b6549c5b33080be71af59a6a77f7eefc3d17cdaa[m
Author: kramm <kramm@google.com>
Date:   Fri May 20 15:21:03 2016 -0700

    Make list subclass Iterable.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122872067

[33mcommit 90e2fcab12587f3727dac33357438c751e3d5a03[m
Author: dbaum <dbaum@google.com>
Date:   Thu May 19 14:27:21 2016 -0700

    Add details field to Error.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122769468

[33mcommit 66c88daeedeb1ad0720e84a5714fcef824dc3994[m
Author: dbaum <dbaum@google.com>
Date:   Thu May 19 13:37:21 2016 -0700

    Add --profile option.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122764244

[33mcommit defc084ed5b610f426e2cbed92fe819f74c60645[m
Author: kramm <kramm@google.com>
Date:   Wed May 18 13:23:56 2016 -0700

    Make import-error mention '.pyi'.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122661636

[33mcommit 888677e0225a9bf50926b0c7e52705c278188ddd[m
Author: kramm <kramm@google.com>
Date:   Wed May 18 13:22:39 2016 -0700

    Simplify README.md
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122661511

[33mcommit d7e2348ce7c664b5973c0284b126bf8b75ec78fc[m
Author: kramm <kramm@google.com>
Date:   Wed May 18 13:21:57 2016 -0700

    Add "-d" command-line option.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122661458

[33mcommit 552a48fed8290baf98ef98f822993ebf1cb8bdc2[m
Author: Matthias Kramm <kramm@google.com>
Date:   Tue May 17 16:32:19 2016 -0700

    update typeshed

[33mcommit 8f30eb5161905eace8409cc6dd0ef34ffb1dd25a[m
Author: dbaum <dbaum@google.com>
Date:   Thu May 12 13:25:04 2016 -0700

    Rename Value to Binding.  The term "value" has been purged from cfg.py.  Any external uses of Value, Variable.values, etc. have also been changed.  There are still many occurences of "value" or "val" in local variables in other files.  These can be changed as needed in later CLs as they do not affect a public API.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122190667

[33mcommit f2e898058e906f2ddc9094242ce69b4c3488119e[m
Author: dbaum <dbaum@google.com>
Date:   Thu May 12 11:09:27 2016 -0700

    Improve the pseudocode output.
    
    Some sample output:
    
    <5>None
      From: <4>None
      To: <7>None, <6>None
    
      $197 return(frame:bar)
        #129 <v129 str [str]>, $256=#129 @5
        #14 <v14 NoneType [NoneType]>, $256=#14 @5
        #20 <v20 int [int]>, $257=#20 @6
      $254 locals.y
        #129 <v129 str [str]>, $216=#129 @5
        #14 <v14 NoneType [NoneType]>, $216=#14 @5
      $255 y
        #129 <v129 str [str]>, $254=#129 @5
        #14 <v14 NoneType [NoneType]>, $254=#14 @5
      $256 y
        #129 <v129 str [str]>, $254=#129 @5
        #14 <v14 NoneType [NoneType]>, $254=#14 @5
    
    <6>None
      From: <5>None
      To: <7>None
    
      $197 return(frame:bar)
        #129 <v129 str [str]>, $256=#129 @5
        #14 <v14 NoneType [NoneType]>, $256=#14 @5
        #20 <v20 int [int]>, $257=#20 @6
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=122175763

[33mcommit 78ba7c2602bcbed5a1d4f6151f6192282ffc0dfe[m
Author: dbaum <dbaum@google.com>
Date:   Fri May 6 12:48:37 2016 -0700

    Add node ids to SVG output.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121700533

[33mcommit 7b94bdb7a431dcb2a2291d6e10d1b0d4b0c3f1a1[m
Author: dbaum <dbaum@google.com>
Date:   Wed May 4 08:58:02 2016 -0700

    Add support for disabling errors.
    
    * Added the Director class, which manages most of this.
    * Only supports a single file for now.
    * Supports "type: ignore" and "pytype: disable=error-name".
    * Added a filter to ErrorLogBase, which allows an arbitrary predicate function to determine which errors are actually added to the log.
    * Make errors.Error public since it shows up as an arg to the filter function.
    * Added an invalid-directive warning as the catch-all for errors detected within pytype: comments.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=121485724

[33mcommit bef5f9f334efab600b02541d3002996297d7e5e1[m
Author: dbaum <dbaum@google.com>
Date:   Wed Apr 27 10:42:12 2016 -0700

    * Improve encapsulation of Error class.
    * Add error names (will be used later for disabling specific errors).
    * Funnel all errors through a single _add call.  This is where disabling will take effect.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120930357

[33mcommit 34a2df0dfc2bdcceb8aa93e3a166a70bc3a16e1f[m
Author: dbaum <dbaum@google.com>
Date:   Tue Apr 26 08:16:53 2016 -0700

    Add ErrorLogBase.has_severe_error.  Previously, code either used implicit truth of either errorlog or errorlog.error to determine if a severe error has occurred.  This will not work if warnings are used, so has_severe_error() is being added.  In addition, the errors field itself has been made private (there is no reason to expose the attribute directly since the error log can always be iterated).
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120814124

[33mcommit 797b4af4f9b92c51195dcb3f1ca84b9529905814[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 20 14:21:58 2016 -0700

    Fix the order of parameters in function call error messages.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120375487

[33mcommit 8a96d030f22bffd6584622d3b40083918c1c8ab1[m
Author: kramm <kramm@google.com>
Date:   Tue Apr 19 15:17:33 2016 -0700

    Allow to pass --python_exe=HOST.
    
    This will run bytecode compilation using the same Python that pytype uses.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120276055

[33mcommit dfc5840660b2bbbddeb614a06da42191525b02d8[m
Author: kramm <kramm@google.com>
Date:   Fri Apr 15 17:07:31 2016 -0700

    Implement typing.List.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120006158

[33mcommit 00cc97f68a026a687e7d88eef7863fb98172b990[m
Author: kramm <kramm@google.com>
Date:   Fri Apr 15 16:07:16 2016 -0700

    Don't support Python 3.0 - 3.3.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120000859

[33mcommit 4635acf42f44acc4f9499ae1c86bc1607cf27014[m
Author: kramm <kramm@google.com>
Date:   Fri Apr 15 16:05:45 2016 -0700

    Fix "KeyError" for "pytype -V 3.5".
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120000728

[33mcommit fe9968c9acf6625b1879d626dae00f2e0b9a0abf[m
Author: kramm <kramm@google.com>
Date:   Fri Apr 15 16:05:17 2016 -0700

    Improve error message for -V.
    
    Display a better error message if -V is specified but we can't find the Python
    executable.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=120000697

[33mcommit 899fa779e316256f03206842eec8837c1710f30e[m
Author: kramm <kramm@google.com>
Date:   Fri Apr 15 10:47:42 2016 -0700

    Fix Python 3 try/except.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119970136

[33mcommit 28355e3631ce373ff88216316a28d0c11ff3903a[m
Author: kramm <kramm@google.com>
Date:   Fri Apr 15 10:44:59 2016 -0700

    Implement Python 3's LOAD_BUILD_CLASS opcode.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119969844

[33mcommit 737056111786fcab6cbca034de8df4ae6e17f4a9[m
Author: kramm <kramm@google.com>
Date:   Thu Apr 14 15:12:38 2016 -0700

    Make Python 3 tests work on Forge.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119896468

[33mcommit 7544e958e5ee5d7b5e4f68c34fed741be92030fb[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 13 16:15:51 2016 -0700

    Output an error if we found a circular inhertance.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119797475

[33mcommit 992807b23afc987a1a94fb3b9b379313bc18b460[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 13 14:50:02 2016 -0700

    Don't ignore keyword arguments.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119788095

[33mcommit 2b7b8e325893572fa778585c1e806b3285360d34[m
Author: kramm <kramm@google.com>
Date:   Mon Apr 11 14:09:10 2016 -0700

    Generate better error messages for broken pyi files.
    
    Also, improve handling of generic base classes.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119568618

[33mcommit c23a9927709debcc3729c13b5a86d5c2ad2832bf[m
Author: kramm <kramm@google.com>
Date:   Fri Apr 8 16:32:01 2016 -0700

    Add dummy abc.pytd. Use warnings.pyi from typeshed.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119421546

[33mcommit 1264c4133512ddf4740ea136e8c2d631ca336460[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 6 12:52:10 2016 -0700

    Support checking against typing.Union[...].
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119192303

[33mcommit f5277b592d6c1e583bd3543b99bc0aa7895c85ee[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 6 11:18:03 2016 -0700

    If a function has type annotations, don't use Unknowns.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119181640

[33mcommit 5c5ebdbbe0dd670ca135bc8b758fb204b854fde7[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 6 11:16:28 2016 -0700

    Check function calls against annotations.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119181424

[33mcommit f668b793fa17e8e1db3fc9a587204050da8e8cd6[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 6 11:10:39 2016 -0700

    Fix matching of calls against @staticmethod builtins.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=119180591

[33mcommit 2986339f06da304a1bcd42897e39b5cc094e786d[m
Author: kramm <kramm@google.com>
Date:   Mon Apr 4 08:33:40 2016 -0700

    Fix matching of Unknown against ParameterizedClass.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=118942436

[33mcommit 8a37fd2965e82fd75683a786f253ac45740eefd0[m
Author: kramm <kramm@google.com>
Date:   Tue Mar 22 15:51:06 2016 -0700

    Allow more syntax variants for optional parameters.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117873580

[33mcommit 4c88c35bd3a30fd2c95bda156dd6d89114245cff[m
Author: kramm <kramm@google.com>
Date:   Tue Mar 22 13:29:32 2016 -0700

    Switch more builtin modules to typeshed.
    
    The following have a better representation in typeshed and hence are deleted:
     _functools, _sre, _weakrefset, gc, imp, select, signal, atexit, pprint,
    shutil, string, struct, textwrap, traceback
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117857515

[33mcommit cc087ffb356cd95ed02822519922f7591eeb9595[m
Author: kramm <kramm@google.com>
Date:   Mon Mar 21 15:16:13 2016 -0700

    Print optional parameters as "*args, **kwargs", not as "...".
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117760035

[33mcommit 3d15a198704152f4ab1fa025b79e749e0a8f9d8f[m
Author: kramm <kramm@google.com>
Date:   Mon Mar 21 15:14:41 2016 -0700

    Improve pytd for os.walk
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117759846

[33mcommit f2b5854e190c381bf6fadc0cf1429c0df13dd384[m
Author: kramm <kramm@google.com>
Date:   Mon Mar 21 15:14:09 2016 -0700

    Fix calling pyi functions with *args
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117759788

[33mcommit 5e14780d78301df320b11e83911086041af93958[m
Author: kramm <kramm@google.com>
Date:   Fri Mar 18 10:18:49 2016 -0700

    Fix behaviour when we have two different states on the data stack.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117559089

[33mcommit c67b2718e84583677b5b5dfcd55b54f8ffa82301[m
Author: kramm <kramm@google.com>
Date:   Thu Mar 17 14:58:59 2016 -0700

    Make inplace operators also fall back to normal operators.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117488916

[33mcommit 466bf551230cff8c4abcc931eb7c843239fcf906[m
Author: kramm <kramm@google.com>
Date:   Thu Mar 17 09:30:46 2016 -0700

    Make --nofail only catch exceptions in pytype, not swallow type errors.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117452808

[33mcommit 77b8bf310850fe9af8071cdcf971e3eb3e1f81ec[m
Author: kramm <kramm@google.com>
Date:   Wed Mar 16 15:14:20 2016 -0700

    Allow functions in pyi to not have a return type (needed for typeshed).
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117388904

[33mcommit e0ae595aaa73eff0c52e861bc97b57cd33ce6786[m
Author: kramm <kramm@google.com>
Date:   Wed Mar 16 15:10:28 2016 -0700

    Output an error for invalid global references. Add --no-report-errors option.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117388484

[33mcommit b8e96783661039508f962439cd04d7eacd304631[m
Author: kramm <kramm@google.com>
Date:   Tue Mar 15 17:29:11 2016 -0700

    Make load_pytd resolve all ExternalTypes right away.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117296129

[33mcommit f10b202a750f253435ac5ef760dc2e182a3d1c70[m
Author: kramm <kramm@google.com>
Date:   Tue Mar 15 12:11:22 2016 -0700

    Change extension of user imports to .pyi.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117264017

[33mcommit adcd102e739548ca68c646e1f7272cc179e701aa[m
Author: kramm <kramm@google.com>
Date:   Mon Mar 14 16:08:47 2016 -0700

    Add -T flag to pytype.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117182643

[33mcommit 2c822593a496a1d819adc744fe1d537e0aa67b15[m
Author: pludemann <pludemann@google.com>
Date:   Sun Mar 13 17:03:10 2016 -0700

    remove lazy import
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117095169

[33mcommit 0ec916563d2e95499340dfcd3e1e0e1ee18e7a25[m
Author: kramm <kramm@google.com>
Date:   Fri Mar 11 14:43:46 2016 -0800

    Make ExternalType link to types, instead of classes.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=117009817

[33mcommit d60c66d820a956e8ebe2cd83d7b47766f09e9599[m
Author: kramm <kramm@google.com>
Date:   Thu Mar 10 14:31:14 2016 -0800

    Move PYI validation into try/except.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116909266

[33mcommit 259f93e96b26cfa731da83119dd5c776c06ce0db[m
Author: kramm <kramm@google.com>
Date:   Thu Mar 10 14:20:09 2016 -0800

    Process and re-emit inline type annotations.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116908015

[33mcommit 6566787d606c4407d22802e9b93dc1b055a6608e[m
Author: pludemann <pludemann@google.com>
Date:   Mon Mar 7 12:38:37 2016 -0800

    Remove more circular imports.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116576405

[33mcommit f165f473b75b91f46fd1fa19f631417627179873[m
Author: pludemann <pludemann@google.com>
Date:   Mon Mar 7 12:37:18 2016 -0800

    move RemoveMutableParameters to transforms.py in preparation for removing more circular (lazy) imports
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116576283

[33mcommit d1897850fd4eed5c1729a30958510d4912b8b7d0[m
Author: pludemann <pludemann@google.com>
Date:   Mon Mar 7 11:05:55 2016 -0800

    Remove a lazy import that isn't needed to prevent circularity.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116566095

[33mcommit fb0f7fb005f33223a05437833d15325a6f4a3a35[m
Author: kramm <kramm@google.com>
Date:   Wed Mar 2 14:17:44 2016 -0800

    Add new optimization that removes redundant signatures.
    
    Fixes https://github.com/google/pytype/issues/7
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=116180707

[33mcommit 6b8064705f31adb49c9e68308feff76ba3a222e8[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 20 14:32:15 2016 -0800

    Add simple definition of defaultdict.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112620288

[33mcommit 4059c676d313d0ce445539ef685682de899c7ae8[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 13 13:54:10 2016 -0800

    Make setup.py also install the files in typeshed/.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112086889

[33mcommit 1e752747ee2f67de1094c055d299bed5fe039e60[m
Author: kramm <kramm@google.com>
Date:   Mon Feb 29 16:09:58 2016 -0800

    Add test for optional parameters.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115917320

[33mcommit 2a72e71044f9092fe895bf6e429a670ed9424376[m
Author: kramm <kramm@google.com>
Date:   Mon Feb 29 16:08:42 2016 -0800

    Allow functions to match against "Callable".
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115917163

[33mcommit 7fb15a7881987f3752b1dbc6889a76b3f83430df[m
Author: kramm <kramm@google.com>
Date:   Mon Feb 29 16:08:12 2016 -0800

    Better intersection(), union() and difference() on set.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115917080

[33mcommit 144b4e7140cf29313db0d9d6aa2d645901cc8b09[m
Author: kramm <kramm@google.com>
Date:   Mon Feb 29 16:07:45 2016 -0800

    Make types.pytd slightly more accurate.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115917002

[33mcommit 4e521a3dda9f6c4568c65278c7b1e28e7a266e99[m
Author: kramm <kramm@google.com>
Date:   Mon Feb 29 16:07:17 2016 -0800

    Unskip tests that work now, remove useless test.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115916926

[33mcommit 752d5cffcc7338eee5f4a699604cbf9625222023[m
Author: kramm <kramm@google.com>
Date:   Fri Jan 8 16:06:51 2016 -0800

    Fix matching of pyi superclasses.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115916854

[33mcommit c53d91f695abf863df021a8d03465d57cf96f0e4[m
Author: kramm <kramm@google.com>
Date:   Mon Feb 29 16:06:23 2016 -0800

    Support @staticmethod, @classmethod in pyi.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115916773

[33mcommit 7235fbca7d321495062b2355a39c1a98818e04cc[m
Author: pludemann <pludemann@google.com>
Date:   Mon Feb 29 12:13:04 2016 -0800

    Fix some imports; fix file name to fit with naming conventions.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115884065

[33mcommit ab08ec7be664243e46d56b7529956c303859eb70[m
Author: kramm <kramm@google.com>
Date:   Thu Feb 25 18:36:12 2016 -0800

    Add missing installation steps to README.md.
    
    You also need to clone the submodule, and install ply.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115628832

[33mcommit 9a93f7bb63934130ff1445df6bf258ed8d7a1f20[m
Author: pludemann <pludemann@google.com>
Date:   Thu Feb 25 16:48:07 2016 -0800

    Minor changes to the help messages, for consistency.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115619864

[33mcommit ea875ee0c58eabc10d91f9e63574c96661eb2dcc[m
Author: kramm <kramm@google.com>
Date:   Tue Feb 23 13:19:00 2016 -0800

    Improve the precision of the structural type converter.
    
    (When dealing with equalities between unknowns and type variables)
    
    This fixes https://github.com/google/pytype/issues/15.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=115375743

[33mcommit b136c92bedccefd8ad345d4cbe80a630b4a28ed5[m
Author: pludemann <pludemann@google.com>
Date:   Thu Feb 11 19:44:40 2016 -0800

    Fix typo that broke one test.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114503360

[33mcommit e5c7beef23eb567f53dcfebb30a20d5f1e035e39[m
Author: kramm <kramm@google.com>
Date:   Thu Feb 11 19:38:13 2016 -0800

    Support explicitly specifying that a module has unknown contents.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114503121

[33mcommit 3654a6bdfa7663e1f7e37de6cb59d2d9ecc1a4d9[m
Author: pludemann <pludemann@google.com>
Date:   Thu Feb 11 16:52:22 2016 -0800

    Suppress error messages during first pass.
    Rename some "pytd" things to "pyi".
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114492836

[33mcommit 142a7997159aea0295fa0a5ee39c656ac8102eb1[m
Author: pludemann <pludemann@google.com>
Date:   Thu Feb 11 10:34:23 2016 -0800

    Change imports_info so that all files (including outputs) are in the map; modify how the imports_info is validated.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114452528

[33mcommit 571b533097c1843f9b442eee3e5671cea17e2fa5[m
Author: kramm <kramm@google.com>
Date:   Thu Feb 11 06:54:40 2016 -0800

    Implement (basic) DELETE_GLOAL opcode.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114432847

[33mcommit b00a85d71c5e9958594481477395514c1f50d11a[m
Author: pludemann <pludemann@google.com>
Date:   Mon Feb 8 14:54:04 2016 -0800

    Fix imports_map validator
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114152848

[33mcommit b3d6e2cdcb3f56ce2cd00b051fc5f347819b6497[m
Author: kramm <kramm@google.com>
Date:   Mon Feb 8 11:02:07 2016 -0800

    Further simplify imports_map loading.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=114128155

[33mcommit 925cc853066f05be379282b836d53210ff94fab0[m
Author: kramm <kramm@google.com>
Date:   Thu Feb 4 10:16:34 2016 -0800

    Simplify imports_info file.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113862973

[33mcommit 36f4f6a699c7273334f0ac003991cfaf466aa09d[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 20 14:32:15 2016 -0800

    Add simple definition of defaultdict.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112620288

[33mcommit 1c085df54565b5b3cb77f2a6866709700b3865bc[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 13 13:54:10 2016 -0800

    Make setup.py also install the files in typeshed/.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112086889

[33mcommit 6b8f207070470a3af45a173ee5f3f0bcfb43fc49[m
Merge: 8b1150f9 a349f656
Author: Matthias Kramm <kramm@quiss.org>
Date:   Sat Jan 30 06:41:53 2016 -0800

    Merge pull request #20 from berkerpeksag/issue-6-pip-install
    
    Make pytype installable via pip

[33mcommit a349f65647db84ec7c0d21f57fe8fa80d772e830[m
Author: Berker Peksag <berker.peksag@gmail.com>
Date:   Sat Jan 30 11:26:32 2016 +0200

    Make pytype installable via pip
    
    Closes #6

[33mcommit 8b1150f9f8270fbb7e15102bca511921a2991db7[m
Author: kramm <kramm@google.com>
Date:   Thu Jan 28 09:36:06 2016 -0800

    Add a (skipped) test case.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113270892

[33mcommit d18ef6ceb530ae59c9c39e0c140cba793bfb724d[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 27 21:44:19 2016 -0800

    Fix loading of dummy __init__ entries in imports_map.
    
    Turns out, os.path.isfile("/dev/null") returns False.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113229849

[33mcommit 1fc41c63dfe0ec111a70cf98fed5f6ec06e05ea8[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 27 21:43:16 2016 -0800

    Temporarily add ast.pytd.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113229808

[33mcommit 5542b33b5347440bf0a364db5e030cc50c40d3fc[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 27 21:28:50 2016 -0800

    Get rid of --pytd-import-ext.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113229299

[33mcommit aaf8f6865ec26eec409238697e4050e7b64fbf75[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 27 16:27:07 2016 -0800

    Fix -c. Allow shorthand version "pytype -c file.py".
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113213420

[33mcommit cab3bf409f55b2c0ca0dba00d5d04369c90814cf[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 20 14:32:15 2016 -0800

    Add simple definition of defaultdict.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112620288

[33mcommit 40dd9dceee14ffd70f349a176c364245c1d806c2[m
Author: kramm <kramm@google.com>
Date:   Tue Jan 26 12:10:07 2016 -0800

    Optimize away "int or bool", etc.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=113083121

[33mcommit ef9b27e9e67a6c78f2481b01295e423868063222[m
Author: kramm <kramm@google.com>
Date:   Mon Jan 25 13:45:42 2016 -0800

    Make quotes in parser.py consistent with the rest of pytype.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112982851

[33mcommit 35a9b5d7fa2493aa3184d7b8575cc30c60ef1fd6[m
Author: kramm <kramm@google.com>
Date:   Mon Jan 25 13:43:04 2016 -0800

    Allow 'x = True' and 'x = False' instead of 'x = ...  # type:bool'.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112982594

[33mcommit 6377ff099db6aba55b866b03f96706df3dcfb366[m
Author: kramm <kramm@google.com>
Date:   Mon Jan 25 13:42:36 2016 -0800

    Add (skipped) test case.
    
    This exposes the root cause of https://github.com/google/pytype/issues/10
    (List and Tuple)
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112982533

[33mcommit b589e18b5fad057c7cd60a6bc820f02bd2c1dbae[m
Author: kramm <kramm@google.com>
Date:   Mon Jan 25 07:05:27 2016 -0800

    Make 'bytes' an alias for 'str', in Python 2.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112946867

[33mcommit c61ba5b43ef90a8f401bb7532202255763940041[m
Author: kramm <kramm@google.com>
Date:   Mon Jan 25 07:03:33 2016 -0800

    Simplify _NeedsTupleEliipsis.
    
    See []
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112946704

[33mcommit 5277026c1ba6136e5b32eda34db87d1364f0f08a[m
Author: kramm <kramm@google.com>
Date:   Fri Jan 22 14:22:44 2016 -0800

    Use List[T] instead of List[T, ...].
    
    See https://github.com/google/pytype/issues/9
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112819092

[33mcommit b72cc33bc955718a9f5c03a742cae254ed63780b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jan 22 16:43:16 2016 -0800

    update typeshed

[33mcommit 7962da97bca21649db24f158aec07edb470c5529[m
Author: kramm <kramm@google.com>
Date:   Fri Jan 22 13:53:44 2016 -0800

    PEP 484 compatibility fixes.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112816237

[33mcommit a52b6d8d1b445b5500c344a422aa3141e258d9d7[m
Author: kramm <kramm@google.com>
Date:   Fri Jan 22 09:25:37 2016 -0800

    Output "None", not "NoneType".
    
    See https://github.com/google/pytype/issues/12
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112790937

[33mcommit 9511ac517e9a95a938d3bff210734fd44a1c0f2d[m
Author: kramm <kramm@google.com>
Date:   Fri Jan 22 09:24:21 2016 -0800

    Fix import of constants.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112790856

[33mcommit ec4d00776cd7b5fb84c3033197899bfbaa8ce3fc[m
Author: kramm <kramm@google.com>
Date:   Fri Jan 22 09:22:31 2016 -0800

    Fix import of objects that have been imported themselves.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112790716

[33mcommit 2b2eef35a81494289a898450e6f55c7d1b019bf1[m
Author: kramm <kramm@google.com>
Date:   Thu Jan 21 15:23:56 2016 -0800

    Add the concept of an "alias" to the AST.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112730106

[33mcommit f0410291f54144478134222cb336e29c7b672448[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 20 14:32:15 2016 -0800

    Add simple definition of defaultdict.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112620288

[33mcommit 752f010667e56b3ae6b5f6d6efce3ee932918e80[m
Author: pludemann <pludemann@google.com>
Date:   Mon Jan 18 22:39:00 2016 -0800

    Minor typos
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112443579

[33mcommit 06253f479f1f0100502baae11920ce75757d9e8b[m
Author: kramm <kramm@google.com>
Date:   Thu Jan 14 16:21:15 2016 -0800

    Make pytype aware that typeshed/builtins is gone.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112201714

[33mcommit 14eb67493c2efc72eae89b798b1591ae0e3a4484[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Jan 15 11:01:22 2016 -0800

    Improve defaultdict definition; add __class__.

[33mcommit ae9e8f3521d7207d54a18f45cecc455b2921e46a[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Jan 14 14:15:57 2016 -0800

    fix bug in typeshed loader

[33mcommit 159c447a6bf4bb060bc1ec67267a9efd1eb2cac6[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Jan 14 13:29:35 2016 -0800

    Make pytype aware that typeshed lost 'builtins'.

[33mcommit ac60ac57547fd08f1566d00379ec78e018d764a4[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 13 15:30:01 2016 -0800

    Add support for "module.__file__" et al.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112097036

[33mcommit 5a14676e7d563b956af144ba38bf6a6b4485fccd[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 13 15:29:19 2016 -0800

    Get rid of LazyAbstractValue.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112096954

[33mcommit f85ecdb28de088aa967f86b7f9a73d1f39bc9ab2[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 13 13:54:10 2016 -0800

    Make setup.py also install the files in typeshed/.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112086889

[33mcommit 91f170125715d5a6a51de37c50a4bf0839c82913[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 13 13:52:12 2016 -0800

    Fix typeshed precedence.
    
    Also see https://github.com/JukkaL/mypy/pull/1116
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=112086686

[33mcommit 19beec68ac5eb10386a0a18e6b66b3453418d512[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Jan 13 08:45:49 2016 -0800

    make setup.py install typeshed

[33mcommit 571c526bc10788606b37e23e2079fc2465263b80[m
Author: Matthias Kramm <kramm@google.com>
Date:   Wed Jan 13 07:39:55 2016 -0800

    Add 'typeshed' submodule.

[33mcommit 371d4e0fbb97492fca0ab2b11b20e41d0de23e0b[m
Author: kramm <kramm@google.com>
Date:   Thu Jan 7 14:40:25 2016 -0800

    Fix false warnings caused by *args, **kwargs.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111639998

[33mcommit 60352154d6a4e790c30d92fd4dffebcb5dd4bb2f[m
Author: kramm <kramm@google.com>
Date:   Thu Jan 7 13:12:19 2016 -0800

    Add class generator "WrapsDict" to utils.py.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111631337

[33mcommit f58abc1a0d8cb6d858b5dc86a8abc5a00af34132[m
Author: pludemann <pludemann@google.com>
Date:   Tue Jan 5 17:45:23 2016 -0800

    Separated out option-handling from main.py.
    Passed around 'options' parameter, to shorten parameter lists.
      (The following options haven't yet been incorporated: reverse_operators, run_builtins, solve_unknowns, cache_unknowns, maximum_depth)
    Simplified some of the tests a bit.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111468213

[33mcommit 444c0309bf2c81258e0be7773ac51b1fa2bf6786[m
Author: kramm <kramm@google.com>
Date:   Wed Dec 30 15:13:59 2015 -0800

    Add test case for imports with parentheses.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111154227

[33mcommit efc50175c1eae3db3fc1f3ebf34b2ca1715fba75[m
Author: kramm <kramm@google.com>
Date:   Wed Dec 30 15:06:39 2015 -0800

    Allow to override typeshed location using an environment variable.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111153842

[33mcommit df2b0792e1a18ab5f4c51ece5f4ac1c0299c9c4f[m
Author: kramm <kramm@google.com>
Date:   Wed Dec 30 15:06:14 2015 -0800

    Add pyi support for typed *args, ***kwargs. (Needed for json.pyi)
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111153821

[33mcommit f06b687d8cf10a770187af89667ea99ebdef8e19[m
Author: kramm <kramm@google.com>
Date:   Wed Dec 30 15:05:47 2015 -0800

    Fix bug in converting typing.py types to native types.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111153793

[33mcommit c0556846adecef758e6b652a6edfb1ca6e0a602b[m
Author: kramm <kramm@google.com>
Date:   Tue Dec 29 15:57:10 2015 -0800

    Fix solving when inheriting from unknowns.
    
    When inheriting from an unknown class, make sure that function calls follow
    the same rules as in the solver.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111096008

[33mcommit 2f20c68f5b105ef3572664af1f27ad6342936672[m
Author: kramm <kramm@google.com>
Date:   Tue Dec 29 15:30:46 2015 -0800

    Treat *args, **kwargs the same as "...".
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111094798

[33mcommit 6062949074b3f4957bac868cac600094a73f97da[m
Author: kramm <kramm@google.com>
Date:   Tue Dec 29 15:28:36 2015 -0800

    Make sure the solver and the VM see the same PYI.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111094700

[33mcommit 13de7bca99d49beff723b529fa2f0bb152f230e2[m
Author: kramm <kramm@google.com>
Date:   Tue Dec 29 12:13:58 2015 -0800

    Better display of EOF errors.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111084307

[33mcommit 5c11fca1d5d2c458b914f8ae558d3c64cc9e2e20[m
Author: kramm <kramm@google.com>
Date:   Tue Dec 29 12:11:22 2015 -0800

    Fix handling of optional parameters in PYI.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111084170

[33mcommit 20a3406ca2d40788606ce2c77c92b1e56cfb6ea3[m
Author: kramm <kramm@google.com>
Date:   Mon Dec 28 17:46:42 2015 -0800

    Delete all pytd files that have a (working) typeshed version.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111042122

[33mcommit 84851846dc4ab32be1745f005d1660c2a50fcff8[m
Author: kramm <kramm@google.com>
Date:   Mon Dec 28 17:45:11 2015 -0800

    Don't do sys.exit(1) in the pyi parser.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=111042060

[33mcommit ae74b135d61430597a016e04fc7fd5b5db1a89f5[m
Author: kramm <kramm@google.com>
Date:   Tue Dec 22 16:54:12 2015 -0800

    Make builtins complete enough to parse "abc.py".
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110806985

[33mcommit 0587c6f6e2344835abc43905da5396eb89cc162a[m
Author: kramm <kramm@google.com>
Date:   Tue Dec 22 16:52:45 2015 -0800

    Add typing.pytd.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110806919

[33mcommit 30c4ffa6bdae110df5838670635210086c1698c3[m
Author: kramm <kramm@google.com>
Date:   Tue Dec 22 11:37:21 2015 -0800

    Fix parsing / handling of 'typing' module.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110786453

[33mcommit 6598594734a7082162999e9f7262d55885a88619[m
Author: kramm <kramm@google.com>
Date:   Mon Dec 21 12:12:13 2015 -0800

    Only generate an attribute error if underlying object is valid.
    
    (Affects --quick)
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110707649

[33mcommit 1c1b3cd5fbcbd87a4dd64e00076bb98c0ede23bf[m
Author: kramm <kramm@google.com>
Date:   Mon Dec 21 12:11:06 2015 -0800

    Fall back to typeshed for both builtins and stdlib.
    
    Move some files from stdlib/ to builtins/
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110707558

[33mcommit 3ad78cab34569e93856093242b95efd1add95c83[m
Author: kramm <kramm@google.com>
Date:   Mon Dec 21 10:44:28 2015 -0800

    Minor refactoring in load_pytd: Move builtin logic into separate method.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110700383

[33mcommit 77f89ff08a0979dd37b44da2210a9b9bf5042230[m
Author: kramm <kramm@google.com>
Date:   Mon Dec 21 10:41:29 2015 -0800

    Tweak load_pytd test, add skipped test.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110700107

[33mcommit a5c914aa97fb6ced909637f7c1dd0cbd0ebc8782[m
Author: kramm <kramm@google.com>
Date:   Mon Dec 21 10:40:42 2015 -0800

    builtins: fixes in both itertools as well as __builtin__
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110700035

[33mcommit 4671bf0bd13041e2a03ea3d0612628327da0e693[m
Author: kramm <kramm@google.com>
Date:   Mon Dec 21 08:03:37 2015 -0800

    Deduplicate error messages.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110689247

[33mcommit c897a848bb5f6d615ffb607e06befc8a45f04cb3[m
Author: dbaum <dbaum@google.com>
Date:   Tue Dec 15 09:18:24 2015 -0800

    Fix arg popping in MAKE_FUNCTION and MAKE_CLOSURE for Python 3.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110264325

[33mcommit 37a07f2570191a3818216d1727b2c375897d4d44[m
Author: pludemann <pludemann@google.com>
Date:   Mon Dec 14 14:51:04 2015 -0800

    Change lists to sets where possible.
    Clean up some TODOs that can be removed because of bug fixes in [].
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=110194788

[33mcommit 3f1eef8db39f4a834720fa1ca5b5549c154d1c95[m
Author: dbaum <dbaum@google.com>
Date:   Thu Dec 10 14:42:28 2015 -0800

    Refactor opcodest_test to make it easier to write test cases that apply to both Python 2 and 3.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109937229

[33mcommit 92dd3c2446720c80a93dcd0a6e046ba1c33f19b8[m
Author: dbaum <dbaum@google.com>
Date:   Wed Dec 9 13:35:29 2015 -0800

    Fix EXTENDED_ARG bug in bytecode parsing.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109826629

[33mcommit 1fbfbed5e172414401b7bfe561e119242869d839[m
Author: pludemann <pludemann@google.com>
Date:   Tue Dec 8 16:00:46 2015 -0800

    Support "from __future__ import google_type_annotations" (Python 2.7 with backported type annotations).
    Add preliminary support to pytype for handling Python 3 source.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109738336

[33mcommit ff9a7f8d9447a84c4d01ddfbcb14363e95a265c8[m
Author: kramm <kramm@google.com>
Date:   Tue Dec 8 07:16:45 2015 -0800

    Add code for loading *.pyi files from the typeshed repository.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109684958

[33mcommit 957ddbb6f59eae7436ded5c7111db5cf5c791303[m
Author: pludemann <pludemann@google.com>
Date:   Mon Dec 7 17:05:54 2015 -0800

    "# MOE" must be flush left in column 1.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109637936

[33mcommit 222413f666d936d04db453e36fb986a3798a1267[m
Author: kramm <kramm@google.com>
Date:   Mon Dec 7 13:20:07 2015 -0800

    Fix function name handling for Python 3.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109614039

[33mcommit 018e69c35b37028622acd04109ebb1a998be085f[m
Author: kramm <kramm@google.com>
Date:   Mon Dec 7 13:14:45 2015 -0800

    Fix pyc path for Python >= 3.3.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109613377

[33mcommit 5d638617b98bcabced7944fbe867c034d7e6f938[m
Author: kramm <kramm@google.com>
Date:   Mon Dec 7 13:12:38 2015 -0800

    Fix ByteCodeTypeError.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109613169

[33mcommit 037b04e8fc4f19170ad26497b86f5f3d355287fe[m
Author: kramm <kramm@google.com>
Date:   Fri Dec 4 16:08:15 2015 -0800

    Add install_requires for ply.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109457583

[33mcommit 3f7c5840e90f8e9dc65c8bb5d9a2d5a366a25db1[m
Author: kramm <kramm@google.com>
Date:   Fri Dec 4 14:58:00 2015 -0800

    Show type errors for unsupported operations.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109451455

[33mcommit b87b4b6e84b71202c17ff74097f80e760bc16508[m
Author: pludemann <pludemann@google.com>
Date:   Tue Dec 1 17:16:44 2015 -0800

    Initial version of code for "find output of pytype", to be used
    with the smart merge tool.
    (Changed a few items from defaultdict(list) to defaultdict(set))
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=109142673

[33mcommit eb82887901d8852bfeec8c3c9763cffebf4a9e4d[m
Author: kramm <kramm@google.com>
Date:   Tue Nov 10 13:39:39 2015 -0800

    Use PEP 484 names ("List", "Dict", etc.) for container types.
    
    Also, add PEP 484 definitions to builtins.py.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=107519972

[33mcommit 2029153ae42cd3a60148307e35d9ad4179e4dc95[m
Author: kramm <kramm@google.com>
Date:   Tue Nov 10 12:46:36 2015 -0800

    Flesh out imports, use fully-qualified name for "Generic".
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=107514493

[33mcommit d2b86becb9a1517c0166a930156d35ae0bf5ab20[m
Author: kramm <kramm@google.com>
Date:   Tue Nov 10 08:56:07 2015 -0800

    Treat " and ' as whitespace.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=107490796

[33mcommit b7a40154d62aae839a0c57f0b1ecf918f09abe6c[m
Author: kramm <kramm@google.com>
Date:   Mon Nov 9 14:50:39 2015 -0800

    In pyi, allow (but ignore) import statements at the top.
    
    Also, add support for docstrings.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=107424832

[33mcommit 6a9125bd35ef192e5d36a87fd90ffe1367f99061[m
Author: kramm <kramm@google.com>
Date:   Thu Nov 5 12:54:38 2015 -0800

    Add parsing support for individual optional parameters.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=107166810

[33mcommit 1f1f06b60ab45295434705ae37266183936289fc[m
Author: kramm <kramm@google.com>
Date:   Thu Nov 5 08:54:38 2015 -0800

    Add support for ... in class/function bodies.
    
    Also, add support for PEP 484 type names.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=107143448

[33mcommit 5a23f4b6dd3542ce12d83629d2d31c4bcc7cadd3[m
Author: kramm <kramm@google.com>
Date:   Wed Nov 4 14:31:11 2015 -0800

    In the pyi parser, use tuple unpacking in longer rules.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=107078541

[33mcommit 3c1a3b98a215b61a49e2c0481a70aded76fcf8a5[m
Author: kramm <kramm@google.com>
Date:   Wed Nov 4 11:44:23 2015 -0800

    Make ad-hoc polymorphic functions PEP484 compatible.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=107062722

[33mcommit fbf1b64f857146b51bc0986c980f094a04d2d854[m
Author: kramm <kramm@google.com>
Date:   Wed Nov 4 07:12:10 2015 -0800

    Change class syntax from "class Name[T]" to "class Name(Generic[T])"
    
    Also, even in PyTD, explicitly subclass "object" for new-style classes.
    Additionally, fix bug in parser_test.py.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=107037327

[33mcommit 4bc3fb4bc27f5b77671ac27797613c4c921b0905[m
Author: kramm <kramm@google.com>
Date:   Tue Nov 3 13:08:04 2015 -0800

    Use the syntax "x = ...  # type: t" for constants.
    
    More PEP484ification of pytd.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106971066

[33mcommit 6178d69dd66f4bbb275364df649bba3f772a471e[m
Author: kramm <kramm@google.com>
Date:   Mon Nov 2 15:57:51 2015 -0800

    Change pytd to use '[' instead of '<'.
    
    This moves it a step closer to PEP484 .pyi.
    The idea is to do gradual changes like this until pytd *is* pyi.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106889665

[33mcommit d8e0a223cf274f0fab79f642a45a69c607b11740[m
Author: kramm <kramm@google.com>
Date:   Thu Oct 22 08:03:11 2015 -0700

    Silence spurious log message, add pop() to set.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=106057441

[33mcommit 76fa7ae00a45159e3f6678cb21a8d532632d2f3e[m
Author: kramm <kramm@google.com>
Date:   Mon Oct 19 14:54:59 2015 -0700

    Fine-tune maximum_depth.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105798802

[33mcommit df7d644b6757192e008246b881c8b85b1958d8c2[m
Author: kramm <kramm@google.com>
Date:   Mon Oct 19 11:01:07 2015 -0700

    New option "--quick" ("-Z")
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105773506

[33mcommit 1a7b99c83f08b305abc3aabd01b50b39c2a2c424[m
Author: kramm <kramm@google.com>
Date:   Mon Oct 19 07:48:35 2015 -0700

    Remove old glob functionality.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=105754944

[33mcommit 010004374634db33a651402795d9748f454ab947[m
Author: pludemann <pludemann@google.com>
Date:   Mon Sep 28 17:03:32 2015 -0700

    pytype_gen_cp for copy-only rule that doesn't need pytype dependency (and avoids some circular dependencies).
    fix visibility handling
    fix how proto_library, py_wrap_cc, py_extension depend on native version of rule
    handle builtin os.path
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=104152923

[33mcommit 4b81a975ab248e413d52f1942dc3d66c047ce964[m
Author: kramm <kramm@google.com>
Date:   Fri Sep 25 18:36:27 2015 -0700

    Prevent automatic tuple unpacking from generating bad parameter names.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103994714

[33mcommit 94a087a3ae26f0e1c33dc933dd6053bc89a8fb1a[m
Author: kramm <kramm@google.com>
Date:   Fri Sep 25 18:34:03 2015 -0700

    Fix "Counter lookup" bug.
    
    Be more careful about retrieving names from ExternalType.
    Also, fix canonical ordering in the presence of ExternalType, for tests.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103994640

[33mcommit 212865869534608fea88d187a84cc3d1c23bfa24[m
Author: kramm <kramm@google.com>
Date:   Thu Sep 24 16:20:37 2015 -0700

    Fix 'assert nodes' bug: Report, and recover from, invalid lookups.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103893926

[33mcommit 18f8a37fb884c9d5aa34aca7309458bdd3fb255e[m
Author: kramm <kramm@google.com>
Date:   Thu Sep 24 14:12:21 2015 -0700

    When defacing a generic, remove the type parameter, too.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103881019

[33mcommit 505896df8114cc7fbb3914221964650d26d86d71[m
Author: kramm <kramm@google.com>
Date:   Thu Sep 24 11:58:21 2015 -0700

    Limit the types that can be a base type of a generic.
    
    This will prevent the generation of invalid pytd like '?<x>'.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103867028

[33mcommit d8f5309da0ddda67f693a68dfe1ee1df0fa76936[m
Author: pludemann <pludemann@google.com>
Date:   Tue Sep 22 16:22:11 2015 -0700

    Remove use of [].resources (and break the circular dependency that requires pytype.par)
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103693490

[33mcommit cf203974dd27eb1dcba4727a049a0a8b2c6fc240[m
Author: kramm <kramm@google.com>
Date:   Tue Sep 22 15:58:52 2015 -0700

    Make pytype exit with code 1 if it found errors. Remove --irascible.
    
    We used to do "scan & guess" using the (internal) log messages in order to
    figure out whether pytype found any problems.
    But now we have pytype's errorlog, which contains an explicit list of
    user-facing errors. So use that, and remove the old "irascible" hack.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103691121

[33mcommit 8d3f27db833f278aa671583ee1d083e0239c8eb7[m
Author: pludemann <pludemann@google.com>
Date:   Mon Sep 21 18:36:33 2015 -0700

    Split out imports_map_loader tests.
    Remove unused imports_info processing; reactivate the test case.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103604530

[33mcommit 83802c65cfcefeded175188502b2dda106d38080[m
Author: pludemann <pludemann@google.com>
Date:   Mon Sep 21 18:28:51 2015 -0700

    Implement py_{binary,library,test} in pytype.bzl.
    Partially implement py_wrap_cc, proto_library (and turn off irascible flag until these are done).
    Properly handle transitive imports.
      Add imports_info to pytype.load_pytd and imports_map throughout.
    Removed auto-creation of __init__ whe running outside [].
    Add/delete/change a few options to pytype.
    Speed up pytype processing for multi-file input by doing the largest file only once.
    Add design/implementation doc (g3doc) - this is just a rough draft.
    Add test cases for various generated and exported files, duplicate files.
    Add unit tests for utilities that pytype.bzl uses.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=103603989

[33mcommit 3d1852a19a675d833bb64d55c2613cfe405483fd[m
Author: kramm <kramm@google.com>
Date:   Fri Sep 11 19:42:16 2015 -0700

    Make collections.Counter inherit from dict<?, int>, not dict<?, ?>.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=102897954

[33mcommit 083f7ee3e1c8d8e398bbb49ac83021545b63b62b[m
Author: kramm <kramm@google.com>
Date:   Fri Sep 11 19:41:08 2015 -0700

    Don't treat a class that inherits from ? as a match for everything.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=102897907

[33mcommit d412c423a33a964c96bac7f7092a10aa5ed83d21[m
Author: kramm <kramm@google.com>
Date:   Fri Sep 11 19:39:19 2015 -0700

    Fix matching of generator types.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=102897862

[33mcommit 53811ccfdadc62ee2cbde9195abba2e16bd8be3f[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 23 20:09:44 2015 -0700

    Report NameError and 'unsupported operands' as errors.
    -------------
    Created by MOE: https://github.com/google/moe
    MOE_MIGRATED_REVID=102623306

[33mcommit b4e2fb707f92b74f5745f66a8cdeaef0a99c413d[m
Author: kramm <kramm@google.com>
Date:   Fri Sep 4 13:05:10 2015 -0700

    Make next(iter, default) work. Add new special builtin '__undefined__'.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=102367499

[33mcommit 53622c4318163fcfa1b4ddc4c4a879558f125d50[m
Author: kramm <kramm@google.com>
Date:   Fri Sep 4 13:03:28 2015 -0700

    Fix labelling of classes in some error messages.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=102367341

[33mcommit 77a190a465398b8294fc4673a17da15f1759852b[m
Author: kramm <kramm@google.com>
Date:   Fri Sep 4 05:54:40 2015 -0700

    Fix & simplify coroutines / generators, add tests.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=102334705

[33mcommit b464a31a0d8c726723f4d69be96073208d4aa61c[m
Author: kramm <kramm@google.com>
Date:   Wed Sep 2 15:20:30 2015 -0700

    Fix 'Can't extract superclasses' bug.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=102186990

[33mcommit 1592926fe11db0ec697f4f7dd06a158aabe441fe[m
Author: kramm <kramm@google.com>
Date:   Wed Sep 2 05:55:01 2015 -0700

    Make --check aware of classes, add tests.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=102135684

[33mcommit a5dedf95ac30564d795dfa80f0b7320a780d54ca[m
Author: kramm <kramm@google.com>
Date:   Tue Sep 1 12:55:42 2015 -0700

    When checking foo.py against foo.pytd, allow foo.pytd to have external dependencies.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=102070298

[33mcommit 5d6f890c347a73c3cd1480c874bbf65b1f4fdb32[m
Author: kramm <kramm@google.com>
Date:   Tue Sep 1 12:53:26 2015 -0700

    Fix bug in deriving the module name from the input filename.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=102070123

[33mcommit 212ed3fc86cb4ce430bbab3272ee697732436e09[m
Author: kramm <kramm@google.com>
Date:   Mon Aug 31 16:49:36 2015 -0700

    Add support for 'from ..package import name'
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101990582

[33mcommit a8a39397ef5688ffd38cb42f87f89fc5120c599e[m
Author: kramm <kramm@google.com>
Date:   Mon Aug 31 14:36:42 2015 -0700

    Add __iadd__ method to unicode.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101975820

[33mcommit e79a0e17791c4976174a913b3161fbc2a341375c[m
Author: kramm <kramm@google.com>
Date:   Mon Aug 31 14:34:17 2015 -0700

    Don't report impossible calls to the solver.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101975540

[33mcommit 9aaad4759f8b098153a1499611de0d53ca609368[m
Author: kramm <kramm@google.com>
Date:   Mon Aug 31 10:49:10 2015 -0700

    Add two tests (one skipped)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101949869

[33mcommit 6d8982d386675394821954252d9168ed96fb9a31[m
Author: kramm <kramm@google.com>
Date:   Mon Aug 31 10:47:21 2015 -0700

    Fix behavior of MRO merging if we're inheriting from to Unsolvable instances.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101949605

[33mcommit c22c342be16c636ad17f2496ada78934ea57f2d7[m
Author: kramm <kramm@google.com>
Date:   Fri Aug 28 18:31:08 2015 -0700

    Fix bug in optional arg matching.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101826765

[33mcommit aecf563657407dd7ed5d696ecf83bf7e767726ee[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 27 15:35:15 2015 -0700

    Consider subclasses when matching methods.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101725983

[33mcommit e9f032b5c9bec9f60291386b012dd7280edf2d65[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 27 15:32:40 2015 -0700

    Fix bug in RemoveInheritedMethods.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101725664

[33mcommit 139ef399da305f44d5a32bf73bcabb9ffa341a27[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 27 15:29:34 2015 -0700

    Move unit tests next to the file they're testing.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101725450

[33mcommit ecb5ec9a854ca11b38dd7d2b9a5b72ebfb1df7e1[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 27 15:27:52 2015 -0700

    Fix bug triggered by stdlib/datetime.pytd.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101725313

[33mcommit 38017db9ee95143b0f3ea0ffbffba6defeb615da[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 27 10:00:37 2015 -0700

    Report an error about, and recover from, invalid base classes.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101689188

[33mcommit 68a50b8f8533b30bfccdca38d5d9ceed35e7a871[m
Author: kramm <kramm@google.com>
Date:   Wed Aug 26 15:26:24 2015 -0700

    Don't allow errors from the type inference in unit tests (assertNoError).
    Add assertNoCrash, for smoke tests.
    Don't treat missing reverse operators as error.
    Tweak (fix) pytd for builtins.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101624306

[33mcommit 524d9f2af6a215cb8a677ca2c38125b4728c7bff[m
Author: pludemann <pludemann@google.com>
Date:   Tue Aug 25 16:56:44 2015 -0700

    Add gen_file rule for creating files for testing
    Create c3.py using gen_file (not used yet).
    Rename README to README.md
    Remove unnecessary return values in main.py.
    Write comment to output files, for debugging.
    Remove unneeded files.
    Minor refactoring, changes to debug/info logging.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101525921

[33mcommit edaeae1150319db1f4db6b3a5006b362b808e222[m
Author: kramm <kramm@google.com>
Date:   Tue Aug 25 06:08:25 2015 -0700

    Fix return type of reversed().__iter__().__next__()
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101458280

[33mcommit d0b97512511563c1b083e22a9ccf7ff06d9ad91a[m
Author: kramm <kramm@google.com>
Date:   Tue Aug 25 06:06:32 2015 -0700

    Implement super() MRO lookup.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101458176

[33mcommit f66ad7d401cfba67d3b8f90a4fbfe1087cb48d1e[m
Author: kramm <kramm@google.com>
Date:   Tue Aug 25 06:06:07 2015 -0700

    If an error occurs and warn_on_exception is off, don't write an output file.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101458151

[33mcommit 5aedd68985c3be0f0ed0e2bb9f72c773cfa0403b[m
Author: kramm <kramm@google.com>
Date:   Tue Aug 25 06:05:41 2015 -0700

    Simplify inheritance of ValueWithSlots.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101458124

[33mcommit 319ccb3ecec606d69cb6f2b0f9d21e215024331d[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 20 18:16:02 2015 -0700

    Implement better handling of IMPORT_NAME with level=-1 for Python <= 3.1.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101182200

[33mcommit 91ce19dff139aa663f26a032bc305428edaad99b[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 20 18:14:27 2015 -0700

    Order errors by line number. Fix dict.copy().
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101182112

[33mcommit 77ce09d5952564c102c712091cb5327b24dd5246[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 20 14:02:40 2015 -0700

    Fix bug in "from xyz import *". (And add tests.)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101157367

[33mcommit 5eadbf77e1cee160985775d9d12117b76968ab43[m
Author: kramm <kramm@google.com>
Date:   Wed Aug 19 15:33:12 2015 -0700

    Remove dead code (Fix potential AttributeError)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101068139

[33mcommit 0797f62e60680bb06336ee53be89f67c6733005d[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 30 15:31:28 2015 -0700

    Report and pretty-print index errors.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101067926

[33mcommit e1710393913b8c856f11ed23aba324e4ea2e1398[m
Author: kramm <kramm@google.com>
Date:   Wed Aug 19 15:30:58 2015 -0700

    Pretty-print bad calls to builtins.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101067863

[33mcommit faf31cd0b9f45222dc166255ca484a74dd573329[m
Author: kramm <kramm@google.com>
Date:   Wed Aug 19 15:30:26 2015 -0700

    Make it possible to call to_type() in the middle of the analysis.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=101067793

[33mcommit ada825c15290c9e36541a8da487633796c362687[m
Author: kramm <kramm@google.com>
Date:   Tue Aug 18 15:50:20 2015 -0700

    Fix two bugs in import code.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100970663

[33mcommit 8aa6252e4e38a4681f2940a7523e3330228bf15f[m
Author: kramm <kramm@google.com>
Date:   Tue Aug 18 15:48:32 2015 -0700

    Fix NameError in main.py.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100970505

[33mcommit 4dad466825c21da4f1cd2da86752f8e6acee740e[m
Author: kramm <kramm@google.com>
Date:   Tue Aug 18 14:04:17 2015 -0700

    Pretty-print import errors.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100959626

[33mcommit 4baa8d40f9fa29711751dc9e5e7b0ad88b3899c7[m
Author: kramm <kramm@google.com>
Date:   Tue Aug 18 14:02:20 2015 -0700

    Fix co_lnotab parsing for short programs.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100959381

[33mcommit 04a55a22cab51b55a075eff2d6aa7597bc1efc21[m
Author: kramm <kramm@google.com>
Date:   Tue Aug 18 14:01:45 2015 -0700

    Add scaffolding for storing and displaying errors more conveniently.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100959306

[33mcommit fbbb59697f0996c27d85d1d099261331ba0ce50a[m
Author: kramm <kramm@google.com>
Date:   Tue Aug 18 14:01:02 2015 -0700

    Add '__random__' builtin to make branching tests more readable.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100959222

[33mcommit dd8db9f9654c0f2fa0090b56db392adaf6c2ef3a[m
Author: kramm <kramm@google.com>
Date:   Mon Aug 17 12:54:28 2015 -0700

    Remove StringIO test.
    It's our slowest test, and it doesn't exercise any code not already
    covered by other tests.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100852430

[33mcommit c8157d072a4decee44a6e234ab20be38634fafc2[m
Author: pludemann <pludemann@google.com>
Date:   Mon Aug 17 09:31:53 2015 -0700

    Add --input_error_is_fatal pytype (for debugging [] integration).
    NOTE: this change seems to have made test_stringio increase from 6 to 25 seconds (or even timeout)
          -- the cause is not obvious
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100831058

[33mcommit c1a6ade42455ea4847d1a430cdcfcf95ca4efc42[m
Author: pludemann <pludemann@google.com>
Date:   Mon Aug 17 08:40:05 2015 -0700

    Add _ctypes (which uses dotted names and implicit import for pytd)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100827054

[33mcommit 6fdd593c27c355f23f2a5ea82699bb73534ac160[m
Author: kramm <kramm@google.com>
Date:   Fri Aug 14 15:35:52 2015 -0700

    Get rid of has_attribute().
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100713814

[33mcommit 7fd02a7fd5eeb90b168a486669b7caebaa1d6c0b[m
Author: kramm <kramm@google.com>
Date:   Fri Aug 14 15:34:02 2015 -0700

    Move descriptor logic into InterpreterClass.
    (This also fixes a bug causing pytype to try to import "module.__get__")
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100713681

[33mcommit 406fedf0fb5b6a088a21312db41ba4c1458d2186[m
Author: kramm <kramm@google.com>
Date:   Fri Aug 14 10:02:24 2015 -0700

    Make --check check the return type of global functions.
    Add __iadd__ to a few select builtins.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100682154

[33mcommit f9a5e5fc0a423016d80cb0e9f688a90913c2a687[m
Author: pludemann <pludemann@google.com>
Date:   Thu Aug 13 16:13:37 2015 -0700

    Add smoke test for all builtin .pytd files.
    New version of pytype.par with tweaks to builtins.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100626239

[33mcommit 9eac51d135e9ae023431d9ec0cc29a4dfe533c8a[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 13 16:11:31 2015 -0700

    New pytype option --check.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100625987

[33mcommit 2c3983f7b73ece4ae58d6d079a0bd89bb51c355f[m
Author: pludemann <pludemann@google.com>
Date:   Thu Aug 13 14:22:51 2015 -0700

    Add some builtin .pytd files, to make protobuf tests work.
    Changes to pytype.bzl to take into account CL 100590519.
    New version of pytype.par.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100614094

[33mcommit 6c0f10df36d93e9b527675c9d904ef7894749528[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 13 10:44:35 2015 -0700

    Remove "--src_out", replace by "infile:outfile".
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100590519

[33mcommit 49db192cd3b06495ad8c07e2bf180443f0e159e4[m
Author: kramm <kramm@google.com>
Date:   Thu Aug 13 09:49:49 2015 -0700

    Fix functools.py ("Can't set attributes on function")
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100584002

[33mcommit 915da5bd1d1d5a141df62fbb7d9aebbb9cda7e89[m
Author: kramm <kramm@google.com>
Date:   Wed Aug 12 13:36:51 2015 -0700

    (Slightly) improve namedtuple behavior.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100508173

[33mcommit 54a5e5ab941eda7ea6db8b6e7e98de194a666c49[m
Author: kramm <kramm@google.com>
Date:   Wed Aug 12 13:35:15 2015 -0700

    Fix for inheriting from namedtuple.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100508009

[33mcommit 67c42384cb52652c2e38cbafa0212498c8de1f1c[m
Author: kramm <kramm@google.com>
Date:   Wed Aug 12 13:34:49 2015 -0700

    Fix import of class attributes.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100507963

[33mcommit 0ef93d9e62adbcf2232a60f68eef16b2e3e317a5[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 12 12:15:29 2015 -0700

    Handle matching InterpreterClass instances against Nothing.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100500788

[33mcommit 384442be63a05d55d55211014fe813ad1426f3de[m
Author: rechen <rechen@google.com>
Date:   Wed Aug 12 10:55:33 2015 -0700

    Skip repeat function calls.
    
    Detect repeat InterpreterFunction calls by checking whether the
    arguments or "environment" has changed. Because we don't know the
    origins for the return values of skipped functions, this can cause
    some loss of precision.  The only change in the output on []/
    is the following in flags/flagvalues.pytd:
    
    < def _FlagValues__GetFlagFileLines(self, filename: ?, ...) -> list<str>
    > def _FlagValues__GetFlagFileLines(self, filename, ...) -> list<str>
    
    In addition to netting us some performance gains, this change fixes the
    memory-related crashes on []/expvar.py and []/logging/__init__.py.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100492060

[33mcommit 7c7580de79b394cb921c8b87054f7250d686a0ec[m
Author: kramm <kramm@google.com>
Date:   Wed Aug 12 07:05:20 2015 -0700

    Be more careful with name collisions of top-level identifiers.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100472846

[33mcommit 4b9d566a1bef2b26cf5a613b9c06e6a5cf19e3a5[m
Author: kramm <kramm@google.com>
Date:   Wed Aug 12 07:00:27 2015 -0700

    Fix 'matching not implemented for BoundMethod' bug.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100472509

[33mcommit 47b8fec71b7f5c0d9488cfd81a0facb19ce1794f[m
Author: kramm <kramm@google.com>
Date:   Wed Aug 12 06:57:04 2015 -0700

    Distinguish unknowns by how they were created.
    This fixes bugs where distinct __call__ attributes map to the same unknown.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100472333

[33mcommit d3abd897e5229ed5fcc89d641905f84e1336a6d2[m
Author: pludemann <pludemann@google.com>
Date:   Mon Aug 10 18:40:19 2015 -0700

    Add a temporary --warn_on_exception flag to aid in testing [] integration.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=100339049

[33mcommit 27734d9be30ec90f8c17d3622c3de411b4c53252[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 4 17:50:19 2015 -0700

    Sort signatures when ordering the final output.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99879167

[33mcommit 9d10fcdc31947351a5a00602d6a396a329b8d562[m
Author: rechen <rechen@google.com>
Date:   Tue Aug 4 12:33:57 2015 -0700

    Include type parameters in get_type_key().
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99847887

[33mcommit dd2f989f281176dc495c59ba088d23ae51d3dbf4[m
Author: pludemann <pludemann@google.com>
Date:   Fri Jul 31 17:24:21 2015 -0700

    Fix complaint about super with subclass of Exception.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99621152

[33mcommit 39005567f4fa26296eec847799180ea7d9327557[m
Author: pludemann <pludemann@google.com>
Date:   Fri Jul 31 17:22:28 2015 -0700

    Add rule-prefix for prioritizing libraries when choosing amongst multiple .pytd-gen files.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99621028

[33mcommit 0969ceb5a231f2b17cf0147038002f620af97240[m
Author: pludemann <pludemann@google.com>
Date:   Fri Jul 31 16:30:33 2015 -0700

    Add "InPlace" to names of in-place visitors, to make the mutability more clear.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99616951

[33mcommit 3bff45f71860298b0afa542c3129f8d4c126c7f7[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 31 15:29:11 2015 -0700

    Make pytd definition of super() more compatible with actual code.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99611889

[33mcommit 58ccb2897d7c0f39ce1bae649a0cfc5d41857956[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 31 14:05:56 2015 -0700

    Make solver work when matching against imported types.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99604277

[33mcommit cad9bf6d77ae737d1290bd4072eebd44d19a9330[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 31 14:03:09 2015 -0700

    Make ExternalType a subclass of ClassType.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99603991

[33mcommit c6be742f1979de0ed3dd9d5f1b54a9cb5fefafd2[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 31 13:28:46 2015 -0700

    Ignore repeated type parameter values in deep_variable_product.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99600894

[33mcommit 4586dc4bb477665b73e800df60e6dbaa81184535[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 31 06:41:19 2015 -0700

    Some minor cleanup.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99568030

[33mcommit 2bc673094e204fde938e1a319fd1d5f6e6a35119[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 30 14:25:15 2015 -0700

    Fix pytd for object.__init__
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99513600

[33mcommit d1f40e092c6b411090034c3f7ad465292dfa26f7[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 30 14:23:51 2015 -0700

    Record calls to pytd constructors and methods. (For the solver)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99513469

[33mcommit 8b024ed094a4ffb3b2382e7afcb005c5f4ddf5b0[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 30 14:18:48 2015 -0700

    Logging tweaks; log out full parameter information on function call.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99512895

[33mcommit a2efd199b9245e8260204545f0e23a008e9af98e[m
Author: pludemann <pludemann@google.com>
Date:   Thu Jul 30 10:34:36 2015 -0700

    Remove pytype options --output_pytd_import_ext, --force
    which were complicated and unnecessary.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99489680

[33mcommit 26da983c01d8f507e14d6e4c493d7349775c11d1[m
Author: pludemann <pludemann@google.com>
Date:   Wed Jul 29 21:32:00 2015 -0700

    Allow "*" patterns when importing generated .pytd files.
    pytype.bzl adds the rule name (inside ".(...)") to .pytd-gen files, to make them unique.
    Change pytype --pytd_import_ext to --find_pytd_import_ext, to reflect that it's a pattern match now.
    Add pytype --output_pytd_import_ext.
    (For handling pytd-gen for files that appear in multiple rules)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99444503

[33mcommit 076e7c29028824db9c530215d36001da0ec27548[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 29 08:46:54 2015 -0700

    Improve handling of primitive class instances.
    
    - Be more careful about throwing away concrete values.
    - Put the same cached instances in VirtualMachine's
      primitive_class_instances and _convert_cache.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99378558

[33mcommit 64a6fffc2efc29ec31fe9a96e6cfc7cccdb2f42b[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 27 12:50:40 2015 -0700

    Fix using imported methods as class attributes.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99207785

[33mcommit b3c56bac7525f87197f69fcce9dc3a7639ac52e8[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 27 12:01:53 2015 -0700

    Fix for files that do an explicit "import __builtin__".
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99202965

[33mcommit fa9097e3269da371507d83897788151a26f1256e[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 27 11:55:21 2015 -0700

    Fix solving of isinstance() calls.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99202280

[33mcommit 5f1446951a170e8d7d43fd293fe30f72f1bc8c87[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 27 11:53:15 2015 -0700

    Improve matching against pytd signatures:
    
    * Delay mutable parameters until after the call
    * Consider each type parameter option separately
    * Don't memoize instances of generic classes
    * Fix bugs surfaced by these changes:
        * Deal with empty Variables earlier in the call chain
        * Fix MRO matching
        * Fix incorrect builtins
        * Fix calls to __get__ during LOAD_ATTR
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99202084

[33mcommit 84cfb5c24b1d5c8cd3055ca4b557a8bf1ed644fe[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 27 10:36:58 2015 -0700

    Replace AbstractOrConcreteValue data with abstract data in type parameters.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=99193236

[33mcommit 8873711deee81da2f0cd06e4a20e998a60c46b17[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 21 10:39:11 2015 -0700

    Speed up _FindNodeBackwards by compressing the CFG.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98948100

[33mcommit 18bf5a42627c1f39a59efe003b955a3d039054da[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 23 07:08:41 2015 -0700

    Make deep_variable_product behave better in the presence of empty Variables.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98931356

[33mcommit b563b9ff87883855e1422431e606d999e4f05856[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 23 07:06:11 2015 -0700

    Fix bug with os.open() when importing os
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98931136

[33mcommit d4b2502d4f5cb86c6b93b22dede81a6413d908e9[m
Author: kramm <kramm@google.com>
Date:   Thu Jul 23 07:05:43 2015 -0700

    More fine-grained handling of function parameters when calling pytd.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98931080

[33mcommit 5c98f72c1c256ad0d350010a18cd6915f036d1f0[m
Author: pludemann <pludemann@google.com>
Date:   Wed Jul 22 02:19:10 2015 -0700

    Pytype handles multiple input/output files (--src_out option).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98816026

[33mcommit d18341831e9502455a2ed4a53b0a77f161ba4cb8[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 21 16:07:49 2015 -0700

    Store new goals in a separate set in cfg.State.RemoveFinishedGoals.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98783850

[33mcommit 09a46c875a5b296ec1785a6da0b455095c430524[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 21 14:56:46 2015 -0700

    Add pytd.utils.OrderedSet and use it to remove duplicate signatures.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98776565

[33mcommit ef70bb21172d98cda0c7ea9a7339a3ab4fe9c70c[m
Author: kramm <kramm@google.com>
Date:   Tue Jul 21 14:43:24 2015 -0700

    New function deep_variable_product.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98775113

[33mcommit 6d54d63a572cfcbd2b9e8b1306e1068bd2412311[m
Author: pludemann <pludemann@google.com>
Date:   Tue Jul 21 12:36:10 2015 -0700

    Add some missing constants to posix.pytd (os.pytd)
    Improved comments on how to genrate pytype.par
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98761089

[33mcommit c244ab95b33e43064a3316b310a789785f03693c[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 20 12:05:37 2015 -0700

    Unskip tests that work now.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98661620

[33mcommit e0e6bcb31e55c3050ec965e96d3c99ccf1375049[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 20 11:35:51 2015 -0700

    Fix solving for types in other modules.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98658424

[33mcommit 0d62c7acec6b3ca35abfc09a281c7023d0129a4c[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 20 11:24:39 2015 -0700

    Improve the performance of CombineContainers and RemoveDuplicates.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98657164

[33mcommit 002ced52a014d4cf5af7469ad169c732895d62b2[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 20 11:19:47 2015 -0700

    Call HasCombination only for combinations that would give a new signature.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98656587

[33mcommit 50005550241e178d13e266f7b6eb5177960b2dba[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 20 11:00:07 2015 -0700

    Implement relative imports. Implement "linking" of pytd files.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98654483

[33mcommit 931d0e61203f849551ddb7a796f66d6a3cac150f[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 20 10:24:02 2015 -0700

    Rename import_paths.py to load_pytd.py.
    
    To make [] look more pretty.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98650614

[33mcommit f4a7d52037ac4251293f2a4c82b626fb7a322d34[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 17 14:01:12 2015 -0700

    Add visitors for ExternalType support. Allow utils.Tempdir() to create subdirs.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98520955

[33mcommit ed6614378cc2653d86b458e3a6414c358219d2ab[m
Author: pludemann <pludemann@google.com>
Date:   Fri Jul 17 12:44:42 2015 -0700

    Use precompiled pytype.par.
    Change pytype-gen default to False for larger-scale testing.
    Add test for multiple files (a bit more change is needed to pytype.bzl, however).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98514386

[33mcommit 93c3b92c7505198417f56ffb238c5956f5cb88f5[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 17 08:12:42 2015 -0700

    Fix bug in irascible handling.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98492228

[33mcommit d4394f7e7cc7365fa5717f2e5bdb19ba6b4e9b5a[m
Author: pludemann <pludemann@google.com>
Date:   Fri Jul 17 07:40:02 2015 -0700

    Move .py test files out of pytd subdir.
    Delete obsolete pytype.pytd (we'll need a better test for this in future).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98490287

[33mcommit 5c0f916521d894ca94ce4b0a8b5e3bcff1aae4c3[m
Author: pludemann <pludemann@google.com>
Date:   Fri Jul 17 07:38:26 2015 -0700

    Add some import unit tests.
    Make import tests more comprehensive (using assertTypesMatchPytd)
    Add extra_verbose test option, which helped debugging these.
    Move single test_import_path into test_import -- the easiest way to test paths is to look at what the inferencer does.
    Currently, the "import" works but the inferencer does the wrong thing with some of them.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98490192

[33mcommit d56f7f6bb19a99999691c03cacba2a22260f3c13[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 17 07:13:12 2015 -0700

    By default, disable irascible.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98488989

[33mcommit 1b054b5dda4ad40678a16c3d686c3de3ca87a15d[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 17 07:10:42 2015 -0700

    Add a memoizing decorator.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98488883

[33mcommit 58dd1dd0da124983b9a956e1855a702523469250[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 16 08:31:29 2015 -0700

    Break out of _Or.extract_pivots() early if there are no pivots.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98403741

[33mcommit a1a5c98b76b1710da818532b988cddab54721cd8[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 16 07:45:37 2015 -0700

    Use Variable._cfgnode_to_values to compute NodesWithAssignments().
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98400718

[33mcommit 5210ccefadbb06f600c32ee5a114c58933ebdce0[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 15 16:39:57 2015 -0700

    Moe: Update DB, add Rebecca to AUTHORS list.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98356862

[33mcommit 9477986f7424f308d7322eaf67f29c3bbe91f4c3[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 15 16:39:57 2015 -0700

    Moe: Update DB, add Rebecca to AUTHORS list.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98356862

[33mcommit c17e52e2707d972734d323b34e84195cc63c9f3e[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 15 13:52:54 2015 -0700

    Improve MOE stripping, add missing file extensions.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98340058

[33mcommit 248b1403ead0042db9b5c3dc3cae25fdd8a63375[m
Author: rechen <rechen@google.com>
Date:   Thu Jul 16 11:03:08 2015 -0700

    Update Variable doc and method names; delete advance_cfg_node (unused).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98324323

[33mcommit 2428aea23d25970c1f767b98f580716af32e11e5[m
Author: pludemann <pludemann@google.com>
Date:   Wed Jul 15 09:23:50 2015 -0700

    Add pytype attribute to py_{binary,library,test} rules
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98315015

[33mcommit d78a86141823f0baf87530c98c5fe57095b4d208[m
Author: pludemann <pludemann@google.com>
Date:   Wed Jul 15 09:15:56 2015 -0700

    Refactoring of --force.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98314409

[33mcommit 88477b2725429f411c42831075da786b4c8abb19[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 15 09:06:42 2015 -0700

    Quickly eliminate impossible combinations in CFGNode.HasCombination.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98313693

[33mcommit b97cd0ce58979acb33fc023c5591d37d8ea41b55[m
Author: pludemann <pludemann@google.com>
Date:   Wed Jul 15 01:57:44 2015 -0700

    Handle "[]." in imports
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98291277

[33mcommit 4f72636e8add88b9b9f1444a59ced08067891f68[m
Author: pludemann <pludemann@google.com>
Date:   Wed Jul 15 01:28:52 2015 -0700

    Add pythonpath/import_pytd_suffix everywhere.
    Refactor importing builtins.
    The imports don't necessarily work yet; that'll be fixed in the next CL.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98289944

[33mcommit ec37c1a2ab40f9540ebf4f87946948c1cd7fc95d[m
Author: kramm <kramm@google.com>
Date:   Tue Jul 14 15:15:50 2015 -0700

    Get rid of BoundPyTDSignature, BoundpyTDFunction.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98255399

[33mcommit 590606242a6df0f46ad7fa14a13023d3174abb64[m
Author: kramm <kramm@google.com>
Date:   Tue Jul 14 15:12:03 2015 -0700

    Always use 'object', not '?', to flag unknown parameter types. (In tests.)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98254966

[33mcommit 286bcfa6735cffed2eae60a1feca9345f84bd113[m
Author: kramm <kramm@google.com>
Date:   Tue Jul 14 13:21:48 2015 -0700

    Solve unknowns even with --main.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98243970

[33mcommit c9687a72f7ef0e203ca5bcabfb6cdb948ba80e24[m
Author: kramm <kramm@google.com>
Date:   Tue Jul 14 13:20:54 2015 -0700

    Add test case for (possibly) accessing an empty dictionary.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98243893

[33mcommit e351db8f0e0276697761516e8bdfa1ae1290eea8[m
Author: kramm <kramm@google.com>
Date:   Tue Jul 14 12:40:10 2015 -0700

    Make sure formal types only appear on the right side when matching.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98240334

[33mcommit b2fa619637a352e23d868ed49198b7a518710d0e[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 14 10:30:37 2015 -0700

    Replace OrderedDict with dict + list.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98227145

[33mcommit b10adf7c6c993d8a9a474298629afcc67c169b3c[m
Author: kramm <kramm@google.com>
Date:   Tue Jul 14 10:03:14 2015 -0700

    Simplifications/refactorings in abstract.py:
    Mark formal parameters.
    Remove dependency from PyTDSignature to AtomicAbstractValue.
    Move Unknown utility methods into the class.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98224120

[33mcommit 68fce9ed079635666641ccf705e32d019d228f35[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 14 08:48:47 2015 -0700

    Use CFGNode.ConnectTo to keep track of some reachable nodes.
    
    Have every node keep around a subset of its reachable nodes
    and use this information to speed up Variable.Values().
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98217854

[33mcommit 8abcb277931f723b54fc6e6171f35f179bac32a8[m
Author: rechen <rechen@google.com>
Date:   Mon Jul 13 18:55:42 2015 -0700

    Remove the (unused) support for lists and dicts in _VisitNode.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98177711

[33mcommit 2b72feed9c8b58938a8742cdad035cf5c3d800f1[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 13 16:16:22 2015 -0700

    Make the __class__ attribute on instances more explicit.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98164719

[33mcommit ced4670ee2fd9b130c647418b3c07519a670002a[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 10 17:52:45 2015 -0700

    Fix "TypeError: argument of type 'NoneType' is not iterable" failure.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98014753

[33mcommit b4e4614560f12d9aea15bfcfe12c6536cf69e5d3[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 10 15:07:55 2015 -0700

    Cleanup: Remove unused functions in vm.py and utils.py.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=98002515

[33mcommit c2a6556e231be8d75dc3dc4d3afced4f0c110f23[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 10 14:38:10 2015 -0700

    Remove unused code: checker, log_traceback
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97999552

[33mcommit 1fe5640b3de70f9238c849bc3d3d1663fbcfcf78[m
Author: rechen <rechen@google.com>
Date:   Fri Jul 10 12:41:33 2015 -0700

    Get rid of cfg.Solver.CanHaveSolution().
    
    It's now a little faster to not do this check.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97988289

[33mcommit 84aea539f49ea8e36b32e5db4f1193dd753ca49f[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 10 12:14:54 2015 -0700

    Fix bug in module name resolution.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97986079

[33mcommit 8ba032d54587bfd1bf6c2105f63ee30306cc1a20[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 10 08:27:36 2015 -0700

    Don't try to access "__get__" on modules.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97966208

[33mcommit 440cabe04b634e3aaae6882c5fc18778f739d634[m
Author: kramm <kramm@google.com>
Date:   Fri Jul 10 08:16:11 2015 -0700

    Add new command line flag "-f".
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97965547

[33mcommit 2ba5d1eea9f136012f82b98e116155833dbad4df[m
Author: pludemann <pludemann@google.com>
Date:   Thu Jul 9 06:55:48 2015 -0700

    Add smoke test for running pytype and pytype.par to pytype.bzl tests.
    Add smoke test for a_main.py working (which is analyzed by pytype).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97869555

[33mcommit 4251dca45b4da505e42ae420b2a7f393b7721676[m
Author: pludemann <pludemann@google.com>
Date:   Wed Jul 8 23:59:45 2015 -0700

    Change pytype macro to a rule, adding pytype action to py_{binary,library,test}).
    This does not fix pytype to do the right thing with imports; that'll be in future CLs.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97848260

[33mcommit 486fe128016121458ac5ac6319344a580afa7647[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 8 19:59:48 2015 -0700

    Explicitly distinguish between builtins and stdlib.
    
    New directory stdlib/. Assume stdlib is at the end of PYTHONPATH.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97838655

[33mcommit 56afd5cb79cd8bd808d5dba7a83efcfc2f8ba7e7[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 8 14:25:11 2015 -0700

    Better handling of IMPORT_NAME / IMPORT_FROM.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97813522

[33mcommit edbc7b49519e2c0edf7cd74cdc054c0f15af03fd[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 8 13:38:24 2015 -0700

    Fix test_stringio.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97808080

[33mcommit 8d9d6c90d6123022277b819a5537a2b16f0c63df[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 8 13:10:47 2015 -0700

    Use self.Infer in test_pytree.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97805147

[33mcommit cba61a5dd8fa70687154f6ff9ae1076ce0c80f0b[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 8 08:40:00 2015 -0700

    Add a skipped unit test for += falling back to __add__.
    
    When reporting types for an unknown on which a += is done, we
    currently consider only types with an __iadd__ method, but +=
    falls back to __add__ (and then __radd__).  See
    https://docs.python.org/2/reference/datamodel.html#object.__iadd__.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97777348

[33mcommit 3a633bbe5798073fec14230bee0cccdef5633e43[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 8 08:36:10 2015 -0700

    Create only one cfg.Solver per program.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97777099

[33mcommit 075f26bda95f610351daa9cc8a6178a9222ff02e[m
Author: rechen <rechen@google.com>
Date:   Tue Jul 7 17:48:08 2015 -0700

    Fix the definition of dictionary get() in builtins.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97729819

[33mcommit 4f3dd0d6e5f5b7873c96b73a9761816fef4990b2[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 6 11:32:28 2015 -0700

    Trim SVG graphs somewhat. New flag --output-cfg.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97596556

[33mcommit 86e409d7b427afc8e437799df896436596028fac[m
Author: kramm <kramm@google.com>
Date:   Mon Jul 6 11:23:59 2015 -0700

    Better support for "from .. import module".
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97595690

[33mcommit 7d8603d07735779f671b63c497536f28ab35e468[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 1 16:22:04 2015 -0700

    Override __init__ rather than __new__ in visitors.Visitor.
    
    For better style. Makes no difference performance-wise and
    shouldn't be more error-prone, since using a visitor that
    forgot to call super() in its __init__ would crash pytype,
    drawing attention to the oversight pretty quickly.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97373993

[33mcommit 001be7c8bc336086e54d2919673016414ddf0c11[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 1 13:52:56 2015 -0700

    Fix pytd definition of divmod().
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97360988

[33mcommit d4409a7f2dabdd1d19263e013e116e31e6edef58[m
Author: rechen <rechen@google.com>
Date:   Wed Jul 1 11:01:03 2015 -0700

    Exit from Variable.Values() early if all values have been encountered.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97342649

[33mcommit 706311d20dd6b110f83adc48bf52ffd6673c6fd0[m
Author: pludemann <pludemann@google.com>
Date:   Wed Jul 1 06:07:32 2015 -0700

    Fix names of "run_pytype_on_[]" scripts.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97320404

[33mcommit bbec3edcb7db54bb4c6193cb45f604918fb1f562[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 30 10:17:23 2015 -0700

    New -B (--builtins) flag. More aggressive filtering in get_attribute().
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97238461

[33mcommit a2cdb9b41d6c732cc19c05b355c8af12ccba3e80[m
Author: pludemann <pludemann@google.com>
Date:   Tue Jun 30 06:43:50 2015 -0700

    Make from pytype.pytd import utils always do 'as pytd_utils' for consistency.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97222628

[33mcommit d12647ab50bbe0b6708d8c956530df0ed4f0e797[m
Author: pludemann <pludemann@google.com>
Date:   Mon Jun 29 23:44:45 2015 -0700

    Add  directory handling to utils.Tempdir.create_file
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97200462

[33mcommit 4fbb01cf3eeaad73ca1565c7af112cbfd3fc0814[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 29 08:59:12 2015 -0700

    Add ctime and time to time.pytd.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97134023

[33mcommit 3108fbe7d09bd951d76b17e6785c1535d426ed8c[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 29 06:17:33 2015 -0700

    Added unit tests for imports across files.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97124069

[33mcommit e6c4b383ca4807d6c4fccc83784bb7b50fc4d644[m
Author: kramm <kramm@google.com>
Date:   Fri Jun 26 16:01:23 2015 -0700

    Better error message for function mismatches in the solver.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97011819

[33mcommit 4b833b4e7638897fa14aad39363b260e8af1f1a1[m
Author: kramm <kramm@google.com>
Date:   Fri Jun 26 15:59:25 2015 -0700

    Don't let the 'nothing' type slip by as a function arg.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97011675

[33mcommit d05d15fe3e15bac091e9463ef16cd4c95d846ea5[m
Author: kramm <kramm@google.com>
Date:   Fri Jun 26 14:24:24 2015 -0700

    Better API inference for functions with *args.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97003171

[33mcommit a98e17d86a19da3f5e942139d43cbb77ec1fbe6b[m
Author: kramm <kramm@google.com>
Date:   Fri Jun 26 14:22:19 2015 -0700

    Better support for "API" inference of kwargs.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=97002988

[33mcommit 73b896fc17561a0c7bb1b7adf20504cf74533c96[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 25 13:41:29 2015 -0700

    Eliminate the need for _VisitNode to use getattr.
    
    Add a Visitor base class to inspect a visitor's method names and build
    dictionaries from node class names to the corresponding Enter, Visit,
    and Leave methods. Cache these dictionaries so they need to be built
    only once for each visitor class.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96905923

[33mcommit 37eea8bd226351ca783762aa9ea773681c099d21[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 25 08:40:29 2015 -0700

    A potpourri of trivial changes that don't fit with anything else.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96875830

[33mcommit 5f1a86c675fb4445b885194f5edf2e36f72fe7ad[m
Author: kramm <kramm@google.com>
Date:   Wed Jun 24 15:07:02 2015 -0700

    Make the parser properly read ExternalTypes back in.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96816135

[33mcommit 3cd1dcdfe5f5e02a195a7f5cef0532dbab129891[m
Author: kramm <kramm@google.com>
Date:   Wed Jun 24 10:45:57 2015 -0700

    Fix naming of imported types.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96789490

[33mcommit b1ddea8f7b077c87561686688ad39bb101c1e20e[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 23 15:59:31 2015 -0700

    Unskip more tests; fix bugs in the skipped ones.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96719586

[33mcommit 37bbbfd012155d801045ab12597023cff1bd646c[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 23 15:12:01 2015 -0700

    Remove "@unittest.skip" from tests cases that work now.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96714972

[33mcommit c75014f4129e71c5d4dd314664d766e9ee294a06[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 23 14:53:18 2015 -0700

    Cache the return value of TypeMatch.match_type_against_type.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96712931

[33mcommit bcecc6a4cb6fbd232bb06706bb9f3fc294ecac7c[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 23 07:33:26 2015 -0700

    Cache the return value of cfg._FindNodeBackwards.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96670000

[33mcommit a59605e667a49f608e1154f4af3cde9eb2a733e3[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 22 14:56:43 2015 -0700

    Add (skipped) test case for matching against *args.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96610930

[33mcommit f681bad106ff75e7c8a0d8009d7bbb9c858fe33f[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 22 14:43:38 2015 -0700

    Use more precision when recording function calls.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96609295

[33mcommit 44c7a5cb3c210c036a0fb671d85f66a1c330e24c[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 22 11:20:32 2015 -0700

    Make utils.compute_predecessors faster.
    
    Replace the n^3 algorithm based on Floyd-Warshall with one that
    starts at the root and follows outgoing edges to update
    predecessors as needed. This brings down the execution time on
    []/flags/flags_strict_test.py and []/flags/flags_test.py
    from about 30s to less than 7s.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96587382

[33mcommit c9b38819c882e2331c77f9b936cd615c09b91b06[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 19 19:43:01 2015 -0700

    Prefilter classes and functions in TypeSolver.solve.
    
    Pass in the unknowns pytd and the builtins separately to the
    TypeSolver and partition the classes and functions in the former
    into unknown, partial, and complete subsets before generating
    equations for solving. This also lets us pass the pytd with
    NamedTypes changed to ClassTypes back to convert_pytd, which ensures
    that NamedTypes do not show up in the solution.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96459808

[33mcommit 2cfe2aaeadc08f0e89e2716e500d2af3ad6ee244[m
Author: rechen <rechen@google.com>
Date:   Fri Jun 19 19:39:31 2015 -0700

    Fix "'NoneType' object has no attribute 'current_opcode'" error.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96459725

[33mcommit 89d4fb2b921fc400d90130176d31c575dc626d01[m
Author: kramm <kramm@google.com>
Date:   Fri Jun 19 17:08:15 2015 -0700

    Make cache_unknowns behaviour more robust and enable it by default.
    
    (This removes the -U command line parameter and adds the opposite, -N)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96453082

[33mcommit c9773c5fca525258304581c28adbe00c036e9f90[m
Author: kramm <kramm@google.com>
Date:   Fri Jun 19 17:05:50 2015 -0700

    Expose "cache_unknowns" parameter. (New command line option -U)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96452930

[33mcommit fefcb00bd31dc1c89734bfd83a4b6c6a8d4b3587[m
Author: kramm <kramm@google.com>
Date:   Fri Jun 19 17:05:17 2015 -0700

    Do more aggressive memoization of values.
    
    This greatly reduces memory requirements of things like redblack.py.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96452896

[33mcommit ca283d2c551a4a40b05d4f7ecb9d6966d616e0ce[m
Author: kramm <kramm@google.com>
Date:   Fri Jun 19 08:47:39 2015 -0700

    Fix bytecode line number parsing.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96407093

[33mcommit c304fb1fbcd2bb02b9c46f8b6c8bc1f9ecce9c71[m
Author: kramm <kramm@google.com>
Date:   Fri Jun 19 08:32:48 2015 -0700

    Allow Variables to be garbage collected.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96406122

[33mcommit d8ac67b7bc0d8dc9c0d72e88bcef45f2ebdd46a8[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 18 18:22:34 2015 -0700

    Be more conservative about creating instances of primitive types.
    
    Also, minor refactorings of the constant instantiation code, and distinguish
    between booleans that are True, False, and undetermined, respectively.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96369001

[33mcommit abd34864b1c688a57e00402bc6d5d6bb022b3775[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 18 17:35:22 2015 -0700

    Make the output of program_to_dot more helpful.
    
    Add a command line flag --no-builtins to run the program
    with run_builtins=False, which reduces the size of the
    CFG. Use only variables that are actually visible from a
    CFG node.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96365809

[33mcommit 5065d1572729afc335063944a63ce3abd5be6421[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 18 13:35:26 2015 -0700

    Remove TypeDeclUnit.modules.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96340904

[33mcommit a0d2287db1d767f42b6a34f39d414f9e0f4a7c12[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 18 12:01:46 2015 -0700

    Create a new CFG node after every STORE and every JUMP.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96332651

[33mcommit 12106974f3039a2fecd6043770cb665d77131d53[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 18 07:36:43 2015 -0700

    Don't register values with booleq.Solver (no longer necessary).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96306427

[33mcommit 9f53580cf2b4fbbf3a78d247e4c8806f470f8ac4[m
Author: kramm <kramm@google.com>
Date:   Wed Jun 17 15:22:17 2015 -0700

    Filter preemptively.
    
    Rather than filtering out impossible values only at the end of the analysis,
    do filtering at the SSA level also during bytecode interpretation. (This CL:
    Attribute access. More of these to come)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96249193

[33mcommit df5d8da4179718c3843d974d4ecddad543965ee5[m
Author: kramm <kramm@google.com>
Date:   Wed Jun 17 15:17:02 2015 -0700

    Explicitly pass CFG nodes and state around.
    
    This is less error-prone than storing them in a shared class, especially
    when they're being modified.
    
    Also, fix some bugs shaken loose by this.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96248632

[33mcommit 87a98733a76e9b17f051bb8465464b99136ab486[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 16 11:48:20 2015 -0700

    Use abstract.Instance() where possible.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96128564

[33mcommit c4b0552f3b54c5a9ea1c364291d2bb1053aac215[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 16 11:31:32 2015 -0700

    Reorganize _VisitNode for performance.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96126917

[33mcommit 46741de7944fbdc72940dd78518e22d8533cd35a[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 16 07:34:59 2015 -0700

    In _VisitNode, use the same loop to visit children and check for changes.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96106512

[33mcommit 6b5c11fffee93bff888bb0144c2cff3949283e67[m
Author: rechen <rechen@google.com>
Date:   Mon Jun 15 16:33:27 2015 -0700

    Make BooleanTerm creation both less frequent and less expensive.
    
    (1) For _Eq, _And, and _Or, move expensive checks out of __new__ into
        factory methods. Within booleq, skip these checks when we know it
        is safe to do so.
    (2) As solve() runs, save updated implications to avoid recomputing them,
        and special-case the situation when an implication is TRUE.
    Also fix the use of __slots__.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96057145

[33mcommit 15296016343fbb978a406ce2fb5c1b725fb22855[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 15 12:47:08 2015 -0700

    Simplify create_pytd_instance()
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96034061

[33mcommit 3a128321881850d91c8f29a41105791bb33556fa[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 15 08:29:28 2015 -0700

    Fix bug in handling of the 'nothing' type.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=96009428

[33mcommit 652a21f528df88637449b68877ba399ce554a635[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 11 15:00:48 2015 -0700

    When building a ClassType, make sure cls is a Class.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95780395

[33mcommit f402419777bfa72de44886e2b72092865177ed21[m
Author: kramm <kramm@google.com>
Date:   Wed Jan 7 15:00:26 2015 -0800

    Fix 'Matching nothing against object' exception.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95780357

[33mcommit d4644396ac9343149115b38ada5d00f3201b3e97[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 11 15:00:01 2015 -0700

    Better error messages in class initialization. Add stub for os.path.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95780313

[33mcommit 8a7eb9bddc3ceca1313071fbabd755ebcdfa1ec3[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 11 14:59:34 2015 -0700

    Fix inheriting from builtins.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95780263

[33mcommit 407555aa9b878df355a3f0ab414031d2431dc1a5[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 11 11:21:49 2015 -0700

    Fix inheritance of AnythingType().
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95758268

[33mcommit 1f37c3d7e01ef1e965d960fc9a6dab59f698dd53[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 11 07:49:20 2015 -0700

    Fix "'Constant' object has no attribute 'methods'" problem.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95737862

[33mcommit 48a4845d09f38cbca295096a4712fdb9f12aea16[m
Author: kramm <kramm@google.com>
Date:   Wed Jun 10 14:33:36 2015 -0700

    Make CombineContainers visitor work with nested containers.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95675230

[33mcommit 86b13e5b6480f86cc40ca36b019a8d16dcb14a69[m
Author: rechen <rechen@google.com>
Date:   Wed Jun 10 14:32:31 2015 -0700

    Consider only "interesting" combinations in booleq.Solver().
    
    Have booleq.Solver() consider only those (variable, value)
    combinations that appear (directly or indirectly) in the
    implications. This allows the solver to check a much smaller
    space of possible assignments.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95675115

[33mcommit 10a725e6ae5bd2e0ff8e999a214b484f011aae15[m
Author: kramm <kramm@google.com>
Date:   Wed Jun 10 11:11:37 2015 -0700

    Fix definition of 'map' builtin.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95653669

[33mcommit b37166d9bf64286a7239b885c9f47940b0f1a079[m
Author: kramm <kramm@google.com>
Date:   Wed Jun 10 11:07:40 2015 -0700

    Tweak logging.
    
    Better description of "to solve" section. Log out the names of "?" types. Don't
    log out unoptimized pytd (as it's usually prohibitively large).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95653253

[33mcommit 64c384a7db219cf9ae5f52f88b3da29826a7d9ac[m
Author: kramm <kramm@google.com>
Date:   Wed Jun 10 11:07:09 2015 -0700

    Only do the 'possible types' debug logging in the solver with "-v 4".
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95653183

[33mcommit 4ee20acdf49dc1b8ffe71f89828447baca3a1432[m
Author: rechen <rechen@google.com>
Date:   Tue Jun 9 12:28:46 2015 -0700

    Register variables when matching against generic types.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95561709

[33mcommit d6d3b8f1f7744a1e8602e276f5f95cf7541aa38c[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 9 11:21:44 2015 -0700

    Rename 'pytd-gendirs' to 'pythonpath'.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95554843

[33mcommit fc851e6b3bfb2350c21640535b4b3e8e87d562fb[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 9 11:10:18 2015 -0700

    Don't leave temporary .pyc files lying around.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95553711

[33mcommit 74d4f517d5479640a116aeccb8d563303e40dd4b[m
Author: kramm <kramm@google.com>
Date:   Tue Jun 9 11:06:35 2015 -0700

    Fix definition of builtin setattr.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95553285

[33mcommit 5b40b23ec8db9f66ad78f133360081d11e11de9b[m
Author: kramm <kramm@google.com>
Date:   Wed Jul 22 06:56:26 2015 -0700

    Encode ambiguous types as constants.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95532176

[33mcommit 44638b53d35233472f4aa46c894cc4c402d512fd[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 8 13:03:52 2015 -0700

    Fix pylint warnings in visitors.py
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95465190

[33mcommit f00a2faa68bc21a4bb2d2086ffcda254cf7a4e36[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 8 13:03:26 2015 -0700

    Fix inference of []/gettid.py
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95465140

[33mcommit 22a08b2ef41803e737618c8d0db7d162b044912f[m
Author: kramm <kramm@google.com>
Date:   Mon Jun 8 13:01:07 2015 -0700

    Rename 'FunctionWithSignatures' to 'Function', 'FunctionWithCode' to 'ExternalFunction'.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95464901

[33mcommit cd34a390e2612ec258b3e0efc038972b95960dc9[m
Author: kramm <kramm@google.com>
Date:   Fri Jun 5 16:11:11 2015 -0700

    Fix handling of builtin types for sys.argv.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95332577

[33mcommit 094dd2fdcdd4eb7a1b581a76f63e43cd9e2aa696[m
Author: kramm <kramm@google.com>
Date:   Fri Jun 5 15:21:38 2015 -0700

    Fix inference for []/datelib.py
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95328741

[33mcommit cb081c49dcbdd744d3ed5f0023b2ca23fe0cf006[m
Author: kramm <kramm@google.com>
Date:   Fri Jun 5 11:29:54 2015 -0700

    Fix bug in inferring []/CallWithAlarm.py
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95308634

[33mcommit 6c86eb2245599371ae9cc6fed1f4e4a456f88e14[m
Author: rechen <rechen@google.com>
Date:   Thu Jun 4 16:47:51 2015 -0700

    Use nested dictionaries for implications in booleq.Solver.
    
    Store x==y => A as x: {y: A} instead of Eq(x,y): A.
    This drastically reduces the number of Eq instances created by
    the solver and makes it easier to get all of the implications
    associated with a particular variable.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95249579

[33mcommit 8e34aebf188b4c73f14305204fb162360b1ea7d0[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 4 14:35:37 2015 -0700

    Fix another bug with inheriting from unknowns.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95237356

[33mcommit 1df4cc012162fa632b4d3bb3d434aaeca3d9dd3b[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 4 14:32:24 2015 -0700

    Fix bug with inheriting from an unknown class.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95236981

[33mcommit 0a90d9ad71ce4e085ee9cdada3d635f5159536f1[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 4 14:32:00 2015 -0700

    Cleanup: Remove unused (or rarely used) attributes & methods in vm.py.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95236949

[33mcommit bafe011681883e81fb031233206eb1d6f07c2683[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 4 14:31:29 2015 -0700

    Fix naming scope problem that occurs when analyzing []/atomic_file.py.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95236881

[33mcommit 21af830f0c11aa4b10c5ca866566616a6520f9f5[m
Author: kramm <kramm@google.com>
Date:   Thu Jun 4 14:30:58 2015 -0700

    New visitor for removing unresolvable references.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95236834

[33mcommit d69a31822234d7f4860fdacd45df1ded2c29d7c0[m
Author: kramm <kramm@google.com>
Date:   Wed Jun 3 16:32:13 2015 -0700

    Favor Baseclass.__init__ over super(...).__init__.
    
    See http://fuhm.net/super-harmful/
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=95154219

[33mcommit d08f203a9be0f7c9889be7b4d40fa7898454f17e[m
Author: kramm <kramm@google.com>
Date:   Wed May 27 12:12:05 2015 -0700

    (Partly) fix inference of []/atomic_file.py.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=94595971

[33mcommit 6fb1c6dc68cb5ac671111fc3bfeb8674355cd974[m
Author: kramm <kramm@google.com>
Date:   Tue May 26 12:58:42 2015 -0700

    Fix inference of []/datelib.py.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=94498931

[33mcommit ffa57bc319e8fcdd8e09e08f1a69b3c085f3e276[m
Author: kramm <kramm@google.com>
Date:   Tue May 26 12:54:21 2015 -0700

    Fix bug in type converter: Don't blow up on duplicate functions.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=94498539

[33mcommit f13afa66013322ac10d9e36e76264dcfecca6e93[m
Author: kramm <kramm@google.com>
Date:   Tue May 26 12:53:48 2015 -0700

    Be more deliberate about CFGNode handling.
    
    Make get_attribute(), call() etc. take and return a CFGNode. This prevents
    against bugs with disconnected control flow graphs.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=94498475

[33mcommit 07dfbf5b2e728cb60ad36e468dc64a8c987a7601[m
Author: kramm <kramm@google.com>
Date:   Wed May 20 14:54:00 2015 -0700

    Remove @unittest.skip() for a test that works now.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=94128211

[33mcommit 33caaa9f2969b005d373e544666f237b99461307[m
Author: pludemann <pludemann@google.com>
Date:   Fri May 15 18:56:56 2015 -0700

    Basic handling of import from existing .pytd-gen files.
      - it allows specifying the directory for reading .pytd-gen files and
        passes it around but doesn't do the actual read/parse/merge
      - it does not handle .pytd files on input
    Defines a simple [] macro for a genrule that runs pytype to generate
      .pytd-gen files (doesn't do the transitive dependency computation -- this
      must be done by hand right now).
    Fix some pylint complaints.
    Fix ASTeq test, which was indented incorrectly (thank-you pylint, for finding this).
    (And a few final changes to CL 93644072 ended up here by mistake.)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=93769104

[33mcommit 372d06c5b21100e6101c6e4313b7d45ebb192412[m
Author: pludemann <pludemann@google.com>
Date:   Thu May 14 12:00:15 2015 -0700

    pytype return code for errors.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=93644219

[33mcommit 0ba857a2e9dcbddf081de2fb2e8ac2e539baf2d4[m
Author: pludemann <pludemann@google.com>
Date:   Thu May 14 11:58:47 2015 -0700

    Fix definition of pytd dotted names; restrict what can go inside `...` names.
    This is in preparation for fully-qualified names from imports.
    Removed unused InstantiateTemplate.
    Add AST equality test, for more robust tests (less likely to give false positive due to Print giving same representation to different ASTs)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=93644072

[33mcommit dbf5d049e7963a857ed4fb95b6b33340aaa92b74[m
Author: kramm <kramm@google.com>
Date:   Fri May 1 17:56:06 2015 -0700

    Re-enable pytree test.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=92600104

[33mcommit c6584c61c93748e201ad0d539d4d4e54e395aa18[m
Author: kramm <kramm@google.com>
Date:   Fri May 1 16:29:06 2015 -0700

    Fix assertions in pycfg.py.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=92593392

[33mcommit ebf52949a4ac2b27f671db9c5ece97c1bd1f6a31[m
Author: kramm <kramm@google.com>
Date:   Fri May 1 16:26:04 2015 -0700

    Fix and improve slice tests. Unskip other tests that work now.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=92593164

[33mcommit 76e82ad6128510384fee845e3f87db75e7df75fb[m
Author: kramm <kramm@google.com>
Date:   Fri May 1 16:24:42 2015 -0700

    Rewrite output generator. Add tests. pytd.Concat now accepts more than two files.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=92593064

[33mcommit 396ca05b1145d5eaab3bdaab22f705192e6c8168[m
Author: kramm <kramm@google.com>
Date:   Mon Apr 27 15:23:47 2015 -0700

    Add (skipped) test case for tupleiterator problem.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=92188915

[33mcommit 24da5cecc0775fba00fbc25c54eb452b787a89d4[m
Author: kramm <kramm@google.com>
Date:   Mon Apr 27 12:35:58 2015 -0700

    Add 'name' parameter to AtomicAbstractValue constructor.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=92171471

[33mcommit dc65f31a5e707d05116c22724b3f701372cf670e[m
Author: kramm <kramm@google.com>
Date:   Mon Apr 27 12:15:00 2015 -0700

    Move pytd loading out of abstract.py and into pytd/utils.py.
    
    Also, fix handling of tuples in co_consts.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=92169586

[33mcommit 320de1916bf95492cda64da0b4fadfc025f70c03[m
Author: kramm <kramm@google.com>
Date:   Mon Apr 27 12:14:26 2015 -0700

    Make --optimize & --api the default options.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=92169536

[33mcommit c68bb18573015bf17eb30fba0e68212340ef45c6[m
Author: kramm <kramm@google.com>
Date:   Fri Apr 17 15:38:33 2015 -0700

    Limit 'None' to one instance.
    Add abstract.Instance for instances that have a __class__.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91446869

[33mcommit d946ca43e8d01b5ae20851e48367c444c78acfef[m
Author: kramm <kramm@google.com>
Date:   Fri Apr 17 12:14:53 2015 -0700

    Make pytype more deterministic.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91429029

[33mcommit 13319f08f47f468bf8619542184b11ce04f1ee69[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 15 15:50:43 2015 -0700

    Temporarily disable the flaky test that broke TAP.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91242950

[33mcommit bc6c03cff69b01a1089d6525eca45cf92a933a82[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 15 14:14:41 2015 -0700

    Make opcode dispatch less 'magical'.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91231807

[33mcommit 4fd6cd160935f2086749e25861e33823601a7e5e[m
Author: pludemann <pludemann@google.com>
Date:   Wed Apr 15 14:09:33 2015 -0700

    Remove obsolete test rules and related data.
    Fix pytree output to match what it's doing now (which is not necessarily correct).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91231239

[33mcommit d2ae57e2f1f014620049d0d3e6efea762d8ec6c0[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 15 13:31:35 2015 -0700

    Add test cases for passing through *args, **kwargs.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91226974

[33mcommit 1150180c4f4d63be52fc32c1fe0e3271eb570249[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 15 13:28:22 2015 -0700

    Make sure co_filename contains the right filename.
    Also print co_name when printing co_filename.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91226623

[33mcommit 22b744c40c58274952fccf9129a6526f48852c88[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 15 13:27:20 2015 -0700

    Remove pycfg.py. Replace with simpler opcode-based state logic.
    Add slice support to __getitem__.
    Note that this skips some tests. These tests were broken before - this CL merely exposes the breakage.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91226514

[33mcommit 0121076c310ea066279e3a55caf904f8508d0185[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 15 13:26:24 2015 -0700

    Added process_code() method to blocks.py.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91226422

[33mcommit 933aaa81aed1ec0b1554761ec595bfe95926345b[m
Author: kramm <kramm@google.com>
Date:   Wed Apr 15 13:25:12 2015 -0700

    Improve block ordering for try/except, try/finally, with, while.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=91226328

[33mcommit 4427f0088a8551c659fec3156886e52dcfc9056c[m
Author: kramm <kramm@google.com>
Date:   Mon Mar 30 09:00:43 2015 -0700

    Add ply dependency to setup.py.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89869733

[33mcommit a560af4e09fc7bc635df0fa38617ad7066b5d55d[m
Author: kramm <kramm@google.com>
Date:   Fri Mar 27 17:22:11 2015 -0700

    Output PYTD for instance attributes.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89743331

[33mcommit e6bc9683de763bf1cb825f4869beaa6b642514e0[m
Author: kramm <kramm@google.com>
Date:   Thu Mar 26 18:30:17 2015 -0700

    Fix MRO lookup for classes from pytd.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89657431

[33mcommit 76ea4307d767ae389cd93425b2e2891e6e4993e9[m
Author: kramm <kramm@google.com>
Date:   Thu Mar 26 06:35:19 2015 -0700

    Simplify loading of __builtin__.py.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89595891

[33mcommit ef5885ddee857249478cf9c9e0e38851db864f44[m
Author: kramm <kramm@google.com>
Date:   Thu Mar 26 06:34:46 2015 -0700

    When sorting pytd, also sort exceptions.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89595868

[33mcommit 07d27af9d8537cf8b93c5cda1cea81e66177aede[m
Author: kramm <kramm@google.com>
Date:   Tue Mar 24 16:11:05 2015 -0700

    Don't allow positional parameter types to leak into *args, **kwargs.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89447924

[33mcommit c9b4b06e819711515f74b6a544603d512f76a7a5[m
Author: pludemann <pludemann@google.com>
Date:   Tue Mar 24 10:00:27 2015 -0700

    Test workflow doc examples.
    (Example doesn't yet work, so it's skipped.)
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89409489

[33mcommit 14c44df17535e1397190452d7f55b420ddb8840b[m
Author: kramm <kramm@google.com>
Date:   Tue Mar 24 08:59:01 2015 -0700

    Fix return-inside-with bug.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89403822

[33mcommit 88eae18f0e1cf3e393b7e0389d42778e2a96230f[m
Author: kramm <kramm@google.com>
Date:   Tue Mar 24 08:52:07 2015 -0700

    Implement PYTD import.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89403364

[33mcommit d908d34b60dec47ddab8c1cc0d5393cc671e1762[m
Author: kramm <kramm@google.com>
Date:   Tue Mar 24 08:51:38 2015 -0700

    Add test for 'return' inside 'with'.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89403335

[33mcommit 7633436f4d6fcf8a3be4d19e8f7cb194f8eee90a[m
Author: pludemann <pludemann@google.com>
Date:   Mon Mar 23 15:22:11 2015 -0700

    Fix stringIO test to use new API (it still doesn't work).
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89342429

[33mcommit b5985ce7dd008a2dd0c5c7b46c0b0368890b8c90[m
Author: kramm <kramm@google.com>
Date:   Mon Mar 23 13:42:06 2015 -0700

    Adjust pytype flags in README.md.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89332349

[33mcommit 1256e7e83109058790cc0695c22c9e33a1726d07[m
Author: kramm <kramm@google.com>
Date:   Mon Mar 23 13:36:15 2015 -0700

    Add blocks.py, blocks_test.py.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89331750

[33mcommit adc43678f40e5372bba1e4a51bf880a6442592ec[m
Author: kramm <kramm@google.com>
Date:   Mon Mar 23 13:34:02 2015 -0700

    Add tests for Python 2's "raise x, y" and "raise x, y, z".
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89331537

[33mcommit 504428a6dd5d1f82877b4d1265ea236a228c83e0[m
Author: kramm <kramm@google.com>
Date:   Fri Mar 20 16:52:07 2015 -0700

    Clean up BUILD file. Remove unnecessary dependencies, merge libraries.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89168699

[33mcommit 859a119571558e13edac2d5e8081faf179cd849b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Fri Mar 20 16:48:49 2015 -0700

    Add pytd tool to scripts, fix export of CONTRIBUTING.md.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89168380

[33mcommit 42cfd4250332779d9ab229b90068ad623a3e80c4[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Mar 19 16:40:59 2015 -0700

    Make setup.py install the builtins, too.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89080676

[33mcommit 776bb506525c823247e579dbbf3e957b55f4ae15[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Mar 19 15:55:04 2015 -0700

    Add shell script for exporting to github.
    Add Raoul's user name.
    -------------
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89076392

[33mcommit c632043c61242e029080df71d7c98c129abcef8b[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Mar 19 15:57:46 2015 -0700

    Make "python setup.py install" install the pytype executable, as well.
    
    Created by MOE: http://code.google.com/p/moe-java
    MOE_MIGRATED_REVID=89076648

[33mcommit ec3c541ea7b4dbbb020c249ac8085f0c7df5da9e[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Mar 19 15:55:04 2015 -0700

    Add scripts/pytype.

[33mcommit 2921d5cc20134207fea555771a38a223a90d88d3[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Mar 19 15:03:38 2015 -0700

    Add pytd subdirectory.

[33mcommit d69fb74a5abc5d4a6218c184d02d3d0c9af5dcce[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Mar 19 14:39:59 2015 -0700

    add pytype source

[33mcommit ba911e81f934a43bafbd987dc034b839b8b05bfe[m
Author: Matthias Kramm <kramm@google.com>
Date:   Thu Mar 19 11:17:57 2015 -0700

    initial revision
